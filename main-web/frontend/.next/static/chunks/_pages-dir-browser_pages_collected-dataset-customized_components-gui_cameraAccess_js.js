"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_pages-dir-browser_pages_collected-dataset-customized_components-gui_cameraAccess_js"],{

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/cameraAccess.js":
/*!***************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/cameraAccess.js ***!
  \***************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_collected_dataset_customized_Helper_savefile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\");\n// cameraAccess.js\n\nvar _s = $RefreshSig$();\n\n\nconst CameraAccess = (param)=>{\n    let { isShowing, onClose, onCameraReady, showHeadPose = false, showBoundingBox = false, showMask = false, showParameters = false } = param;\n    _s();\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [stream, setStream] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [errorMessage, setErrorMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [fps, setFps] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const fpsTimerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const processingInterval = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [dimensions, setDimensions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 0,\n        height: 0\n    });\n    const [isVideoReady, setIsVideoReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [processingResults, setProcessingResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const frameQueue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const isProcessing = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [wsStatus, setWsStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('disconnected');\n    const [isLinked, setIsLinked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // WebSocket connection\n    const connectWebSocket = ()=>{\n        if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n            console.log('WebSocket already connected');\n            return;\n        }\n        setWsStatus('connecting');\n        try {\n            // Connect to FastAPI WebSocket endpoint\n            const ws = new WebSocket('ws://localhost:8000/ws/video');\n            wsRef.current = ws;\n            // Set a connection timeout\n            const connectionTimeout = setTimeout(()=>{\n                if (ws.readyState !== WebSocket.OPEN) {\n                    console.error('WebSocket connection timeout');\n                    ws.close();\n                    setWsStatus('error');\n                    setErrorMessage('Connection timeout. Please check if the backend server is running.');\n                    setIsLinked(false);\n                }\n            }, 5000);\n            ws.onopen = ()=>{\n                console.log('WebSocket connected to FastAPI backend');\n                clearTimeout(connectionTimeout);\n                setWsStatus('connected');\n                setErrorMessage('');\n                setIsLinked(true);\n                if (isVideoReady) {\n                    processingInterval.current = setInterval(captureAndProcessFrame, 33);\n                }\n            };\n            ws.onmessage = (event)=>{\n                try {\n                    const result = JSON.parse(event.data);\n                    setProcessingResults(result);\n                    drawResults(result);\n                } catch (error) {\n                    console.error('Error parsing WebSocket message:', error);\n                }\n            };\n            ws.onerror = (error)=>{\n                console.error('WebSocket error:', error);\n                clearTimeout(connectionTimeout);\n                setWsStatus('error');\n                setErrorMessage('Failed to connect to FastAPI backend. Please check if the server is running.');\n                setIsLinked(false);\n            };\n            ws.onclose = (event)=>{\n                console.log('WebSocket disconnected:', event.code, event.reason);\n                clearTimeout(connectionTimeout);\n                setWsStatus('disconnected');\n                setIsLinked(false);\n                // Stop frame processing\n                if (processingInterval.current) {\n                    clearInterval(processingInterval.current);\n                    processingInterval.current = null;\n                }\n                // If the connection was closed due to an error, show error message\n                if (event.code !== 1000) {\n                    setErrorMessage(\"WebSocket connection closed: \".concat(event.reason || 'Unknown reason'));\n                }\n            };\n        } catch (error) {\n            console.error('Error creating WebSocket:', error);\n            setWsStatus('error');\n            setErrorMessage('Failed to create WebSocket connection. Please check your network connection.');\n            setIsLinked(false);\n        }\n    };\n    const disconnectWebSocket = ()=>{\n        if (wsRef.current) {\n            wsRef.current.close(1000, 'User requested disconnect');\n            wsRef.current = null;\n            setWsStatus('disconnected');\n            setIsLinked(false);\n            // Stop frame processing\n            if (processingInterval.current) {\n                clearInterval(processingInterval.current);\n                processingInterval.current = null;\n            }\n            // Clear the canvas to remove any overlays\n            if (canvasRef.current) {\n                const ctx = canvasRef.current.getContext('2d');\n                ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n            }\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CameraAccess.useEffect\": ()=>{\n            if (!isShowing) {\n                disconnectWebSocket();\n                return;\n            }\n            return ({\n                \"CameraAccess.useEffect\": ()=>{\n                    disconnectWebSocket();\n                }\n            })[\"CameraAccess.useEffect\"];\n        }\n    }[\"CameraAccess.useEffect\"], [\n        isShowing\n    ]);\n    // Frame capture and processing\n    const captureAndProcessFrame = ()=>{\n        if (!videoRef.current || !canvasRef.current || !isVideoReady || !wsRef.current) return;\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        // Only draw on canvas if WebSocket is connected\n        if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n            // Clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            // Save the current context state\n            ctx.save();\n            // Flip the context horizontally to mirror the video\n            ctx.translate(canvas.width, 0);\n            ctx.scale(-1, 1);\n            // Draw video frame to canvas at high resolution\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n            // Restore the context state\n            ctx.restore();\n            // Convert canvas to blob with high quality\n            canvas.toBlob((blob)=>{\n                if (blob && wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n                    // Send frame to backend\n                    wsRef.current.send(blob);\n                }\n            }, 'image/jpeg', 0.95);\n        }\n    };\n    // Draw processing results\n    const drawResults = (results)=>{\n        if (!canvasRef.current || !results) return;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        // Draw bounding box if available\n        if (results.bounding_box && showBoundingBox) {\n            const { x, y, width, height } = results.bounding_box;\n            ctx.strokeStyle = 'rgba(255, 0, 0, 0.8)';\n            ctx.lineWidth = 2;\n            ctx.strokeRect(x, y, width, height);\n        }\n        // Draw head pose if available\n        if (results.head_pose && showHeadPose) {\n            const { pitch, yaw, roll } = results.head_pose;\n            // Draw head pose visualization\n            drawHeadPose(ctx, canvas, pitch, yaw, roll);\n        }\n        // Draw face mask if available\n        if (results.face_mask && showMask) {\n            const { points } = results.face_mask;\n            drawFaceMask(ctx, canvas, points);\n        }\n        // Draw parameters if enabled\n        if (showParameters) {\n            drawParameters(ctx, canvas, results);\n        }\n    };\n    // Start camera with highest resolution\n    const startCamera = async ()=>{\n        setErrorMessage('');\n        setIsVideoReady(false);\n        try {\n            // Check if MediaDevices API is supported\n            if (typeof navigator === 'undefined' || !navigator.mediaDevices) {\n                // Try to polyfill the MediaDevices API\n                if (typeof navigator !== 'undefined') {\n                    navigator.mediaDevices = {};\n                }\n                // Add getUserMedia polyfill if needed\n                if (!navigator.mediaDevices.getUserMedia) {\n                    navigator.mediaDevices.getUserMedia = function(constraints) {\n                        // First get ahold of the legacy getUserMedia, if present\n                        const getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n                        // Some browsers just don't implement it - return a rejected promise with an error\n                        if (!getUserMedia) {\n                            return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n                        }\n                        // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n                        return new Promise(function(resolve, reject) {\n                            getUserMedia.call(navigator, constraints, resolve, reject);\n                        });\n                    };\n                }\n            }\n            // Check if we're on HTTPS or localhost\n            const isSecure = window.location.protocol === 'https:' || window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1' || \"development\" === 'development';\n            if (!isSecure) {\n                throw new Error('Camera access requires HTTPS or localhost. Please use HTTPS or run the application on localhost.');\n            }\n            console.log('Starting camera access with highest resolution...');\n            // Get highest resolution constraints\n            const constraints = await (0,_components_collected_dataset_customized_Helper_savefile__WEBPACK_IMPORTED_MODULE_2__.getHighestResolutionConstraints)();\n            console.log('Using camera constraints:', constraints);\n            const mediaStream = await navigator.mediaDevices.getUserMedia({\n                ...constraints,\n                audio: false\n            });\n            console.log('High resolution camera access granted!');\n            setStream(mediaStream);\n            if (videoRef.current) {\n                videoRef.current.playsInline = true;\n                videoRef.current.muted = true;\n                videoRef.current.autoplay = true;\n                videoRef.current.srcObject = mediaStream;\n                try {\n                    await videoRef.current.play();\n                    console.log('Video playing successfully!');\n                    setIsVideoReady(true);\n                    // Start frame processing if WebSocket is connected\n                    if (wsStatus === 'connected') {\n                        processingInterval.current = setInterval(captureAndProcessFrame, 33); // ~30fps\n                    }\n                } catch (playError) {\n                    console.error('Error playing video:', playError);\n                    setErrorMessage('Unable to start video stream. Please try again.');\n                }\n            }\n        } catch (error) {\n            console.error('Camera access error:', error);\n            let errorMessage = 'Camera error: ';\n            if (error.name === 'NotAllowedError') {\n                errorMessage += 'Camera access was denied. Please allow camera access in your browser settings.';\n            } else if (error.name === 'NotFoundError') {\n                errorMessage += 'No camera found. Please connect a camera and try again.';\n            } else if (error.name === 'NotReadableError') {\n                errorMessage += 'Camera is already in use by another application.';\n            } else if (error.name === 'OverconstrainedError') {\n                errorMessage += 'Camera does not support the requested resolution.';\n            } else if (error.message === 'getUserMedia is not implemented in this browser') {\n                errorMessage += 'Your browser does not support camera access. Please try using a modern browser like Chrome, Firefox, or Edge.';\n            } else {\n                errorMessage += error.message || 'Unknown error';\n            }\n            setErrorMessage(errorMessage);\n        }\n    };\n    const stopCamera = ()=>{\n        // Stop all tracks in the stream\n        if (stream) {\n            stream.getTracks().forEach((track)=>track.stop());\n            setStream(null);\n        }\n        // Clear video source\n        if (videoRef.current) {\n            videoRef.current.srcObject = null;\n        }\n        // Clear processing interval\n        if (processingInterval.current) {\n            clearInterval(processingInterval.current);\n            processingInterval.current = null;\n        }\n        setIsVideoReady(false);\n    };\n    // Start camera on component mount if isShowing is true\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CameraAccess.useEffect\": ()=>{\n            if (isShowing) {\n                startCamera();\n            } else {\n                stopCamera();\n            }\n            return ({\n                \"CameraAccess.useEffect\": ()=>{\n                    stopCamera();\n                }\n            })[\"CameraAccess.useEffect\"];\n        }\n    }[\"CameraAccess.useEffect\"], [\n        isShowing\n    ]);\n    // Setup FPS counter\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CameraAccess.useEffect\": ()=>{\n            if (!isShowing) return;\n            fpsTimerRef.current = setInterval({\n                \"CameraAccess.useEffect\": ()=>{\n                    setFps({\n                        \"CameraAccess.useEffect\": (prevFps)=>{\n                            // Simple mock for fps counter\n                            const newFps = Math.floor(Math.random() * 10) + 25; // Random between 25-35 fps\n                            return newFps;\n                        }\n                    }[\"CameraAccess.useEffect\"]);\n                }\n            }[\"CameraAccess.useEffect\"], 1000);\n            return ({\n                \"CameraAccess.useEffect\": ()=>{\n                    if (fpsTimerRef.current) {\n                        clearInterval(fpsTimerRef.current);\n                    }\n                    if (processingInterval.current) {\n                        clearInterval(processingInterval.current);\n                    }\n                }\n            })[\"CameraAccess.useEffect\"];\n        }\n    }[\"CameraAccess.useEffect\"], [\n        isShowing\n    ]);\n    // Update dimensions when container size changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CameraAccess.useEffect\": ()=>{\n            if (!isShowing) return;\n            const updateDimensions = {\n                \"CameraAccess.useEffect.updateDimensions\": ()=>{\n                    if (containerRef.current) {\n                        const { width, height } = containerRef.current.getBoundingClientRect();\n                        setDimensions({\n                            width,\n                            height\n                        });\n                    }\n                }\n            }[\"CameraAccess.useEffect.updateDimensions\"];\n            updateDimensions();\n            window.addEventListener('resize', updateDimensions);\n            return ({\n                \"CameraAccess.useEffect\": ()=>window.removeEventListener('resize', updateDimensions)\n            })[\"CameraAccess.useEffect\"];\n        }\n    }[\"CameraAccess.useEffect\"], [\n        isShowing\n    ]);\n    // Handle video element ready state\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CameraAccess.useEffect\": ()=>{\n            if (!isShowing || !videoRef.current || !stream) return;\n            const video = videoRef.current;\n            const handleLoadedMetadata = {\n                \"CameraAccess.useEffect.handleLoadedMetadata\": ()=>{\n                    console.log('Video metadata loaded');\n                    setIsVideoReady(true);\n                    // Get video dimensions\n                    const videoWidth = video.videoWidth || 640;\n                    const videoHeight = video.videoHeight || 480;\n                    console.log(\"Video dimensions: \".concat(videoWidth, \"x\").concat(videoHeight));\n                    // Setup canvas for processing\n                    if (canvasRef.current) {\n                        // Store actual dimensions for capture\n                        canvasRef.current.width = videoWidth;\n                        canvasRef.current.height = videoHeight;\n                        // Set display size to maintain aspect ratio\n                        const aspectRatio = videoWidth / videoHeight;\n                        const containerWidth = dimensions.width;\n                        const containerHeight = containerWidth / aspectRatio;\n                        canvasRef.current.style.width = \"\".concat(containerWidth, \"px\");\n                        canvasRef.current.style.height = \"\".concat(containerHeight, \"px\");\n                    }\n                    // Start processing frames\n                    startProcessing();\n                    // Notify parent component that camera is ready\n                    if (onCameraReady) {\n                        onCameraReady({\n                            width: videoWidth,\n                            height: videoHeight\n                        });\n                    }\n                }\n            }[\"CameraAccess.useEffect.handleLoadedMetadata\"];\n            video.addEventListener('loadedmetadata', handleLoadedMetadata);\n            return ({\n                \"CameraAccess.useEffect\": ()=>{\n                    video.removeEventListener('loadedmetadata', handleLoadedMetadata);\n                }\n            })[\"CameraAccess.useEffect\"];\n        }\n    }[\"CameraAccess.useEffect\"], [\n        stream,\n        isShowing,\n        dimensions,\n        onCameraReady\n    ]);\n    const startProcessing = ()=>{\n        if (!canvasRef.current || !videoRef.current || !isVideoReady) return;\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        // Start processing frames at ~30fps\n        processingInterval.current = setInterval(()=>{\n            if (video.readyState !== 4) return;\n            // Clear canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            // Save the current context state\n            ctx.save();\n            // Flip the context horizontally to mirror the video\n            ctx.translate(canvas.width, 0);\n            ctx.scale(-1, 1);\n            // Draw video frame to canvas at high resolution\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n            // Restore the context state\n            ctx.restore();\n            // Simulate face detection (90% chance of face detected)\n            const faceDetected = Math.random() > 0.1;\n            // Draw visualizations based on enabled options\n            if (faceDetected) {\n                if (showBoundingBox) {\n                    drawBoundingBox(ctx, canvas);\n                }\n                if (showHeadPose) {\n                    drawHeadPose(ctx, canvas);\n                }\n                if (showMask) {\n                    drawFaceMask(ctx, canvas);\n                }\n            }\n            // Display parameters if enabled\n            if (showParameters) {\n                drawParameters(ctx, canvas, faceDetected);\n            }\n        }, 33); // ~30fps\n    };\n    // Helper function to draw bounding box\n    const drawBoundingBox = (ctx, canvas)=>{\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n        const boxWidth = canvas.width * 0.6;\n        const boxHeight = canvas.height * 0.8;\n        ctx.strokeStyle = 'rgba(255, 255, 0, 0.7)';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(centerX - boxWidth / 2, centerY - boxHeight / 2, boxWidth, boxHeight);\n    };\n    // Helper function to draw head pose axes\n    const drawHeadPose = (ctx, canvas, pitch, yaw, roll)=>{\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n        const time = Date.now() / 1000;\n        const length = canvas.width * 0.1;\n        // X axis (red)\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.lineTo(centerX + length * Math.sin(time), centerY);\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 3;\n        ctx.stroke();\n        // Y axis (green)\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.lineTo(centerX, centerY + length * Math.sin(time + 1));\n        ctx.strokeStyle = 'green';\n        ctx.lineWidth = 3;\n        ctx.stroke();\n        // Z axis (blue)\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.lineTo(centerX + length / 2 * Math.sin(time + 2), centerY - length / 2 * Math.cos(time + 2));\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 3;\n        ctx.stroke();\n    };\n    // Helper function to draw face mask\n    const drawFaceMask = (ctx, canvas, points)=>{\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n        const radius = Math.min(canvas.width, canvas.height) * 0.2;\n        // Draw mask\n        ctx.fillStyle = 'rgba(0, 255, 255, 0.2)';\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n        ctx.fill();\n        // Draw eyes\n        const eyeRadius = radius * 0.2;\n        const eyeOffsetX = radius * 0.3;\n        const eyeOffsetY = radius * 0.1;\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\n        // Left eye\n        ctx.beginPath();\n        ctx.arc(centerX - eyeOffsetX, centerY - eyeOffsetY, eyeRadius, 0, Math.PI * 2);\n        ctx.fill();\n        // Right eye\n        ctx.beginPath();\n        ctx.arc(centerX + eyeOffsetX, centerY - eyeOffsetY, eyeRadius, 0, Math.PI * 2);\n        ctx.fill();\n    };\n    // Helper function to draw parameters\n    const drawParameters = (ctx, canvas, faceDetected)=>{\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n        ctx.fillRect(5, canvas.height - 60, 150, 50);\n        ctx.font = '12px Arial';\n        ctx.fillStyle = 'white';\n        ctx.fillText(\"Resolution: \".concat(canvas.width, \"x\").concat(canvas.height), 10, canvas.height - 40);\n        ctx.fillText(\"FPS: \".concat(fps), 10, canvas.height - 25);\n        ctx.fillText(\"Face: \".concat(faceDetected ? 'Detected' : 'Not Detected'), 10, canvas.height - 10);\n    };\n    if (!isShowing) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        style: {\n            position: 'fixed',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: '30vw',\n            height: '30vh',\n            backgroundColor: 'white',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n            overflow: 'hidden',\n            zIndex: 1000\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                ref: videoRef,\n                style: {\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'cover',\n                    transform: 'scaleX(-1)',\n                    opacity: 1\n                },\n                playsInline: true,\n                muted: true,\n                autoPlay: true\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset-customized/components-gui/cameraAccess.js\",\n                lineNumber: 595,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    zIndex: 1,\n                    pointerEvents: 'none',\n                    display: isLinked ? 'block' : 'none' // Hide canvas when not linked\n                }\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset-customized/components-gui/cameraAccess.js\",\n                lineNumber: 608,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: 'absolute',\n                    top: '10px',\n                    right: '10px',\n                    display: 'flex',\n                    gap: '10px',\n                    zIndex: 2\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: onClose,\n                        style: {\n                            padding: '8px 12px',\n                            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            transition: 'background-color 0.3s ease'\n                        },\n                        children: \"Close\"\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset-customized/components-gui/cameraAccess.js\",\n                        lineNumber: 629,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>{\n                            if (isLinked) {\n                                disconnectWebSocket();\n                            } else {\n                                connectWebSocket();\n                            }\n                        },\n                        style: {\n                            padding: '8px 12px',\n                            backgroundColor: isLinked ? 'rgba(255, 0, 0, 0.7)' : 'rgba(0, 255, 0, 0.7)',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            transition: 'background-color 0.3s ease'\n                        },\n                        children: isLinked ? 'Unlink' : 'Link'\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset-customized/components-gui/cameraAccess.js\",\n                        lineNumber: 644,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset-customized/components-gui/cameraAccess.js\",\n                lineNumber: 621,\n                columnNumber: 7\n            }, undefined),\n            wsStatus === 'error' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: 'absolute',\n                    top: '50px',\n                    right: '10px',\n                    padding: '8px 12px',\n                    backgroundColor: 'rgba(255, 0, 0, 0.7)',\n                    color: 'white',\n                    borderRadius: '4px',\n                    zIndex: 2\n                },\n                children: [\n                    \"Connection Error: \",\n                    errorMessage\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset-customized/components-gui/cameraAccess.js\",\n                lineNumber: 667,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset-customized/components-gui/cameraAccess.js\",\n        lineNumber: 579,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CameraAccess, \"hnEdnO3if4n0OeprCUNkmnm42m0=\");\n_c = CameraAccess;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CameraAccess);\nvar _c;\n$RefreshReg$(_c, \"CameraAccess\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/cameraAccess.js\n"));

/***/ })

}]);