"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/collected-dataset",{

/***/ "(pages-dir-browser)/./pages/collected-dataset/components-gui/StatusIndicator.js":
/*!*******************************************************************!*\
  !*** ./pages/collected-dataset/components-gui/StatusIndicator.js ***!
  \*******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// components-gui/StatusIndicator.js\n\n\nconst StatusIndicator = (param)=>{\n    let { isTopBarShown = true, isCanvasVisible = false, style = {} } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"status-indicator\",\n        style: {\n            position: 'fixed',\n            top: '10px',\n            right: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: 'rgba(255, 255, 255, 0.9)',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            padding: '8px',\n            fontSize: '12px',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.1)',\n            zIndex: 9999,\n            ...style\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"status-item\",\n                style: {\n                    marginBottom: '8px',\n                    display: 'flex',\n                    alignItems: 'center'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            width: '10px',\n                            height: '10px',\n                            borderRadius: '50%',\n                            backgroundColor: isTopBarShown ? '#00cc00' : '#ff0000',\n                            marginRight: '6px'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/StatusIndicator.js\",\n                        lineNumber: 37,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: [\n                            \"TopBar \",\n                            isTopBarShown ? 'shown' : 'hidden'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/StatusIndicator.js\",\n                        lineNumber: 46,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/StatusIndicator.js\",\n                lineNumber: 29,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"status-item\",\n                style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    transition: 'color 0.3s, background-color 0.3s'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            width: '10px',\n                            height: '10px',\n                            borderRadius: '50%',\n                            backgroundColor: isCanvasVisible ? '#00cc00' : '#ff0000',\n                            marginRight: '6px',\n                            transition: 'background-color 0.3s'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/StatusIndicator.js\",\n                        lineNumber: 58,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: [\n                            \"Canvas: \",\n                            isCanvasVisible ? 'Visible' : 'Hidden'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/StatusIndicator.js\",\n                        lineNumber: 68,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/StatusIndicator.js\",\n                lineNumber: 50,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/StatusIndicator.js\",\n        lineNumber: 10,\n        columnNumber: 5\n    }, undefined);\n};\n_c = StatusIndicator;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StatusIndicator);\nvar _c;\n$RefreshReg$(_c, \"StatusIndicator\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3BhZ2VzL2NvbGxlY3RlZC1kYXRhc2V0L2NvbXBvbmVudHMtZ3VpL1N0YXR1c0luZGljYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLG9DQUFvQzs7QUFDVjtBQUUxQixNQUFNQyxrQkFBa0I7UUFBQyxFQUN2QkMsZ0JBQWdCLElBQUksRUFDcEJDLGtCQUFrQixLQUFLLEVBQ3ZCQyxRQUFRLENBQUMsQ0FBQyxFQUNYO0lBQ0MscUJBQ0UsOERBQUNDO1FBQ0NDLFdBQVU7UUFDVkYsT0FBTztZQUNMRyxVQUFVO1lBQ1ZDLEtBQUs7WUFDTEMsT0FBTztZQUNQQyxTQUFTO1lBQ1RDLGVBQWU7WUFDZkMsaUJBQWlCO1lBQ2pCQyxRQUFRO1lBQ1JDLGNBQWM7WUFDZEMsU0FBUztZQUNUQyxVQUFVO1lBQ1ZDLFdBQVc7WUFDWEMsUUFBUTtZQUNSLEdBQUdkLEtBQUs7UUFDVjs7MEJBR0EsOERBQUNDO2dCQUNDQyxXQUFVO2dCQUNWRixPQUFPO29CQUNMZSxjQUFjO29CQUNkVCxTQUFTO29CQUNUVSxZQUFZO2dCQUNkOztrQ0FFQSw4REFBQ2Y7d0JBQ0NELE9BQU87NEJBQ0xpQixPQUFPOzRCQUNQQyxRQUFROzRCQUNSUixjQUFjOzRCQUNkRixpQkFBaUJWLGdCQUFnQixZQUFZOzRCQUM3Q3FCLGFBQWE7d0JBQ2Y7Ozs7OztrQ0FFRiw4REFBQ0M7OzRCQUFLOzRCQUFRdEIsZ0JBQWdCLFVBQVU7Ozs7Ozs7Ozs7Ozs7MEJBSTFDLDhEQUFDRztnQkFDQ0MsV0FBVTtnQkFDVkYsT0FBTztvQkFDTE0sU0FBUztvQkFDVFUsWUFBWTtvQkFDWkssWUFBWTtnQkFDZDs7a0NBRUEsOERBQUNwQjt3QkFDQ0QsT0FBTzs0QkFDTGlCLE9BQU87NEJBQ1BDLFFBQVE7NEJBQ1JSLGNBQWM7NEJBQ2RGLGlCQUFpQlQsa0JBQWtCLFlBQVk7NEJBQy9Db0IsYUFBYTs0QkFDYkUsWUFBWTt3QkFDZDs7Ozs7O2tDQUVGLDhEQUFDRDs7NEJBQUs7NEJBQVNyQixrQkFBa0IsWUFBWTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUlyRDtLQXBFTUY7QUFzRU4saUVBQWVBLGVBQWVBLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wb3JjaHBvcnRhbDIvRGVza3RvcC/wn5SlZXZlcnl0aGluZy9NYWluX1dlYl9FeWVUcmFja2luZy9tYWluLXdlYi9mcm9udGVuZC9wYWdlcy9jb2xsZWN0ZWQtZGF0YXNldC9jb21wb25lbnRzLWd1aS9TdGF0dXNJbmRpY2F0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29tcG9uZW50cy1ndWkvU3RhdHVzSW5kaWNhdG9yLmpzXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jb25zdCBTdGF0dXNJbmRpY2F0b3IgPSAoeyBcbiAgaXNUb3BCYXJTaG93biA9IHRydWUsIFxuICBpc0NhbnZhc1Zpc2libGUgPSBmYWxzZSxcbiAgc3R5bGUgPSB7fSBcbn0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IFxuICAgICAgY2xhc3NOYW1lPVwic3RhdHVzLWluZGljYXRvclwiXG4gICAgICBzdHlsZT17e1xuICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgICAgdG9wOiAnMTBweCcsXG4gICAgICAgIHJpZ2h0OiAnMTBweCcsXG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC45KScsXG4gICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjY2NjJyxcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4JyxcbiAgICAgICAgcGFkZGluZzogJzhweCcsXG4gICAgICAgIGZvbnRTaXplOiAnMTJweCcsXG4gICAgICAgIGJveFNoYWRvdzogJzAgMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSknLFxuICAgICAgICB6SW5kZXg6IDk5OTksXG4gICAgICAgIC4uLnN0eWxlXG4gICAgICB9fVxuICAgID5cbiAgICAgIHsvKiBUb3BCYXIgU3RhdHVzICovfVxuICAgICAgPGRpdiBcbiAgICAgICAgY2xhc3NOYW1lPVwic3RhdHVzLWl0ZW1cIlxuICAgICAgICBzdHlsZT17e1xuICAgICAgICAgIG1hcmdpbkJvdHRvbTogJzhweCcsXG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIDxkaXYgXG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIHdpZHRoOiAnMTBweCcsXG4gICAgICAgICAgICBoZWlnaHQ6ICcxMHB4JyxcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzUwJScsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGlzVG9wQmFyU2hvd24gPyAnIzAwY2MwMCcgOiAnI2ZmMDAwMCcsXG4gICAgICAgICAgICBtYXJnaW5SaWdodDogJzZweCdcbiAgICAgICAgICB9fSBcbiAgICAgICAgLz5cbiAgICAgICAgPHNwYW4+VG9wQmFyIHtpc1RvcEJhclNob3duID8gJ3Nob3duJyA6ICdoaWRkZW4nfTwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgXG4gICAgICB7LyogQ2FudmFzIFN0YXR1cyAqL31cbiAgICAgIDxkaXYgXG4gICAgICAgIGNsYXNzTmFtZT1cInN0YXR1cy1pdGVtXCJcbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgdHJhbnNpdGlvbjogJ2NvbG9yIDAuM3MsIGJhY2tncm91bmQtY29sb3IgMC4zcydcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPGRpdiBcbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgd2lkdGg6ICcxMHB4JyxcbiAgICAgICAgICAgIGhlaWdodDogJzEwcHgnLFxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNTAlJyxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogaXNDYW52YXNWaXNpYmxlID8gJyMwMGNjMDAnIDogJyNmZjAwMDAnLFxuICAgICAgICAgICAgbWFyZ2luUmlnaHQ6ICc2cHgnLFxuICAgICAgICAgICAgdHJhbnNpdGlvbjogJ2JhY2tncm91bmQtY29sb3IgMC4zcydcbiAgICAgICAgICB9fSBcbiAgICAgICAgLz5cbiAgICAgICAgPHNwYW4+Q2FudmFzOiB7aXNDYW52YXNWaXNpYmxlID8gJ1Zpc2libGUnIDogJ0hpZGRlbid9PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdGF0dXNJbmRpY2F0b3I7Il0sIm5hbWVzIjpbIlJlYWN0IiwiU3RhdHVzSW5kaWNhdG9yIiwiaXNUb3BCYXJTaG93biIsImlzQ2FudmFzVmlzaWJsZSIsInN0eWxlIiwiZGl2IiwiY2xhc3NOYW1lIiwicG9zaXRpb24iLCJ0b3AiLCJyaWdodCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyIiwiYm9yZGVyUmFkaXVzIiwicGFkZGluZyIsImZvbnRTaXplIiwiYm94U2hhZG93IiwiekluZGV4IiwibWFyZ2luQm90dG9tIiwiYWxpZ25JdGVtcyIsIndpZHRoIiwiaGVpZ2h0IiwibWFyZ2luUmlnaHQiLCJzcGFuIiwidHJhbnNpdGlvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset/components-gui/StatusIndicator.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset/index.js":
/*!******************************************!*\
  !*** ./pages/collected-dataset/index.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CollectedDatasetPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"(pages-dir-browser)/./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-browser)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_gui_topBar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components-gui/topBar */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/topBar.js\");\n/* harmony import */ var _components_gui_displayResponse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components-gui/displayResponse */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/displayResponse.js\");\n/* harmony import */ var _components_gui_actionButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components-gui/actionButton */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/actionButton.js\");\n/* harmony import */ var _components_gui_StatusIndicator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components-gui/StatusIndicator */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/StatusIndicator.js\");\n// index.js\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n // Import the new StatusIndicator component\n// Dynamically load the video processor component (not the hook directly)\nconst VideoProcessorComponent = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-browser_pages_collected-dataset_components-gui_VideoProcessorComponent_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components-gui/VideoProcessorComponent */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/VideoProcessorComponent.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"pages/collected-dataset/index.js -> \" + \"./components-gui/VideoProcessorComponent\"\n        ]\n    },\n    ssr: false\n});\n_c = VideoProcessorComponent;\n// Dynamically import the camera component with SSR disabled\nconst DynamicCameraAccess = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-browser_pages_collected-dataset_components-gui_cameraAccess_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components-gui/cameraAccess */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/cameraAccess.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"pages/collected-dataset/index.js -> \" + \"./components-gui/cameraAccess\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                width: '480px',\n                height: '360px',\n                backgroundColor: '#f0f8ff',\n                border: '2px solid #0066cc',\n                borderRadius: '8px',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                textAlign: 'center',\n                zIndex: 999\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        fontSize: '48px',\n                        marginBottom: '15px'\n                    },\n                    children: \"\\uD83D\\uDCF7\"\n                }, void 0, false, {\n                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                    lineNumber: 38,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    style: {\n                        fontSize: '16px',\n                        fontWeight: 'bold',\n                        color: '#0066cc'\n                    },\n                    children: \"Loading camera...\"\n                }, void 0, false, {\n                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                    lineNumber: 39,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n            lineNumber: 21,\n            columnNumber: 7\n        }, undefined)\n});\n_c1 = DynamicCameraAccess;\nfunction CollectedDatasetPage() {\n    _s();\n    var _s1 = $RefreshSig$();\n    // State for hydration detection\n    const [isHydrated, setIsHydrated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // State for camera management\n    const [showCamera, setShowCamera] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showPermissionPopup, setShowPermissionPopup] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showTopBar, setShowTopBar] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [showMetrics, setShowMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [outputText, setOutputText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [metrics, setMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: '---',\n        height: '---',\n        distance: '---'\n    });\n    const [windowSize, setWindowSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 0,\n        height: 0,\n        percentage: 100\n    });\n    // References and other state\n    const previewAreaRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // State for capture tracking\n    const [captureCounter, setCaptureCounter] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [captureFolder, setCaptureFolder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    // State for camera processing options\n    const [showHeadPose, setShowHeadPose] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBoundingBox, setShowBoundingBox] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showMask, setShowMask] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showParameters, setShowParameters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // State to track if camera square should be shown\n    const [showCameraPlaceholder, setShowCameraPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // To store the camera permission state\n    const [cameraPermissionGranted, setCameraPermissionGranted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // State for warning message\n    const [showWarning, setShowWarning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [warningMessage, setWarningMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    // Backend connection status\n    const [backendStatus, setBackendStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('checking');\n    // Check if we're on the client or server\n    const isClient = \"object\" !== 'undefined';\n    // Create a capture folder on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!captureFolder && isClient && isHydrated) {\n                const timestamp = new Date().toISOString().replace(/[:\\.]/g, '-');\n                setCaptureFolder(\"session_\".concat(timestamp));\n                console.log(\"Created capture folder: session_\".concat(timestamp));\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        captureFolder,\n        isClient,\n        isHydrated\n    ]);\n    // Dynamically import WhiteScreenMain with SSR disabled\n    const DynamicWhiteScreenMain = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-browser_pages_collected-dataset_components-gui_WhiteScreenMain_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components-gui/WhiteScreenMain */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/WhiteScreenMain.js\")), {\n        loadableGenerated: {\n            modules: [\n                \"pages/collected-dataset/index.js -> \" + \"./components-gui/WhiteScreenMain\"\n            ]\n        },\n        ssr: false\n    });\n    // Set hydrated state after mount to prevent hydration mismatch\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            setIsHydrated(true);\n        }\n    }[\"CollectedDatasetPage.useEffect\"], []);\n    // Check backend connection on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return; // Skip on server or before hydration\n            const checkBackendConnection = {\n                \"CollectedDatasetPage.useEffect.checkBackendConnection\": async ()=>{\n                    try {\n                        const response = await fetch('/api/check-backend-connection');\n                        const data = await response.json();\n                        setBackendStatus(data.connected ? 'connected' : 'disconnected');\n                        console.log(\"Backend connection: \".concat(data.connected ? 'OK' : 'Failed'));\n                        // Show status in output text\n                        setOutputText(\"Backend \".concat(data.connected ? 'connected' : 'disconnected - using mock mode'));\n                    } catch (error) {\n                        console.error('Error checking backend connection:', error);\n                        setBackendStatus('disconnected');\n                        setOutputText('Backend disconnected - using mock mode');\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.checkBackendConnection\"];\n            checkBackendConnection();\n            // Welcome message after backend check\n            setTimeout({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    setOutputText('Camera system ready. Click \"Show Preview\" to start camera.');\n                }\n            }[\"CollectedDatasetPage.useEffect\"], 2000);\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Update metrics and window size when component mounts and on window resize\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return; // Skip on server or before hydration\n            const updateDimensions = {\n                \"CollectedDatasetPage.useEffect.updateDimensions\": ()=>{\n                    if (previewAreaRef.current) {\n                        const width = previewAreaRef.current.offsetWidth;\n                        const height = previewAreaRef.current.offsetHeight;\n                        // Calculate what percentage of the screen we're using\n                        const screenPercentage = window.innerWidth / window.screen.width * 100;\n                        setMetrics({\n                            \"CollectedDatasetPage.useEffect.updateDimensions\": (prev)=>({\n                                    ...prev,\n                                    width,\n                                    height\n                                })\n                        }[\"CollectedDatasetPage.useEffect.updateDimensions\"]);\n                        setWindowSize({\n                            width: window.innerWidth,\n                            height: window.innerHeight,\n                            percentage: Math.round(screenPercentage)\n                        });\n                        // Update canvas dimensions\n                        adjustCanvasDimensions();\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.updateDimensions\"];\n            // Initial calculation\n            updateDimensions();\n            window.addEventListener('resize', updateDimensions);\n            // Clean up\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('resize', updateDimensions);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Adjust canvas dimensions to fill the container properly\n    const adjustCanvasDimensions = ()=>{\n        if (!isClient || !isHydrated || !canvasRef.current || !previewAreaRef.current) return;\n        const canvas = canvasRef.current;\n        const container = previewAreaRef.current;\n        // Get the size of the preview area\n        const rect = container.getBoundingClientRect();\n        // Set canvas dimensions to match container size\n        canvas.width = rect.width;\n        canvas.height = rect.height - (showTopBar ? 0 : 0); // Adjust if needed\n        // Clear the canvas\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // Fill with white background\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    };\n    // Add effect to update canvas when dimensions change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (isClient && isHydrated) {\n                adjustCanvasDimensions();\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        windowSize,\n        showTopBar,\n        isHydrated\n    ]);\n    // Add styles to document head for button highlighting\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return;\n            // Create a style element\n            const style = document.createElement('style');\n            style.textContent = \"\\n      @keyframes pulse {\\n        0% { box-shadow: 0 0 0 0 rgba(0, 102, 204, 0.7); }\\n        70% { box-shadow: 0 0 0 10px rgba(0, 102, 204, 0); }\\n        100% { box-shadow: 0 0 0 0 rgba(0, 102, 204, 0); }\\n      }\\n      \\n      @keyframes fadeIn {\\n        from { opacity: 0; transform: translateY(-10px); }\\n        to { opacity: 1; transform: translateY(0); }\\n      }\\n      \\n      .btn-highlight {\\n        animation: pulse 1.5s infinite;\\n        background-color: #0099ff !important;\\n        color: white !important;\\n        transform: scale(1.05);\\n        transition: all 0.3s ease;\\n      }\\n      \\n      .warning-banner {\\n        animation: fadeIn 0.3s ease-in-out;\\n      }\\n    \";\n            document.head.appendChild(style);\n            // Clean up\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    document.head.removeChild(style);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Make toggleTopBar function available globally\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return;\n            // Make toggleTopBar available to other components\n            window.toggleTopBar = ({\n                \"CollectedDatasetPage.useEffect\": (show)=>{\n                    setShowTopBar(show);\n                    // Also hide metrics when hiding the top bar\n                    if (!show) {\n                        setShowMetrics(false);\n                    }\n                    // Adjust canvas dimensions after toggling\n                    setTimeout(adjustCanvasDimensions, 100);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    // Clean up\n                    delete window.toggleTopBar;\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Function to highlight the Show Preview button\n    const highlightPreviewButton = ()=>{\n        if (!isClient || !isHydrated) return;\n        // Find all buttons in the document\n        const buttons = document.querySelectorAll('button');\n        // Look for the Show Preview button text\n        let foundButton = false;\n        buttons.forEach((button)=>{\n            if (button.textContent && button.textContent.includes('Show Preview')) {\n                // Add highlight class\n                button.classList.add('btn-highlight');\n                foundButton = true;\n                // Remove highlight after 3 seconds\n                setTimeout(()=>{\n                    button.classList.remove('btn-highlight');\n                }, 3000);\n            }\n        });\n        // If button wasn't found, try again with delay\n        if (!foundButton) {\n            setTimeout(highlightPreviewButton, 100);\n        }\n    };\n    // Toggle camera function\n    const toggleCamera = (shouldEnable)=>{\n        if (!isClient || !isHydrated) return;\n        const processor = window.videoProcessor;\n        if (!processor) {\n            console.error('Video processor not available');\n            return;\n        }\n        if (shouldEnable) {\n            setShowCamera(true);\n            setShowCameraPlaceholder(false);\n            // Start video processing\n            processor.startVideoProcessing({\n                showHeadPose,\n                showBoundingBox,\n                showMask,\n                showParameters,\n                showProcessedImage: true\n            });\n            setOutputText('Camera preview started');\n        } else {\n            setShowCamera(false);\n            // Stop video processing\n            processor.stopVideoProcessing();\n            // Show camera placeholder if any visualization options are enabled\n            if (showHeadPose || showBoundingBox || showMask || showParameters) {\n                setShowCameraPlaceholder(true);\n            } else {\n                setShowCameraPlaceholder(false);\n            }\n            setOutputText('Camera preview stopped');\n        }\n    };\n    // Handler for action button clicks\n    const handleActionButtonClick = (actionType, value)=>{\n        if (!isClient || !isHydrated) return;\n        // Special case for toggling the top bar\n        if (actionType === 'toggleTopBar') {\n            const newTopBarState = value !== undefined ? !!value : !showTopBar;\n            setShowTopBar(newTopBarState);\n            // Also hide metrics when hiding the top bar\n            if (!newTopBarState) {\n                setShowMetrics(false);\n            }\n            setOutputText(\"TopBar \".concat(newTopBarState ? 'shown' : 'hidden').concat(!newTopBarState ? ', Metrics hidden' : ''));\n            // Adjust canvas dimensions after toggling\n            setTimeout(adjustCanvasDimensions, 100);\n            return;\n        }\n        // Check if camera is active or not required for this action\n        const requiresCamera = [\n            'headPose',\n            'boundingBox',\n            'mask',\n            'parameters'\n        ].includes(actionType);\n        // Show warning if trying to use features requiring camera without camera being active\n        if (requiresCamera && !showCamera) {\n            setShowWarning(true);\n            setWarningMessage('Please activate the camera by clicking \"Show Preview\" first');\n            // Highlight the Show Preview button\n            highlightPreviewButton();\n            // Auto-hide warning after 3 seconds\n            setTimeout(()=>{\n                setShowWarning(false);\n            }, 3000);\n            // Update output text\n            setOutputText('Camera preview needed for this feature');\n            return;\n        }\n        // Clear any existing warnings\n        setShowWarning(false);\n        // Special case for Random Dot - connect to WhiteScreenMain\n        // Replace the randomDot case in handleActionButtonClick with this implementation:\n        // Special case for Random Dot - connect to WhiteScreenMain\n        if (actionType === 'randomDot') {\n            // Hide topBar before displaying the dot\n            setShowTopBar(false);\n            if (window.whiteScreenActions && window.whiteScreenActions.randomDot) {\n                window.whiteScreenActions.randomDot();\n            } else {\n                // Fallback behavior\n                setOutputText('Random dot action triggered - using fallback');\n                // Ensure canvas is visible\n                adjustCanvasDimensions();\n                // Draw random dot directly\n                const canvas = canvasRef.current;\n                if (canvas) {\n                    const ctx = canvas.getContext('2d');\n                    const x = Math.floor(Math.random() * (canvas.width - 40)) + 20;\n                    const y = Math.floor(Math.random() * (canvas.height - 40)) + 20;\n                    // Clear canvas and fill with white\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.fillStyle = 'white';\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    // Draw the dot\n                    ctx.beginPath();\n                    ctx.arc(x, y, 8, 0, Math.PI * 2);\n                    ctx.fillStyle = 'red';\n                    ctx.fill();\n                    // Add glow effect\n                    ctx.beginPath();\n                    ctx.arc(x, y, 11, 0, Math.PI * 2);\n                    ctx.strokeStyle = 'rgba(255, 0, 0, 0.3)';\n                    ctx.lineWidth = 2;\n                    ctx.stroke();\n                    // Start a countdown for capture\n                    let count = 3;\n                    const countdownInterval = setInterval(()=>{\n                        count--;\n                        if (count <= 0) {\n                            clearInterval(countdownInterval);\n                            // SILENTLY capture without showing preview\n                            captureImagesWithoutPreview(x, y);\n                        }\n                    }, 1000);\n                }\n            }\n            return;\n        }\n        // Add this new helper function for silent capturing:\n        // Modified captureImagesWithoutPreview function for improved file saving with continuous numbering\n        const captureImagesWithoutPreview = async (x, y)=>{\n            try {\n                // Define a fixed folder name for all captures\n                const captureFolder = 'eye_tracking_captures';\n                // Format counter for filenames - the server will handle the actual numbering\n                const counter = String(captureCounter).padStart(3, '0');\n                const screenFilename = \"screen_\".concat(counter, \".jpg\");\n                const webcamFilename = \"webcam_\".concat(counter, \".jpg\");\n                const parameterFilename = \"parameter_\".concat(counter, \".csv\");\n                console.log(\"Starting capture process with counter \".concat(counter));\n                console.log(\"Dot position: x=\".concat(x, \", y=\").concat(y));\n                // Store these variables to use later for preview\n                let screenImageData = null;\n                let webcamImageData = null;\n                let screenImagePath = null;\n                let webcamImagePath = null;\n                let usedCaptureNumber = captureCounter;\n                // 1. Capture screen image from canvas\n                const canvas = canvasRef.current;\n                if (canvas) {\n                    try {\n                        console.log(\"Canvas dimensions: \".concat(canvas.width, \"x\").concat(canvas.height));\n                        screenImageData = canvas.toDataURL('image/png');\n                        console.log(\"Screen image captured successfully, size: \".concat(screenImageData.length, \" chars\"));\n                        // Save screen image via API\n                        const screenResponse = await fetch('/api/save-capture', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                imageData: screenImageData,\n                                filename: screenFilename,\n                                type: 'screen',\n                                folder: captureFolder\n                            })\n                        });\n                        if (screenResponse.ok) {\n                            const screenResult = await screenResponse.json();\n                            console.log(\"Screen image saved: \".concat(screenResult.path));\n                            screenImagePath = screenResult.path;\n                            // If the server provides a capture number, use it for the next files\n                            if (screenResult.captureNumber) {\n                                usedCaptureNumber = screenResult.captureNumber;\n                                console.log(\"Server assigned capture number: \".concat(usedCaptureNumber));\n                            }\n                        } else {\n                            console.error(\"Failed to save screen image: \".concat(screenResponse.status, \" \").concat(screenResponse.statusText));\n                        }\n                    } catch (screenError) {\n                        console.error(\"Error capturing or saving screen image:\", screenError);\n                    }\n                } else {\n                    console.error(\"Canvas reference is null, cannot capture screen\");\n                }\n                // Update filenames with server-assigned capture number\n                const updatedWebcamFilename = \"webcam_\".concat(String(usedCaptureNumber).padStart(3, '0'), \".jpg\");\n                const updatedParameterFilename = \"parameter_\".concat(String(usedCaptureNumber).padStart(3, '0'), \".csv\");\n                // 2. Silently capture webcam image without showing preview\n                try {\n                    console.log(\"Attempting to capture webcam silently\");\n                    // Create a temporary stream for just this capture\n                    const stream = await navigator.mediaDevices.getUserMedia({\n                        video: true,\n                        audio: false\n                    });\n                    console.log(\"Webcam stream obtained successfully\");\n                    // Create a hidden video element to receive the stream\n                    const tempVideo = document.createElement('video');\n                    tempVideo.autoplay = true;\n                    tempVideo.playsInline = true;\n                    tempVideo.muted = true;\n                    tempVideo.style.position = 'absolute';\n                    tempVideo.style.left = '-9999px'; // Position off-screen\n                    tempVideo.style.opacity = '0';\n                    document.body.appendChild(tempVideo);\n                    // Set the stream to the video element\n                    tempVideo.srcObject = stream;\n                    // Wait for video to initialize\n                    await new Promise((resolve)=>{\n                        const timeoutId = setTimeout(()=>{\n                            console.warn(\"Video loading timed out, continuing anyway\");\n                            resolve();\n                        }, 1000);\n                        tempVideo.onloadeddata = ()=>{\n                            clearTimeout(timeoutId);\n                            console.log(\"Video element ready: \".concat(tempVideo.videoWidth, \"x\").concat(tempVideo.videoHeight));\n                            resolve();\n                        };\n                    });\n                    // Small delay to ensure a clear frame\n                    await new Promise((resolve)=>setTimeout(resolve, 200));\n                    // Check if video dimensions are valid\n                    if (tempVideo.videoWidth === 0 || tempVideo.videoHeight === 0) {\n                        console.warn(\"Video dimensions are invalid, using default dimensions\");\n                    }\n                    // Capture the frame to a canvas\n                    const tempCanvas = document.createElement('canvas');\n                    tempCanvas.width = tempVideo.videoWidth || 640;\n                    tempCanvas.height = tempVideo.videoHeight || 480;\n                    const ctx = tempCanvas.getContext('2d');\n                    try {\n                        ctx.drawImage(tempVideo, 0, 0, tempCanvas.width, tempCanvas.height);\n                        console.log(\"Frame drawn to temp canvas: \".concat(tempCanvas.width, \"x\").concat(tempCanvas.height));\n                        // Get image data\n                        webcamImageData = tempCanvas.toDataURL('image/png');\n                        console.log(\"Webcam image captured successfully, size: \".concat(webcamImageData.length, \" chars\"));\n                        // Save webcam image via API - using the updated filename\n                        const webcamResponse = await fetch('/api/save-capture', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                imageData: webcamImageData,\n                                filename: updatedWebcamFilename,\n                                type: 'webcam',\n                                folder: captureFolder\n                            })\n                        });\n                        if (webcamResponse.ok) {\n                            const webcamResult = await webcamResponse.json();\n                            console.log(\"Webcam image saved: \".concat(webcamResult.path));\n                            webcamImagePath = webcamResult.path;\n                        } else {\n                            console.error(\"Failed to save webcam image: \".concat(webcamResponse.status, \" \").concat(webcamResponse.statusText));\n                        }\n                    } catch (drawError) {\n                        console.error(\"Error drawing video to canvas:\", drawError);\n                    }\n                    // IMPORTANT: Clean up - stop stream and remove video element\n                    console.log(\"Cleaning up webcam resources\");\n                    stream.getTracks().forEach((track)=>{\n                        track.stop();\n                        console.log(\"Stopped track: \".concat(track.kind, \", readyState: \").concat(track.readyState));\n                    });\n                    tempVideo.srcObject = null;\n                    if (tempVideo.parentNode) {\n                        tempVideo.parentNode.removeChild(tempVideo);\n                        console.log(\"Removed temporary video element\");\n                    }\n                } catch (webcamError) {\n                    console.error(\"Error capturing webcam silently:\", webcamError);\n                }\n                // 3. Create and save a CSV with parameters - using the updated filename\n                try {\n                    console.log(\"Creating parameter CSV\");\n                    // Create CSV content with two columns: name and value\n                    const csvData = [\n                        \"name,value\",\n                        \"dot_x,\".concat(x),\n                        \"dot_y,\".concat(y),\n                        \"canvas_width,\".concat(canvas ? canvas.width : 0),\n                        \"canvas_height,\".concat(canvas ? canvas.height : 0),\n                        \"window_width,\".concat(window.innerWidth),\n                        \"window_height,\".concat(window.innerHeight),\n                        \"timestamp,\".concat(new Date().toISOString())\n                    ].join('\\n');\n                    console.log(\"CSV data created:\", csvData);\n                    // Convert CSV to data URL\n                    const csvBlob = new Blob([\n                        csvData\n                    ], {\n                        type: 'text/csv'\n                    });\n                    const csvReader = new FileReader();\n                    const csvDataUrl = await new Promise((resolve)=>{\n                        csvReader.onloadend = ()=>resolve(csvReader.result);\n                        csvReader.readAsDataURL(csvBlob);\n                    });\n                    console.log(\"CSV converted to data URL\");\n                    // Save CSV using the API\n                    const csvResponse = await fetch('/api/save-capture', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            imageData: csvDataUrl,\n                            filename: updatedParameterFilename,\n                            type: 'parameters',\n                            folder: captureFolder\n                        })\n                    });\n                    if (csvResponse.ok) {\n                        const csvResult = await csvResponse.json();\n                        console.log(\"Parameter CSV saved: \".concat(csvResult.path));\n                    } else {\n                        console.error(\"Failed to save parameter CSV: \".concat(csvResponse.status, \" \").concat(csvResponse.statusText));\n                    }\n                } catch (csvError) {\n                    console.error(\"Error saving parameter CSV:\", csvError);\n                }\n                // 4. Update counter for next capture based on server response or increment\n                setCaptureCounter(usedCaptureNumber + 1);\n                // 5. Show preview with ORIGINAL IMAGE DATA (not paths from server)\n                console.log(\"Capture complete. Showing preview with in-memory image data:\");\n                console.log(\"- Screen image size:\", screenImageData ? screenImageData.length : 'N/A');\n                console.log(\"- Webcam image size:\", webcamImageData ? webcamImageData.length : 'N/A');\n                // Use the original image data for preview, not the paths\n                if (screenImageData || webcamImageData) {\n                    // This is the key fix - use the actual image data for preview\n                    showCapturedImagesPreview(screenImageData, webcamImageData, {\n                        x,\n                        y\n                    });\n                } else {\n                    console.error(\"No images available to preview\");\n                }\n                // 6. Show status message\n                setOutputText(\"Captured: screen_\".concat(String(usedCaptureNumber).padStart(3, '0'), \".jpg, \").concat(webcamImageData ? \"webcam_\".concat(String(usedCaptureNumber).padStart(3, '0'), \".jpg\") : 'no webcam', \", parameter_\").concat(String(usedCaptureNumber).padStart(3, '0'), \".csv\"));\n                // 7. Show TopBar again after capture\n                setTimeout(()=>{\n                    setShowTopBar(true);\n                }, 2200); // Wait longer than the preview duration\n            } catch (error) {\n                console.error(\"Error during silent capture:\", error);\n                setOutputText(\"Error capturing images: \" + error.message);\n                // Still restore the top bar in case of error\n                setTimeout(()=>{\n                    setShowTopBar(true);\n                }, 1500);\n            }\n        };\n        // Add this helper function to show a preview of the captured images\n        // Enhanced showCapturedImagesPreview function with debugging\n        const showCapturedImagesPreview = (screenImage, webcamImage, dotPosition)=>{\n            console.log(\"Starting preview display with:\", {\n                screenAvailable: !!screenImage,\n                webcamAvailable: !!webcamImage,\n                dotPosition\n            });\n            // Don't proceed if no images are available\n            if (!screenImage && !webcamImage) {\n                console.warn(\"No images available to preview\");\n                return;\n            }\n            // Remove any existing preview containers first (in case of overlapping)\n            try {\n                const existingPreviews = document.querySelectorAll('.capture-preview-container');\n                existingPreviews.forEach((preview)=>{\n                    if (preview.parentNode) {\n                        console.log(\"Removing existing preview container\");\n                        preview.parentNode.removeChild(preview);\n                    }\n                });\n            } catch (cleanupError) {\n                console.error(\"Error cleaning up existing previews:\", cleanupError);\n            }\n            // Create a new preview container with z-index higher than everything else\n            const previewContainer = document.createElement('div');\n            previewContainer.className = 'capture-preview-container';\n            previewContainer.style.cssText = \"\\n        position: fixed;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\n        display: flex;\\n        gap: 20px;\\n        background-color: rgba(0, 0, 0, 0.85);\\n        padding: 20px;\\n        border-radius: 12px;\\n        z-index: 999999;\\n        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.6);\\n      \";\n            console.log(\"Preview container created\");\n            // Add debug info div\n            const debugInfo = document.createElement('div');\n            debugInfo.style.cssText = \"\\n        position: absolute;\\n        top: -30px;\\n        left: 0;\\n        width: 100%;\\n        color: white;\\n        font-size: 12px;\\n        text-align: center;\\n      \";\n            debugInfo.textContent = \"Screen: \".concat(screenImage ? 'YES' : 'NO', \", Webcam: \").concat(webcamImage ? 'YES' : 'NO');\n            previewContainer.appendChild(debugInfo);\n            // Function to add an image to the preview\n            const addImagePreview = (image, label)=>{\n                try {\n                    console.log(\"Adding \".concat(label, \" preview, image data length: \").concat(image ? image.length : 'N/A'));\n                    const preview = document.createElement('div');\n                    preview.style.cssText = \"\\n            display: flex;\\n            flex-direction: column;\\n            align-items: center;\\n          \";\n                    const img = document.createElement('img');\n                    img.src = image;\n                    img.alt = label;\n                    img.style.cssText = \"\\n            max-width: 320px;\\n            max-height: 240px;\\n            border: 3px solid white;\\n            border-radius: 8px;\\n            background-color: #333;\\n          \";\n                    // Event listeners for image loading\n                    img.onload = ()=>console.log(\"\".concat(label, \" image loaded successfully, size: \").concat(img.naturalWidth, \"x\").concat(img.naturalHeight));\n                    img.onerror = (e)=>console.error(\"Error loading \".concat(label, \" image:\"), e);\n                    const labelElement = document.createElement('div');\n                    labelElement.textContent = label;\n                    labelElement.style.cssText = \"\\n            color: white;\\n            font-size: 14px;\\n            margin-top: 10px;\\n            font-weight: bold;\\n          \";\n                    preview.appendChild(img);\n                    preview.appendChild(labelElement);\n                    previewContainer.appendChild(preview);\n                    console.log(\"\".concat(label, \" preview element added to container\"));\n                    return true;\n                } catch (error) {\n                    console.error(\"Error adding \".concat(label, \" preview:\"), error);\n                    return false;\n                }\n            };\n            // Add both images to preview if available\n            if (screenImage) {\n                addImagePreview(screenImage, 'Screen Capture');\n            }\n            if (webcamImage) {\n                addImagePreview(webcamImage, 'Webcam Capture');\n            }\n            // Add dot position info if available\n            if (dotPosition) {\n                const positionInfo = document.createElement('div');\n                positionInfo.textContent = \"Dot position: x=\".concat(Math.round(dotPosition.x), \", y=\").concat(Math.round(dotPosition.y));\n                positionInfo.style.cssText = \"\\n          color: #ffcc00;\\n          font-size: 14px;\\n          position: absolute;\\n          top: -50px;\\n          left: 0;\\n          width: 100%;\\n          text-align: center;\\n        \";\n                previewContainer.appendChild(positionInfo);\n                console.log(\"Dot position info added\");\n            }\n            // Add countdown timer\n            const timerElement = document.createElement('div');\n            timerElement.textContent = '2.0s';\n            timerElement.style.cssText = \"\\n        position: absolute;\\n        bottom: -25px;\\n        right: 20px;\\n        color: white;\\n        font-size: 12px;\\n        background-color: rgba(0, 0, 0, 0.7);\\n        padding: 3px 8px;\\n        border-radius: 4px;\\n      \";\n            previewContainer.appendChild(timerElement);\n            // Add to document body - IMPORTANT: make sure it's actually added to the DOM\n            try {\n                document.body.appendChild(previewContainer);\n                console.log(\"Preview container added to DOM\");\n            } catch (appendError) {\n                console.error(\"Error adding preview container to DOM:\", appendError);\n            }\n            // Countdown and remove the preview after 2 seconds\n            let timeLeft = 2.0;\n            const interval = setInterval(()=>{\n                timeLeft -= 0.1;\n                if (timeLeft <= 0) {\n                    clearInterval(interval);\n                    // Fade out\n                    previewContainer.style.transition = 'opacity 0.3s ease';\n                    previewContainer.style.opacity = '0';\n                    // Remove after fade\n                    setTimeout(()=>{\n                        if (previewContainer.parentNode) {\n                            console.log(\"Removing preview container from DOM\");\n                            previewContainer.parentNode.removeChild(previewContainer);\n                        }\n                    }, 300);\n                } else {\n                    timerElement.textContent = \"\".concat(timeLeft.toFixed(1), \"s\");\n                }\n            }, 100);\n            // Safety cleanup after 5 seconds in case anything goes wrong\n            setTimeout(()=>{\n                if (previewContainer.parentNode) {\n                    console.log(\"Safety cleanup of preview container\");\n                    previewContainer.parentNode.removeChild(previewContainer);\n                }\n            }, 5000);\n        };\n        switch(actionType){\n            case 'headPose':\n                const newHeadPoseState = !showHeadPose;\n                setShowHeadPose(newHeadPoseState);\n                setOutputText(\"Head pose visualization \".concat(newHeadPoseState ? 'enabled' : 'disabled'));\n                if (newHeadPoseState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newHeadPoseState && !showBoundingBox && !showMask && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showHeadPose: newHeadPoseState\n                    });\n                }\n                break;\n            case 'boundingBox':\n                const newBoundingBoxState = !showBoundingBox;\n                setShowBoundingBox(newBoundingBoxState);\n                setOutputText(\"Bounding box \".concat(newBoundingBoxState ? 'shown' : 'hidden'));\n                if (newBoundingBoxState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newBoundingBoxState && !showHeadPose && !showMask && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showBoundingBox: newBoundingBoxState\n                    });\n                }\n                break;\n            case 'preview':\n                // Toggle camera state\n                if (showCamera) {\n                    toggleCamera(false);\n                } else if (cameraPermissionGranted) {\n                    toggleCamera(true);\n                } else {\n                    // Otherwise show permission popup\n                    setShowPermissionPopup(true);\n                    setOutputText('Opening camera preview');\n                    setShowCameraPlaceholder(true);\n                }\n                break;\n            case 'mask':\n                const newMaskState = !showMask;\n                setShowMask(newMaskState);\n                setOutputText(\"Mask \".concat(newMaskState ? 'shown' : 'hidden'));\n                if (newMaskState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newMaskState && !showHeadPose && !showBoundingBox && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showMask: newMaskState\n                    });\n                }\n                break;\n            case 'parameters':\n                const newParametersState = !showParameters;\n                setShowParameters(newParametersState);\n                setOutputText(\"Parameters \".concat(newParametersState ? 'shown' : 'hidden'));\n                if (newParametersState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newParametersState && !showHeadPose && !showBoundingBox && !showMask) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showParameters: newParametersState\n                    });\n                }\n                break;\n            default:\n                setOutputText(\"Action triggered: \".concat(actionType));\n        }\n    };\n    // Top Bar button click handler\n    const handleTopBarButtonClick = (actionType)=>{\n        if (!isClient || !isHydrated) return;\n        // Special case for Random Dot action\n        if (actionType === 'randomDot') {\n            // Forward to action button handler\n            handleActionButtonClick('randomDot');\n            return;\n        }\n        // Check if camera is active for camera-dependent features\n        const requiresCamera = [\n            'Draw Head pose',\n            'Show Bounding Box',\n            '😊 Show Mask',\n            'Parameters'\n        ].includes(actionType);\n        // Show warning if trying to use features requiring camera without camera being active\n        if (requiresCamera && !showCamera) {\n            setShowWarning(true);\n            setWarningMessage('Please activate the camera by clicking \"Show Preview\" first');\n            // Highlight the Show Preview button\n            highlightPreviewButton();\n            // Auto-hide warning after 3 seconds\n            setTimeout(()=>{\n                setShowWarning(false);\n            }, 3000);\n            // Update output text\n            setOutputText('Camera preview needed for this feature');\n            return;\n        }\n        // Clear any existing warnings\n        setShowWarning(false);\n        // Handle the Show Preview button (toggle camera on/off)\n        if (actionType === 'Show Preview' || actionType === 'preview') {\n            if (showCamera) {\n                toggleCamera(false);\n            } else if (cameraPermissionGranted) {\n                toggleCamera(true);\n            } else {\n                // Otherwise show permission popup\n                setShowPermissionPopup(true);\n                setShowCameraPlaceholder(true);\n            }\n            return;\n        }\n        // Handle Random Dot action\n        if (actionType === 'Random Dot') {\n            handleActionButtonClick('randomDot');\n            return;\n        }\n        // Check for action buttons\n        if (actionType === 'Draw Head pose' || actionType === 'Show Bounding Box' || actionType === '😊 Show Mask' || actionType === 'Parameters') {\n            switch(actionType){\n                case 'Draw Head pose':\n                    const newHeadPoseState = !showHeadPose;\n                    setShowHeadPose(newHeadPoseState);\n                    setOutputText(\"Head pose visualization \".concat(newHeadPoseState ? 'enabled' : 'disabled'));\n                    if (newHeadPoseState && !showCamera) {\n                        setShowCameraPlaceholder(true);\n                    } else if (!newHeadPoseState && !showBoundingBox && !showMask && !showParameters) {\n                        setShowCameraPlaceholder(false);\n                    }\n                    // Update processor options if camera is active\n                    if (showCamera && window.videoProcessor) {\n                        window.videoProcessor.updateOptions({\n                            ...window.videoProcessor.options,\n                            showHeadPose: newHeadPoseState\n                        });\n                    }\n                    break;\n                case 'Show Bounding Box':\n                    const newBoundingBoxState = !showBoundingBox;\n                    setShowBoundingBox(newBoundingBoxState);\n                    setOutputText(\"Bounding box \".concat(newBoundingBoxState ? 'shown' : 'hidden'));\n                    if (newBoundingBoxState && !showCamera) {\n                        setShowCameraPlaceholder(true);\n                    } else if (!newBoundingBoxState && !showHeadPose && !showMask && !showParameters) {\n                        setShowCameraPlaceholder(false);\n                    }\n                    // Update processor options if camera is active\n                    if (showCamera && window.videoProcessor) {\n                        window.videoProcessor.updateOptions({\n                            ...window.videoProcessor.options,\n                            showBoundingBox: newBoundingBoxState\n                        });\n                    }\n                    break;\n                case '😊 Show Mask':\n                    const newMaskState = !showMask;\n                    setShowMask(newMaskState);\n                    setOutputText(\"Mask \".concat(newMaskState ? 'shown' : 'hidden'));\n                    if (newMaskState && !showCamera) {\n                        setShowCameraPlaceholder(true);\n                    } else if (!newMaskState && !showHeadPose && !showBoundingBox && !showParameters) {\n                        setShowCameraPlaceholder(false);\n                    }\n                    // Update processor options if camera is active\n                    if (showCamera && window.videoProcessor) {\n                        window.videoProcessor.updateOptions({\n                            ...window.videoProcessor.options,\n                            showMask: newMaskState\n                        });\n                    }\n                    break;\n                case 'Parameters':\n                    const newParametersState = !showParameters;\n                    setShowParameters(newParametersState);\n                    setOutputText(\"Parameters \".concat(newParametersState ? 'shown' : 'hidden'));\n                    if (newParametersState && !showCamera) {\n                        setShowCameraPlaceholder(true);\n                    } else if (!newParametersState && !showHeadPose && !showBoundingBox && !showMask) {\n                        setShowCameraPlaceholder(false);\n                    }\n                    // Update processor options if camera is active\n                    if (showCamera && window.videoProcessor) {\n                        window.videoProcessor.updateOptions({\n                            ...window.videoProcessor.options,\n                            showParameters: newParametersState\n                        });\n                    }\n                    break;\n            }\n            return;\n        }\n        // Update output text based on action type\n        setOutputText(\"Action triggered: \".concat(actionType, \" at \").concat(new Date().toLocaleTimeString()));\n    };\n    const handlePermissionAccepted = ()=>{\n        if (!isClient || !isHydrated) return;\n        setShowPermissionPopup(false);\n        setCameraPermissionGranted(true);\n        toggleCamera(true);\n    };\n    const handlePermissionDenied = ()=>{\n        if (!isClient || !isHydrated) return;\n        setShowPermissionPopup(false);\n        setShowCameraPlaceholder(false);\n        setOutputText('Camera permission denied');\n    };\n    const handleCameraClose = ()=>{\n        if (!isClient || !isHydrated) return;\n        toggleCamera(false);\n    };\n    const handleCameraReady = (dimensions)=>{\n        if (!isClient || !isHydrated) return;\n        setMetrics({\n            width: dimensions.width,\n            height: dimensions.height,\n            distance: dimensions.distance || '---'\n        });\n        setOutputText(\"Camera ready: \".concat(dimensions.width, \"x\").concat(dimensions.height));\n    };\n    const toggleTopBar = (show)=>{\n        const newTopBarState = show !== undefined ? show : !showTopBar;\n        setShowTopBar(newTopBarState);\n        // Also hide metrics when hiding the top bar\n        if (!newTopBarState) {\n            setShowMetrics(false);\n        }\n        setOutputText(\"TopBar \".concat(newTopBarState ? 'shown' : 'hidden').concat(!newTopBarState ? ', Metrics hidden' : ''));\n        // Wait for state update and DOM changes, then adjust canvas\n        setTimeout(adjustCanvasDimensions, 100);\n    };\n    const toggleMetrics = ()=>{\n        setShowMetrics((prev)=>!prev);\n        setOutputText(\"Metrics \".concat(!showMetrics ? 'shown' : 'hidden'));\n    };\n    // Updated startCountdown function in index.js (ActionButtonGroup)\n    // Start countdown timer\n    const startCountdown = (count, onComplete)=>{\n        setCountdownValue(count);\n        const timer = setTimeout(()=>{\n            if (count > 1) {\n                startCountdown(count - 1, onComplete);\n            } else {\n                // Final countdown step - immediately hide countdown and execute callback\n                setCountdownValue(null);\n                // Execute completion callback without delay\n                if (onComplete) onComplete();\n            }\n        }, 800);\n        return ()=>clearTimeout(timer);\n    };\n    // WhiteScreenMain component with properly connected actions\n    const WhiteScreenMainWithActions = ()=>{\n        _s1();\n        // Add a ref to store actions\n        const actionsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});\n        // Handler for status updates from WhiteScreenMain\n        const handleStatusUpdate = (status)=>{\n            if (status && typeof status === 'object') {\n                if (status.processStatus) {\n                    setOutputText(status.processStatus);\n                }\n                if (status.countdownValue) {\n                // Display countdown somewhere if needed\n                }\n            } else if (typeof status === 'string') {\n                setOutputText(status);\n            }\n        };\n        // Handler for button clicks from WhiteScreenMain\n        const handleButtonClick = (actionType, handlers)=>{\n            if (actionType === 'registerActions') {\n                // Store action handlers for later use\n                actionsRef.current = handlers;\n                // Make them available globally for debugging and external access\n                window.whiteScreenActions = handlers;\n            } else {\n                // Handle specific action\n                handleActionButtonClick(actionType);\n            }\n        };\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicWhiteScreenMain, {\n            onStatusUpdate: handleStatusUpdate,\n            triggerCameraAccess: (forceEnable)=>{\n                if (forceEnable || cameraPermissionGranted) {\n                    toggleCamera(true);\n                } else {\n                    setShowPermissionPopup(true);\n                }\n            },\n            onButtonClick: handleButtonClick,\n            canvasRef: canvasRef,\n            toggleTopBar: toggleTopBar\n        }, void 0, false, {\n            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n            lineNumber: 1250,\n            columnNumber: 7\n        }, this);\n    };\n    _s1(WhiteScreenMainWithActions, \"Kok3lZKJ+7f35P64T+1s5zRK1Ik=\");\n    // Dynamic class to reflect current window size\n    const getSizeClass = ()=>{\n        const { percentage } = windowSize;\n        if (percentage < 35) return 'window-size-tiny';\n        if (percentage < 50) return 'window-size-small';\n        if (percentage < 70) return 'window-size-medium';\n        return 'window-size-large';\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"main-container \".concat(getSizeClass()),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Camera Dataset Collection\"\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                        lineNumber: 1278,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                        lineNumber: 1279,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1277,\n                columnNumber: 7\n            }, this),\n            isHydrated && isClient && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VideoProcessorComponent, {}, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1283,\n                columnNumber: 34\n            }, this),\n            isHydrated && backendStatus === 'disconnected' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    padding: '6px 0',\n                    backgroundColor: '#ffe0b2',\n                    color: '#e65100',\n                    textAlign: 'center',\n                    fontSize: '14px',\n                    fontWeight: 'bold',\n                    zIndex: 1100\n                },\n                children: \"⚠️ Backend disconnected. Using mock mode for face tracking.\"\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1287,\n                columnNumber: 9\n            }, this),\n            showTopBar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_topBar__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                onButtonClick: handleTopBarButtonClick,\n                onCameraAccess: ()=>setShowPermissionPopup(true),\n                outputText: outputText,\n                onOutputChange: (text)=>setOutputText(text),\n                onToggleTopBar: toggleTopBar,\n                onToggleMetrics: toggleMetrics,\n                canvasRef: canvasRef\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1307,\n                columnNumber: 9\n            }, this),\n            !showTopBar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"restore-button-container\",\n                style: {\n                    position: 'fixed',\n                    top: '10px',\n                    right: '10px',\n                    zIndex: 1000\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    className: \"restore-btn\",\n                    onClick: ()=>toggleTopBar(true),\n                    title: \"Show TopBar and Metrics\",\n                    style: {\n                        padding: '5px 10px',\n                        background: '#0066cc',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        fontSize: '16px',\n                        cursor: 'pointer'\n                    },\n                    children: \"≡\"\n                }, void 0, false, {\n                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                    lineNumber: 1326,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1320,\n                columnNumber: 9\n            }, this),\n            isHydrated && showWarning && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"warning-banner\",\n                style: {\n                    position: 'fixed',\n                    top: showTopBar ? backendStatus === 'disconnected' ? '32px' : '60px' : '0',\n                    left: '0',\n                    width: '100%',\n                    backgroundColor: '#ffeb3b',\n                    color: '#333',\n                    padding: '10px',\n                    textAlign: 'center',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n                    zIndex: 1010,\n                    animation: 'fadeIn 0.3s ease-in-out'\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                    children: [\n                        \"⚠️ \",\n                        warningMessage\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                    lineNumber: 1360,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1347,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: previewAreaRef,\n                className: \"camera-preview-area\",\n                style: {\n                    height: showTopBar ? 'calc(100vh - 120px)' : '100vh',\n                    marginTop: backendStatus === 'disconnected' ? '32px' : '0',\n                    position: 'relative',\n                    backgroundColor: '#f5f5f5',\n                    overflow: 'hidden' // Add overflow hidden\n                },\n                children: [\n                    !showCamera ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"camera-preview-message\",\n                                style: {\n                                    padding: '20px',\n                                    textAlign: 'center',\n                                    position: showTopBar ? 'relative' : 'absolute',\n                                    width: '100%',\n                                    zIndex: 5 // Lower z-index so the WhiteScreenMain can appear on top\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"Camera preview will appear here\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                        lineNumber: 1384,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"camera-size-indicator\",\n                                        children: [\n                                            \"Current window: \",\n                                            windowSize.percentage,\n                                            \"% of screen width\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                        lineNumber: 1385,\n                                        columnNumber: 15\n                                    }, this),\n                                    isHydrated && showCameraPlaceholder && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"camera-placeholder-square\",\n                                        style: {\n                                            width: '180px',\n                                            height: '135px',\n                                            margin: '20px auto',\n                                            border: '2px dashed #666',\n                                            borderRadius: '4px',\n                                            backgroundColor: '#f5f5f5',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center'\n                                        },\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            style: {\n                                                fontSize: '1.5rem'\n                                            },\n                                            children: \"\\uD83D\\uDCF7\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                            lineNumber: 1403,\n                                            columnNumber: 19\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                        lineNumber: 1389,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"camera-action-buttons-container\",\n                                        style: {\n                                            marginTop: '30px',\n                                            maxWidth: '600px',\n                                            margin: '30px auto'\n                                        },\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_actionButton__WEBPACK_IMPORTED_MODULE_6__.ActionButtonGroup, {\n                                            triggerCameraAccess: (forceEnable)=>{\n                                                if (forceEnable || cameraPermissionGranted) {\n                                                    toggleCamera(true);\n                                                } else {\n                                                    setShowPermissionPopup(true);\n                                                }\n                                            },\n                                            isCompactMode: windowSize.width < 768,\n                                            onActionClick: handleActionButtonClick,\n                                            showHeadPose: showHeadPose,\n                                            showBoundingBox: showBoundingBox,\n                                            showMask: showMask,\n                                            showParameters: showParameters\n                                        }, void 0, false, {\n                                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                            lineNumber: 1413,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                        lineNumber: 1408,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                lineNumber: 1377,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"canvas-container\",\n                                style: {\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                                    width: '100%',\n                                    height: '100%',\n                                    backgroundColor: 'white',\n                                    overflow: 'hidden',\n                                    border: 'none',\n                                    zIndex: 10 // Higher than the message but lower than WhiteScreenMain\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                                    ref: canvasRef,\n                                    className: \"tracking-canvas\",\n                                    style: {\n                                        width: '100%',\n                                        height: '100%',\n                                        display: 'block' // Removes the inline-block spacing issues\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                    lineNumber: 1446,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                lineNumber: 1432,\n                                columnNumber: 13\n                            }, this),\n                            isHydrated && isClient && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicWhiteScreenMain, {\n                                onStatusUpdate: (status)=>{\n                                    if (typeof status === 'string') {\n                                        setOutputText(status);\n                                    } else if (status && typeof status === 'object' && status.processStatus) {\n                                        setOutputText(status.processStatus);\n                                    }\n                                },\n                                triggerCameraAccess: (forceEnable)=>{\n                                    if (forceEnable || cameraPermissionGranted) {\n                                        toggleCamera(true);\n                                    } else {\n                                        setShowPermissionPopup(true);\n                                    }\n                                },\n                                onButtonClick: (actionType, handlers)=>{\n                                    if (actionType === 'registerActions') {\n                                        // Store action handlers globally\n                                        window.whiteScreenActions = handlers;\n                                    } else {\n                                        // Handle specific action\n                                        handleActionButtonClick(actionType);\n                                    }\n                                },\n                                canvasRef: canvasRef,\n                                toggleTopBar: toggleTopBar\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                lineNumber: 1459,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true) : null,\n                    isHydrated && showMetrics && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_displayResponse__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        width: metrics.width,\n                        height: metrics.height,\n                        distance: metrics.distance,\n                        isVisible: showMetrics\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                        lineNumber: 1492,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"canvas-container\",\n                        style: {\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            width: '100%',\n                            height: '100%',\n                            backgroundColor: 'white',\n                            display: showCamera ? 'none' : 'block',\n                            overflow: 'hidden',\n                            border: 'none' // Remove border to eliminate line\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                            ref: canvasRef,\n                            className: \"tracking-canvas\",\n                            style: {\n                                width: '100%',\n                                height: '100%',\n                                display: 'block' // Removes the inline-block spacing issues\n                            }\n                        }, void 0, false, {\n                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                            lineNumber: 1515,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                        lineNumber: 1501,\n                        columnNumber: 9\n                    }, this),\n                    isHydrated && isClient && !showCamera && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WhiteScreenMainWithActions, {}, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                        lineNumber: 1528,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1364,\n                columnNumber: 7\n            }, this),\n            isHydrated && isClient && showPermissionPopup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"camera-permission-popup\",\n                style: {\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    zIndex: 2000\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"camera-permission-dialog\",\n                    style: {\n                        width: '400px',\n                        backgroundColor: 'white',\n                        borderRadius: '8px',\n                        padding: '20px',\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"camera-permission-title\",\n                            style: {\n                                margin: '0 0 15px',\n                                fontSize: '18px',\n                                fontWeight: 'bold'\n                            },\n                            children: \"Camera Access Required\"\n                        }, void 0, false, {\n                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                            lineNumber: 1553,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"camera-permission-message\",\n                            style: {\n                                margin: '0 0 20px',\n                                fontSize: '14px',\n                                lineHeight: '1.4'\n                            },\n                            children: 'This application needs access to your camera to function properly. When prompted by your browser, please click \"Allow\" to grant camera access.'\n                        }, void 0, false, {\n                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                            lineNumber: 1558,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"camera-permission-buttons\",\n                            style: {\n                                display: 'flex',\n                                justifyContent: 'flex-end',\n                                gap: '10px'\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handlePermissionDenied,\n                                    className: \"camera-btn\",\n                                    style: {\n                                        padding: '8px 16px',\n                                        backgroundColor: '#f0f0f0',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        cursor: 'pointer'\n                                    },\n                                    children: \"Cancel\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                    lineNumber: 1571,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handlePermissionAccepted,\n                                    className: \"camera-btn\",\n                                    style: {\n                                        padding: '8px 16px',\n                                        backgroundColor: '#0066cc',\n                                        color: 'white',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        cursor: 'pointer'\n                                    },\n                                    children: \"Continue\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                                    lineNumber: 1584,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                            lineNumber: 1566,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                    lineNumber: 1546,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1534,\n                columnNumber: 9\n            }, this),\n            isHydrated && isClient && showCamera && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicCameraAccess, {\n                isShowing: showCamera,\n                onClose: handleCameraClose,\n                onCameraReady: handleCameraReady,\n                showHeadPose: showHeadPose,\n                showBoundingBox: showBoundingBox,\n                showMask: showMask,\n                showParameters: showParameters,\n                videoRef: videoRef\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n                lineNumber: 1605,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/index.js\",\n        lineNumber: 1276,\n        columnNumber: 5\n    }, this);\n}\n_s(CollectedDatasetPage, \"TY3KmO0qenisCdN+95x9LI5jw6U=\");\n_c2 = CollectedDatasetPage;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"VideoProcessorComponent\");\n$RefreshReg$(_c1, \"DynamicCameraAccess\");\n$RefreshReg$(_c2, \"CollectedDatasetPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset/index.js\n"));

/***/ })

});