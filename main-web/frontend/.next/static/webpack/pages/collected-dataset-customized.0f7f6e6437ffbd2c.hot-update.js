"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/collected-dataset-customized",{

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js":
/*!****************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/adminSettings.js ***!
  \****************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAdminSettings: () => (/* binding */ useAdminSettings)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useAdminSettings = (actionButtonRef)=>{\n    _s();\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        default: {\n            times: 1,\n            delay: 3\n        }\n    });\n    const initialized = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('default');\n    // Load settings from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            try {\n                const savedSettings = localStorage.getItem('captureSettings');\n                if (savedSettings) {\n                    var _actionButtonRef_current;\n                    const parsedSettings = JSON.parse(savedSettings);\n                    setSettings(parsedSettings);\n                    // Update action button if ref is available\n                    if (actionButtonRef === null || actionButtonRef === void 0 ? void 0 : (_actionButtonRef_current = actionButtonRef.current) === null || _actionButtonRef_current === void 0 ? void 0 : _actionButtonRef_current.setCaptureSettings) {\n                        const userId = currentUserId || 'default';\n                        const userSettings = parsedSettings[userId] || {\n                            times: 1,\n                            delay: 3\n                        };\n                        actionButtonRef.current.setCaptureSettings(userSettings);\n                    }\n                }\n            } catch (error) {\n                console.error('Error loading settings from localStorage:', error);\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], []);\n    // Save settings to localStorage when they change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            try {\n                localStorage.setItem('captureSettings', JSON.stringify(settings));\n            } catch (error) {\n                console.error('Error saving settings to localStorage:', error);\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings\n    ]);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"useAdminSettings.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        updateActionButtonSettings(newUserId);\n                    }\n                }\n            }[\"useAdminSettings.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings\n    ]);\n    // Update action button settings with retry mechanism\n    const updateActionButtonSettings = function() {\n        let userId = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 'default';\n        if (!settings[userId]) {\n            settings[userId] = {\n                times: 1,\n                delay: 3\n            };\n        }\n        const tryUpdateRef = function() {\n            let retries = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 3;\n            var _actionButtonRef_current;\n            if (actionButtonRef === null || actionButtonRef === void 0 ? void 0 : (_actionButtonRef_current = actionButtonRef.current) === null || _actionButtonRef_current === void 0 ? void 0 : _actionButtonRef_current.setCaptureSettings) {\n                try {\n                    actionButtonRef.current.setCaptureSettings(settings[userId]);\n                    console.log('Successfully updated action button settings for user:', userId);\n                } catch (err) {\n                    console.error('Error updating via ref:', err);\n                }\n            } else if (retries > 0) {\n                console.log('Ref not ready, retrying...', retries);\n                setTimeout(()=>tryUpdateRef(retries - 1), 500);\n            } else {\n                console.warn('Failed to update action button settings after retries');\n            }\n        };\n        // Start retry process\n        tryUpdateRef();\n        // Also dispatch event for other components\n        const event = new CustomEvent('captureSettingsUpdate', {\n            detail: {\n                type: 'captureSettings',\n                userId: userId,\n                times: settings[userId].times,\n                delay: settings[userId].delay\n            }\n        });\n        window.dispatchEvent(event);\n    };\n    // Handle settings changes\n    const handleSettingsChange = (event)=>{\n        if (event.detail && event.detail.type === 'captureSettings') {\n            const { userId, times, delay } = event.detail;\n            setSettings((prev)=>({\n                    ...prev,\n                    [userId]: {\n                        times: Number(times) || 1,\n                        delay: Number(delay) || 3\n                    }\n                }));\n        }\n    };\n    // Listen for settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            window.addEventListener('captureSettingsUpdate', handleSettingsChange);\n            if (!initialized.current) {\n                initialized.current = true;\n                updateActionButtonSettings('default');\n            }\n            return ({\n                \"useAdminSettings.useEffect\": ()=>{\n                    window.removeEventListener('captureSettingsUpdate', handleSettingsChange);\n                }\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings\n    ]);\n    const updateSettings = async function(newSettings) {\n        let userId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'default';\n        const validatedSettings = {\n            times: Number(newSettings.times) || 1,\n            delay: Number(newSettings.delay) || 3\n        };\n        try {\n            // Update local state\n            setSettings((prev)=>({\n                    ...prev,\n                    [userId]: validatedSettings\n                }));\n            // Update action button with retry mechanism\n            updateActionButtonSettings(userId);\n            // Save to backend\n            const response = await fetch('/api/admin/save-settings', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    userId,\n                    settings: validatedSettings\n                })\n            });\n            if (!response.ok) {\n                throw new Error('Failed to save settings');\n            }\n        } catch (error) {\n            console.error('Error updating settings:', error);\n            throw error;\n        }\n    };\n    return {\n        settings,\n        updateSettings,\n        currentUserId\n    };\n};\n_s(useAdminSettings, \"sxVvA7xmbpoudSOzV+B+REPKOXY=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js\n"));

/***/ })

});