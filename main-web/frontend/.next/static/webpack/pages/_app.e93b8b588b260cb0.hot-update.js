"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./components/consent/ConsentContext.js":
/*!**********************************************!*\
  !*** ./components/consent/ConsentContext.js ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsentProvider: () => (/* binding */ ConsentProvider),\n/* harmony export */   useConsent: () => (/* binding */ useConsent)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_consentManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/consentManager */ \"(pages-dir-browser)/./utils/consentManager.js\");\n// frontend/components/consent/ConsentContext.js\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst ConsentContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction ConsentProvider(param) {\n    let { children } = param;\n    _s();\n    const [consentState, setConsentState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        loading: true,\n        userId: null,\n        consentStatus: null,\n        consentUpdatedAt: null,\n        consentDetails: null,\n        showBanner: true\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ConsentProvider.useEffect\": ()=>{\n            // Get consent data from localStorage\n            const initializeConsent = {\n                \"ConsentProvider.useEffect.initializeConsent\": async ()=>{\n                    try {\n                        console.log('Initializing consent...');\n                        const consentData = await (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.getUserConsent)();\n                        console.log('Consent data:', consentData);\n                        // If no consent data exists or consentStatus is null, show the banner\n                        if (!consentData || consentData.consentStatus === null) {\n                            console.log('No consent data found, showing banner');\n                            const newUserId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.getOrCreateUserId)();\n                            setConsentState({\n                                loading: false,\n                                userId: newUserId,\n                                consentStatus: null,\n                                consentUpdatedAt: null,\n                                consentDetails: null,\n                                showBanner: true\n                            });\n                            return;\n                        }\n                        // Try to get detailed consent preferences if available\n                        let consentDetails = null;\n                        try {\n                            const detailsStr = localStorage.getItem('consent_details');\n                            if (detailsStr) {\n                                consentDetails = JSON.parse(detailsStr);\n                            }\n                        } catch (e) {\n                            console.error('Error parsing consent details:', e);\n                        }\n                        console.log('Setting consent state with data:', {\n                            ...consentData,\n                            consentDetails,\n                            showBanner: false\n                        });\n                        setConsentState({\n                            loading: false,\n                            userId: consentData.userId,\n                            consentStatus: consentData.consentStatus,\n                            consentUpdatedAt: consentData.consentUpdatedAt,\n                            consentDetails,\n                            showBanner: false\n                        });\n                    } catch (error) {\n                        console.error('Error initializing consent:', error);\n                        // If there's an error, show the banner\n                        const newUserId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.getOrCreateUserId)();\n                        setConsentState({\n                            loading: false,\n                            userId: newUserId,\n                            consentStatus: null,\n                            consentUpdatedAt: null,\n                            consentDetails: null,\n                            showBanner: true\n                        });\n                    }\n                }\n            }[\"ConsentProvider.useEffect.initializeConsent\"];\n            initializeConsent();\n        }\n    }[\"ConsentProvider.useEffect\"], []);\n    const updateConsent = async (status)=>{\n        try {\n            console.log('Updating consent status:', status);\n            const userId = consentState.userId || (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.getOrCreateUserId)();\n            const updatedConsent = await (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.updateUserConsent)(status);\n            console.log('Updated consent:', updatedConsent);\n            setConsentState((prev)=>({\n                    ...prev,\n                    userId: updatedConsent.userId,\n                    consentStatus: updatedConsent.consentStatus,\n                    consentUpdatedAt: updatedConsent.consentUpdatedAt,\n                    showBanner: false\n                }));\n            return true;\n        } catch (error) {\n            console.error('Error updating consent:', error);\n            return false;\n        }\n    };\n    const toggleBanner = (show)=>{\n        console.log('Toggling banner:', show);\n        setConsentState((prev)=>({\n                ...prev,\n                showBanner: show\n            }));\n    };\n    // Debug log whenever consent state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ConsentProvider.useEffect\": ()=>{\n            console.log('Consent state updated:', consentState);\n        }\n    }[\"ConsentProvider.useEffect\"], [\n        consentState\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ConsentContext.Provider, {\n        value: {\n            ...consentState,\n            updateConsent,\n            toggleBanner\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/components/consent/ConsentContext.js\",\n        lineNumber: 119,\n        columnNumber: 5\n    }, this);\n}\n_s(ConsentProvider, \"Pdu6F9UOmBIhjmzyeHeuH4yfMZY=\");\n_c = ConsentProvider;\nfunction useConsent() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConsentContext);\n    if (context === undefined) {\n        throw new Error('useConsent must be used within a ConsentProvider');\n    }\n    return context;\n}\n_s1(useConsent, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ConsentProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/consent/ConsentContext.js\n"));

/***/ })

});