"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./utils/consentManager.js":
/*!*********************************!*\
  !*** ./utils/consentManager.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearUserConsent: () => (/* binding */ clearUserConsent),\n/* harmony export */   getOrCreateUserId: () => (/* binding */ getOrCreateUserId),\n/* harmony export */   getUserConsent: () => (/* binding */ getUserConsent),\n/* harmony export */   getUserPreferences: () => (/* binding */ getUserPreferences),\n/* harmony export */   getUserProfile: () => (/* binding */ getUserProfile),\n/* harmony export */   resetConsentBanner: () => (/* binding */ resetConsentBanner),\n/* harmony export */   updateUserConsent: () => (/* binding */ updateUserConsent),\n/* harmony export */   updateUserPreferences: () => (/* binding */ updateUserPreferences),\n/* harmony export */   updateUserProfile: () => (/* binding */ updateUserProfile)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(pages-dir-browser)/./node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(pages-dir-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n// frontend/utils/consentManager.js\n\n\nconst CONSENT_COOKIE = 'eye_tracking_consent';\nconst CONSENT_DETAILS_COOKIE = 'consent_details';\nconst USER_PROFILE_COOKIE = 'user_profile';\nconst USER_PREFERENCES_COOKIE = 'user_preferences';\n// Get or create a user ID\nconst getOrCreateUserId = ()=>{\n    try {\n        const storedConsent = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(CONSENT_COOKIE);\n        const storedDetails = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(CONSENT_DETAILS_COOKIE);\n        if (storedConsent && storedDetails) {\n            const details = JSON.parse(storedDetails);\n            return details.userId;\n        }\n        // Generate new user ID if none exists\n        const newUserId = (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)();\n        return newUserId;\n    } catch (error) {\n        console.error('Error getting/creating user ID:', error);\n        return (0,uuid__WEBPACK_IMPORTED_MODULE_1__.v4)();\n    }\n};\n// Get user profile\nconst getUserProfile = ()=>{\n    try {\n        const profileStr = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(USER_PROFILE_COOKIE);\n        if (profileStr) {\n            return JSON.parse(profileStr);\n        }\n        return null;\n    } catch (error) {\n        console.error('Error reading user profile:', error);\n        return null;\n    }\n};\n// Update user profile\nconst updateUserProfile = async (profileData)=>{\n    try {\n        // Save to cookies\n        const currentProfile = getUserProfile() || {};\n        const updatedProfile = {\n            ...currentProfile,\n            ...profileData,\n            updatedAt: new Date().toISOString()\n        };\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(USER_PROFILE_COOKIE, JSON.stringify(updatedProfile), {\n            expires: 365\n        });\n        // Save to backend (MongoDB)\n        try {\n            const response = await fetch('/api/user-preferences', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: getOrCreateUserId(),\n                    preferences: updatedProfile\n                })\n            });\n            if (!response.ok) {\n                console.warn('Failed to save profile to backend');\n            }\n        } catch (saveError) {\n            console.warn('Error saving profile to backend:', saveError);\n        }\n        return updatedProfile;\n    } catch (error) {\n        console.error('Error updating user profile:', error);\n        throw error;\n    }\n};\n// Get user preferences\nconst getUserPreferences = ()=>{\n    try {\n        const preferencesStr = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(USER_PREFERENCES_COOKIE);\n        if (preferencesStr) {\n            return JSON.parse(preferencesStr);\n        }\n        return null;\n    } catch (error) {\n        console.error('Error reading user preferences:', error);\n        return null;\n    }\n};\n// Update user preferences\nconst updateUserPreferences = (preferencesData)=>{\n    try {\n        const currentPreferences = getUserPreferences() || {};\n        const updatedPreferences = {\n            ...currentPreferences,\n            ...preferencesData,\n            updatedAt: new Date().toISOString()\n        };\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(USER_PREFERENCES_COOKIE, JSON.stringify(updatedPreferences), {\n            expires: 365\n        });\n        return updatedPreferences;\n    } catch (error) {\n        console.error('Error updating user preferences:', error);\n        return null;\n    }\n};\n// Get user consent from cookies\nconst getUserConsent = ()=>{\n    try {\n        const storedConsent = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(CONSENT_COOKIE);\n        const storedDetails = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(CONSENT_DETAILS_COOKIE);\n        if (storedConsent && storedDetails) {\n            const details = JSON.parse(storedDetails);\n            return {\n                userId: details.userId,\n                consentStatus: storedConsent === 'true',\n                consentUpdatedAt: details.timestamp,\n                consentDetails: details\n            };\n        }\n        return {\n            userId: null,\n            consentStatus: null,\n            consentUpdatedAt: null,\n            consentDetails: null\n        };\n    } catch (error) {\n        console.error('Error reading consent from cookies:', error);\n        return {\n            userId: null,\n            consentStatus: null,\n            consentUpdatedAt: null,\n            consentDetails: null\n        };\n    }\n};\n// Update user consent in cookies\nconst updateUserConsent = async function(status) {\n    let details = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        // Get or create user ID\n        const userId = details.userId || getOrCreateUserId();\n        // Create consent data object\n        const consentData = {\n            userId,\n            status,\n            timestamp: new Date().toISOString(),\n            ...details\n        };\n        // Save to cookies\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(CONSENT_COOKIE, status.toString(), {\n            expires: 365\n        }); // Expires in 1 year\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(CONSENT_DETAILS_COOKIE, JSON.stringify(consentData), {\n            expires: 365\n        });\n        // Send consent data to admin\n        try {\n            const response = await fetch('/api/admin/consent-data', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(consentData)\n            });\n            if (!response.ok) {\n                console.warn('Failed to send consent data to admin');\n            }\n        } catch (saveError) {\n            console.warn('Error sending consent data:', saveError);\n        }\n        return {\n            userId,\n            consentStatus: status,\n            consentUpdatedAt: consentData.timestamp,\n            consentDetails: consentData\n        };\n    } catch (error) {\n        console.error('Error updating consent:', error);\n        throw error;\n    }\n};\n// Clear user consent and profile\nconst clearUserConsent = ()=>{\n    try {\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(CONSENT_COOKIE);\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(CONSENT_DETAILS_COOKIE);\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(USER_PROFILE_COOKIE);\n        return true;\n    } catch (error) {\n        console.error('Error clearing consent:', error);\n        return false;\n    }\n};\n// Reset consent banner by clearing cookies and refreshing the page\nconst resetConsentBanner = ()=>{\n    try {\n        // Clear all consent-related cookies\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(CONSENT_COOKIE);\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(CONSENT_DETAILS_COOKIE);\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(USER_PROFILE_COOKIE);\n        // Refresh the page to trigger the consent initialization\n        window.location.reload();\n        return true;\n    } catch (error) {\n        console.error('Error resetting consent banner:', error);\n        return false;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/consentManager.js\n"));

/***/ })

});