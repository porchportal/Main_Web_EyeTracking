"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/collected-dataset",{

/***/ "(pages-dir-browser)/./pages/collected-dataset/components-gui/actionButton.js":
/*!****************************************************************!*\
  !*** ./pages/collected-dataset/components-gui/actionButton.js ***!
  \****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActionButton: () => (/* binding */ ActionButton),\n/* harmony export */   ActionButtonGroup: () => (/* binding */ ActionButtonGroup)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-browser)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Action_CalibratePoints__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Action/CalibratePoints */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/Action/CalibratePoints.js\");\n/* harmony import */ var _Action_countSave__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Action/countSave */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/Action/countSave.js\");\n/* harmony import */ var _Helper_savefile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Helper/savefile */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/Helper/savefile.js\");\n// Modified ActionButton.js - Fixing canvas reference issues\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n// Create a basic ActionButton component\nconst ActionButton = (param)=>{\n    let { text, abbreviatedText, onClick, customClass = '', disabled = false, active = false } = param;\n    _s();\n    const [isAbbreviated, setIsAbbreviated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Check window size and set abbreviated mode\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButton.useEffect\": ()=>{\n            // Skip during SSR\n            if (false) {}\n            const handleResize = {\n                \"ActionButton.useEffect.handleResize\": ()=>{\n                    const width = window.innerWidth;\n                    setIsAbbreviated(width < 768);\n                }\n            }[\"ActionButton.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            handleResize(); // Initial call\n            return ({\n                \"ActionButton.useEffect\": ()=>window.removeEventListener('resize', handleResize)\n            })[\"ActionButton.useEffect\"];\n        }\n    }[\"ActionButton.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: onClick,\n        className: \"transition-colors py-2 px-2 md:px-4 rounded-md text-xs md:text-sm font-medium \".concat(customClass, \" \").concat(active ? 'active-button' : ''),\n        style: {\n            backgroundColor: active ? 'rgba(0, 102, 204, 0.7)' : disabled ? 'rgba(200, 200, 200, 0.5)' : 'rgba(124, 255, 218, 0.5)',\n            color: active ? 'white' : 'black',\n            borderRadius: '7px',\n            cursor: disabled ? 'not-allowed' : 'pointer',\n            fontWeight: active ? 'bold' : 'normal',\n            boxShadow: active ? '0 2px 4px rgba(0,0,0,0.2)' : 'none'\n        },\n        disabled: disabled,\n        children: isAbbreviated ? abbreviatedText : text\n    }, void 0, false, {\n        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n        lineNumber: 35,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ActionButton, \"9ND8t9X8+bjAcXyP/Y+5/aAkuVQ=\");\n_c = ActionButton;\n// Create the ActionButtonGroup component with client-side only rendering\nconst ActionButtonGroupInner = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(_s1((param, ref)=>{\n    let { triggerCameraAccess, isCompactMode, onActionClick } = param;\n    _s1();\n    // State for button actions\n    const [randomTimes, setRandomTimes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [delaySeconds, setDelaySeconds] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(3);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [processStatus, setProcessStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [countdownValue, setCountdownValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [currentDot, setCurrentDot] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [calibrationPoints, setCalibrationPoints] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentCalibrationIndex, setCurrentCalibrationIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [remainingCaptures, setRemainingCaptures] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [showCanvas, setShowCanvas] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Track the capture count\n    const [calibrationHandler, setCalibrationHandler] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [captureCount, setCaptureCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [isCapturing, setIsCapturing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Toggle states\n    const [showHeadPose, setShowHeadPose] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBoundingBox, setShowBoundingBox] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showMask, setShowMask] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showParameters, setShowParameters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isCameraActive, setIsCameraActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showPermissionPopup, setShowPermissionPopup] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, {\n        \"ActionButtonGroupInner.useImperativeHandle\": ()=>({\n                handleRandomDot,\n                handleSetRandom,\n                handleSetCalibrate,\n                handleClearAll\n            })\n    }[\"ActionButtonGroupInner.useImperativeHandle\"], []);\n    // Make initializeCanvas available globally\n    // useEffect(() => {\n    //   // Skip during SSR\n    //   if (typeof window === 'undefined') return;\n    //   // Make initializeCanvas available to other components through the window object\n    //   window.initializeCanvas = initializeCanvas;\n    //   return () => {\n    //     // Clean up\n    //     delete window.initializeCanvas;\n    //   };\n    // }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            // Make functions globally accessible as a fallback\n            if (true) {\n                window.actionButtonFunctions = {\n                    handleRandomDot,\n                    handleSetRandom,\n                    handleSetCalibrate,\n                    handleClearAll\n                };\n                console.log('Action button functions exposed to window.actionButtonFunctions');\n            }\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    if (true) {\n                        delete window.actionButtonFunctions;\n                    }\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (false) {}\n            // Function to get control values from TopBar\n            const updateControlValues = {\n                \"ActionButtonGroupInner.useEffect.updateControlValues\": ()=>{\n                    // Get the time input element\n                    const timeInput = document.querySelector('.control-input-field[data-control=\"time\"]');\n                    if (timeInput) {\n                        const timeValue = parseInt(timeInput.value, 10);\n                        if (!isNaN(timeValue) && timeValue > 0) {\n                            setRandomTimes(timeValue);\n                        }\n                    }\n                    // Get the delay input element\n                    const delayInput = document.querySelector('.control-input-field[data-control=\"delay\"]');\n                    if (delayInput) {\n                        const delayValue = parseInt(delayInput.value, 10);\n                        if (!isNaN(delayValue) && delayValue > 0) {\n                            setDelaySeconds(delayValue);\n                        }\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.updateControlValues\"];\n            // Add event listeners to the control inputs\n            const timeInput = document.querySelector('.control-input-field[data-control=\"time\"]');\n            const delayInput = document.querySelector('.control-input-field[data-control=\"delay\"]');\n            if (timeInput) {\n                timeInput.addEventListener('change', updateControlValues);\n            }\n            if (delayInput) {\n                delayInput.addEventListener('change', updateControlValues);\n            }\n            // Initial update\n            updateControlValues();\n            // Cleanup event listeners\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    if (timeInput) {\n                        timeInput.removeEventListener('change', updateControlValues);\n                    }\n                    if (delayInput) {\n                        delayInput.removeEventListener('change', updateControlValues);\n                    }\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    const initializeCanvas = (canvas, parent)=>{\n        if (!canvas || !parent) {\n            console.warn('[initializeCanvas] Canvas or parent is null', {\n                canvas,\n                parent\n            });\n            return false;\n        }\n        try {\n            // Set canvas dimensions to match parent\n            canvas.width = parent.clientWidth || 800;\n            canvas.height = parent.clientHeight || 600;\n            // Clear canvas and set white background\n            const ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            console.log(\"Canvas initialized with dimensions: \".concat(canvas.width, \"x\").concat(canvas.height));\n            return true;\n        } catch (error) {\n            console.error('[initializeCanvas] Error initializing canvas:', error);\n            return false;\n        }\n    };\n    // Helper function to get the main canvas - improved to be more reliable\n    const getMainCanvas = ()=>{\n        // Try multiple methods to find the canvas\n        // Method 1: Check if we have a direct reference\n        if (canvasRef.current) {\n            console.log(\"Using direct canvasRef.current reference\");\n            return canvasRef.current;\n        }\n        // Method 2: Try to get global reference\n        if ( true && window.whiteScreenCanvas) {\n            console.log(\"Using global whiteScreenCanvas reference\");\n            canvasRef.current = window.whiteScreenCanvas; // Update our ref\n            return window.whiteScreenCanvas;\n        }\n        // Method 3: Try to find via DOM\n        if (typeof document !== 'undefined') {\n            const canvasElement = document.querySelector('.tracking-canvas');\n            if (canvasElement) {\n                console.log(\"Found canvas via DOM selector\");\n                canvasRef.current = canvasElement; // Update our ref\n                if (true) {\n                    window.whiteScreenCanvas = canvasElement; // Update global ref too\n                }\n                return canvasElement;\n            }\n        }\n        console.warn(\"No canvas found via any method\");\n        return null;\n    };\n    const handlePermissionAccepted = ()=>{\n        setShowPermissionPopup(false);\n        if (triggerCameraAccess) {\n            triggerCameraAccess(true); // Force enable camera access\n        }\n    };\n    // Handler to cancel permission popup\n    const handlePermissionDenied = ()=>{\n        setShowPermissionPopup(false);\n    };\n    // Draw a dot on the canvas\n    const drawDot = function(x, y) {\n        let color = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 'red', radius = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 5;\n        const canvas = getMainCanvas();\n        if (!canvas) {\n            console.error(\"No canvas found for drawing dot\");\n            setProcessStatus(\"Error: Canvas not available\");\n            return null;\n        }\n        const parent = canvas.parentElement;\n        if (parent) {\n            initializeCanvas(canvas, parent);\n        }\n        const ctx = canvas.getContext('2d');\n        // Clear previous dot if any\n        clearCanvas();\n        // Use drawRedDot from countSave.js\n        (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, x, y, radius, false);\n        // Save current dot position\n        setCurrentDot({\n            x,\n            y\n        });\n        return {\n            x,\n            y\n        };\n    };\n    // Clear the canvas\n    const clearCanvas = ()=>{\n        const canvas = getMainCanvas();\n        if (!canvas) {\n            console.warn(\"No canvas found for clearing\");\n            return;\n        }\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        setCurrentDot(null);\n    };\n    // Generate a random position using getRandomPosition from countSave.js\n    const getRandomDotPosition = ()=>{\n        const canvas = getMainCanvas();\n        if (!canvas) {\n            console.warn(\"No canvas found for generating random position\");\n            return {\n                x: 100,\n                y: 100\n            }; // Default fallback\n        }\n        // Use getRandomPosition from countSave.js\n        return (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.getRandomPosition)(canvas, 20); // 20px padding from edges\n    };\n    // Countdown timer function\n    const startCountdown = function(count, onComplete) {\n        let directPosition = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        setIsCapturing(true);\n        setCountdownValue(count);\n        // Use the canvas and current dot to run countdown\n        const canvas = getMainCanvas();\n        // Use either currentDot from state or directPosition parameter\n        const dotPosition = directPosition || currentDot;\n        if (!canvas || !dotPosition) {\n            console.error(\"Canvas or dot position not available for countdown\", {\n                canvas: !!canvas,\n                dotPosition,\n                currentDot\n            });\n            setIsCapturing(false);\n            if (typeof onActionClick === 'function') {\n                onActionClick('toggleTopBar', true);\n            }\n            setProcessStatus(\"Error: Could not start countdown\");\n            return;\n        }\n        // Use runCountdown from countSave.js\n        (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.runCountdown)(dotPosition, canvas, (status)=>{\n            // Update UI based on countdown status\n            if (status.countdownValue) {\n                setCountdownValue(status.countdownValue);\n            }\n            if (status.processStatus) {\n                setProcessStatus(status.processStatus);\n            }\n            setIsCapturing(status.isCapturing !== false);\n        }, onComplete);\n    };\n    // Add this function to actionButton.js\n    /**\n   * Consolidated function that handles the entire dot process: drawing, countdown, capture, and preview\n   * @param {Object} options - Configuration options\n   * @param {Object} options.position - {x, y} coordinates where to draw the dot\n   * @param {Function} options.onStatusUpdate - Callback for status updates\n   * @param {Function} options.toggleTopBar - Function to toggle top bar visibility\n   * @param {Function} options.triggerCameraAccess - Function to ensure camera is available\n   * @param {Function} options.setIsCapturing - Function to update capturing state\n   * @param {Number} options.captureCount - Current capture counter\n   * @param {Function} options.setCaptureCount - Function to update the capture counter\n   * @param {Boolean} options.useRandomPosition - Whether to generate a random position\n   * @returns {Promise<Object>} - Result object with capture data\n   */ const handleDotProcess = async (options)=>{\n        const { position, onStatusUpdate, toggleTopBar, triggerCameraAccess, setIsCapturing, captureCount, setCaptureCount, useRandomPosition = false, postCountdownDelay = 500 // Default value if not provided\n         } = options;\n        try {\n            // Hide the TopBar before showing the dot\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(false);\n            } else if ( true && window.toggleTopBar) {\n                window.toggleTopBar(false);\n            }\n            // Set capturing state\n            setIsCapturing(true);\n            // Update status\n            onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                processStatus: useRandomPosition ? 'Generating random dot...' : 'Starting dot process...',\n                isCapturing: true\n            });\n            // Wait for UI updates to take effect\n            await new Promise((resolve)=>setTimeout(resolve, 200));\n            // Get canvas reference\n            const canvas = getMainCanvas();\n            if (!canvas) {\n                throw new Error(\"Canvas not available for dot process\");\n            }\n            // Ensure canvas dimensions are proper\n            if (canvas.width <= 0 || canvas.height <= 0) {\n                const parent = canvas.parentElement;\n                if (parent) {\n                    // canvas.width = parent.clientWidth || 800;\n                    // canvas.height = parent.clientHeight || 600;\n                    canvas.width = parent.clientWidth;\n                    canvas.height = parent.clientHeight;\n                }\n            // else {\n            //   canvas.width = 800;\n            //   canvas.height = 600;\n            // }\n            }\n            // Clear canvas and prepare for drawing\n            const ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Get position for the dot - either use provided position or generate random one\n            const dotPosition = useRandomPosition ? (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.getRandomPosition)(canvas, 20) : position;\n            if (!dotPosition || typeof dotPosition.x !== 'number' || typeof dotPosition.y !== 'number') {\n                throw new Error(\"Invalid dot position\");\n            }\n            // Draw the dot\n            const dotRadius = 12;\n            (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, true);\n            // Create a redraw interval to ensure dot stays visible\n            let keepDotVisibleInterval = setInterval(()=>{\n                (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            }, 100);\n            // Set a flag for tracking if we've shown the previews\n            let previewsShown = false;\n            // Run countdown with dot position\n            await new Promise((resolve, reject)=>{\n                try {\n                    (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.runCountdown)(dotPosition, canvas, (status)=>{\n                        // Update UI based on status\n                        if (status.processStatus) {\n                            onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate(status);\n                        }\n                    }, resolve // This will be called when countdown completes\n                    );\n                } catch (error) {\n                    clearInterval(keepDotVisibleInterval);\n                    reject(error);\n                }\n            });\n            // After countdown completes, update the status\n            onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                processStatus: 'Countdown complete, preparing capture...',\n                isCapturing: true\n            });\n            // Ensure the dot is still visible after countdown\n            (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            // Add additional delay after countdown to keep dot visible longer\n            await new Promise((resolve)=>setTimeout(resolve, postCountdownDelay));\n            // Access webcam before capture\n            if (triggerCameraAccess) {\n                triggerCameraAccess(true);\n            }\n            // Ensure the dot is still visible after additional delay\n            (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            // Wait briefly for camera to initialize, but continue showing the dot\n            await new Promise((resolve)=>setTimeout(resolve, 500));\n            // Use a function wrapper to handle original preview reference\n            const originalShowCapturePreview = window.showCapturePreview || _Action_countSave__WEBPACK_IMPORTED_MODULE_4__.showCapturePreview;\n            // Create a modified preview function that knows when previews are shown\n            const previewTracker = (screenImage, webcamImage, point)=>{\n                // Mark previews as shown\n                previewsShown = true;\n                // Stop redrawing the dot once previews are shown\n                clearInterval(keepDotVisibleInterval);\n                // Call the original preview function\n                originalShowCapturePreview(screenImage, webcamImage, point);\n                // Update status\n                onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                    processStatus: 'Images captured and saved',\n                    isCapturing: false\n                });\n            };\n            // Override the preview function temporarily\n            if (true) {\n                window.showCapturePreview = previewTracker;\n            }\n            // Capture images at the dot position\n            const captureResult = await (0,_Helper_savefile__WEBPACK_IMPORTED_MODULE_5__.captureImagesAtPoint)({\n                point: dotPosition,\n                captureCount: captureCount,\n                canvasRef: {\n                    current: canvas\n                },\n                setCaptureCount: setCaptureCount,\n                showCapturePreview: previewTracker\n            });\n            // Increment capture counter\n            setCaptureCount((prev)=>prev + 1);\n            // Set a safety timeout to clear the interval if previews weren't shown\n            setTimeout(()=>{\n                if (!previewsShown) {\n                    clearInterval(keepDotVisibleInterval);\n                    // Restore original preview function\n                    if (true) {\n                        window.showCapturePreview = originalShowCapturePreview;\n                    }\n                }\n            }, 3000);\n            // Schedule TopBar to return\n            setTimeout(()=>{\n                if (typeof toggleTopBar === 'function') {\n                    toggleTopBar(true);\n                } else if ( true && window.toggleTopBar) {\n                    window.toggleTopBar(true);\n                }\n                setIsCapturing(false);\n            }, 2500);\n            return {\n                success: true,\n                position: dotPosition,\n                captureResult\n            };\n        } catch (error) {\n            console.error(\"Error in handleDotProcess:\", error);\n            onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                processStatus: \"Error: \".concat(error.message),\n                isCapturing: false\n            });\n            // Clean up\n            setIsCapturing(false);\n            // Restore any overridden functions\n            if ( true && window.originalShowCapturePreview) {\n                window.showCapturePreview = window.originalShowCapturePreview;\n            }\n            // Make sure TopBar returns if there's an error\n            setTimeout(()=>{\n                if (typeof toggleTopBar === 'function') {\n                    toggleTopBar(true);\n                } else if ( true && window.toggleTopBar) {\n                    window.toggleTopBar(true);\n                }\n            }, 1000);\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    };\n    // Function to capture images at the current dot position\n    const captureImagesFunc = (x, y)=>{\n        const canvas = getMainCanvas();\n        if (!canvas) {\n            console.error(\"No canvas found for image capture\");\n            setProcessStatus(\"Error: Canvas not available\");\n            setIsCapturing(false);\n            return;\n        }\n        // Create a working canvasRef object to pass to captureImagesAtPoint\n        const tempCanvasRef = {\n            current: canvas\n        };\n        // Use captureImagesAtPoint from countSave.js\n        (0,_Helper_savefile__WEBPACK_IMPORTED_MODULE_5__.captureImagesAtPoint)({\n            point: {\n                x,\n                y\n            },\n            captureCount: captureCount,\n            canvasRef: tempCanvasRef,\n            setCaptureCount: setCaptureCount,\n            showCapturePreview: (screenImage, webcamImage, point)=>{\n                // Use imported showCapturePreview from countSave.js\n                if (!screenImage) {\n                    console.warn(\"No screen image found. Using canvas as fallback.\");\n                    // Create a fallback image from canvas\n                    if (canvas) {\n                        const fallbackImage = canvas.toDataURL('image/png');\n                        (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.showCapturePreview)(fallbackImage, webcamImage, point);\n                    } else {\n                        throw new Error(\"Canvas not available for fallback image\");\n                    }\n                } else {\n                    (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.showCapturePreview)(screenImage, webcamImage, point);\n                }\n                // Update status\n                setProcessStatus('Images captured and saved');\n                // Show TopBar again after a brief delay\n                setTimeout(()=>{\n                    if (typeof onActionClick === 'function') {\n                        // Signal to parent to show the TopBar again\n                        onActionClick('toggleTopBar', true);\n                    }\n                }, 1000);\n                // Reset capturing state\n                setIsCapturing(false);\n            }\n        }).then(()=>{\n            // Increment the capture counter\n            setCaptureCount((prevCount)=>prevCount + 1);\n        }).catch((err)=>{\n            console.error('Error during image capture:', err);\n            setIsCapturing(false);\n            setProcessStatus(\"Error: \".concat(err.message));\n        });\n    };\n    // Handle Set Random button\n    // Refactored handleSetRandom function using handleDotProcess\n    const handleSetRandom = async ()=>{\n        if (isCapturing) return;\n        // Read values from state (which are synced with the TopBar inputs)\n        const times = randomTimes;\n        const delay = delaySeconds;\n        // Validate inputs\n        if (times <= 0) {\n            setProcessStatus('Error: Number of times must be greater than 0');\n            return;\n        }\n        if (delay <= 0) {\n            setProcessStatus('Error: Delay must be greater than 0 seconds');\n            return;\n        }\n        // Show canvas if not already visible\n        setShowCanvas(true);\n        // Update status\n        setRemainingCaptures(times);\n        setProcessStatus(\"Starting \".concat(times, \" random captures with \").concat(delay, \"s delay...\"));\n        // Process all random captures sequentially\n        let remaining = times;\n        let currentIndex = 1;\n        while(remaining > 0){\n            setProcessStatus(\"Capture \".concat(currentIndex, \" of \").concat(times));\n            setRemainingCaptures(remaining);\n            // Use the consolidated function for each random dot\n            const result = await handleDotProcess({\n                useRandomPosition: true,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) {\n                        setProcessStatus(\"Capture \".concat(currentIndex, \"/\").concat(times, \": \").concat(status.processStatus));\n                    }\n                    if (status.isCapturing !== undefined) {\n                        setIsCapturing(status.isCapturing);\n                    }\n                },\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                triggerCameraAccess,\n                setIsCapturing,\n                captureCount,\n                setCaptureCount\n            });\n            // Check for success\n            if (!result.success) {\n                setProcessStatus(\"Error during capture \".concat(currentIndex, \": \").concat(result.error));\n                break;\n            }\n            remaining--;\n            currentIndex++;\n            // Wait for the specified delay before next capture (if any remain)\n            if (remaining > 0) {\n                setProcessStatus(\"Waiting \".concat(delay, \"s before next capture...\"));\n                await new Promise((resolve)=>setTimeout(resolve, delay * 1000));\n            }\n        }\n        // Signal completion\n        setProcessStatus(remaining === 0 ? 'Random capture sequence completed' : 'Random capture sequence interrupted');\n        setRemainingCaptures(0);\n        setIsCapturing(false);\n    };\n    // Refactored handleSetCalibrate function using handleDotProcess\n    const handleSetCalibrate = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Hide TopBar\n            if (typeof onActionClick === 'function') {\n                onActionClick('toggleTopBar', false);\n            } else if ( true && window.toggleTopBar) {\n                window.toggleTopBar(false);\n            }\n            setIsCapturing(true);\n            setProcessStatus(\"Starting calibration sequence...\");\n            // Show canvas if not already visible\n            setShowCanvas(true);\n            // Wait for canvas to be ready\n            await new Promise((resolve)=>setTimeout(resolve, 100));\n            // Get canvas reference\n            const canvas = getMainCanvas();\n            if (!canvas) {\n                throw new Error(\"Canvas not available for calibration\");\n            }\n            // Initialize canvas dimensions\n            const parent = canvas.parentElement;\n            if (parent) {\n                canvas.width = parent.clientWidth || 800;\n                canvas.height = parent.clientHeight || 600;\n                const ctx = canvas.getContext('2d');\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                console.log(\"Canvas initialized: \".concat(canvas.width, \"x\").concat(canvas.height));\n            }\n            // Import required functions from CalibratePoints.js\n            const { generateCalibrationPoints } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./Action/CalibratePoints */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/Action/CalibratePoints.js\"));\n            const points = generateCalibrationPoints(canvas.width, canvas.height);\n            if (!points || points.length === 0) {\n                throw new Error(\"Failed to generate calibration points\");\n            }\n            // Create a status indicator\n            const statusIndicator = document.createElement('div');\n            statusIndicator.className = 'calibrate-status-indicator';\n            statusIndicator.style.cssText = \"\\n        position: fixed;\\n        top: 10px;\\n        right: 10px;\\n        background-color: rgba(0, 102, 204, 0.9);\\n        color: white;\\n        font-size: 14px;\\n        font-weight: bold;\\n        padding: 8px 12px;\\n        border-radius: 6px;\\n        z-index: 9999;\\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\\n      \";\n            statusIndicator.textContent = 'Calibration: Initializing...';\n            document.body.appendChild(statusIndicator);\n            // Access webcam before starting calibration\n            // triggerCameraAccess(true);\n            await new Promise((resolve)=>setTimeout(resolve, 500));\n            // Process each calibration point\n            let successCount = 0;\n            for(let i = 0; i < points.length; i++){\n                const point = points[i];\n                statusIndicator.textContent = \"Calibration: Point \".concat(i + 1, \"/\").concat(points.length);\n                setProcessStatus(\"Calibration point \".concat(i + 1, \"/\").concat(points.length));\n                // Use the consolidated function for each calibration point\n                const result = await handleDotProcess({\n                    position: point,\n                    onStatusUpdate: (status)=>{\n                        if (status.processStatus) {\n                            setProcessStatus(\"Point \".concat(i + 1, \"/\").concat(points.length, \": \").concat(status.processStatus));\n                        }\n                    // Don't update isCapturing here as we want to keep it true until entire calibration is done\n                    },\n                    toggleTopBar: ()=>{},\n                    // triggerCameraAccess,\n                    setIsCapturing: ()=>{},\n                    captureCount,\n                    setCaptureCount\n                });\n                if (result.success) {\n                    successCount++;\n                }\n                // Wait between points\n                await new Promise((resolve)=>setTimeout(resolve, 1200));\n            }\n            // Calibration complete\n            statusIndicator.textContent = \"Calibration complete: \".concat(successCount, \"/\").concat(points.length, \" points\");\n            setProcessStatus(\"Calibration completed: \".concat(successCount, \"/\").concat(points.length, \" points captured\"));\n            // Remove the status indicator after a delay\n            setTimeout(()=>{\n                if (statusIndicator.parentNode) {\n                    statusIndicator.parentNode.removeChild(statusIndicator);\n                }\n            }, 3000);\n        } catch (error) {\n            console.error(\"Calibration error:\", error);\n            setProcessStatus(\"Calibration error: \".concat(error.message));\n        } finally{\n            setIsCapturing(false);\n            // Show TopBar again\n            if (typeof onActionClick === 'function') {\n                onActionClick('toggleTopBar', true);\n            } else if ( true && window.toggleTopBar) {\n                window.toggleTopBar(true);\n            }\n        }\n    };\n    // Schedule next random capture in sequence\n    const scheduleNextRandomCapture = (remaining, delay)=>{\n        if (remaining <= 0) {\n            setProcessStatus('Random capture sequence completed');\n            setRemainingCaptures(0);\n            return;\n        }\n        setProcessStatus(\"Capture \".concat(randomTimes - remaining + 1, \" of \").concat(randomTimes));\n        setRemainingCaptures(remaining);\n        // Generate random position and draw dot\n        const position = (0,_Action_countSave__WEBPACK_IMPORTED_MODULE_4__.getRandomPosition)();\n        const drawnPosition = drawDot(position.x, position.y);\n        if (!drawnPosition) {\n            console.error(\"Failed to draw dot\");\n            setProcessStatus(\"Error: Failed to draw dot\");\n            setIsCapturing(false);\n            return;\n        }\n        // Start countdown and then capture\n        startCountdown(3, ()=>{\n            captureImagesFunc(position.x, position.y);\n            // Schedule next capture after specified delay\n            setTimeout(()=>{\n                scheduleNextRandomCapture(remaining - 1, delay);\n            }, delay * 1000);\n        });\n    };\n    // Random Dot Button - Draw a random dot and capture\n    const handleRandomDot = async ()=>{\n        if (isCapturing) return;\n        // Use the consolidated function with random position\n        await handleDotProcess({\n            useRandomPosition: true,\n            onStatusUpdate: (status)=>{\n                if (status.processStatus) setProcessStatus(status.processStatus);\n                if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n            },\n            toggleTopBar: (show)=>{\n                if (typeof onActionClick === 'function') {\n                    onActionClick('toggleTopBar', show);\n                }\n            },\n            triggerCameraAccess,\n            setIsCapturing,\n            captureCount,\n            setCaptureCount: setCaptureCount,\n            postCountdownDelay: 1000\n        });\n    };\n    // Load calibration setup\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (false) {}\n            const setupCalibration = {\n                \"ActionButtonGroupInner.useEffect.setupCalibration\": async ()=>{\n                    try {\n                        const { default: CalibrateHandler } = await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_pages_collected-dataset_components-gui_Action_CalibrateHandler_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./Action/CalibrateHandler */ \"(pages-dir-browser)/./pages/collected-dataset/components-gui/Action/CalibrateHandler.js\"));\n                        const canvas = getMainCanvas();\n                        if (!canvas) {\n                            console.warn(\"Canvas not available during setupCalibration\");\n                            return;\n                        }\n                        console.log('Canvas size:', canvas.width, canvas.height);\n                        const points = (0,_Action_CalibratePoints__WEBPACK_IMPORTED_MODULE_3__.generateCalibrationPoints)(canvas.width, canvas.height);\n                        console.log('Generated calibration points:', points);\n                        setCalibrationPoints(points);\n                        const calibrateHandler = new CalibrateHandler({\n                            canvasRef: {\n                                current: canvas\n                            },\n                            calibrationPoints: points,\n                            toggleTopBar: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (show)=>onActionClick === null || onActionClick === void 0 ? void 0 : onActionClick('toggleTopBar', show)\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            setOutputText: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (status)=>{\n                                    setProcessStatus(status);\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            captureCounter: captureCount,\n                            setCaptureCounter: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (newCounter)=>{\n                                    if (typeof newCounter === 'function') {\n                                        setCaptureCount({\n                                            \"ActionButtonGroupInner.useEffect.setupCalibration\": (prev)=>newCounter(prev)\n                                        }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]);\n                                    } else {\n                                        setCaptureCount(newCounter);\n                                    }\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            captureFolder: 'eye_tracking_captures',\n                            onComplete: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": ()=>{\n                                    setIsCapturing(false);\n                                    setProcessStatus('Calibration completed');\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]\n                        });\n                        setCalibrationHandler({\n                            handleAction: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": async ()=>{\n                                    setIsCapturing(true);\n                                    setProcessStatus('Starting calibration...');\n                                    await calibrateHandler.startCalibration();\n                                    setIsCapturing(false);\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]\n                        });\n                    } catch (err) {\n                        console.error('Error initializing calibration:', err);\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"];\n            setupCalibration();\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        captureCount,\n        onActionClick\n    ]);\n    // Wait for canvas to be ready\n    const waitForCanvasReady = async function(checkVisible) {\n        let maxTries = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 15, interval = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 100;\n        for(let i = 0; i < maxTries; i++){\n            const canvas = getMainCanvas();\n            if (canvas && canvas.width > 0 && canvas.height > 0 && checkVisible()) {\n                return canvas;\n            }\n            await new Promise((res)=>setTimeout(res, interval));\n        }\n        throw new Error(\"Canvas is not ready after multiple attempts\");\n    };\n    // Calibration handler\n    // Fixed handleSetCalibrate function for actionButton.js\n    // Clear All Button - Reset everything\n    const handleClearAll = ()=>{\n        clearCanvas();\n        setProcessStatus('');\n        setRemainingCaptures(0);\n        setIsCapturing(false);\n        setCountdownValue(null);\n        setShowCanvas(false);\n    };\n    // Toggle Head Pose visualization\n    const handleToggleHeadPose = ()=>{\n        const newHeadPoseState = !showHeadPose;\n        setShowHeadPose(newHeadPoseState);\n        setProcessStatus(\"Head pose visualization \".concat(newHeadPoseState ? 'enabled' : 'disabled'));\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('headPose');\n        }\n        // Update videoProcessor options directly if available\n        if ( true && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showHeadPose: newHeadPoseState\n            });\n            console.log(\"Updated backend head pose: \".concat(newHeadPoseState));\n        }\n    };\n    // Toggle Bounding Box visualization\n    const handleToggleBoundingBox = ()=>{\n        const newBoundingBoxState = !showBoundingBox;\n        setShowBoundingBox(newBoundingBoxState);\n        setProcessStatus(\"Bounding box \".concat(newBoundingBoxState ? 'shown' : 'hidden'));\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('boundingBox');\n        }\n        // Update videoProcessor options directly if available\n        if ( true && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showBoundingBox: newBoundingBoxState\n            });\n            console.log(\"Updated backend bounding box: \".concat(newBoundingBoxState));\n        }\n    };\n    // Toggle Mask visualization\n    const handleToggleMask = ()=>{\n        const newMaskState = !showMask;\n        setShowMask(newMaskState);\n        setProcessStatus(\"Mask \".concat(newMaskState ? 'shown' : 'hidden'));\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('mask');\n        }\n        // Update videoProcessor options directly if available\n        if ( true && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showMask: newMaskState\n            });\n            console.log(\"Updated backend mask: \".concat(newMaskState));\n        }\n    };\n    // Toggle Parameters display\n    const handleToggleParameters = ()=>{\n        const newParametersState = !showParameters;\n        setShowParameters(newParametersState);\n        setProcessStatus(\"Parameters \".concat(newParametersState ? 'shown' : 'hidden'));\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('parameters');\n        }\n        // Update videoProcessor options directly if available\n        if ( true && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showParameters: newParametersState\n            });\n            console.log(\"Updated backend parameters: \".concat(newParametersState));\n        }\n    };\n    // Toggle camera preview\n    const handleToggleCamera = ()=>{\n        const newCameraState = !isCameraActive;\n        setIsCameraActive(newCameraState);\n        // Call the parent handler with 'preview' action\n        if (onActionClick) {\n            onActionClick('preview');\n        } else {\n            // Fallback to direct trigger if no action handler\n            setShowPermissionPopup(true);\n        }\n        // If turning on camera, ensure we apply current visualization settings\n        if (newCameraState && \"object\" !== 'undefined' && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showHeadPose,\n                showBoundingBox,\n                showMask,\n                showParameters\n            });\n            console.log(\"Applied visualization settings to camera\");\n        }\n    };\n    // Button configurations with both full and abbreviated text\n    const buttons = [\n        {\n            text: \"Set Random\",\n            abbreviatedText: \"SRandom\",\n            onClick: handleSetRandom,\n            disabled: isCapturing\n        },\n        {\n            text: \"Random Dot\",\n            abbreviatedText: \"Random\",\n            onClick: handleRandomDot,\n            disabled: isCapturing\n        },\n        {\n            text: \"Set Calibrate\",\n            abbreviatedText: \"Calibrate\",\n            onClick: handleSetCalibrate,\n            disabled: isCapturing\n        },\n        {\n            text: \"Clear All\",\n            abbreviatedText: \"Clear\",\n            onClick: handleClearAll\n        },\n        {\n            divider: true\n        },\n        {\n            text: \"Draw Head pose\",\n            abbreviatedText: \"Head pose\",\n            onClick: handleToggleHeadPose,\n            active: showHeadPose\n        },\n        {\n            text: \"Show Bounding Box\",\n            abbreviatedText: \"☐ Box\",\n            onClick: handleToggleBoundingBox,\n            active: showBoundingBox\n        },\n        {\n            text: isCameraActive ? \"Stop Camera\" : \"Show Preview\",\n            abbreviatedText: isCameraActive ? \"Stop\" : \"Preview\",\n            onClick: ()=>{\n                // If camera permission is needed but not granted, show popup\n                if (!isCameraActive && !triggerCameraAccess(true)) {\n                    setShowPermissionPopup(true);\n                } else {\n                    handleToggleCamera();\n                }\n            },\n            active: isCameraActive\n        },\n        {\n            text: \"😷 Show Mask\",\n            abbreviatedText: \"😷 Mask\",\n            onClick: handleToggleMask,\n            active: showMask\n        },\n        {\n            text: \"Parameters\",\n            abbreviatedText: \"Values\",\n            onClick: handleToggleParameters,\n            active: showParameters\n        }\n    ];\n    // Mobile layout - 2x5 grid\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            isCompactMode ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 gap-2 mb-4\",\n                children: buttons.filter((b)=>!b.divider).map((button, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                        text: button.text,\n                        abbreviatedText: button.abbreviatedText,\n                        onClick: button.onClick,\n                        disabled: button.disabled,\n                        active: button.active\n                    }, index, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1164,\n                        columnNumber: 13\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                lineNumber: 1162,\n                columnNumber: 9\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-2 mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-2 gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: \"Set Random\",\n                                abbreviatedText: \"SRandom\",\n                                onClick: handleSetRandom,\n                                disabled: isCapturing\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1177,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: \"Random Dot\",\n                                abbreviatedText: \"Random\",\n                                onClick: handleRandomDot,\n                                disabled: isCapturing\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1183,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1176,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-2 gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: \"Set Calibrate\",\n                                abbreviatedText: \"Calibrate\",\n                                onClick: handleSetCalibrate,\n                                disabled: isCapturing\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1191,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: \"Clear All\",\n                                abbreviatedText: \"Clear\",\n                                onClick: handleClearAll\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1197,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1190,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"hr\", {\n                        className: \"my-3 border-gray-200\"\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1204,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-2 gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: \"Draw Head pose\",\n                                abbreviatedText: \"Head pose\",\n                                onClick: handleToggleHeadPose,\n                                active: showHeadPose\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1207,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: \"Show Bounding Box\",\n                                abbreviatedText: \"☐ Box\",\n                                onClick: handleToggleBoundingBox,\n                                active: showBoundingBox\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1213,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1206,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-2 gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: isCameraActive ? \"Stop Camera\" : \"Show Preview\",\n                                abbreviatedText: isCameraActive ? \"Stop\" : \"Preview\",\n                                onClick: handleToggleCamera,\n                                active: isCameraActive\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1221,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: \"\\uD83D\\uDE37 Show Mask\",\n                                abbreviatedText: \"\\uD83D\\uDE37 Mask\",\n                                onClick: handleToggleMask,\n                                active: showMask\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1227,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1220,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"grid grid-cols-2 gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButton, {\n                                text: \"Parameters\",\n                                abbreviatedText: \"Values\",\n                                onClick: handleToggleParameters,\n                                active: showParameters\n                            }, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1235,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {}, void 0, false, {\n                                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                lineNumber: 1241,\n                                columnNumber: 13\n                            }, undefined),\n                            \" \"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1234,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                lineNumber: 1175,\n                columnNumber: 9\n            }, undefined),\n            (processStatus || remainingCaptures > 0 || countdownValue) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"status-display mt-4 p-2 bg-blue-50 rounded-md\",\n                children: [\n                    processStatus && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-sm font-medium text-blue-800\",\n                        children: processStatus\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1250,\n                        columnNumber: 13\n                    }, undefined),\n                    remainingCaptures > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-sm font-medium text-yellow-600\",\n                        children: [\n                            \"Remaining: \",\n                            remainingCaptures\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1253,\n                        columnNumber: 13\n                    }, undefined),\n                    countdownValue && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-2xl font-bold text-red-600\",\n                        children: countdownValue\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1256,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                lineNumber: 1248,\n                columnNumber: 9\n            }, undefined),\n            showCanvas && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"canvas-container mt-4\",\n                style: {\n                    position: 'relative',\n                    width: '100%',\n                    height: '40vh',\n                    minHeight: '300px',\n                    border: '1px solid #e0e0e0',\n                    backgroundColor: 'white',\n                    borderRadius: '4px',\n                    overflow: 'hidden'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                        ref: canvasRef,\n                        className: \"tracking-canvas\",\n                        style: {\n                            width: '100%',\n                            height: '100%'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1276,\n                        columnNumber: 11\n                    }, undefined),\n                    countdownValue && currentDot && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"dot-countdown\",\n                        style: {\n                            position: 'absolute',\n                            left: \"\".concat(currentDot.x - 15, \"px\"),\n                            top: \"\".concat(currentDot.y - 40, \"px\"),\n                            color: 'red',\n                            fontSize: '28px',\n                            fontWeight: 'bold'\n                        },\n                        children: countdownValue\n                    }, void 0, false, {\n                        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                        lineNumber: 1284,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                lineNumber: 1263,\n                columnNumber: 9\n            }, undefined),\n            showPermissionPopup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"camera-permission-popup\",\n                style: {\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    zIndex: 2000\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"camera-permission-dialog\",\n                    style: {\n                        width: '400px',\n                        backgroundColor: 'white',\n                        borderRadius: '8px',\n                        padding: '20px',\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"camera-permission-title\",\n                            style: {\n                                margin: '0 0 15px',\n                                fontSize: '18px',\n                                fontWeight: 'bold'\n                            },\n                            children: \"Camera Access Required\"\n                        }, void 0, false, {\n                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                            lineNumber: 1328,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"camera-permission-message\",\n                            style: {\n                                margin: '0 0 20px',\n                                fontSize: '14px',\n                                lineHeight: '1.4'\n                            },\n                            children: 'This application needs access to your camera to function properly. When prompted by your browser, please click \"Allow\" to grant camera access.'\n                        }, void 0, false, {\n                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                            lineNumber: 1338,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"camera-permission-buttons\",\n                            style: {\n                                display: 'flex',\n                                justifyContent: 'flex-end',\n                                gap: '10px'\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handlePermissionDenied,\n                                    className: \"camera-btn\",\n                                    style: {\n                                        padding: '8px 16px',\n                                        backgroundColor: '#f0f0f0',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        cursor: 'pointer'\n                                    },\n                                    children: \"Cancel\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                    lineNumber: 1356,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handlePermissionAccepted,\n                                    className: \"camera-btn\",\n                                    style: {\n                                        padding: '8px 16px',\n                                        backgroundColor: '#0066cc',\n                                        color: 'white',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        cursor: 'pointer'\n                                    },\n                                    children: \"Continue\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                                    lineNumber: 1369,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                            lineNumber: 1348,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                    lineNumber: 1318,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n                lineNumber: 1303,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n        lineNumber: 1160,\n        columnNumber: 5\n    }, undefined);\n}, \"sKFr1YuUm/JI/hkiSuzCP/3fw1w=\"));\n_c1 = ActionButtonGroupInner;\nconst ActionButtonGroup = next_dynamic__WEBPACK_IMPORTED_MODULE_2___default()(_c2 = ()=>Promise.resolve(/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButtonGroupInner, {\n            ...props,\n            ref: ref\n        }, void 0, false, {\n            fileName: \"/Users/porchportal2/Desktop/\\uD83D\\uDD25everything/Main_Web_EyeTracking/main-web/frontend/pages/collected-dataset/components-gui/actionButton.js\",\n            lineNumber: 1391,\n            columnNumber: 30\n        }, undefined))), {\n    ssr: false\n});\n_c3 = ActionButtonGroup;\n// Create a client-only version of ActionButtonGroup\n// const ActionButtonGroup = dynamic(() => Promise.resolve(ActionButtonGroupInner), { ssr: false });\n\nvar _c, _c1, _c2, _c3;\n$RefreshReg$(_c, \"ActionButton\");\n$RefreshReg$(_c1, \"ActionButtonGroupInner\");\n$RefreshReg$(_c2, \"ActionButtonGroup$dynamic\");\n$RefreshReg$(_c3, \"ActionButtonGroup\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset/components-gui/actionButton.js\n"));

/***/ })

});