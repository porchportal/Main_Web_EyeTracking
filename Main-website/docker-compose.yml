services:
  nginx:
    image: nginx:alpine
    container_name: backend_nginx
    ports:
      - "80:80"
      - "443:443"
      - "8443:8443"
    volumes:
      - ./backend/config/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/config/ssl:/etc/nginx/ssl:ro
    depends_on:
      auth_service:
        condition: service_healthy
      image_service:
        condition: service_started
      frontend:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  image_service:
    build: 
      context: ./backend
      dockerfile: image_service/Dockerfile
    container_name: backend_image_service
    ports:
      - "8010:8010"
    environment:
      - PORT=8010
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  # video_service:
  #   build: 
  #     context: ./backend
  #     dockerfile: video_service/Dockerfile
  #   container_name: backend_video_service
  #   ports:
  #     - "8011:8011"
  #   environment:
  #     - PORT=8011
  #   networks:
  #     - app-network


  auth_service:
    build: 
      context: ./backend
      dockerfile: auth_service/Dockerfile
    container_name: backend_auth_service
    ports:
      - "8108:8108"
    volumes:
      - ./backend/auth_service/resource_security/public/captures:/app/resource_security/public/captures
      - ./backend/auth_service/resource_security/canvas:/app/resource_security/canvas
    env_file:
      - ./backend/.env.backend
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: frontend_main
    ports:
      - "3010:3010"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./frontend/.env.frontend
    depends_on:
      auth_service:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3010"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/config/mongod.conf:/etc/mongod.conf:ro
    environment:
      - MONGO_INITDB_DATABASE=eye_tracking
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: