/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/collected-dataset-customized"],{

/***/ "(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibratePoints.jsx":
/*!****************************************************************************!*\
  !*** ./components/collected-dataset-customized/Action/CalibratePoints.jsx ***!
  \****************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearCalibrationPoints: () => (/* binding */ clearCalibrationPoints),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   drawCalibrationGrid: () => (/* binding */ drawCalibrationGrid),\n/* harmony export */   drawCalibrationPoint: () => (/* binding */ drawCalibrationPoint),\n/* harmony export */   drawCalibrationPointLegacy: () => (/* binding */ drawCalibrationPointLegacy),\n/* harmony export */   generateCalibrationPoints: () => (/* binding */ generateCalibrationPoints)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// CalibratePoints.jsx\n// Utility for generating and managing calibration points on a canvas\n\n/**\n * Get canvas management utilities from global scope (from actionButton.js)\n * @returns {Object} Canvas utilities object\n */ const getCanvasUtils = ()=>{\n    if (true) {\n        return {\n            canvasUtils: window.canvasUtils,\n            canvasManager: window.canvasManager\n        };\n    }\n    return {\n        canvasUtils: null,\n        canvasManager: null\n    };\n};\n/**\n * Get or create canvas using the canvas management system from actionButton.js\n * @returns {HTMLCanvasElement} Canvas element\n */ const getCanvas = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    // First try to use canvasUtils from actionButton.js\n    if (canvasUtils && typeof canvasUtils.getCanvas === 'function') {\n        return canvasUtils.getCanvas();\n    }\n    // Fallback to canvasManager\n    if (canvasManager && typeof canvasManager.getCanvas === 'function') {\n        return canvasManager.getCanvas() || canvasManager.createCanvas();\n    }\n    // Fallback to direct query\n    return document.querySelector('#tracking-canvas');\n};\n/**\n * Transform canvas coordinates to viewport coordinates when in fullscreen\n * @param {HTMLCanvasElement} canvas - Canvas element\n * @param {Object} point - {x, y} point coordinates\n * @returns {Object} Transformed point coordinates\n */ const transformCoordinates = (canvas, point)=>{\n    if (!canvas || !point) return point;\n    // Check if canvas is in fullscreen mode\n    const isFullscreen = canvas.style.position === 'fixed' && (canvas.style.width === '100vw' || canvas.style.width === '100%');\n    if (isFullscreen) {\n        // Get the canvas's bounding rect to understand its position in the viewport\n        const canvasRect = canvas.getBoundingClientRect();\n        // Calculate the scale factors\n        const scaleX = canvasRect.width / canvas.width;\n        const scaleY = canvasRect.height / canvas.height;\n        // Transform the coordinates\n        const transformedPoint = {\n            x: point.x * scaleX + canvasRect.left,\n            y: point.y * scaleY + canvasRect.top,\n            label: point.label\n        };\n        console.log('Coordinate transformation in CalibratePoints:', {\n            original: point,\n            transformed: transformedPoint,\n            canvasRect,\n            scale: {\n                x: scaleX,\n                y: scaleY\n            }\n        });\n        return transformedPoint;\n    }\n    // If not fullscreen, return original coordinates\n    return point;\n};\n/**\n * Draw dot using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {boolean} Success status\n */ const drawDotWithCanvasManager = function(x, y) {\n    let radius = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 12;\n    const { canvasUtils } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.drawDot === 'function') {\n        return canvasUtils.drawDot(x, y, radius);\n    }\n    // Fallback: manually draw dot\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        drawCalibrationPointLegacy(ctx, x, y, radius);\n        return true;\n    }\n    return false;\n};\n/**\n * Clear canvas using the canvas management system\n */ const clearCanvasWithManager = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.clear === 'function') {\n        canvasUtils.clear();\n        return;\n    }\n    if (canvasManager && typeof canvasManager.clear === 'function') {\n        canvasManager.clear();\n        return;\n    }\n    // Fallback: manually clear canvas\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n};\n/**\n * Generate a grid of calibration points based on canvas dimensions\n * @param {number} width - Canvas width\n * @param {number} height - Canvas height\n * @returns {Array} Array of point objects with x,y coordinates\n */ const generateCalibrationPoints = (width, height)=>{\n    if (!width || !height || width <= 0 || height <= 0) {\n        console.error(\"generateCalibrationPoints: Invalid canvas dimensions\", {\n            width,\n            height\n        });\n        return [];\n    }\n    const conditionalRound = (dimension, percentage)=>Math.round(dimension * percentage);\n    // Outer frame (12% from edges)\n    const xLeftOuter = conditionalRound(width, 0.12);\n    const xRightOuter = width - xLeftOuter;\n    const yTopOuter = conditionalRound(height, 0.12);\n    const yBottomOuter = height - yTopOuter;\n    // Inner frame (26% from edges)\n    const xLeftInner = conditionalRound(width, 0.26);\n    const xRightInner = width - xLeftInner;\n    const yTopInner = conditionalRound(height, 0.26);\n    const yBottomInner = height - yTopInner;\n    const xCenter = Math.floor(width / 2);\n    const yCenter = Math.floor(height / 2);\n    return [\n        // Outer frame (8 points)\n        {\n            x: xLeftOuter,\n            y: yTopOuter,\n            label: \"Outer Top-Left\"\n        },\n        {\n            x: xCenter,\n            y: yTopOuter,\n            label: \"Outer Top-Center\"\n        },\n        {\n            x: xRightOuter,\n            y: yTopOuter,\n            label: \"Outer Top-Right\"\n        },\n        {\n            x: xLeftOuter,\n            y: yCenter,\n            label: \"Outer Middle-Left\"\n        },\n        {\n            x: xRightOuter,\n            y: yCenter,\n            label: \"Outer Middle-Right\"\n        },\n        {\n            x: xLeftOuter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Left\"\n        },\n        {\n            x: xCenter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Center\"\n        },\n        {\n            x: xRightOuter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Right\"\n        },\n        // Inner frame (8 points)\n        {\n            x: xLeftInner,\n            y: yTopInner,\n            label: \"Inner Top-Left\"\n        },\n        {\n            x: xCenter,\n            y: yTopInner,\n            label: \"Inner Top-Center\"\n        },\n        {\n            x: xRightInner,\n            y: yTopInner,\n            label: \"Inner Top-Right\"\n        },\n        {\n            x: xLeftInner,\n            y: yCenter,\n            label: \"Inner Middle-Left\"\n        },\n        {\n            x: xRightInner,\n            y: yCenter,\n            label: \"Inner Middle-Right\"\n        },\n        {\n            x: xLeftInner,\n            y: yBottomInner,\n            label: \"Inner Bottom-Left\"\n        },\n        {\n            x: xCenter,\n            y: yBottomInner,\n            label: \"Inner Bottom-Center\"\n        },\n        {\n            x: xRightInner,\n            y: yBottomInner,\n            label: \"Inner Bottom-Right\"\n        }\n    ];\n};\n/**\n * Draw a calibration point on a canvas using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {Object} options - Optional settings (color, radius)\n * @returns {Object} Point position object {x, y}\n */ const drawCalibrationPoint = function(x, y) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    const radius = options.radius || 12; // Use standard radius\n    const success = drawDotWithCanvasManager(x, y, radius);\n    return {\n        x,\n        y,\n        success\n    };\n};\n/**\n * Legacy function for backward compatibility (draws directly on canvas context)\n * @param {CanvasRenderingContext2D} ctx - Canvas 2D context\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {Object} Point position object {x, y}\n */ const drawCalibrationPointLegacy = function(ctx, x, y) {\n    let radius = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 12;\n    if (!ctx) return {\n        x,\n        y\n    };\n    const canvas = ctx.canvas;\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    // Draw the dot with a bright red color\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = 'red';\n    ctx.fill();\n    // Add glow effect for better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 3, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    // Add a second larger glow for even better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 6, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    return {\n        x,\n        y\n    };\n};\n/**\n * Draw all calibration points on a canvas (for debugging/visualization)\n * @param {Array} points - Array of point objects\n * @param {number} activeIndex - Index of the currently active point\n */ const drawCalibrationGrid = function(points) {\n    let activeIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;\n    if (!points || !points.length) return;\n    const canvas = getCanvas();\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    clearCanvasWithManager();\n    points.forEach((point, index)=>{\n        const isActive = index === activeIndex;\n        const radius = isActive ? 12 : 6; // Use standard radius for active, smaller for inactive\n        // Draw the point\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, radius, 0, Math.PI * 2);\n        ctx.fillStyle = isActive ? 'red' : 'rgba(0, 102, 204, 0.7)';\n        ctx.fill();\n        // Add glow effect for active points\n        if (isActive) {\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, radius + 3, 0, Math.PI * 2);\n            ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n            ctx.lineWidth = 3;\n            ctx.stroke();\n        }\n        // Draw point number\n        ctx.fillStyle = 'white';\n        ctx.font = '10px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(\"\".concat(index + 1), point.x, point.y);\n        // Draw label for active point\n        if (isActive && point.label) {\n            ctx.font = '12px Arial';\n            ctx.fillStyle = 'black';\n            ctx.fillText(point.label, point.x, point.y - 25);\n        }\n    });\n    // Draw connecting lines (optional)\n    if (points.length > 1) {\n        ctx.beginPath();\n        ctx.moveTo(points[0].x, points[0].y);\n        for(let i = 1; i < points.length; i++){\n            ctx.lineTo(points[i].x, points[i].y);\n        }\n        ctx.strokeStyle = 'rgba(0, 102, 204, 0.3)';\n        ctx.lineWidth = 1;\n        ctx.stroke();\n    }\n};\n/**\n * Clear all calibration points from canvas\n */ const clearCalibrationPoints = ()=>{\n    clearCanvasWithManager();\n};\n// Default export for React compatibility\nconst CalibratePoints = ()=>null; // This is a utility file, so we don't need to render anything\n_c = CalibratePoints;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CalibratePoints);\nvar _c;\n$RefreshReg$(_c, \"CalibratePoints\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\n"));

/***/ }),

/***/ "(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx":
/*!**********************************************************************!*\
  !*** ./components/collected-dataset-customized/Action/countSave.jsx ***!
  \**********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calibrationCapture: () => (/* binding */ calibrationCapture),\n/* harmony export */   captureAndPreviewProcess: () => (/* binding */ captureAndPreviewProcess),\n/* harmony export */   captureImages: () => (/* binding */ captureImages),\n/* harmony export */   createCountdownElement: () => (/* binding */ createCountdownElement),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   drawRedDot: () => (/* binding */ drawRedDot),\n/* harmony export */   getRandomPosition: () => (/* binding */ getRandomPosition),\n/* harmony export */   runCountdown: () => (/* binding */ runCountdown),\n/* harmony export */   showCapturePreview: () => (/* binding */ showCapturePreview)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Helper_savefile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Helper/savefile */ \"(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\");\n// Fixed countSave.jsx - Resolving redrawInterval reference error\n// Shared functionality for countdown and image capture processes\n\n\n/**\n * Get canvas management utilities from global scope (from actionButton.js)\n * @returns {Object} Canvas utilities object\n */ const getCanvasUtils = ()=>{\n    if (true) {\n        return {\n            canvasUtils: window.canvasUtils,\n            canvasManager: window.canvasManager\n        };\n    }\n    return {\n        canvasUtils: null,\n        canvasManager: null\n    };\n};\n/**\n * Get or create canvas using the canvas management system from actionButton.js\n * @returns {HTMLCanvasElement} Canvas element\n */ const getCanvas = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    // First try to use canvasUtils from actionButton.js\n    if (canvasUtils && typeof canvasUtils.getCanvas === 'function') {\n        return canvasUtils.getCanvas();\n    }\n    // Fallback to canvasManager\n    if (canvasManager && typeof canvasManager.getCanvas === 'function') {\n        return canvasManager.getCanvas() || canvasManager.createCanvas();\n    }\n    // Fallback to direct query\n    return document.querySelector('#tracking-canvas');\n};\n/**\n * Transform canvas coordinates to viewport coordinates when in fullscreen\n * @param {HTMLCanvasElement} canvas - Canvas element\n * @param {Object} point - {x, y} point coordinates\n * @returns {Object} Transformed point coordinates\n */ const transformCoordinates = (canvas, point)=>{\n    if (!canvas || !point) return point;\n    // Check if canvas is in fullscreen mode\n    const isFullscreen = canvas.style.position === 'fixed' && (canvas.style.width === '100vw' || canvas.style.width === '100%');\n    if (isFullscreen) {\n        // Get the canvas's bounding rect to understand its position in the viewport\n        const canvasRect = canvas.getBoundingClientRect();\n        // Calculate the scale factors\n        const scaleX = canvasRect.width / canvas.width;\n        const scaleY = canvasRect.height / canvas.height;\n        // Transform the coordinates\n        const transformedPoint = {\n            x: point.x * scaleX + canvasRect.left,\n            y: point.y * scaleY + canvasRect.top,\n            label: point.label\n        };\n        console.log('Coordinate transformation in countSave:', {\n            original: point,\n            transformed: transformedPoint,\n            canvasRect,\n            scale: {\n                x: scaleX,\n                y: scaleY\n            }\n        });\n        return transformedPoint;\n    }\n    // If not fullscreen, return original coordinates\n    return point;\n};\n/**\n * Draw dot using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {boolean} Success status\n */ const drawDotWithCanvasManager = function(x, y) {\n    let radius = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 12;\n    const { canvasUtils } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.drawDot === 'function') {\n        return canvasUtils.drawDot(x, y, radius);\n    }\n    // Fallback: manually draw dot\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        drawRedDot(ctx, x, y, radius, false);\n        return true;\n    }\n    return false;\n};\n/**\n * Clear canvas using the canvas management system\n */ const clearCanvasWithManager = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.clear === 'function') {\n        canvasUtils.clear();\n        return;\n    }\n    if (canvasManager && typeof canvasManager.clear === 'function') {\n        canvasManager.clear();\n        return;\n    }\n    // Fallback: manually clear canvas\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n};\n/**\n * Creates and displays a countdown element above a dot position\n * @param {Object} position - {x, y} position of the dot\n * @param {DOMRect} canvasRect - getBoundingClientRect() of the canvas\n * @returns {HTMLElement} - The created countdown element\n */ const createCountdownElement = (position, canvasRect)=>{\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[createCountdownElement] Invalid position:', position);\n        return null;\n    }\n    const existingCountdowns = document.querySelectorAll('.calibrate-countdown, .forced-countdown, .center-countdown-backup');\n    existingCountdowns.forEach((el)=>el.remove());\n    // Get canvas to check if we need coordinate transformation\n    const canvas = getCanvas();\n    let displayPosition = position;\n    if (canvas) {\n        // Transform coordinates if canvas is in fullscreen mode\n        displayPosition = transformCoordinates(canvas, position);\n    }\n    const countdownElement = document.createElement('div');\n    countdownElement.className = 'dot-countdown';\n    countdownElement.style.cssText = \"\\n    position: fixed;\\n    left: \".concat(displayPosition.x, \"px;\\n    top: \").concat(displayPosition.y - 60, \"px;\\n    transform: translateX(-50%);\\n    color: red;\\n    font-size: 36px;\\n    font-weight: bold;\\n    text-shadow: 0 0 10px white, 0 0 20px white;\\n    z-index: 9999;\\n    background-color: rgba(255, 255, 255, 0.8);\\n    border: 2px solid red;\\n    border-radius: 50%;\\n    width: 50px;\\n    height: 50px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n  \");\n    document.body.appendChild(countdownElement);\n    return countdownElement;\n};\n/**\n * Display a preview of the captured images\n * @param {string} screenImage - Data URL of the screen image\n * @param {string} webcamImage - Data URL of the webcam image\n * @param {Object} point - {x, y} position of the dot\n */ const showCapturePreview = (screenImage, webcamImage, point)=>{\n    if (!screenImage && !webcamImage) return;\n    // Remove any existing previews\n    const existingPreviews = document.querySelectorAll('.capture-preview-container');\n    existingPreviews.forEach((preview)=>{\n        if (preview.parentNode) {\n            preview.parentNode.removeChild(preview);\n        }\n    });\n    // Create preview container\n    const previewContainer = document.createElement('div');\n    previewContainer.className = 'capture-preview-container';\n    previewContainer.style.cssText = \"\\n    position: fixed;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    display: flex;\\n    gap: 20px;\\n    background-color: rgba(0, 0, 0, 0.85);\\n    padding: 20px;\\n    border-radius: 12px;\\n    z-index: 999999;\\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.6);\\n  \";\n    // Add screen image if available\n    if (screenImage) {\n        const screenPreview = document.createElement('div');\n        screenPreview.style.cssText = \"\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center;\\n    \";\n        const screenImg = document.createElement('img');\n        screenImg.src = screenImage;\n        screenImg.alt = 'Screen Capture';\n        screenImg.style.cssText = \"\\n      max-width: 320px;\\n      max-height: 240px;\\n      border: 3px solid white;\\n      border-radius: 8px;\\n      background-color: #333;\\n    \";\n        const screenLabel = document.createElement('div');\n        screenLabel.textContent = 'Screen Capture';\n        screenLabel.style.cssText = \"\\n      color: white;\\n      font-size: 14px;\\n      margin-top: 10px;\\n      font-weight: bold;\\n    \";\n        screenPreview.appendChild(screenImg);\n        screenPreview.appendChild(screenLabel);\n        previewContainer.appendChild(screenPreview);\n    }\n    // Add webcam image if available\n    if (webcamImage) {\n        const webcamPreview = document.createElement('div');\n        webcamPreview.style.cssText = \"\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center;\\n    \";\n        const webcamImg = document.createElement('img');\n        webcamImg.src = webcamImage;\n        webcamImg.alt = 'Webcam Capture';\n        webcamImg.style.cssText = \"\\n      max-width: 320px;\\n      max-height: 240px;\\n      border: 3px solid white;\\n      border-radius: 8px;\\n      background-color: #333;\\n    \";\n        const webcamLabel = document.createElement('div');\n        webcamLabel.textContent = 'Webcam Capture';\n        webcamLabel.style.cssText = \"\\n      color: white;\\n      font-size: 14px;\\n      margin-top: 10px;\\n      font-weight: bold;\\n    \";\n        webcamPreview.appendChild(webcamImg);\n        webcamPreview.appendChild(webcamLabel);\n        previewContainer.appendChild(webcamPreview);\n    }\n    // Add point info\n    if (point) {\n        const pointInfo = document.createElement('div');\n        pointInfo.textContent = point.label ? \"\".concat(point.label, \": x=\").concat(Math.round(point.x), \", y=\").concat(Math.round(point.y)) : \"Point: x=\".concat(Math.round(point.x), \", y=\").concat(Math.round(point.y));\n        pointInfo.style.cssText = \"\\n      color: #ffcc00;\\n      font-size: 14px;\\n      position: absolute;\\n      top: -40px;\\n      left: 0;\\n      width: 100%;\\n      text-align: center;\\n    \";\n        previewContainer.appendChild(pointInfo);\n    }\n    // Add timer\n    const timerElement = document.createElement('div');\n    timerElement.textContent = '2.0s';\n    timerElement.style.cssText = \"\\n    position: absolute;\\n    bottom: -25px;\\n    right: 20px;\\n    color: white;\\n    font-size: 12px;\\n    background-color: rgba(0, 0, 0, 0.7);\\n    padding: 3px 8px;\\n    border-radius: 4px;\\n  \";\n    previewContainer.appendChild(timerElement);\n    // Add to document\n    document.body.appendChild(previewContainer);\n    // Countdown\n    let timeLeft = 2.0;\n    const interval = setInterval(()=>{\n        timeLeft -= 0.1;\n        if (timeLeft <= 0) {\n            clearInterval(interval);\n            previewContainer.style.opacity = '0';\n            previewContainer.style.transition = 'opacity 0.3s ease';\n            setTimeout(()=>{\n                if (previewContainer.parentNode) {\n                    previewContainer.parentNode.removeChild(previewContainer);\n                }\n            }, 300);\n        } else {\n            timerElement.textContent = \"\".concat(timeLeft.toFixed(1), \"s\");\n        }\n    }, 100);\n    // Safety cleanup\n    setTimeout(()=>{\n        if (previewContainer.parentNode) {\n            previewContainer.parentNode.removeChild(previewContainer);\n        }\n    }, 5000);\n};\n/**\n * Runs a countdown process that displays 3-2-1 above a dot\n * @param {Object} position - {x, y} position of the dot\n * @param {HTMLCanvasElement} canvas - Canvas element with the dot\n * @param {Function} onStatusUpdate - Function to update status messages\n * @param {Function} onComplete - Callback to execute when countdown completes\n */ const runCountdown = async (position, canvas, onStatusUpdate, onComplete)=>{\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[runCountdown] Invalid position:', position);\n        onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n            processStatus: \"Invalid dot position\",\n            countdownValue: null,\n            isCapturing: false\n        });\n        return;\n    }\n    const canvasRect = canvas.getBoundingClientRect();\n    const countdownElement = createCountdownElement(position, canvasRect);\n    if (!countdownElement) {\n        console.warn('[runCountdown] Countdown element could not be created.');\n        return;\n    }\n    // Use canvas management system to draw dot\n    drawDotWithCanvasManager(position.x, position.y);\n    let count = 3;\n    countdownElement.textContent = count;\n    onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n        processStatus: \"Countdown\",\n        countdownValue: count,\n        isCapturing: true\n    });\n    // Create redrawInterval for keeping dot visible during countdown\n    let redrawInterval = setInterval(()=>{\n        drawDotWithCanvasManager(position.x, position.y);\n    }, 200);\n    return new Promise((resolve)=>{\n        const countdownInterval = setInterval(()=>{\n            count--;\n            if (count <= 0) {\n                clearInterval(countdownInterval);\n                countdownElement.textContent = \"✓\";\n                onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                    countdownValue: \"Capturing...\",\n                    processStatus: \"Capturing image...\",\n                    isCapturing: true\n                });\n                setTimeout(()=>{\n                    if (countdownElement.parentNode) {\n                        countdownElement.parentNode.removeChild(countdownElement);\n                    }\n                    drawDotWithCanvasManager(position.x, position.y);\n                    // Clear the redrawInterval we defined above\n                    if (redrawInterval) {\n                        clearInterval(redrawInterval);\n                    }\n                    if (onComplete) {\n                        drawDotWithCanvasManager(position.x, position.y);\n                        onComplete();\n                    }\n                    resolve();\n                }, 300);\n            } else {\n                countdownElement.textContent = count;\n                onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                    processStatus: \"Countdown\",\n                    countdownValue: count,\n                    isCapturing: true\n                });\n            }\n        }, 800);\n    });\n};\n/**\n * Draw a red dot on the canvas (legacy function for backward compatibility)\n * @param {CanvasRenderingContext2D} ctx - Canvas 2D context\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @param {boolean} clearCanvas - Whether to clear the canvas before drawing (default: true)\n * @returns {Object} - {x, y} position\n */ const drawRedDot = function(ctx, x, y) {\n    let radius = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 12, clearCanvas = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : true;\n    const canvas = ctx.canvas;\n    // Clear the canvas if requested (default behavior)\n    if (clearCanvas) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'yellow';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    // Draw the dot with a bright red color\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = 'red';\n    ctx.fill();\n    // Add glow effect for better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 3, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    // Add a second larger glow for even better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 6, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    return {\n        x,\n        y\n    };\n};\n/**\n * Get highest resolution camera constraints\n * @returns {Promise<Object>} - Camera constraints\n */ const getHighestResolutionConstraints = async ()=>{\n    try {\n        // Get all video input devices\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter((device)=>device.kind === 'videoinput');\n        if (videoDevices.length === 0) {\n            console.warn('No video devices found, using default constraints');\n            return {\n                video: true\n            };\n        }\n        // Try to get capabilities for the first video device\n        const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        const videoTrack = stream.getVideoTracks()[0];\n        if (!videoTrack.getCapabilities) {\n            console.warn('getCapabilities not supported, using default constraints');\n            stream.getTracks().forEach((track)=>track.stop());\n            return {\n                video: true\n            };\n        }\n        const capabilities = videoTrack.getCapabilities();\n        stream.getTracks().forEach((track)=>track.stop());\n        if (!capabilities.width || !capabilities.height) {\n            console.warn('No width/height capabilities, using default constraints');\n            return {\n                video: true\n            };\n        }\n        // Get the highest resolution available\n        const maxWidth = Math.max(...capabilities.width.values);\n        const maxHeight = Math.max(...capabilities.height.values);\n        console.log(\"Using highest resolution: \".concat(maxWidth, \"x\").concat(maxHeight));\n        return {\n            video: {\n                width: {\n                    ideal: maxWidth\n                },\n                height: {\n                    ideal: maxHeight\n                },\n                frameRate: {\n                    ideal: 30\n                }\n            }\n        };\n    } catch (error) {\n        console.warn('Error getting camera constraints, using default:', error);\n        return {\n            video: true\n        };\n    }\n};\n/**\n * Capture images at a specific point\n * @param {Object} options - Capture options\n * @returns {Promise} - Promise that resolves with the capture result\n */ const captureImages = async (options)=>{\n    const { canvasRef, position, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, captureFolder = 'eye_tracking_captures' } = options;\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[captureImages] Invalid position object:', position);\n        setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus('Error: Invalid capture position');\n        return null;\n    }\n    try {\n        // Get highest resolution constraints\n        const constraints = await getHighestResolutionConstraints();\n        console.log('Using camera constraints:', constraints);\n        // Get a new stream with the highest resolution\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        const videoTrack = stream.getVideoTracks()[0];\n        const settings = videoTrack.getSettings();\n        console.log('Actual camera settings:', settings);\n        // Update video element with new stream\n        const videoElement = window.videoElement || document.querySelector('video');\n        if (videoElement) {\n            videoElement.srcObject = stream;\n            await videoElement.play();\n        }\n        // Call the captureImagesAtPoint with all necessary parameters\n        const result = await (0,_Helper_savefile__WEBPACK_IMPORTED_MODULE_1__.captureImagesAtPoint)({\n            point: position,\n            captureCount: captureCounter,\n            canvasRef,\n            setCaptureCount: setCaptureCounter,\n            showCapturePreview\n        });\n        console.log('Capture successful with ID:', result.captureId);\n        // Clean up the stream\n        stream.getTracks().forEach((track)=>track.stop());\n        return {\n            screenImage: (result === null || result === void 0 ? void 0 : result.screenImage) || '',\n            webcamImage: (result === null || result === void 0 ? void 0 : result.webcamImage) || '',\n            success: true,\n            captureId: result === null || result === void 0 ? void 0 : result.captureId,\n            resolution: {\n                width: settings.width,\n                height: settings.height\n            }\n        };\n    } catch (err) {\n        console.error('[captureImages] Unexpected error:', err);\n        setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Error: \".concat(err.message));\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: err.message\n        };\n    }\n};\n/**\n * Generate a random dot position within the canvas\n * @param {HTMLCanvasElement} canvas - Canvas element\n * @param {number} padding - Padding from the edges\n * @returns {Object} - {x, y} position\n */ const getRandomPosition = function(canvas) {\n    let padding = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 40;\n    if (!canvas) return {\n        x: 100,\n        y: 100\n    }; // Fallback position\n    const width = canvas.width || 400; // Fallback if width is 0\n    const height = canvas.height || 300; // Fallback if height is 0\n    return {\n        x: Math.floor(Math.random() * (width - 2 * padding)) + padding,\n        y: Math.floor(Math.random() * (height - 2 * padding)) + padding\n    };\n};\n/**\n * Special calibration capture function that behaves like random dot capture\n * @param {Object} options - All the calibration options\n * @returns {Promise<Object>} Result object with captured data\n */ const calibrationCapture = async (options)=>{\n    const { canvasRef, point, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, captureFolder = 'eye_tracking_captures', pointIndex, totalPoints } = options;\n    try {\n        console.log(\"Starting calibration capture for point \".concat(pointIndex + 1, \"/\").concat(totalPoints));\n        // Get canvas using canvas management system\n        const canvas = getCanvas();\n        if (!canvas) {\n            console.error(\"Canvas reference is null in calibrationCapture\");\n            setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Error: Canvas not available\");\n            return {\n                success: false\n            };\n        }\n        // Use canvas management system to draw dot\n        drawDotWithCanvasManager(point.x, point.y);\n        setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Calibration point \".concat(pointIndex + 1, \"/\").concat(totalPoints));\n        // Use the same countdown element creation method\n        const canvasRect = canvas.getBoundingClientRect();\n        const countdownElement = createCountdownElement(point, canvasRect);\n        if (!countdownElement) {\n            console.error(\"Failed to create countdown element\");\n            return {\n                success: false\n            };\n        }\n        // Create a redrawInterval for keeping the dot visible\n        let redrawInterval = setInterval(()=>{\n            drawDotWithCanvasManager(point.x, point.y);\n        }, 200);\n        // Run the same countdown as random dot\n        for(let count = 3; count > 0; count--){\n            countdownElement.textContent = count;\n            setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Point \".concat(pointIndex + 1, \"/\").concat(totalPoints, \" - countdown \").concat(count));\n            // Redraw the dot at each step to ensure it remains visible\n            drawDotWithCanvasManager(point.x, point.y);\n            await new Promise((resolve)=>setTimeout(resolve, 800));\n        }\n        // Show checkmark\n        countdownElement.textContent = \"✓\";\n        // Remove countdown element\n        setTimeout(()=>{\n            if (countdownElement.parentNode) {\n                countdownElement.parentNode.removeChild(countdownElement);\n            }\n            // Clear redrawInterval\n            if (redrawInterval) {\n                clearInterval(redrawInterval);\n            }\n        }, 300);\n        // Use captureAndPreviewProcess instead of directly calling captureImagesAtPoint\n        const captureResult = await captureAndPreviewProcess({\n            canvasRef,\n            position: point,\n            captureCounter,\n            setCaptureCounter,\n            setProcessStatus: (status)=>{\n                if (typeof status === 'string') {\n                    setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(status);\n                } else if (status && typeof status === 'object') {\n                    setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(status.processStatus || '');\n                }\n            },\n            toggleTopBar,\n            onStatusUpdate: (status)=>{\n                if (typeof status === 'string') {\n                    setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(status);\n                } else if (status && typeof status === 'object') {\n                    setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(status.processStatus || '');\n                }\n            },\n            captureFolder\n        });\n        // Ensure proper return even if captureResult is null\n        const safeResult = captureResult && typeof captureResult === 'object' ? captureResult : {\n            screenImage: '',\n            webcamImage: '',\n            success: false\n        };\n        return {\n            screenImage: safeResult.screenImage || '',\n            webcamImage: safeResult.webcamImage || '',\n            success: true,\n            point\n        };\n    } catch (error) {\n        console.error(\"Error in calibrationCapture:\", error);\n        setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Error: \".concat(error.message));\n        // Always return a valid object with default values\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\n * Complete capture and preview process\n * @param {Object} options - Process options\n */ const captureAndPreviewProcess = async (options)=>{\n    const { canvasRef, position, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, onStatusUpdate, captureFolder } = options;\n    try {\n        // Get canvas using canvas management system\n        const canvas = getCanvas();\n        if (!canvas) {\n            console.error(\"[captureAndPreviewProcess] Canvas reference is null\");\n            if (setProcessStatus) setProcessStatus('Error: Canvas is not available');\n            return null;\n        }\n        // Draw the dot using canvas management system\n        drawDotWithCanvasManager(position.x, position.y);\n        // Countdown before capture\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Starting countdown...',\n                isCapturing: true\n            });\n        }\n        // Create a custom countdown element\n        const canvasRect = canvas.getBoundingClientRect();\n        const countdownElement = document.createElement('div');\n        countdownElement.className = 'calibrate-countdown';\n        countdownElement.style.cssText = \"\\n      position: fixed;\\n      left: \".concat(canvasRect.left + position.x, \"px;\\n      top: \").concat(canvasRect.top + position.y - 60, \"px;\\n      transform: translateX(-50%);\\n      color: red;\\n      font-size: 36px;\\n      font-weight: bold;\\n      text-shadow: 0 0 10px white, 0 0 20px white;\\n      z-index: 9999;\\n      background-color: rgba(255, 255, 255, 0.8);\\n      border: 2px solid red;\\n      border-radius: 50%;\\n      width: 50px;\\n      height: 50px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n    \");\n        document.body.appendChild(countdownElement);\n        // Create a redrawInterval for keeping the dot visible\n        let redrawInterval = setInterval(()=>{\n            drawDotWithCanvasManager(position.x, position.y);\n        }, 200);\n        // Manual countdown\n        for(let count = 3; count > 0; count--){\n            countdownElement.textContent = count;\n            if (onStatusUpdate) {\n                onStatusUpdate({\n                    processStatus: \"Countdown: \".concat(count),\n                    countdownValue: count,\n                    isCapturing: true\n                });\n            }\n            // Redraw dot to ensure it's visible\n            drawDotWithCanvasManager(position.x, position.y);\n            await new Promise((resolve)=>setTimeout(resolve, 800));\n        }\n        // Change to checkmark\n        countdownElement.textContent = \"✓\";\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Capturing images...',\n                countdownValue: \"Capturing...\",\n                isCapturing: true\n            });\n        }\n        // Remove countdown element and clear redrawInterval\n        setTimeout(()=>{\n            if (countdownElement.parentNode) {\n                countdownElement.parentNode.removeChild(countdownElement);\n            }\n            if (redrawInterval) {\n                clearInterval(redrawInterval);\n            }\n        }, 300);\n        // Use captureImagesAtPoint from savefile.js\n        const captureResult = await (0,_Helper_savefile__WEBPACK_IMPORTED_MODULE_1__.captureImagesAtPoint)({\n            point: position,\n            captureCount: captureCounter,\n            canvasRef,\n            setCaptureCount: setCaptureCounter,\n            showCapturePreview\n        });\n        if (setProcessStatus) {\n            setProcessStatus(\"Captured dot at x=\".concat(Math.round(position.x), \", y=\").concat(Math.round(position.y)));\n        }\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Capture complete',\n                isCapturing: false\n            });\n        }\n        // Show TopBar again with delay\n        setTimeout(()=>{\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(true);\n            } else if ( true && window.toggleTopBar) {\n                window.toggleTopBar(true);\n            }\n        }, 2500);\n        return captureResult;\n    } catch (error) {\n        console.error(\"[captureAndPreviewProcess] Fatal error:\", error);\n        if (setProcessStatus) {\n            setProcessStatus(\"Fatal error: \".concat(error.message));\n        }\n        // Ensure TopBar is shown even on error\n        setTimeout(()=>{\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(true);\n            } else if ( true && window.toggleTopBar) {\n                window.toggleTopBar(true);\n            }\n        }, 1500);\n        // Return a minimal valid object to prevent null reference errors\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Default export for React compatibility\nconst CountSave = ()=>null; // This is a utility file, so we don't need to render anything\n_c = CountSave;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CountSave);\nvar _c;\n$RefreshReg$(_c, \"CountSave\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx\n"));

/***/ }),

/***/ "(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js":
/*!********************************************************************!*\
  !*** ./components/collected-dataset-customized/Helper/savefile.js ***!
  \********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   captureImagesAtPoint: () => (/* binding */ captureImagesAtPoint),\n/* harmony export */   getHighestResolutionConstraints: () => (/* binding */ getHighestResolutionConstraints),\n/* harmony export */   saveCSVToServer: () => (/* binding */ saveCSVToServer),\n/* harmony export */   saveImageToServer: () => (/* binding */ saveImageToServer)\n/* harmony export */ });\n// Helper/savefile.js - Added highest resolution webcam capture\n/**\n * Resize an image to fit within a certain size limit\n * @param {string} imageDataUrl - Base64 encoded image data\n * @param {number} maxWidth - Maximum width of the resized image\n * @param {number} maxHeight - Maximum height of the resized image\n * @param {number} quality - JPEG quality (0-1)\n * @returns {Promise<string>} - Resized image data URL\n */ const resizeImage = async function(imageDataUrl) {\n    let maxWidth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 800, maxHeight = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 600, quality = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0.85;\n    return new Promise((resolve, reject)=>{\n        try {\n            const img = new Image();\n            img.onload = ()=>{\n                // Calculate new dimensions while maintaining aspect ratio\n                let width = img.width;\n                let height = img.height;\n                if (width > maxWidth) {\n                    height = Math.round(height * (maxWidth / width));\n                    width = maxWidth;\n                }\n                if (height > maxHeight) {\n                    width = Math.round(width * (maxHeight / height));\n                    height = maxHeight;\n                }\n                // Create canvas for resizing\n                const canvas = document.createElement('canvas');\n                canvas.width = width;\n                canvas.height = height;\n                // Draw and resize image on canvas\n                const ctx = canvas.getContext('2d');\n                ctx.drawImage(img, 0, 0, width, height);\n                // Convert to JPEG with specified quality\n                const resizedDataUrl = canvas.toDataURL('image/jpeg', quality);\n                resolve(resizedDataUrl);\n            };\n            img.onerror = (err)=>reject(err);\n            img.src = imageDataUrl;\n        } catch (err) {\n            reject(err);\n        }\n    });\n};\n/**\n * Save an image or data to the server with group ID to ensure consistent numbering\n * @param {string} imageData - Base64 encoded image data\n * @param {string} filename - Filename pattern to save as\n * @param {string} type - Type of file (screen, webcam, parameters)\n * @param {string} folder - Folder to save in\n * @param {string} captureGroup - Unique ID for grouping files from the same capture\n * @returns {Promise<Object>} - Server response\n */ const saveImageToServer = async function(imageData, filename, type) {\n    let folder = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 'eye_tracking_captures', captureGroup = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : null;\n    try {\n        const response = await fetch('/api/save-capture', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                imageData,\n                filename,\n                type,\n                folder,\n                captureGroup\n            })\n        });\n        if (!response.ok) {\n            console.error(\"Server returned \".concat(response.status, \" for \").concat(type));\n            // If the error is 413 (payload too large) and it's an image, try resizing\n            if (response.status === 413 && type !== 'parameters') {\n                console.warn(\"Image too large for server (413 error), will resize and retry\");\n                // Start with higher quality and progressively reduce quality/size until it fits\n                const sizes = [\n                    {\n                        width: 1920,\n                        height: 1080,\n                        quality: 0.9\n                    },\n                    {\n                        width: 1280,\n                        height: 720,\n                        quality: 0.85\n                    },\n                    {\n                        width: 800,\n                        height: 600,\n                        quality: 0.8\n                    },\n                    {\n                        width: 640,\n                        height: 480,\n                        quality: 0.75\n                    }\n                ];\n                for (const { width, height, quality } of sizes){\n                    const resizedImage = await resizeImage(imageData, width, height, quality);\n                    try {\n                        const retryResponse = await fetch('/api/save-capture', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                imageData: resizedImage,\n                                filename,\n                                type,\n                                folder,\n                                captureGroup\n                            })\n                        });\n                        if (retryResponse.ok) {\n                            console.log(\"Successfully saved resized \".concat(type, \" at \").concat(width, \"x\").concat(height, \", quality \").concat(quality));\n                            return await retryResponse.json();\n                        }\n                    } catch (retryError) {\n                        console.error(\"Error during retry for \".concat(type, \":\"), retryError);\n                    }\n                }\n                return {\n                    success: false,\n                    error: \"Failed to save image even after resizing\"\n                };\n            }\n            return {\n                success: false,\n                error: \"Server returned \".concat(response.status)\n            };\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        console.error(\"Error saving \".concat(type, \":\"), error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\n * Save CSV data to the server\n * @param {string} csvData - CSV data\n * @param {string} filename - Filename pattern to save as\n * @param {string} folder - Folder to save in\n * @param {string} captureGroup - Unique ID for grouping files from the same capture\n * @returns {Promise<Object>} - Server response\n */ const saveCSVToServer = async function(csvData, filename) {\n    let folder = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 'eye_tracking_captures', captureGroup = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n    try {\n        const csvBlob = new Blob([\n            csvData\n        ], {\n            type: 'text/csv'\n        });\n        const reader = new FileReader();\n        const csvDataUrl = await new Promise((resolve)=>{\n            reader.onloadend = ()=>resolve(reader.result);\n            reader.readAsDataURL(csvBlob);\n        });\n        const result = await saveImageToServer(csvDataUrl, filename, 'parameters', folder, captureGroup);\n        return result;\n    } catch (error) {\n        console.error('Error saving CSV:', error);\n        return null;\n    }\n};\n/**\n * Get the highest resolution camera constraints supported by the device\n * @returns {Promise<MediaStreamConstraints>} - Camera constraints with highest resolution\n */ const getHighestResolutionConstraints = async ()=>{\n    // Try to get all available camera capabilities first\n    try {\n        var _videoTrack_getCapabilities;\n        // Get a temporary access to the camera\n        const tempStream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        const videoTrack = tempStream.getVideoTracks()[0];\n        // Get capabilities\n        const capabilities = (_videoTrack_getCapabilities = videoTrack.getCapabilities) === null || _videoTrack_getCapabilities === void 0 ? void 0 : _videoTrack_getCapabilities.call(videoTrack);\n        console.log(\"Camera capabilities:\", capabilities);\n        // Get current settings to check aspect ratio\n        const settings = videoTrack.getSettings();\n        console.log(\"Current camera settings:\", settings);\n        // Stop the temporary stream\n        videoTrack.stop();\n        if (capabilities && capabilities.width && capabilities.height) {\n            // Use the maximum width and height from device capabilities\n            const maxWidth = capabilities.width.max;\n            const maxHeight = capabilities.height.max;\n            // Force exact resolution instead of ideal\n            return {\n                video: {\n                    width: {\n                        exact: maxWidth\n                    },\n                    height: {\n                        exact: maxHeight\n                    },\n                    frameRate: {\n                        ideal: 30\n                    } // Try to maintain good frame rate\n                }\n            };\n        }\n    } catch (err) {\n        console.log(\"Could not get camera capabilities:\", err);\n    }\n    // Fallback: try standard resolutions in order\n    const resolutions = [\n        {\n            width: {\n                exact: 4096\n            },\n            height: {\n                exact: 2160\n            }\n        },\n        {\n            width: {\n                exact: 3840\n            },\n            height: {\n                exact: 2160\n            }\n        },\n        {\n            width: {\n                exact: 2560\n            },\n            height: {\n                exact: 1440\n            }\n        },\n        {\n            width: {\n                exact: 1920\n            },\n            height: {\n                exact: 1080\n            }\n        },\n        {\n            width: {\n                exact: 1280\n            },\n            height: {\n                exact: 720\n            }\n        },\n        {\n            width: {\n                exact: 640\n            },\n            height: {\n                exact: 480\n            }\n        },\n        {} // Default - let browser decide\n    ];\n    // Try the resolutions in order until one works\n    for (const resolution of resolutions){\n        try {\n            const constraints = {\n                video: {\n                    ...resolution,\n                    facingMode: \"user\",\n                    frameRate: {\n                        ideal: 30\n                    }\n                }\n            };\n            // Test if this resolution is supported\n            const stream = await navigator.mediaDevices.getUserMedia(constraints);\n            // Get the actual dimensions\n            const videoTrack = stream.getVideoTracks()[0];\n            const settings = videoTrack.getSettings();\n            console.log(\"Supported resolution:\", settings.width, \"x\", settings.height);\n            // Stop the test stream immediately\n            stream.getTracks().forEach((track)=>track.stop());\n            return constraints;\n        } catch (err) {\n            console.log(\"Resolution not supported: \".concat(JSON.stringify(resolution)));\n        // Continue to next resolution\n        }\n    }\n    // If nothing worked, return basic constraints\n    return {\n        video: {\n            width: {\n                exact: 1280\n            },\n            height: {\n                exact: 720\n            },\n            frameRate: {\n                ideal: 30\n            }\n        }\n    };\n};\n/**\n * Capture and save images at a specific point with consistent numbering\n * @param {Object} options - Capture options\n * @returns {Promise<Object>} - Capture results\n */ const captureImagesAtPoint = async (param)=>{\n    let { point, captureCount = 1, canvasRef, setCaptureCount, showCapturePreview } = param;\n    try {\n        const folder = 'eye_tracking_captures';\n        // Create a unique ID for this capture group\n        const captureGroupId = \"capture-\".concat(Date.now());\n        console.log(\"Generated capture group ID: \".concat(captureGroupId));\n        // File patterns for saving\n        const screenFilename = 'screen_001.jpg'; // Pattern only - server will assign number\n        const webcamFilename = 'webcam_001.jpg'; // Pattern only - server will assign number\n        const parameterFilename = 'parameter_001.csv'; // Pattern only - server will assign number\n        // For logging\n        console.log(\"Starting capture with group ID:\", captureGroupId);\n        const canvas = canvasRef.current;\n        let screenImage = null;\n        let webcamImage = null;\n        let captureNumber = null;\n        // Variables to store webcam resolution\n        let webcamWidth = 0;\n        let webcamHeight = 0;\n        // 1. Prepare all data first\n        // 1.1 Canvas/screen image\n        if (canvas) {\n            screenImage = canvas.toDataURL('image/png');\n        }\n        // 1.2 Webcam image - Try to get the highest resolution available \n        // with device's native capabilities instead of fixed values\n        let webcamImagePreview = null; // Separate lower-resolution version for preview\n        const videoElement = window.videoElement || document.querySelector('video');\n        if (videoElement) {\n            try {\n                // Use existing video element if available\n                // First check if videoTrack has settings info\n                let trackSettings = null;\n                if (videoElement.srcObject) {\n                    const videoTrack = videoElement.srcObject.getVideoTracks()[0];\n                    if (videoTrack) {\n                        trackSettings = videoTrack.getSettings();\n                        console.log(\"Video track settings:\", trackSettings);\n                    }\n                }\n                // Get dimensions from track if available, otherwise from element\n                if (trackSettings && trackSettings.width && trackSettings.height) {\n                    webcamWidth = trackSettings.width;\n                    webcamHeight = trackSettings.height;\n                    console.log(\"Using track settings dimensions: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                } else {\n                    webcamWidth = videoElement.videoWidth || 0;\n                    webcamHeight = videoElement.videoHeight || 0;\n                    console.log(\"Using video element dimensions: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                }\n                // Sanity check - if both dimensions are the same, double-check\n                if (webcamWidth === webcamHeight && webcamWidth > 100) {\n                    console.warn(\"Suspicious square aspect ratio detected, double-checking dimensions\");\n                    // Try to get more reliable info\n                    if (videoElement.srcObject) {\n                        const videoTrack = videoElement.srcObject.getVideoTracks()[0];\n                        if (videoTrack) {\n                            const constraints = videoTrack.getConstraints();\n                            console.log(\"Video constraints:\", constraints);\n                            // If constraints have width/height, use those\n                            if (constraints.width && constraints.height) {\n                                if (typeof constraints.width.exact === 'number') {\n                                    webcamWidth = constraints.width.exact;\n                                } else if (typeof constraints.width.ideal === 'number') {\n                                    webcamWidth = constraints.width.ideal;\n                                }\n                                if (typeof constraints.height.exact === 'number') {\n                                    webcamHeight = constraints.height.exact;\n                                } else if (typeof constraints.height.ideal === 'number') {\n                                    webcamHeight = constraints.height.ideal;\n                                }\n                                console.log(\"Updated dimensions from constraints: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                            }\n                        }\n                    }\n                }\n                // Final reality check - make sure dimensions are reasonable\n                if (webcamWidth <= 0 || webcamHeight <= 0) {\n                    console.warn(\"Invalid webcam dimensions, using defaults\");\n                    webcamWidth = 640;\n                    webcamHeight = 480;\n                }\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = webcamWidth;\n                tempCanvas.height = webcamHeight;\n                tempCanvas.getContext('2d').drawImage(videoElement, 0, 0, webcamWidth, webcamHeight);\n                // Create high-resolution version for saving\n                webcamImage = tempCanvas.toDataURL('image/jpeg', 0.95);\n                // Create lower-resolution version for preview\n                webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.85);\n                console.log(\"Webcam capture complete at resolution: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n            } catch (err) {\n                console.error(\"Error capturing from existing video element:\", err);\n                webcamWidth = videoElement.videoWidth || 640;\n                webcamHeight = videoElement.videoHeight || 480;\n            }\n        } else {\n            try {\n                // Get highest resolution constraints for this device\n                const constraints = await getHighestResolutionConstraints();\n                console.log(\"Using camera constraints:\", constraints);\n                // Try to get stream with highest resolution\n                const stream = await navigator.mediaDevices.getUserMedia(constraints);\n                // Get the actual dimensions from the track first\n                const videoTrack = stream.getVideoTracks()[0];\n                const trackSettings = videoTrack.getSettings();\n                console.log(\"Actual camera settings:\", trackSettings);\n                // Create temporary video element to get the stream\n                const tempVideo = document.createElement('video');\n                tempVideo.srcObject = stream;\n                tempVideo.muted = true;\n                tempVideo.playsInline = true;\n                tempVideo.autoplay = true;\n                document.body.appendChild(tempVideo);\n                // Need to wait for video to be initialized\n                await new Promise((resolve)=>{\n                    tempVideo.onloadedmetadata = ()=>{\n                        tempVideo.play();\n                        resolve();\n                    };\n                    // Fallback if onloadedmetadata doesn't fire\n                    setTimeout(resolve, 1000);\n                });\n                // Wait a bit longer for the video to actually start playing\n                await new Promise((res)=>setTimeout(res, 500));\n                // Store webcam resolution - prioritize track settings over video element\n                if (trackSettings && trackSettings.width && trackSettings.height) {\n                    webcamWidth = trackSettings.width;\n                    webcamHeight = trackSettings.height;\n                    console.log(\"Using track settings for resolution: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                } else {\n                    webcamWidth = tempVideo.videoWidth || 0;\n                    webcamHeight = tempVideo.videoHeight || 0;\n                    console.log(\"Using video element for resolution: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                }\n                // Reality check on dimensions\n                if (webcamWidth <= 0 || webcamHeight <= 0) {\n                    console.warn(\"Invalid webcam dimensions, trying to get from constraints\");\n                    if (constraints.video && typeof constraints.video === 'object') {\n                        if (constraints.video.width && constraints.video.width.exact) {\n                            webcamWidth = constraints.video.width.exact;\n                        }\n                        if (constraints.video.height && constraints.video.height.exact) {\n                            webcamHeight = constraints.video.height.exact;\n                        }\n                    }\n                    if (webcamWidth <= 0 || webcamHeight <= 0) {\n                        console.warn(\"Still invalid dimensions, using defaults\");\n                        webcamWidth = 640;\n                        webcamHeight = 480;\n                    }\n                }\n                // Final check for square aspect ratio which is usually incorrect\n                if (webcamWidth === webcamHeight && webcamWidth > 100) {\n                    var _videoTrack_getCapabilities;\n                    console.warn(\"Square aspect ratio detected, may be incorrect\");\n                    // Try to get more reliable dimensions\n                    const capabilities = (_videoTrack_getCapabilities = videoTrack.getCapabilities) === null || _videoTrack_getCapabilities === void 0 ? void 0 : _videoTrack_getCapabilities.call(videoTrack);\n                    if (capabilities && capabilities.width && capabilities.height) {\n                        if (capabilities.width.max && capabilities.height.max) {\n                            // Assume the maximum capabilities have the correct aspect ratio\n                            const aspectRatio = capabilities.width.max / capabilities.height.max;\n                            if (Math.abs(aspectRatio - 1.33) < 0.1) {\n                                webcamHeight = Math.round(webcamWidth / 1.33);\n                                console.log(\"Corrected to 4:3 aspect ratio: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                            } else if (Math.abs(aspectRatio - 1.78) < 0.1) {\n                                webcamHeight = Math.round(webcamWidth / 1.78);\n                                console.log(\"Corrected to 16:9 aspect ratio: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                            }\n                        }\n                    }\n                }\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = webcamWidth;\n                tempCanvas.height = webcamHeight;\n                tempCanvas.getContext('2d').drawImage(tempVideo, 0, 0, webcamWidth, webcamHeight);\n                // Create high-resolution version for saving\n                webcamImage = tempCanvas.toDataURL('image/jpeg', 0.95);\n                // Create lower-resolution version for preview\n                webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.85);\n                console.log(\"High-resolution webcam capture complete: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                // Clean up\n                stream.getTracks().forEach((t)=>t.stop());\n                tempVideo.remove();\n            } catch (err) {\n                console.warn(\"High-resolution webcam capture failed:\", err);\n                // Try one more time with basic constraints\n                try {\n                    const stream = await navigator.mediaDevices.getUserMedia({\n                        video: true\n                    });\n                    const videoTrack = stream.getVideoTracks()[0];\n                    const trackSettings = videoTrack.getSettings();\n                    const tempVideo = document.createElement('video');\n                    tempVideo.srcObject = stream;\n                    tempVideo.muted = true;\n                    tempVideo.playsInline = true;\n                    document.body.appendChild(tempVideo);\n                    await tempVideo.play();\n                    await new Promise((res)=>setTimeout(res, 300));\n                    // Get dimensions from track settings if available\n                    if (trackSettings && trackSettings.width && trackSettings.height) {\n                        webcamWidth = trackSettings.width;\n                        webcamHeight = trackSettings.height;\n                    } else {\n                        webcamWidth = tempVideo.videoWidth || 0;\n                        webcamHeight = tempVideo.videoHeight || 0;\n                    }\n                    // Final check for invalid dimensions\n                    if (webcamWidth <= 0 || webcamHeight <= 0) {\n                        webcamWidth = 640;\n                        webcamHeight = 480;\n                    }\n                    const tempCanvas = document.createElement('canvas');\n                    tempCanvas.width = webcamWidth;\n                    tempCanvas.height = webcamHeight;\n                    tempCanvas.getContext('2d').drawImage(tempVideo, 0, 0, webcamWidth, webcamHeight);\n                    // Create high-resolution version for saving\n                    webcamImage = tempCanvas.toDataURL('image/jpeg', 0.9);\n                    // Create lower-resolution version for preview\n                    webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.8);\n                    console.log(\"Basic webcam resolution captured: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                    stream.getTracks().forEach((t)=>t.stop());\n                    tempVideo.remove();\n                } catch (fallbackErr) {\n                    console.error(\"All webcam capture methods failed:\", fallbackErr);\n                    webcamWidth = 640;\n                    webcamHeight = 480;\n                }\n            }\n        }\n        // 1.3 Parameter data - Now including webcam resolution\n        const csvData = [\n            \"name,value\",\n            \"dot_x,\".concat(point.x),\n            \"dot_y,\".concat(point.y),\n            \"canvas_width,\".concat((canvas === null || canvas === void 0 ? void 0 : canvas.width) || 0),\n            \"canvas_height,\".concat((canvas === null || canvas === void 0 ? void 0 : canvas.height) || 0),\n            \"window_width,\".concat(window.innerWidth),\n            \"window_height,\".concat(window.innerHeight),\n            \"webcam_resolution_width,\".concat(webcamWidth),\n            \"webcam_resolution_height,\".concat(webcamHeight),\n            \"timestamp,\".concat(new Date().toISOString()),\n            \"group_id,\".concat(captureGroupId)\n        ].join('\\n');\n        // 2. Save all files with the same group ID so they get the same number\n        // 2.1 Save parameter file\n        const paramResult = await saveCSVToServer(csvData, parameterFilename, folder, captureGroupId);\n        if (paramResult && paramResult.success) {\n            captureNumber = paramResult.number;\n            console.log(\"Server assigned capture number: \".concat(captureNumber, \" for group: \").concat(captureGroupId));\n        }\n        // 2.2 Save screen image if available\n        let screenResult = null;\n        if (screenImage) {\n            screenResult = await saveImageToServer(screenImage, screenFilename, 'screen', folder, captureGroupId);\n        }\n        // 2.3 Save webcam image if available\n        let webcamResult = null;\n        if (webcamImage) {\n            webcamResult = await saveImageToServer(webcamImage, webcamFilename, 'webcam', folder, captureGroupId);\n        }\n        // 3. Show preview if needed - use the lower resolution version for preview\n        if (showCapturePreview && typeof showCapturePreview === 'function') {\n            showCapturePreview(screenImage, webcamImagePreview || webcamImage, point);\n        }\n        // 4. Increment counter for next capture\n        if (setCaptureCount && typeof setCaptureCount === 'function') {\n            setCaptureCount((prevCount)=>prevCount + 1);\n        }\n        // 5. Return results - now including webcam resolution\n        return {\n            screenImage,\n            webcamImage,\n            success: true,\n            point,\n            captureNumber,\n            groupId: captureGroupId,\n            webcamWidth,\n            webcamHeight\n        };\n    } catch (err) {\n        console.error(\"captureImagesAtPoint failed:\", err);\n        return {\n            success: false,\n            error: err.message,\n            screenImage: null,\n            webcamImage: null,\n            webcamWidth: 0,\n            webcamHeight: 0\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2NvbXBvbmVudHMvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZC9IZWxwZXIvc2F2ZWZpbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLCtEQUErRDtBQUUvRDs7Ozs7OztDQU9DLEdBQ0QsTUFBTUEsY0FBYyxlQUFPQztRQUFjQyw0RUFBVyxLQUFLQyw2RUFBWSxLQUFLQywyRUFBVTtJQUNsRixPQUFPLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7UUFDM0IsSUFBSTtZQUNGLE1BQU1DLE1BQU0sSUFBSUM7WUFDaEJELElBQUlFLE1BQU0sR0FBRztnQkFDWCwwREFBMEQ7Z0JBQzFELElBQUlDLFFBQVFILElBQUlHLEtBQUs7Z0JBQ3JCLElBQUlDLFNBQVNKLElBQUlJLE1BQU07Z0JBRXZCLElBQUlELFFBQVFULFVBQVU7b0JBQ3BCVSxTQUFTQyxLQUFLQyxLQUFLLENBQUNGLFNBQVVWLENBQUFBLFdBQVdTLEtBQUk7b0JBQzdDQSxRQUFRVDtnQkFDVjtnQkFFQSxJQUFJVSxTQUFTVCxXQUFXO29CQUN0QlEsUUFBUUUsS0FBS0MsS0FBSyxDQUFDSCxRQUFTUixDQUFBQSxZQUFZUyxNQUFLO29CQUM3Q0EsU0FBU1Q7Z0JBQ1g7Z0JBRUEsNkJBQTZCO2dCQUM3QixNQUFNWSxTQUFTQyxTQUFTQyxhQUFhLENBQUM7Z0JBQ3RDRixPQUFPSixLQUFLLEdBQUdBO2dCQUNmSSxPQUFPSCxNQUFNLEdBQUdBO2dCQUVoQixrQ0FBa0M7Z0JBQ2xDLE1BQU1NLE1BQU1ILE9BQU9JLFVBQVUsQ0FBQztnQkFDOUJELElBQUlFLFNBQVMsQ0FBQ1osS0FBSyxHQUFHLEdBQUdHLE9BQU9DO2dCQUVoQyx5Q0FBeUM7Z0JBQ3pDLE1BQU1TLGlCQUFpQk4sT0FBT08sU0FBUyxDQUFDLGNBQWNsQjtnQkFDdERFLFFBQVFlO1lBQ1Y7WUFFQWIsSUFBSWUsT0FBTyxHQUFHLENBQUNDLE1BQVFqQixPQUFPaUI7WUFDOUJoQixJQUFJaUIsR0FBRyxHQUFHeEI7UUFDWixFQUFFLE9BQU91QixLQUFLO1lBQ1pqQixPQUFPaUI7UUFDVDtJQUNGO0FBQ0Y7QUFFQTs7Ozs7Ozs7Q0FRQyxHQUNNLE1BQU1FLG9CQUFvQixlQUFPQyxXQUFXQyxVQUFVQztRQUFNQywwRUFBUyx5QkFBeUJDLGdGQUFlO0lBQ2xILElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0scUJBQXFCO1lBQ2hEQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDbkJYO2dCQUNBQztnQkFDQUM7Z0JBQ0FDO2dCQUNBQztZQUNGO1FBQ0Y7UUFFQSxJQUFJLENBQUNDLFNBQVNPLEVBQUUsRUFBRTtZQUNoQkMsUUFBUUMsS0FBSyxDQUFDLG1CQUEwQ1osT0FBdkJHLFNBQVNVLE1BQU0sRUFBQyxTQUFZLE9BQUxiO1lBRXhELDBFQUEwRTtZQUMxRSxJQUFJRyxTQUFTVSxNQUFNLEtBQUssT0FBT2IsU0FBUyxjQUFjO2dCQUNwRFcsUUFBUUcsSUFBSSxDQUFFO2dCQUVkLGdGQUFnRjtnQkFDaEYsTUFBTUMsUUFBUTtvQkFDWjt3QkFBRWpDLE9BQU87d0JBQU1DLFFBQVE7d0JBQU1SLFNBQVM7b0JBQUk7b0JBQzFDO3dCQUFFTyxPQUFPO3dCQUFNQyxRQUFRO3dCQUFLUixTQUFTO29CQUFLO29CQUMxQzt3QkFBRU8sT0FBTzt3QkFBS0MsUUFBUTt3QkFBS1IsU0FBUztvQkFBSTtvQkFDeEM7d0JBQUVPLE9BQU87d0JBQUtDLFFBQVE7d0JBQUtSLFNBQVM7b0JBQUs7aUJBQzFDO2dCQUVELEtBQUssTUFBTSxFQUFFTyxLQUFLLEVBQUVDLE1BQU0sRUFBRVIsT0FBTyxFQUFFLElBQUl3QyxNQUFPO29CQUM5QyxNQUFNQyxlQUFlLE1BQU03QyxZQUFZMkIsV0FBV2hCLE9BQU9DLFFBQVFSO29CQUVqRSxJQUFJO3dCQUNGLE1BQU0wQyxnQkFBZ0IsTUFBTWIsTUFBTSxxQkFBcUI7NEJBQ3JEQyxRQUFROzRCQUNSQyxTQUFTO2dDQUNQLGdCQUFnQjs0QkFDbEI7NEJBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQ0FDbkJYLFdBQVdrQjtnQ0FDWGpCO2dDQUNBQztnQ0FDQUM7Z0NBQ0FDOzRCQUNGO3dCQUNGO3dCQUVBLElBQUllLGNBQWNQLEVBQUUsRUFBRTs0QkFDcEJDLFFBQVFPLEdBQUcsQ0FBQyw4QkFBeUNwQyxPQUFYa0IsTUFBSyxRQUFlakIsT0FBVEQsT0FBTSxLQUFzQlAsT0FBbkJRLFFBQU8sY0FBb0IsT0FBUlI7NEJBQ2pGLE9BQU8sTUFBTTBDLGNBQWNFLElBQUk7d0JBQ2pDO29CQUNGLEVBQUUsT0FBT0MsWUFBWTt3QkFDbkJULFFBQVFDLEtBQUssQ0FBQywwQkFBK0IsT0FBTFosTUFBSyxNQUFJb0I7b0JBQ25EO2dCQUNGO2dCQUVBLE9BQU87b0JBQUVDLFNBQVM7b0JBQU9ULE9BQU87Z0JBQTJDO1lBQzdFO1lBRUEsT0FBTztnQkFBRVMsU0FBUztnQkFBT1QsT0FBTyxtQkFBbUMsT0FBaEJULFNBQVNVLE1BQU07WUFBRztRQUN2RTtRQUVBLE1BQU1TLFNBQVMsTUFBTW5CLFNBQVNnQixJQUFJO1FBQ2xDLE9BQU9HO0lBQ1QsRUFBRSxPQUFPVixPQUFPO1FBQ2RELFFBQVFDLEtBQUssQ0FBQyxnQkFBcUIsT0FBTFosTUFBSyxNQUFJWTtRQUN2QyxPQUFPO1lBQUVTLFNBQVM7WUFBT1QsT0FBT0EsTUFBTVcsT0FBTztRQUFDO0lBQ2hEO0FBQ0YsRUFBRTtBQUVGOzs7Ozs7O0NBT0MsR0FDTSxNQUFNQyxrQkFBa0IsZUFBT0MsU0FBUzFCO1FBQVVFLDBFQUFTLHlCQUF5QkMsZ0ZBQWU7SUFDeEcsSUFBSTtRQUNGLE1BQU13QixVQUFVLElBQUlDLEtBQUs7WUFBQ0Y7U0FBUSxFQUFFO1lBQUV6QixNQUFNO1FBQVc7UUFDdkQsTUFBTTRCLFNBQVMsSUFBSUM7UUFDbkIsTUFBTUMsYUFBYSxNQUFNLElBQUl0RCxRQUFRLENBQUNDO1lBQ3BDbUQsT0FBT0csU0FBUyxHQUFHLElBQU10RCxRQUFRbUQsT0FBT04sTUFBTTtZQUM5Q00sT0FBT0ksYUFBYSxDQUFDTjtRQUN2QjtRQUVBLE1BQU1KLFNBQVMsTUFBTXpCLGtCQUFrQmlDLFlBQVkvQixVQUFVLGNBQWNFLFFBQVFDO1FBQ25GLE9BQU9vQjtJQUNULEVBQUUsT0FBT1YsT0FBTztRQUNkRCxRQUFRQyxLQUFLLENBQUMscUJBQXFCQTtRQUNuQyxPQUFPO0lBQ1Q7QUFDRixFQUFFO0FBRUY7OztDQUdDLEdBQ00sTUFBTXFCLGtDQUFrQztJQUM3QyxxREFBcUQ7SUFDckQsSUFBSTtZQU1tQkM7UUFMckIsdUNBQXVDO1FBQ3ZDLE1BQU1DLGFBQWEsTUFBTUMsVUFBVUMsWUFBWSxDQUFDQyxZQUFZLENBQUM7WUFBRUMsT0FBTztRQUFLO1FBQzNFLE1BQU1MLGFBQWFDLFdBQVdLLGNBQWMsRUFBRSxDQUFDLEVBQUU7UUFFakQsbUJBQW1CO1FBQ25CLE1BQU1DLGdCQUFlUCw4QkFBQUEsV0FBV1EsZUFBZSxjQUExQlIsa0RBQUFBLGlDQUFBQTtRQUNyQnZCLFFBQVFPLEdBQUcsQ0FBQyx3QkFBd0J1QjtRQUVwQyw2Q0FBNkM7UUFDN0MsTUFBTUUsV0FBV1QsV0FBV1UsV0FBVztRQUN2Q2pDLFFBQVFPLEdBQUcsQ0FBQyw0QkFBNEJ5QjtRQUV4Qyw0QkFBNEI7UUFDNUJULFdBQVdXLElBQUk7UUFFZixJQUFJSixnQkFBZ0JBLGFBQWEzRCxLQUFLLElBQUkyRCxhQUFhMUQsTUFBTSxFQUFFO1lBQzdELDREQUE0RDtZQUM1RCxNQUFNVixXQUFXb0UsYUFBYTNELEtBQUssQ0FBQ2dFLEdBQUc7WUFDdkMsTUFBTXhFLFlBQVltRSxhQUFhMUQsTUFBTSxDQUFDK0QsR0FBRztZQUV6QywwQ0FBMEM7WUFDMUMsT0FBTztnQkFDTFAsT0FBTztvQkFDTHpELE9BQU87d0JBQUVpRSxPQUFPMUU7b0JBQVM7b0JBQ3pCVSxRQUFRO3dCQUFFZ0UsT0FBT3pFO29CQUFVO29CQUMzQjBFLFdBQVc7d0JBQUVDLE9BQU87b0JBQUcsRUFBRSxrQ0FBa0M7Z0JBQzdEO1lBQ0Y7UUFDRjtJQUNGLEVBQUUsT0FBT3RELEtBQUs7UUFDWmdCLFFBQVFPLEdBQUcsQ0FBQyxzQ0FBc0N2QjtJQUNwRDtJQUVBLDhDQUE4QztJQUM5QyxNQUFNdUQsY0FBYztRQUNsQjtZQUFFcEUsT0FBTztnQkFBRWlFLE9BQU87WUFBSztZQUFHaEUsUUFBUTtnQkFBRWdFLE9BQU87WUFBSztRQUFFO1FBQ2xEO1lBQUVqRSxPQUFPO2dCQUFFaUUsT0FBTztZQUFLO1lBQUdoRSxRQUFRO2dCQUFFZ0UsT0FBTztZQUFLO1FBQUU7UUFDbEQ7WUFBRWpFLE9BQU87Z0JBQUVpRSxPQUFPO1lBQUs7WUFBR2hFLFFBQVE7Z0JBQUVnRSxPQUFPO1lBQUs7UUFBRTtRQUNsRDtZQUFFakUsT0FBTztnQkFBRWlFLE9BQU87WUFBSztZQUFHaEUsUUFBUTtnQkFBRWdFLE9BQU87WUFBSztRQUFFO1FBQ2xEO1lBQUVqRSxPQUFPO2dCQUFFaUUsT0FBTztZQUFLO1lBQUdoRSxRQUFRO2dCQUFFZ0UsT0FBTztZQUFJO1FBQUU7UUFDakQ7WUFBRWpFLE9BQU87Z0JBQUVpRSxPQUFPO1lBQUk7WUFBR2hFLFFBQVE7Z0JBQUVnRSxPQUFPO1lBQUk7UUFBRTtRQUNoRCxDQUFDLEVBQUcsK0JBQStCO0tBQ3BDO0lBRUQsK0NBQStDO0lBQy9DLEtBQUssTUFBTUksY0FBY0QsWUFBYTtRQUNwQyxJQUFJO1lBQ0YsTUFBTUUsY0FBYztnQkFDbEJiLE9BQU87b0JBQ0wsR0FBR1ksVUFBVTtvQkFDYkUsWUFBWTtvQkFDWkwsV0FBVzt3QkFBRUMsT0FBTztvQkFBRztnQkFDekI7WUFDRjtZQUVBLHVDQUF1QztZQUN2QyxNQUFNSyxTQUFTLE1BQU1sQixVQUFVQyxZQUFZLENBQUNDLFlBQVksQ0FBQ2M7WUFFekQsNEJBQTRCO1lBQzVCLE1BQU1sQixhQUFhb0IsT0FBT2QsY0FBYyxFQUFFLENBQUMsRUFBRTtZQUM3QyxNQUFNRyxXQUFXVCxXQUFXVSxXQUFXO1lBQ3ZDakMsUUFBUU8sR0FBRyxDQUFDLHlCQUF5QnlCLFNBQVM3RCxLQUFLLEVBQUUsS0FBSzZELFNBQVM1RCxNQUFNO1lBRXpFLG1DQUFtQztZQUNuQ3VFLE9BQU9DLFNBQVMsR0FBR0MsT0FBTyxDQUFDQyxDQUFBQSxRQUFTQSxNQUFNWixJQUFJO1lBRTlDLE9BQU9PO1FBQ1QsRUFBRSxPQUFPekQsS0FBSztZQUNaZ0IsUUFBUU8sR0FBRyxDQUFDLDZCQUF3RCxPQUEzQlYsS0FBS0MsU0FBUyxDQUFDMEM7UUFDeEQsOEJBQThCO1FBQ2hDO0lBQ0Y7SUFFQSw4Q0FBOEM7SUFDOUMsT0FBTztRQUNMWixPQUFPO1lBQ0x6RCxPQUFPO2dCQUFFaUUsT0FBTztZQUFLO1lBQ3JCaEUsUUFBUTtnQkFBRWdFLE9BQU87WUFBSTtZQUNyQkMsV0FBVztnQkFBRUMsT0FBTztZQUFHO1FBQ3pCO0lBQ0Y7QUFDRixFQUFFO0FBRUY7Ozs7Q0FJQyxHQUNNLE1BQU1TLHVCQUF1QjtRQUFPLEVBQUVDLEtBQUssRUFBRUMsZUFBZSxDQUFDLEVBQUVDLFNBQVMsRUFBRUMsZUFBZSxFQUFFQyxrQkFBa0IsRUFBRTtJQUNwSCxJQUFJO1FBQ0YsTUFBTTlELFNBQVM7UUFFZiw0Q0FBNEM7UUFDNUMsTUFBTStELGlCQUFpQixXQUFzQixPQUFYQyxLQUFLQyxHQUFHO1FBQzFDdkQsUUFBUU8sR0FBRyxDQUFDLCtCQUE4QyxPQUFmOEM7UUFFM0MsMkJBQTJCO1FBQzNCLE1BQU1HLGlCQUFpQixrQkFBbUIsMkNBQTJDO1FBQ3JGLE1BQU1DLGlCQUFpQixrQkFBbUIsMkNBQTJDO1FBQ3JGLE1BQU1DLG9CQUFvQixxQkFBc0IsMkNBQTJDO1FBRTNGLGNBQWM7UUFDZDFELFFBQVFPLEdBQUcsQ0FBQyxtQ0FBbUM4QztRQUUvQyxNQUFNOUUsU0FBUzJFLFVBQVVTLE9BQU87UUFDaEMsSUFBSUMsY0FBYztRQUNsQixJQUFJQyxjQUFjO1FBQ2xCLElBQUlDLGdCQUFnQjtRQUVwQix1Q0FBdUM7UUFDdkMsSUFBSUMsY0FBYztRQUNsQixJQUFJQyxlQUFlO1FBRW5CLDRCQUE0QjtRQUU1QiwwQkFBMEI7UUFDMUIsSUFBSXpGLFFBQVE7WUFDVnFGLGNBQWNyRixPQUFPTyxTQUFTLENBQUM7UUFDakM7UUFFQSxrRUFBa0U7UUFDbEUsNERBQTREO1FBQzVELElBQUltRixxQkFBcUIsTUFBTSxnREFBZ0Q7UUFDL0UsTUFBTUMsZUFBZUMsT0FBT0QsWUFBWSxJQUFJMUYsU0FBUzRGLGFBQWEsQ0FBQztRQUVuRSxJQUFJRixjQUFjO1lBQ2hCLElBQUk7Z0JBQ0YsMENBQTBDO2dCQUMxQyw4Q0FBOEM7Z0JBQzlDLElBQUlHLGdCQUFnQjtnQkFFcEIsSUFBSUgsYUFBYUksU0FBUyxFQUFFO29CQUMxQixNQUFNL0MsYUFBYTJDLGFBQWFJLFNBQVMsQ0FBQ3pDLGNBQWMsRUFBRSxDQUFDLEVBQUU7b0JBQzdELElBQUlOLFlBQVk7d0JBQ2Q4QyxnQkFBZ0I5QyxXQUFXVSxXQUFXO3dCQUN0Q2pDLFFBQVFPLEdBQUcsQ0FBQyx5QkFBeUI4RDtvQkFDdkM7Z0JBQ0Y7Z0JBRUEsaUVBQWlFO2dCQUNqRSxJQUFJQSxpQkFBaUJBLGNBQWNsRyxLQUFLLElBQUlrRyxjQUFjakcsTUFBTSxFQUFFO29CQUNoRTJGLGNBQWNNLGNBQWNsRyxLQUFLO29CQUNqQzZGLGVBQWVLLGNBQWNqRyxNQUFNO29CQUNuQzRCLFFBQVFPLEdBQUcsQ0FBQyxvQ0FBbUR5RCxPQUFmRCxhQUFZLEtBQWdCLE9BQWJDO2dCQUNqRSxPQUFPO29CQUNMRCxjQUFjRyxhQUFhSyxVQUFVLElBQUk7b0JBQ3pDUCxlQUFlRSxhQUFhTSxXQUFXLElBQUk7b0JBQzNDeEUsUUFBUU8sR0FBRyxDQUFDLG1DQUFrRHlELE9BQWZELGFBQVksS0FBZ0IsT0FBYkM7Z0JBQ2hFO2dCQUVBLCtEQUErRDtnQkFDL0QsSUFBSUQsZ0JBQWdCQyxnQkFBZ0JELGNBQWMsS0FBSztvQkFDckQvRCxRQUFRRyxJQUFJLENBQUM7b0JBRWIsZ0NBQWdDO29CQUNoQyxJQUFJK0QsYUFBYUksU0FBUyxFQUFFO3dCQUMxQixNQUFNL0MsYUFBYTJDLGFBQWFJLFNBQVMsQ0FBQ3pDLGNBQWMsRUFBRSxDQUFDLEVBQUU7d0JBQzdELElBQUlOLFlBQVk7NEJBQ2QsTUFBTWtCLGNBQWNsQixXQUFXa0QsY0FBYzs0QkFDN0N6RSxRQUFRTyxHQUFHLENBQUMsc0JBQXNCa0M7NEJBRWxDLDhDQUE4Qzs0QkFDOUMsSUFBSUEsWUFBWXRFLEtBQUssSUFBSXNFLFlBQVlyRSxNQUFNLEVBQUU7Z0NBQzNDLElBQUksT0FBT3FFLFlBQVl0RSxLQUFLLENBQUNpRSxLQUFLLEtBQUssVUFBVTtvQ0FDL0MyQixjQUFjdEIsWUFBWXRFLEtBQUssQ0FBQ2lFLEtBQUs7Z0NBQ3ZDLE9BQU8sSUFBSSxPQUFPSyxZQUFZdEUsS0FBSyxDQUFDbUUsS0FBSyxLQUFLLFVBQVU7b0NBQ3REeUIsY0FBY3RCLFlBQVl0RSxLQUFLLENBQUNtRSxLQUFLO2dDQUN2QztnQ0FFQSxJQUFJLE9BQU9HLFlBQVlyRSxNQUFNLENBQUNnRSxLQUFLLEtBQUssVUFBVTtvQ0FDaEQ0QixlQUFldkIsWUFBWXJFLE1BQU0sQ0FBQ2dFLEtBQUs7Z0NBQ3pDLE9BQU8sSUFBSSxPQUFPSyxZQUFZckUsTUFBTSxDQUFDa0UsS0FBSyxLQUFLLFVBQVU7b0NBQ3ZEMEIsZUFBZXZCLFlBQVlyRSxNQUFNLENBQUNrRSxLQUFLO2dDQUN6QztnQ0FFQXRDLFFBQVFPLEdBQUcsQ0FBQyx3Q0FBdUR5RCxPQUFmRCxhQUFZLEtBQWdCLE9BQWJDOzRCQUNyRTt3QkFDRjtvQkFDRjtnQkFDRjtnQkFFQSw0REFBNEQ7Z0JBQzVELElBQUlELGVBQWUsS0FBS0MsZ0JBQWdCLEdBQUc7b0JBQ3pDaEUsUUFBUUcsSUFBSSxDQUFDO29CQUNiNEQsY0FBYztvQkFDZEMsZUFBZTtnQkFDakI7Z0JBRUEsTUFBTVUsYUFBYWxHLFNBQVNDLGFBQWEsQ0FBQztnQkFDMUNpRyxXQUFXdkcsS0FBSyxHQUFHNEY7Z0JBQ25CVyxXQUFXdEcsTUFBTSxHQUFHNEY7Z0JBQ3BCVSxXQUFXL0YsVUFBVSxDQUFDLE1BQU1DLFNBQVMsQ0FBQ3NGLGNBQWMsR0FBRyxHQUFHSCxhQUFhQztnQkFFdkUsNENBQTRDO2dCQUM1Q0gsY0FBY2EsV0FBVzVGLFNBQVMsQ0FBQyxjQUFjO2dCQUVqRCw4Q0FBOEM7Z0JBQzlDbUYscUJBQXFCLE1BQU16RyxZQUFZcUcsYUFBYSxLQUFLLEtBQUs7Z0JBRTlEN0QsUUFBUU8sR0FBRyxDQUFDLDBDQUF5RHlELE9BQWZELGFBQVksS0FBZ0IsT0FBYkM7WUFDdkUsRUFBRSxPQUFPaEYsS0FBSztnQkFDWmdCLFFBQVFDLEtBQUssQ0FBQyxnREFBZ0RqQjtnQkFDOUQrRSxjQUFjRyxhQUFhSyxVQUFVLElBQUk7Z0JBQ3pDUCxlQUFlRSxhQUFhTSxXQUFXLElBQUk7WUFDN0M7UUFDRixPQUFPO1lBQ0wsSUFBSTtnQkFDRixxREFBcUQ7Z0JBQ3JELE1BQU0vQixjQUFjLE1BQU1uQjtnQkFDMUJ0QixRQUFRTyxHQUFHLENBQUMsNkJBQTZCa0M7Z0JBRXpDLDRDQUE0QztnQkFDNUMsTUFBTUUsU0FBUyxNQUFNbEIsVUFBVUMsWUFBWSxDQUFDQyxZQUFZLENBQUNjO2dCQUV6RCxpREFBaUQ7Z0JBQ2pELE1BQU1sQixhQUFhb0IsT0FBT2QsY0FBYyxFQUFFLENBQUMsRUFBRTtnQkFDN0MsTUFBTXdDLGdCQUFnQjlDLFdBQVdVLFdBQVc7Z0JBQzVDakMsUUFBUU8sR0FBRyxDQUFDLDJCQUEyQjhEO2dCQUV2QyxtREFBbUQ7Z0JBQ25ELE1BQU1NLFlBQVluRyxTQUFTQyxhQUFhLENBQUM7Z0JBQ3pDa0csVUFBVUwsU0FBUyxHQUFHM0I7Z0JBQ3RCZ0MsVUFBVUMsS0FBSyxHQUFHO2dCQUNsQkQsVUFBVUUsV0FBVyxHQUFHO2dCQUN4QkYsVUFBVUcsUUFBUSxHQUFHO2dCQUNyQnRHLFNBQVNvQixJQUFJLENBQUNtRixXQUFXLENBQUNKO2dCQUUxQiwyQ0FBMkM7Z0JBQzNDLE1BQU0sSUFBSTlHLFFBQVFDLENBQUFBO29CQUNoQjZHLFVBQVVLLGdCQUFnQixHQUFHO3dCQUMzQkwsVUFBVU0sSUFBSTt3QkFDZG5IO29CQUNGO29CQUNBLDRDQUE0QztvQkFDNUNvSCxXQUFXcEgsU0FBUztnQkFDdEI7Z0JBRUEsNERBQTREO2dCQUM1RCxNQUFNLElBQUlELFFBQVFzSCxDQUFBQSxNQUFPRCxXQUFXQyxLQUFLO2dCQUV6Qyx5RUFBeUU7Z0JBQ3pFLElBQUlkLGlCQUFpQkEsY0FBY2xHLEtBQUssSUFBSWtHLGNBQWNqRyxNQUFNLEVBQUU7b0JBQ2hFMkYsY0FBY00sY0FBY2xHLEtBQUs7b0JBQ2pDNkYsZUFBZUssY0FBY2pHLE1BQU07b0JBQ25DNEIsUUFBUU8sR0FBRyxDQUFDLHdDQUF1RHlELE9BQWZELGFBQVksS0FBZ0IsT0FBYkM7Z0JBQ3JFLE9BQU87b0JBQ0xELGNBQWNZLFVBQVVKLFVBQVUsSUFBSTtvQkFDdENQLGVBQWVXLFVBQVVILFdBQVcsSUFBSTtvQkFDeEN4RSxRQUFRTyxHQUFHLENBQUMsdUNBQXNEeUQsT0FBZkQsYUFBWSxLQUFnQixPQUFiQztnQkFDcEU7Z0JBRUEsOEJBQThCO2dCQUM5QixJQUFJRCxlQUFlLEtBQUtDLGdCQUFnQixHQUFHO29CQUN6Q2hFLFFBQVFHLElBQUksQ0FBQztvQkFDYixJQUFJc0MsWUFBWWIsS0FBSyxJQUFJLE9BQU9hLFlBQVliLEtBQUssS0FBSyxVQUFVO3dCQUM5RCxJQUFJYSxZQUFZYixLQUFLLENBQUN6RCxLQUFLLElBQUlzRSxZQUFZYixLQUFLLENBQUN6RCxLQUFLLENBQUNpRSxLQUFLLEVBQUU7NEJBQzVEMkIsY0FBY3RCLFlBQVliLEtBQUssQ0FBQ3pELEtBQUssQ0FBQ2lFLEtBQUs7d0JBQzdDO3dCQUNBLElBQUlLLFlBQVliLEtBQUssQ0FBQ3hELE1BQU0sSUFBSXFFLFlBQVliLEtBQUssQ0FBQ3hELE1BQU0sQ0FBQ2dFLEtBQUssRUFBRTs0QkFDOUQ0QixlQUFldkIsWUFBWWIsS0FBSyxDQUFDeEQsTUFBTSxDQUFDZ0UsS0FBSzt3QkFDL0M7b0JBQ0Y7b0JBRUEsSUFBSTJCLGVBQWUsS0FBS0MsZ0JBQWdCLEdBQUc7d0JBQ3pDaEUsUUFBUUcsSUFBSSxDQUFDO3dCQUNiNEQsY0FBYzt3QkFDZEMsZUFBZTtvQkFDakI7Z0JBQ0Y7Z0JBRUEsaUVBQWlFO2dCQUNqRSxJQUFJRCxnQkFBZ0JDLGdCQUFnQkQsY0FBYyxLQUFLO3dCQUdoQ3hDO29CQUZyQnZCLFFBQVFHLElBQUksQ0FBQztvQkFDYixzQ0FBc0M7b0JBQ3RDLE1BQU0yQixnQkFBZVAsOEJBQUFBLFdBQVdRLGVBQWUsY0FBMUJSLGtEQUFBQSxpQ0FBQUE7b0JBQ3JCLElBQUlPLGdCQUFnQkEsYUFBYTNELEtBQUssSUFBSTJELGFBQWExRCxNQUFNLEVBQUU7d0JBQzdELElBQUkwRCxhQUFhM0QsS0FBSyxDQUFDZ0UsR0FBRyxJQUFJTCxhQUFhMUQsTUFBTSxDQUFDK0QsR0FBRyxFQUFFOzRCQUNyRCxnRUFBZ0U7NEJBQ2hFLE1BQU1pRCxjQUFjdEQsYUFBYTNELEtBQUssQ0FBQ2dFLEdBQUcsR0FBR0wsYUFBYTFELE1BQU0sQ0FBQytELEdBQUc7NEJBRXBFLElBQUk5RCxLQUFLZ0gsR0FBRyxDQUFDRCxjQUFjLFFBQVEsS0FBSztnQ0FDdENwQixlQUFlM0YsS0FBS0MsS0FBSyxDQUFDeUYsY0FBYztnQ0FDeEMvRCxRQUFRTyxHQUFHLENBQUMsa0NBQWlEeUQsT0FBZkQsYUFBWSxLQUFnQixPQUFiQzs0QkFDL0QsT0FBTyxJQUFJM0YsS0FBS2dILEdBQUcsQ0FBQ0QsY0FBYyxRQUFRLEtBQUs7Z0NBQzdDcEIsZUFBZTNGLEtBQUtDLEtBQUssQ0FBQ3lGLGNBQWM7Z0NBQ3hDL0QsUUFBUU8sR0FBRyxDQUFDLG1DQUFrRHlELE9BQWZELGFBQVksS0FBZ0IsT0FBYkM7NEJBQ2hFO3dCQUNGO29CQUNGO2dCQUNGO2dCQUVBLE1BQU1VLGFBQWFsRyxTQUFTQyxhQUFhLENBQUM7Z0JBQzFDaUcsV0FBV3ZHLEtBQUssR0FBRzRGO2dCQUNuQlcsV0FBV3RHLE1BQU0sR0FBRzRGO2dCQUNwQlUsV0FBVy9GLFVBQVUsQ0FBQyxNQUFNQyxTQUFTLENBQUMrRixXQUFXLEdBQUcsR0FBR1osYUFBYUM7Z0JBRXBFLDRDQUE0QztnQkFDNUNILGNBQWNhLFdBQVc1RixTQUFTLENBQUMsY0FBYztnQkFFakQsOENBQThDO2dCQUM5Q21GLHFCQUFxQixNQUFNekcsWUFBWXFHLGFBQWEsS0FBSyxLQUFLO2dCQUU5RDdELFFBQVFPLEdBQUcsQ0FBQyw0Q0FBMkR5RCxPQUFmRCxhQUFZLEtBQWdCLE9BQWJDO2dCQUV2RSxXQUFXO2dCQUNYckIsT0FBT0MsU0FBUyxHQUFHQyxPQUFPLENBQUN5QyxDQUFBQSxJQUFLQSxFQUFFcEQsSUFBSTtnQkFDdEN5QyxVQUFVWSxNQUFNO1lBQ2xCLEVBQUUsT0FBT3ZHLEtBQUs7Z0JBQ1pnQixRQUFRRyxJQUFJLENBQUMsMENBQTBDbkI7Z0JBRXZELDJDQUEyQztnQkFDM0MsSUFBSTtvQkFDRixNQUFNMkQsU0FBUyxNQUFNbEIsVUFBVUMsWUFBWSxDQUFDQyxZQUFZLENBQUM7d0JBQUVDLE9BQU87b0JBQUs7b0JBQ3ZFLE1BQU1MLGFBQWFvQixPQUFPZCxjQUFjLEVBQUUsQ0FBQyxFQUFFO29CQUM3QyxNQUFNd0MsZ0JBQWdCOUMsV0FBV1UsV0FBVztvQkFFNUMsTUFBTTBDLFlBQVluRyxTQUFTQyxhQUFhLENBQUM7b0JBQ3pDa0csVUFBVUwsU0FBUyxHQUFHM0I7b0JBQ3RCZ0MsVUFBVUMsS0FBSyxHQUFHO29CQUNsQkQsVUFBVUUsV0FBVyxHQUFHO29CQUN4QnJHLFNBQVNvQixJQUFJLENBQUNtRixXQUFXLENBQUNKO29CQUMxQixNQUFNQSxVQUFVTSxJQUFJO29CQUNwQixNQUFNLElBQUlwSCxRQUFRc0gsQ0FBQUEsTUFBT0QsV0FBV0MsS0FBSztvQkFFekMsa0RBQWtEO29CQUNsRCxJQUFJZCxpQkFBaUJBLGNBQWNsRyxLQUFLLElBQUlrRyxjQUFjakcsTUFBTSxFQUFFO3dCQUNoRTJGLGNBQWNNLGNBQWNsRyxLQUFLO3dCQUNqQzZGLGVBQWVLLGNBQWNqRyxNQUFNO29CQUNyQyxPQUFPO3dCQUNMMkYsY0FBY1ksVUFBVUosVUFBVSxJQUFJO3dCQUN0Q1AsZUFBZVcsVUFBVUgsV0FBVyxJQUFJO29CQUMxQztvQkFFQSxxQ0FBcUM7b0JBQ3JDLElBQUlULGVBQWUsS0FBS0MsZ0JBQWdCLEdBQUc7d0JBQ3pDRCxjQUFjO3dCQUNkQyxlQUFlO29CQUNqQjtvQkFFQSxNQUFNVSxhQUFhbEcsU0FBU0MsYUFBYSxDQUFDO29CQUMxQ2lHLFdBQVd2RyxLQUFLLEdBQUc0RjtvQkFDbkJXLFdBQVd0RyxNQUFNLEdBQUc0RjtvQkFDcEJVLFdBQVcvRixVQUFVLENBQUMsTUFBTUMsU0FBUyxDQUFDK0YsV0FBVyxHQUFHLEdBQUdaLGFBQWFDO29CQUVwRSw0Q0FBNEM7b0JBQzVDSCxjQUFjYSxXQUFXNUYsU0FBUyxDQUFDLGNBQWM7b0JBRWpELDhDQUE4QztvQkFDOUNtRixxQkFBcUIsTUFBTXpHLFlBQVlxRyxhQUFhLEtBQUssS0FBSztvQkFFOUQ3RCxRQUFRTyxHQUFHLENBQUMscUNBQW9EeUQsT0FBZkQsYUFBWSxLQUFnQixPQUFiQztvQkFFaEVyQixPQUFPQyxTQUFTLEdBQUdDLE9BQU8sQ0FBQ3lDLENBQUFBLElBQUtBLEVBQUVwRCxJQUFJO29CQUN0Q3lDLFVBQVVZLE1BQU07Z0JBQ2xCLEVBQUUsT0FBT0MsYUFBYTtvQkFDcEJ4RixRQUFRQyxLQUFLLENBQUMsc0NBQXNDdUY7b0JBQ3BEekIsY0FBYztvQkFDZEMsZUFBZTtnQkFDakI7WUFDRjtRQUNGO1FBRUEsdURBQXVEO1FBQ3ZELE1BQU1sRCxVQUFVO1lBQ2Q7WUFDQyxTQUFnQixPQUFSa0MsTUFBTXlDLENBQUM7WUFDZixTQUFnQixPQUFSekMsTUFBTTBDLENBQUM7WUFDZixnQkFBa0MsT0FBbkJuSCxDQUFBQSxtQkFBQUEsNkJBQUFBLE9BQVFKLEtBQUssS0FBSTtZQUNoQyxpQkFBb0MsT0FBcEJJLENBQUFBLG1CQUFBQSw2QkFBQUEsT0FBUUgsTUFBTSxLQUFJO1lBQ2xDLGdCQUFpQyxPQUFsQitGLE9BQU93QixVQUFVO1lBQ2hDLGlCQUFtQyxPQUFuQnhCLE9BQU95QixXQUFXO1lBQ2xDLDJCQUFzQyxPQUFaN0I7WUFDMUIsNEJBQXdDLE9BQWJDO1lBQzNCLGFBQXFDLE9BQXpCLElBQUlWLE9BQU91QyxXQUFXO1lBQ2xDLFlBQTBCLE9BQWZ4QztTQUNiLENBQUN5QyxJQUFJLENBQUM7UUFFUCx1RUFBdUU7UUFFdkUsMEJBQTBCO1FBQzFCLE1BQU1DLGNBQWMsTUFBTWxGLGdCQUFnQkMsU0FBUzRDLG1CQUFtQnBFLFFBQVErRDtRQUU5RSxJQUFJMEMsZUFBZUEsWUFBWXJGLE9BQU8sRUFBRTtZQUN0Q29ELGdCQUFnQmlDLFlBQVlDLE1BQU07WUFDbENoRyxRQUFRTyxHQUFHLENBQUMsbUNBQStEOEMsT0FBNUJTLGVBQWMsZ0JBQTZCLE9BQWZUO1FBQzdFO1FBRUEscUNBQXFDO1FBQ3JDLElBQUk0QyxlQUFlO1FBQ25CLElBQUlyQyxhQUFhO1lBQ2ZxQyxlQUFlLE1BQU0vRyxrQkFBa0IwRSxhQUFhSixnQkFBZ0IsVUFBVWxFLFFBQVErRDtRQUN4RjtRQUVBLHFDQUFxQztRQUNyQyxJQUFJNkMsZUFBZTtRQUNuQixJQUFJckMsYUFBYTtZQUNmcUMsZUFBZSxNQUFNaEgsa0JBQWtCMkUsYUFBYUosZ0JBQWdCLFVBQVVuRSxRQUFRK0Q7UUFDeEY7UUFFQSwyRUFBMkU7UUFDM0UsSUFBSUQsc0JBQXNCLE9BQU9BLHVCQUF1QixZQUFZO1lBQ2xFQSxtQkFBbUJRLGFBQWFLLHNCQUFzQkosYUFBYWI7UUFDckU7UUFFQSx3Q0FBd0M7UUFDeEMsSUFBSUcsbUJBQW1CLE9BQU9BLG9CQUFvQixZQUFZO1lBQzVEQSxnQkFBZ0JnRCxDQUFBQSxZQUFhQSxZQUFZO1FBQzNDO1FBRUEsc0RBQXNEO1FBQ3RELE9BQU87WUFDTHZDO1lBQ0FDO1lBQ0FuRCxTQUFTO1lBQ1RzQztZQUNBYztZQUNBc0MsU0FBUy9DO1lBQ1RVO1lBQ0FDO1FBQ0Y7SUFDRixFQUFFLE9BQU9oRixLQUFLO1FBQ1pnQixRQUFRQyxLQUFLLENBQUMsZ0NBQWdDakI7UUFDOUMsT0FBTztZQUNMMEIsU0FBUztZQUNUVCxPQUFPakIsSUFBSTRCLE9BQU87WUFDbEJnRCxhQUFhO1lBQ2JDLGFBQWE7WUFDYkUsYUFBYTtZQUNiQyxjQUFjO1FBQ2hCO0lBQ0Y7QUFDRixFQUFFIiwic291cmNlcyI6WyIvYXBwL2NvbXBvbmVudHMvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZC9IZWxwZXIvc2F2ZWZpbGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSGVscGVyL3NhdmVmaWxlLmpzIC0gQWRkZWQgaGlnaGVzdCByZXNvbHV0aW9uIHdlYmNhbSBjYXB0dXJlXG5cbi8qKlxuICogUmVzaXplIGFuIGltYWdlIHRvIGZpdCB3aXRoaW4gYSBjZXJ0YWluIHNpemUgbGltaXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBpbWFnZURhdGFVcmwgLSBCYXNlNjQgZW5jb2RlZCBpbWFnZSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gbWF4V2lkdGggLSBNYXhpbXVtIHdpZHRoIG9mIHRoZSByZXNpemVkIGltYWdlXG4gKiBAcGFyYW0ge251bWJlcn0gbWF4SGVpZ2h0IC0gTWF4aW11bSBoZWlnaHQgb2YgdGhlIHJlc2l6ZWQgaW1hZ2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBxdWFsaXR5IC0gSlBFRyBxdWFsaXR5ICgwLTEpXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSAtIFJlc2l6ZWQgaW1hZ2UgZGF0YSBVUkxcbiAqL1xuY29uc3QgcmVzaXplSW1hZ2UgPSBhc3luYyAoaW1hZ2VEYXRhVXJsLCBtYXhXaWR0aCA9IDgwMCwgbWF4SGVpZ2h0ID0gNjAwLCBxdWFsaXR5ID0gMC44NSkgPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgIGltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIC8vIENhbGN1bGF0ZSBuZXcgZGltZW5zaW9ucyB3aGlsZSBtYWludGFpbmluZyBhc3BlY3QgcmF0aW9cbiAgICAgICAgbGV0IHdpZHRoID0gaW1nLndpZHRoO1xuICAgICAgICBsZXQgaGVpZ2h0ID0gaW1nLmhlaWdodDtcbiAgICAgICAgXG4gICAgICAgIGlmICh3aWR0aCA+IG1heFdpZHRoKSB7XG4gICAgICAgICAgaGVpZ2h0ID0gTWF0aC5yb3VuZChoZWlnaHQgKiAobWF4V2lkdGggLyB3aWR0aCkpO1xuICAgICAgICAgIHdpZHRoID0gbWF4V2lkdGg7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGlmIChoZWlnaHQgPiBtYXhIZWlnaHQpIHtcbiAgICAgICAgICB3aWR0aCA9IE1hdGgucm91bmQod2lkdGggKiAobWF4SGVpZ2h0IC8gaGVpZ2h0KSk7XG4gICAgICAgICAgaGVpZ2h0ID0gbWF4SGVpZ2h0O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBDcmVhdGUgY2FudmFzIGZvciByZXNpemluZ1xuICAgICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcbiAgICAgICAgY2FudmFzLndpZHRoID0gd2lkdGg7XG4gICAgICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgIFxuICAgICAgICAvLyBEcmF3IGFuZCByZXNpemUgaW1hZ2Ugb24gY2FudmFzXG4gICAgICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMCwgd2lkdGgsIGhlaWdodCk7XG4gICAgICAgIFxuICAgICAgICAvLyBDb252ZXJ0IHRvIEpQRUcgd2l0aCBzcGVjaWZpZWQgcXVhbGl0eVxuICAgICAgICBjb25zdCByZXNpemVkRGF0YVVybCA9IGNhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL2pwZWcnLCBxdWFsaXR5KTtcbiAgICAgICAgcmVzb2x2ZShyZXNpemVkRGF0YVVybCk7XG4gICAgICB9O1xuICAgICAgXG4gICAgICBpbWcub25lcnJvciA9IChlcnIpID0+IHJlamVjdChlcnIpO1xuICAgICAgaW1nLnNyYyA9IGltYWdlRGF0YVVybDtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJlamVjdChlcnIpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIFNhdmUgYW4gaW1hZ2Ugb3IgZGF0YSB0byB0aGUgc2VydmVyIHdpdGggZ3JvdXAgSUQgdG8gZW5zdXJlIGNvbnNpc3RlbnQgbnVtYmVyaW5nXG4gKiBAcGFyYW0ge3N0cmluZ30gaW1hZ2VEYXRhIC0gQmFzZTY0IGVuY29kZWQgaW1hZ2UgZGF0YVxuICogQHBhcmFtIHtzdHJpbmd9IGZpbGVuYW1lIC0gRmlsZW5hbWUgcGF0dGVybiB0byBzYXZlIGFzXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZSAtIFR5cGUgb2YgZmlsZSAoc2NyZWVuLCB3ZWJjYW0sIHBhcmFtZXRlcnMpXG4gKiBAcGFyYW0ge3N0cmluZ30gZm9sZGVyIC0gRm9sZGVyIHRvIHNhdmUgaW5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjYXB0dXJlR3JvdXAgLSBVbmlxdWUgSUQgZm9yIGdyb3VwaW5nIGZpbGVzIGZyb20gdGhlIHNhbWUgY2FwdHVyZVxuICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gLSBTZXJ2ZXIgcmVzcG9uc2VcbiAqL1xuZXhwb3J0IGNvbnN0IHNhdmVJbWFnZVRvU2VydmVyID0gYXN5bmMgKGltYWdlRGF0YSwgZmlsZW5hbWUsIHR5cGUsIGZvbGRlciA9ICdleWVfdHJhY2tpbmdfY2FwdHVyZXMnLCBjYXB0dXJlR3JvdXAgPSBudWxsKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9zYXZlLWNhcHR1cmUnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgXG4gICAgICAgIGltYWdlRGF0YSwgXG4gICAgICAgIGZpbGVuYW1lLCBcbiAgICAgICAgdHlwZSwgXG4gICAgICAgIGZvbGRlcixcbiAgICAgICAgY2FwdHVyZUdyb3VwIC8vIEluY2x1ZGUgdGhlIGNhcHR1cmUgZ3JvdXAgSURcbiAgICAgIH0pXG4gICAgfSk7XG4gICAgXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgY29uc29sZS5lcnJvcihgU2VydmVyIHJldHVybmVkICR7cmVzcG9uc2Uuc3RhdHVzfSBmb3IgJHt0eXBlfWApO1xuICAgICAgXG4gICAgICAvLyBJZiB0aGUgZXJyb3IgaXMgNDEzIChwYXlsb2FkIHRvbyBsYXJnZSkgYW5kIGl0J3MgYW4gaW1hZ2UsIHRyeSByZXNpemluZ1xuICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDEzICYmIHR5cGUgIT09ICdwYXJhbWV0ZXJzJykge1xuICAgICAgICBjb25zb2xlLndhcm4oYEltYWdlIHRvbyBsYXJnZSBmb3Igc2VydmVyICg0MTMgZXJyb3IpLCB3aWxsIHJlc2l6ZSBhbmQgcmV0cnlgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFN0YXJ0IHdpdGggaGlnaGVyIHF1YWxpdHkgYW5kIHByb2dyZXNzaXZlbHkgcmVkdWNlIHF1YWxpdHkvc2l6ZSB1bnRpbCBpdCBmaXRzXG4gICAgICAgIGNvbnN0IHNpemVzID0gW1xuICAgICAgICAgIHsgd2lkdGg6IDE5MjAsIGhlaWdodDogMTA4MCwgcXVhbGl0eTogMC45IH0sXG4gICAgICAgICAgeyB3aWR0aDogMTI4MCwgaGVpZ2h0OiA3MjAsIHF1YWxpdHk6IDAuODUgfSxcbiAgICAgICAgICB7IHdpZHRoOiA4MDAsIGhlaWdodDogNjAwLCBxdWFsaXR5OiAwLjggfSxcbiAgICAgICAgICB7IHdpZHRoOiA2NDAsIGhlaWdodDogNDgwLCBxdWFsaXR5OiAwLjc1IH1cbiAgICAgICAgXTtcbiAgICAgICAgXG4gICAgICAgIGZvciAoY29uc3QgeyB3aWR0aCwgaGVpZ2h0LCBxdWFsaXR5IH0gb2Ygc2l6ZXMpIHtcbiAgICAgICAgICBjb25zdCByZXNpemVkSW1hZ2UgPSBhd2FpdCByZXNpemVJbWFnZShpbWFnZURhdGEsIHdpZHRoLCBoZWlnaHQsIHF1YWxpdHkpO1xuICAgICAgICAgIFxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXRyeVJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvc2F2ZS1jYXB0dXJlJywge1xuICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBcbiAgICAgICAgICAgICAgICBpbWFnZURhdGE6IHJlc2l6ZWRJbWFnZSwgXG4gICAgICAgICAgICAgICAgZmlsZW5hbWUsIFxuICAgICAgICAgICAgICAgIHR5cGUsIFxuICAgICAgICAgICAgICAgIGZvbGRlcixcbiAgICAgICAgICAgICAgICBjYXB0dXJlR3JvdXBcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAocmV0cnlSZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgU3VjY2Vzc2Z1bGx5IHNhdmVkIHJlc2l6ZWQgJHt0eXBlfSBhdCAke3dpZHRofXgke2hlaWdodH0sIHF1YWxpdHkgJHtxdWFsaXR5fWApO1xuICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgcmV0cnlSZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAocmV0cnlFcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgZHVyaW5nIHJldHJ5IGZvciAke3R5cGV9OmAsIHJldHJ5RXJyb3IpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBcIkZhaWxlZCB0byBzYXZlIGltYWdlIGV2ZW4gYWZ0ZXIgcmVzaXppbmdcIiB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGBTZXJ2ZXIgcmV0dXJuZWQgJHtyZXNwb25zZS5zdGF0dXN9YCB9O1xuICAgIH1cbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKGBFcnJvciBzYXZpbmcgJHt0eXBlfTpgLCBlcnJvcik7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBlcnJvci5tZXNzYWdlIH07XG4gIH1cbn07XG5cbi8qKlxuICogU2F2ZSBDU1YgZGF0YSB0byB0aGUgc2VydmVyXG4gKiBAcGFyYW0ge3N0cmluZ30gY3N2RGF0YSAtIENTViBkYXRhXG4gKiBAcGFyYW0ge3N0cmluZ30gZmlsZW5hbWUgLSBGaWxlbmFtZSBwYXR0ZXJuIHRvIHNhdmUgYXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBmb2xkZXIgLSBGb2xkZXIgdG8gc2F2ZSBpblxuICogQHBhcmFtIHtzdHJpbmd9IGNhcHR1cmVHcm91cCAtIFVuaXF1ZSBJRCBmb3IgZ3JvdXBpbmcgZmlsZXMgZnJvbSB0aGUgc2FtZSBjYXB0dXJlXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSAtIFNlcnZlciByZXNwb25zZVxuICovXG5leHBvcnQgY29uc3Qgc2F2ZUNTVlRvU2VydmVyID0gYXN5bmMgKGNzdkRhdGEsIGZpbGVuYW1lLCBmb2xkZXIgPSAnZXllX3RyYWNraW5nX2NhcHR1cmVzJywgY2FwdHVyZUdyb3VwID0gbnVsbCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNzdkJsb2IgPSBuZXcgQmxvYihbY3N2RGF0YV0sIHsgdHlwZTogJ3RleHQvY3N2JyB9KTtcbiAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIGNvbnN0IGNzdkRhdGFVcmwgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgcmVhZGVyLm9ubG9hZGVuZCA9ICgpID0+IHJlc29sdmUocmVhZGVyLnJlc3VsdCk7XG4gICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChjc3ZCbG9iKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHNhdmVJbWFnZVRvU2VydmVyKGNzdkRhdGFVcmwsIGZpbGVuYW1lLCAncGFyYW1ldGVycycsIGZvbGRlciwgY2FwdHVyZUdyb3VwKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNhdmluZyBDU1Y6JywgZXJyb3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59O1xuXG4vKipcbiAqIEdldCB0aGUgaGlnaGVzdCByZXNvbHV0aW9uIGNhbWVyYSBjb25zdHJhaW50cyBzdXBwb3J0ZWQgYnkgdGhlIGRldmljZVxuICogQHJldHVybnMge1Byb21pc2U8TWVkaWFTdHJlYW1Db25zdHJhaW50cz59IC0gQ2FtZXJhIGNvbnN0cmFpbnRzIHdpdGggaGlnaGVzdCByZXNvbHV0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRIaWdoZXN0UmVzb2x1dGlvbkNvbnN0cmFpbnRzID0gYXN5bmMgKCkgPT4ge1xuICAvLyBUcnkgdG8gZ2V0IGFsbCBhdmFpbGFibGUgY2FtZXJhIGNhcGFiaWxpdGllcyBmaXJzdFxuICB0cnkge1xuICAgIC8vIEdldCBhIHRlbXBvcmFyeSBhY2Nlc3MgdG8gdGhlIGNhbWVyYVxuICAgIGNvbnN0IHRlbXBTdHJlYW0gPSBhd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7IHZpZGVvOiB0cnVlIH0pO1xuICAgIGNvbnN0IHZpZGVvVHJhY2sgPSB0ZW1wU3RyZWFtLmdldFZpZGVvVHJhY2tzKClbMF07XG4gICAgXG4gICAgLy8gR2V0IGNhcGFiaWxpdGllc1xuICAgIGNvbnN0IGNhcGFiaWxpdGllcyA9IHZpZGVvVHJhY2suZ2V0Q2FwYWJpbGl0aWVzPy4oKTtcbiAgICBjb25zb2xlLmxvZyhcIkNhbWVyYSBjYXBhYmlsaXRpZXM6XCIsIGNhcGFiaWxpdGllcyk7XG4gICAgXG4gICAgLy8gR2V0IGN1cnJlbnQgc2V0dGluZ3MgdG8gY2hlY2sgYXNwZWN0IHJhdGlvXG4gICAgY29uc3Qgc2V0dGluZ3MgPSB2aWRlb1RyYWNrLmdldFNldHRpbmdzKCk7XG4gICAgY29uc29sZS5sb2coXCJDdXJyZW50IGNhbWVyYSBzZXR0aW5nczpcIiwgc2V0dGluZ3MpO1xuICAgIFxuICAgIC8vIFN0b3AgdGhlIHRlbXBvcmFyeSBzdHJlYW1cbiAgICB2aWRlb1RyYWNrLnN0b3AoKTtcbiAgICBcbiAgICBpZiAoY2FwYWJpbGl0aWVzICYmIGNhcGFiaWxpdGllcy53aWR0aCAmJiBjYXBhYmlsaXRpZXMuaGVpZ2h0KSB7XG4gICAgICAvLyBVc2UgdGhlIG1heGltdW0gd2lkdGggYW5kIGhlaWdodCBmcm9tIGRldmljZSBjYXBhYmlsaXRpZXNcbiAgICAgIGNvbnN0IG1heFdpZHRoID0gY2FwYWJpbGl0aWVzLndpZHRoLm1heDtcbiAgICAgIGNvbnN0IG1heEhlaWdodCA9IGNhcGFiaWxpdGllcy5oZWlnaHQubWF4O1xuICAgICAgXG4gICAgICAvLyBGb3JjZSBleGFjdCByZXNvbHV0aW9uIGluc3RlYWQgb2YgaWRlYWxcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHZpZGVvOiB7XG4gICAgICAgICAgd2lkdGg6IHsgZXhhY3Q6IG1heFdpZHRoIH0sXG4gICAgICAgICAgaGVpZ2h0OiB7IGV4YWN0OiBtYXhIZWlnaHQgfSxcbiAgICAgICAgICBmcmFtZVJhdGU6IHsgaWRlYWw6IDMwIH0gLy8gVHJ5IHRvIG1haW50YWluIGdvb2QgZnJhbWUgcmF0ZVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coXCJDb3VsZCBub3QgZ2V0IGNhbWVyYSBjYXBhYmlsaXRpZXM6XCIsIGVycik7XG4gIH1cbiAgXG4gIC8vIEZhbGxiYWNrOiB0cnkgc3RhbmRhcmQgcmVzb2x1dGlvbnMgaW4gb3JkZXJcbiAgY29uc3QgcmVzb2x1dGlvbnMgPSBbXG4gICAgeyB3aWR0aDogeyBleGFjdDogNDA5NiB9LCBoZWlnaHQ6IHsgZXhhY3Q6IDIxNjAgfSB9LCAvLyA0S1xuICAgIHsgd2lkdGg6IHsgZXhhY3Q6IDM4NDAgfSwgaGVpZ2h0OiB7IGV4YWN0OiAyMTYwIH0gfSwgLy8gNEsgVUhEXG4gICAgeyB3aWR0aDogeyBleGFjdDogMjU2MCB9LCBoZWlnaHQ6IHsgZXhhY3Q6IDE0NDAgfSB9LCAvLyAySyBRSERcbiAgICB7IHdpZHRoOiB7IGV4YWN0OiAxOTIwIH0sIGhlaWdodDogeyBleGFjdDogMTA4MCB9IH0sIC8vIEZ1bGwgSERcbiAgICB7IHdpZHRoOiB7IGV4YWN0OiAxMjgwIH0sIGhlaWdodDogeyBleGFjdDogNzIwIH0gfSwgIC8vIEhEXG4gICAgeyB3aWR0aDogeyBleGFjdDogNjQwIH0sIGhlaWdodDogeyBleGFjdDogNDgwIH0gfSwgICAvLyBWR0FcbiAgICB7fSAgLy8gRGVmYXVsdCAtIGxldCBicm93c2VyIGRlY2lkZVxuICBdO1xuXG4gIC8vIFRyeSB0aGUgcmVzb2x1dGlvbnMgaW4gb3JkZXIgdW50aWwgb25lIHdvcmtzXG4gIGZvciAoY29uc3QgcmVzb2x1dGlvbiBvZiByZXNvbHV0aW9ucykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBjb25zdHJhaW50cyA9IHtcbiAgICAgICAgdmlkZW86IHtcbiAgICAgICAgICAuLi5yZXNvbHV0aW9uLFxuICAgICAgICAgIGZhY2luZ01vZGU6IFwidXNlclwiLFxuICAgICAgICAgIGZyYW1lUmF0ZTogeyBpZGVhbDogMzAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgXG4gICAgICAvLyBUZXN0IGlmIHRoaXMgcmVzb2x1dGlvbiBpcyBzdXBwb3J0ZWRcbiAgICAgIGNvbnN0IHN0cmVhbSA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKGNvbnN0cmFpbnRzKTtcbiAgICAgIFxuICAgICAgLy8gR2V0IHRoZSBhY3R1YWwgZGltZW5zaW9uc1xuICAgICAgY29uc3QgdmlkZW9UcmFjayA9IHN0cmVhbS5nZXRWaWRlb1RyYWNrcygpWzBdO1xuICAgICAgY29uc3Qgc2V0dGluZ3MgPSB2aWRlb1RyYWNrLmdldFNldHRpbmdzKCk7XG4gICAgICBjb25zb2xlLmxvZyhcIlN1cHBvcnRlZCByZXNvbHV0aW9uOlwiLCBzZXR0aW5ncy53aWR0aCwgXCJ4XCIsIHNldHRpbmdzLmhlaWdodCk7XG4gICAgICBcbiAgICAgIC8vIFN0b3AgdGhlIHRlc3Qgc3RyZWFtIGltbWVkaWF0ZWx5XG4gICAgICBzdHJlYW0uZ2V0VHJhY2tzKCkuZm9yRWFjaCh0cmFjayA9PiB0cmFjay5zdG9wKCkpO1xuICAgICAgXG4gICAgICByZXR1cm4gY29uc3RyYWludHM7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhgUmVzb2x1dGlvbiBub3Qgc3VwcG9ydGVkOiAke0pTT04uc3RyaW5naWZ5KHJlc29sdXRpb24pfWApO1xuICAgICAgLy8gQ29udGludWUgdG8gbmV4dCByZXNvbHV0aW9uXG4gICAgfVxuICB9XG4gIFxuICAvLyBJZiBub3RoaW5nIHdvcmtlZCwgcmV0dXJuIGJhc2ljIGNvbnN0cmFpbnRzXG4gIHJldHVybiB7IFxuICAgIHZpZGVvOiB7XG4gICAgICB3aWR0aDogeyBleGFjdDogMTI4MCB9LFxuICAgICAgaGVpZ2h0OiB7IGV4YWN0OiA3MjAgfSxcbiAgICAgIGZyYW1lUmF0ZTogeyBpZGVhbDogMzAgfVxuICAgIH0gXG4gIH07XG59O1xuXG4vKipcbiAqIENhcHR1cmUgYW5kIHNhdmUgaW1hZ2VzIGF0IGEgc3BlY2lmaWMgcG9pbnQgd2l0aCBjb25zaXN0ZW50IG51bWJlcmluZ1xuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgLSBDYXB0dXJlIG9wdGlvbnNcbiAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IC0gQ2FwdHVyZSByZXN1bHRzXG4gKi9cbmV4cG9ydCBjb25zdCBjYXB0dXJlSW1hZ2VzQXRQb2ludCA9IGFzeW5jICh7IHBvaW50LCBjYXB0dXJlQ291bnQgPSAxLCBjYW52YXNSZWYsIHNldENhcHR1cmVDb3VudCwgc2hvd0NhcHR1cmVQcmV2aWV3IH0pID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBmb2xkZXIgPSAnZXllX3RyYWNraW5nX2NhcHR1cmVzJztcbiAgICBcbiAgICAvLyBDcmVhdGUgYSB1bmlxdWUgSUQgZm9yIHRoaXMgY2FwdHVyZSBncm91cFxuICAgIGNvbnN0IGNhcHR1cmVHcm91cElkID0gYGNhcHR1cmUtJHtEYXRlLm5vdygpfWA7XG4gICAgY29uc29sZS5sb2coYEdlbmVyYXRlZCBjYXB0dXJlIGdyb3VwIElEOiAke2NhcHR1cmVHcm91cElkfWApO1xuICAgIFxuICAgIC8vIEZpbGUgcGF0dGVybnMgZm9yIHNhdmluZ1xuICAgIGNvbnN0IHNjcmVlbkZpbGVuYW1lID0gJ3NjcmVlbl8wMDEuanBnJzsgIC8vIFBhdHRlcm4gb25seSAtIHNlcnZlciB3aWxsIGFzc2lnbiBudW1iZXJcbiAgICBjb25zdCB3ZWJjYW1GaWxlbmFtZSA9ICd3ZWJjYW1fMDAxLmpwZyc7ICAvLyBQYXR0ZXJuIG9ubHkgLSBzZXJ2ZXIgd2lsbCBhc3NpZ24gbnVtYmVyXG4gICAgY29uc3QgcGFyYW1ldGVyRmlsZW5hbWUgPSAncGFyYW1ldGVyXzAwMS5jc3YnOyAgLy8gUGF0dGVybiBvbmx5IC0gc2VydmVyIHdpbGwgYXNzaWduIG51bWJlclxuICAgIFxuICAgIC8vIEZvciBsb2dnaW5nXG4gICAgY29uc29sZS5sb2coXCJTdGFydGluZyBjYXB0dXJlIHdpdGggZ3JvdXAgSUQ6XCIsIGNhcHR1cmVHcm91cElkKTtcbiAgICBcbiAgICBjb25zdCBjYW52YXMgPSBjYW52YXNSZWYuY3VycmVudDtcbiAgICBsZXQgc2NyZWVuSW1hZ2UgPSBudWxsO1xuICAgIGxldCB3ZWJjYW1JbWFnZSA9IG51bGw7XG4gICAgbGV0IGNhcHR1cmVOdW1iZXIgPSBudWxsO1xuICAgIFxuICAgIC8vIFZhcmlhYmxlcyB0byBzdG9yZSB3ZWJjYW0gcmVzb2x1dGlvblxuICAgIGxldCB3ZWJjYW1XaWR0aCA9IDA7XG4gICAgbGV0IHdlYmNhbUhlaWdodCA9IDA7XG4gICAgXG4gICAgLy8gMS4gUHJlcGFyZSBhbGwgZGF0YSBmaXJzdFxuICAgIFxuICAgIC8vIDEuMSBDYW52YXMvc2NyZWVuIGltYWdlXG4gICAgaWYgKGNhbnZhcykge1xuICAgICAgc2NyZWVuSW1hZ2UgPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9wbmcnKTtcbiAgICB9XG5cbiAgICAvLyAxLjIgV2ViY2FtIGltYWdlIC0gVHJ5IHRvIGdldCB0aGUgaGlnaGVzdCByZXNvbHV0aW9uIGF2YWlsYWJsZSBcbiAgICAvLyB3aXRoIGRldmljZSdzIG5hdGl2ZSBjYXBhYmlsaXRpZXMgaW5zdGVhZCBvZiBmaXhlZCB2YWx1ZXNcbiAgICBsZXQgd2ViY2FtSW1hZ2VQcmV2aWV3ID0gbnVsbDsgLy8gU2VwYXJhdGUgbG93ZXItcmVzb2x1dGlvbiB2ZXJzaW9uIGZvciBwcmV2aWV3XG4gICAgY29uc3QgdmlkZW9FbGVtZW50ID0gd2luZG93LnZpZGVvRWxlbWVudCB8fCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd2aWRlbycpO1xuICAgIFxuICAgIGlmICh2aWRlb0VsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFVzZSBleGlzdGluZyB2aWRlbyBlbGVtZW50IGlmIGF2YWlsYWJsZVxuICAgICAgICAvLyBGaXJzdCBjaGVjayBpZiB2aWRlb1RyYWNrIGhhcyBzZXR0aW5ncyBpbmZvXG4gICAgICAgIGxldCB0cmFja1NldHRpbmdzID0gbnVsbDtcbiAgICAgICAgXG4gICAgICAgIGlmICh2aWRlb0VsZW1lbnQuc3JjT2JqZWN0KSB7XG4gICAgICAgICAgY29uc3QgdmlkZW9UcmFjayA9IHZpZGVvRWxlbWVudC5zcmNPYmplY3QuZ2V0VmlkZW9UcmFja3MoKVswXTtcbiAgICAgICAgICBpZiAodmlkZW9UcmFjaykge1xuICAgICAgICAgICAgdHJhY2tTZXR0aW5ncyA9IHZpZGVvVHJhY2suZ2V0U2V0dGluZ3MoKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVmlkZW8gdHJhY2sgc2V0dGluZ3M6XCIsIHRyYWNrU2V0dGluZ3MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gR2V0IGRpbWVuc2lvbnMgZnJvbSB0cmFjayBpZiBhdmFpbGFibGUsIG90aGVyd2lzZSBmcm9tIGVsZW1lbnRcbiAgICAgICAgaWYgKHRyYWNrU2V0dGluZ3MgJiYgdHJhY2tTZXR0aW5ncy53aWR0aCAmJiB0cmFja1NldHRpbmdzLmhlaWdodCkge1xuICAgICAgICAgIHdlYmNhbVdpZHRoID0gdHJhY2tTZXR0aW5ncy53aWR0aDtcbiAgICAgICAgICB3ZWJjYW1IZWlnaHQgPSB0cmFja1NldHRpbmdzLmhlaWdodDtcbiAgICAgICAgICBjb25zb2xlLmxvZyhgVXNpbmcgdHJhY2sgc2V0dGluZ3MgZGltZW5zaW9uczogJHt3ZWJjYW1XaWR0aH14JHt3ZWJjYW1IZWlnaHR9YCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2ViY2FtV2lkdGggPSB2aWRlb0VsZW1lbnQudmlkZW9XaWR0aCB8fCAwO1xuICAgICAgICAgIHdlYmNhbUhlaWdodCA9IHZpZGVvRWxlbWVudC52aWRlb0hlaWdodCB8fCAwO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBVc2luZyB2aWRlbyBlbGVtZW50IGRpbWVuc2lvbnM6ICR7d2ViY2FtV2lkdGh9eCR7d2ViY2FtSGVpZ2h0fWApO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBTYW5pdHkgY2hlY2sgLSBpZiBib3RoIGRpbWVuc2lvbnMgYXJlIHRoZSBzYW1lLCBkb3VibGUtY2hlY2tcbiAgICAgICAgaWYgKHdlYmNhbVdpZHRoID09PSB3ZWJjYW1IZWlnaHQgJiYgd2ViY2FtV2lkdGggPiAxMDApIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXCJTdXNwaWNpb3VzIHNxdWFyZSBhc3BlY3QgcmF0aW8gZGV0ZWN0ZWQsIGRvdWJsZS1jaGVja2luZyBkaW1lbnNpb25zXCIpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIFRyeSB0byBnZXQgbW9yZSByZWxpYWJsZSBpbmZvXG4gICAgICAgICAgaWYgKHZpZGVvRWxlbWVudC5zcmNPYmplY3QpIHtcbiAgICAgICAgICAgIGNvbnN0IHZpZGVvVHJhY2sgPSB2aWRlb0VsZW1lbnQuc3JjT2JqZWN0LmdldFZpZGVvVHJhY2tzKClbMF07XG4gICAgICAgICAgICBpZiAodmlkZW9UcmFjaykge1xuICAgICAgICAgICAgICBjb25zdCBjb25zdHJhaW50cyA9IHZpZGVvVHJhY2suZ2V0Q29uc3RyYWludHMoKTtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJWaWRlbyBjb25zdHJhaW50czpcIiwgY29uc3RyYWludHMpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gSWYgY29uc3RyYWludHMgaGF2ZSB3aWR0aC9oZWlnaHQsIHVzZSB0aG9zZVxuICAgICAgICAgICAgICBpZiAoY29uc3RyYWludHMud2lkdGggJiYgY29uc3RyYWludHMuaGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb25zdHJhaW50cy53aWR0aC5leGFjdCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgIHdlYmNhbVdpZHRoID0gY29uc3RyYWludHMud2lkdGguZXhhY3Q7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgY29uc3RyYWludHMud2lkdGguaWRlYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgICB3ZWJjYW1XaWR0aCA9IGNvbnN0cmFpbnRzLndpZHRoLmlkZWFsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnN0cmFpbnRzLmhlaWdodC5leGFjdCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgIHdlYmNhbUhlaWdodCA9IGNvbnN0cmFpbnRzLmhlaWdodC5leGFjdDtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25zdHJhaW50cy5oZWlnaHQuaWRlYWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgICB3ZWJjYW1IZWlnaHQgPSBjb25zdHJhaW50cy5oZWlnaHQuaWRlYWw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBVcGRhdGVkIGRpbWVuc2lvbnMgZnJvbSBjb25zdHJhaW50czogJHt3ZWJjYW1XaWR0aH14JHt3ZWJjYW1IZWlnaHR9YCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEZpbmFsIHJlYWxpdHkgY2hlY2sgLSBtYWtlIHN1cmUgZGltZW5zaW9ucyBhcmUgcmVhc29uYWJsZVxuICAgICAgICBpZiAod2ViY2FtV2lkdGggPD0gMCB8fCB3ZWJjYW1IZWlnaHQgPD0gMCkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIkludmFsaWQgd2ViY2FtIGRpbWVuc2lvbnMsIHVzaW5nIGRlZmF1bHRzXCIpO1xuICAgICAgICAgIHdlYmNhbVdpZHRoID0gNjQwO1xuICAgICAgICAgIHdlYmNhbUhlaWdodCA9IDQ4MDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY29uc3QgdGVtcENhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgICAgICB0ZW1wQ2FudmFzLndpZHRoID0gd2ViY2FtV2lkdGg7XG4gICAgICAgIHRlbXBDYW52YXMuaGVpZ2h0ID0gd2ViY2FtSGVpZ2h0O1xuICAgICAgICB0ZW1wQ2FudmFzLmdldENvbnRleHQoJzJkJykuZHJhd0ltYWdlKHZpZGVvRWxlbWVudCwgMCwgMCwgd2ViY2FtV2lkdGgsIHdlYmNhbUhlaWdodCk7XG4gICAgICAgIFxuICAgICAgICAvLyBDcmVhdGUgaGlnaC1yZXNvbHV0aW9uIHZlcnNpb24gZm9yIHNhdmluZ1xuICAgICAgICB3ZWJjYW1JbWFnZSA9IHRlbXBDYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJywgMC45NSk7XG4gICAgICAgIFxuICAgICAgICAvLyBDcmVhdGUgbG93ZXItcmVzb2x1dGlvbiB2ZXJzaW9uIGZvciBwcmV2aWV3XG4gICAgICAgIHdlYmNhbUltYWdlUHJldmlldyA9IGF3YWl0IHJlc2l6ZUltYWdlKHdlYmNhbUltYWdlLCA2NDAsIDQ4MCwgMC44NSk7XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhgV2ViY2FtIGNhcHR1cmUgY29tcGxldGUgYXQgcmVzb2x1dGlvbjogJHt3ZWJjYW1XaWR0aH14JHt3ZWJjYW1IZWlnaHR9YCk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGNhcHR1cmluZyBmcm9tIGV4aXN0aW5nIHZpZGVvIGVsZW1lbnQ6XCIsIGVycik7XG4gICAgICAgIHdlYmNhbVdpZHRoID0gdmlkZW9FbGVtZW50LnZpZGVvV2lkdGggfHwgNjQwO1xuICAgICAgICB3ZWJjYW1IZWlnaHQgPSB2aWRlb0VsZW1lbnQudmlkZW9IZWlnaHQgfHwgNDgwO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBHZXQgaGlnaGVzdCByZXNvbHV0aW9uIGNvbnN0cmFpbnRzIGZvciB0aGlzIGRldmljZVxuICAgICAgICBjb25zdCBjb25zdHJhaW50cyA9IGF3YWl0IGdldEhpZ2hlc3RSZXNvbHV0aW9uQ29uc3RyYWludHMoKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJVc2luZyBjYW1lcmEgY29uc3RyYWludHM6XCIsIGNvbnN0cmFpbnRzKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFRyeSB0byBnZXQgc3RyZWFtIHdpdGggaGlnaGVzdCByZXNvbHV0aW9uXG4gICAgICAgIGNvbnN0IHN0cmVhbSA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKGNvbnN0cmFpbnRzKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEdldCB0aGUgYWN0dWFsIGRpbWVuc2lvbnMgZnJvbSB0aGUgdHJhY2sgZmlyc3RcbiAgICAgICAgY29uc3QgdmlkZW9UcmFjayA9IHN0cmVhbS5nZXRWaWRlb1RyYWNrcygpWzBdO1xuICAgICAgICBjb25zdCB0cmFja1NldHRpbmdzID0gdmlkZW9UcmFjay5nZXRTZXR0aW5ncygpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIkFjdHVhbCBjYW1lcmEgc2V0dGluZ3M6XCIsIHRyYWNrU2V0dGluZ3MpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ3JlYXRlIHRlbXBvcmFyeSB2aWRlbyBlbGVtZW50IHRvIGdldCB0aGUgc3RyZWFtXG4gICAgICAgIGNvbnN0IHRlbXBWaWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJyk7XG4gICAgICAgIHRlbXBWaWRlby5zcmNPYmplY3QgPSBzdHJlYW07XG4gICAgICAgIHRlbXBWaWRlby5tdXRlZCA9IHRydWU7XG4gICAgICAgIHRlbXBWaWRlby5wbGF5c0lubGluZSA9IHRydWU7XG4gICAgICAgIHRlbXBWaWRlby5hdXRvcGxheSA9IHRydWU7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGVtcFZpZGVvKTtcbiAgICAgICAgXG4gICAgICAgIC8vIE5lZWQgdG8gd2FpdCBmb3IgdmlkZW8gdG8gYmUgaW5pdGlhbGl6ZWRcbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgdGVtcFZpZGVvLm9ubG9hZGVkbWV0YWRhdGEgPSAoKSA9PiB7XG4gICAgICAgICAgICB0ZW1wVmlkZW8ucGxheSgpO1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgIH07XG4gICAgICAgICAgLy8gRmFsbGJhY2sgaWYgb25sb2FkZWRtZXRhZGF0YSBkb2Vzbid0IGZpcmVcbiAgICAgICAgICBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIFdhaXQgYSBiaXQgbG9uZ2VyIGZvciB0aGUgdmlkZW8gdG8gYWN0dWFsbHkgc3RhcnQgcGxheWluZ1xuICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXMgPT4gc2V0VGltZW91dChyZXMsIDUwMCkpO1xuICAgICAgICBcbiAgICAgICAgLy8gU3RvcmUgd2ViY2FtIHJlc29sdXRpb24gLSBwcmlvcml0aXplIHRyYWNrIHNldHRpbmdzIG92ZXIgdmlkZW8gZWxlbWVudFxuICAgICAgICBpZiAodHJhY2tTZXR0aW5ncyAmJiB0cmFja1NldHRpbmdzLndpZHRoICYmIHRyYWNrU2V0dGluZ3MuaGVpZ2h0KSB7XG4gICAgICAgICAgd2ViY2FtV2lkdGggPSB0cmFja1NldHRpbmdzLndpZHRoO1xuICAgICAgICAgIHdlYmNhbUhlaWdodCA9IHRyYWNrU2V0dGluZ3MuaGVpZ2h0O1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBVc2luZyB0cmFjayBzZXR0aW5ncyBmb3IgcmVzb2x1dGlvbjogJHt3ZWJjYW1XaWR0aH14JHt3ZWJjYW1IZWlnaHR9YCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2ViY2FtV2lkdGggPSB0ZW1wVmlkZW8udmlkZW9XaWR0aCB8fCAwO1xuICAgICAgICAgIHdlYmNhbUhlaWdodCA9IHRlbXBWaWRlby52aWRlb0hlaWdodCB8fCAwO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBVc2luZyB2aWRlbyBlbGVtZW50IGZvciByZXNvbHV0aW9uOiAke3dlYmNhbVdpZHRofXgke3dlYmNhbUhlaWdodH1gKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gUmVhbGl0eSBjaGVjayBvbiBkaW1lbnNpb25zXG4gICAgICAgIGlmICh3ZWJjYW1XaWR0aCA8PSAwIHx8IHdlYmNhbUhlaWdodCA8PSAwKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiSW52YWxpZCB3ZWJjYW0gZGltZW5zaW9ucywgdHJ5aW5nIHRvIGdldCBmcm9tIGNvbnN0cmFpbnRzXCIpO1xuICAgICAgICAgIGlmIChjb25zdHJhaW50cy52aWRlbyAmJiB0eXBlb2YgY29uc3RyYWludHMudmlkZW8gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBpZiAoY29uc3RyYWludHMudmlkZW8ud2lkdGggJiYgY29uc3RyYWludHMudmlkZW8ud2lkdGguZXhhY3QpIHtcbiAgICAgICAgICAgICAgd2ViY2FtV2lkdGggPSBjb25zdHJhaW50cy52aWRlby53aWR0aC5leGFjdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjb25zdHJhaW50cy52aWRlby5oZWlnaHQgJiYgY29uc3RyYWludHMudmlkZW8uaGVpZ2h0LmV4YWN0KSB7XG4gICAgICAgICAgICAgIHdlYmNhbUhlaWdodCA9IGNvbnN0cmFpbnRzLnZpZGVvLmhlaWdodC5leGFjdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKHdlYmNhbVdpZHRoIDw9IDAgfHwgd2ViY2FtSGVpZ2h0IDw9IDApIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIlN0aWxsIGludmFsaWQgZGltZW5zaW9ucywgdXNpbmcgZGVmYXVsdHNcIik7XG4gICAgICAgICAgICB3ZWJjYW1XaWR0aCA9IDY0MDtcbiAgICAgICAgICAgIHdlYmNhbUhlaWdodCA9IDQ4MDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEZpbmFsIGNoZWNrIGZvciBzcXVhcmUgYXNwZWN0IHJhdGlvIHdoaWNoIGlzIHVzdWFsbHkgaW5jb3JyZWN0XG4gICAgICAgIGlmICh3ZWJjYW1XaWR0aCA9PT0gd2ViY2FtSGVpZ2h0ICYmIHdlYmNhbVdpZHRoID4gMTAwKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiU3F1YXJlIGFzcGVjdCByYXRpbyBkZXRlY3RlZCwgbWF5IGJlIGluY29ycmVjdFwiKTtcbiAgICAgICAgICAvLyBUcnkgdG8gZ2V0IG1vcmUgcmVsaWFibGUgZGltZW5zaW9uc1xuICAgICAgICAgIGNvbnN0IGNhcGFiaWxpdGllcyA9IHZpZGVvVHJhY2suZ2V0Q2FwYWJpbGl0aWVzPy4oKTtcbiAgICAgICAgICBpZiAoY2FwYWJpbGl0aWVzICYmIGNhcGFiaWxpdGllcy53aWR0aCAmJiBjYXBhYmlsaXRpZXMuaGVpZ2h0KSB7XG4gICAgICAgICAgICBpZiAoY2FwYWJpbGl0aWVzLndpZHRoLm1heCAmJiBjYXBhYmlsaXRpZXMuaGVpZ2h0Lm1heCkge1xuICAgICAgICAgICAgICAvLyBBc3N1bWUgdGhlIG1heGltdW0gY2FwYWJpbGl0aWVzIGhhdmUgdGhlIGNvcnJlY3QgYXNwZWN0IHJhdGlvXG4gICAgICAgICAgICAgIGNvbnN0IGFzcGVjdFJhdGlvID0gY2FwYWJpbGl0aWVzLndpZHRoLm1heCAvIGNhcGFiaWxpdGllcy5oZWlnaHQubWF4O1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKGFzcGVjdFJhdGlvIC0gMS4zMykgPCAwLjEpIHsgLy8gQ2xvc2UgdG8gNDozXG4gICAgICAgICAgICAgICAgd2ViY2FtSGVpZ2h0ID0gTWF0aC5yb3VuZCh3ZWJjYW1XaWR0aCAvIDEuMzMpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBDb3JyZWN0ZWQgdG8gNDozIGFzcGVjdCByYXRpbzogJHt3ZWJjYW1XaWR0aH14JHt3ZWJjYW1IZWlnaHR9YCk7XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAoTWF0aC5hYnMoYXNwZWN0UmF0aW8gLSAxLjc4KSA8IDAuMSkgeyAvLyBDbG9zZSB0byAxNjo5XG4gICAgICAgICAgICAgICAgd2ViY2FtSGVpZ2h0ID0gTWF0aC5yb3VuZCh3ZWJjYW1XaWR0aCAvIDEuNzgpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBDb3JyZWN0ZWQgdG8gMTY6OSBhc3BlY3QgcmF0aW86ICR7d2ViY2FtV2lkdGh9eCR7d2ViY2FtSGVpZ2h0fWApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zdCB0ZW1wQ2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgIHRlbXBDYW52YXMud2lkdGggPSB3ZWJjYW1XaWR0aDtcbiAgICAgICAgdGVtcENhbnZhcy5oZWlnaHQgPSB3ZWJjYW1IZWlnaHQ7XG4gICAgICAgIHRlbXBDYW52YXMuZ2V0Q29udGV4dCgnMmQnKS5kcmF3SW1hZ2UodGVtcFZpZGVvLCAwLCAwLCB3ZWJjYW1XaWR0aCwgd2ViY2FtSGVpZ2h0KTtcbiAgICAgICAgXG4gICAgICAgIC8vIENyZWF0ZSBoaWdoLXJlc29sdXRpb24gdmVyc2lvbiBmb3Igc2F2aW5nXG4gICAgICAgIHdlYmNhbUltYWdlID0gdGVtcENhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL2pwZWcnLCAwLjk1KTtcbiAgICAgICAgXG4gICAgICAgIC8vIENyZWF0ZSBsb3dlci1yZXNvbHV0aW9uIHZlcnNpb24gZm9yIHByZXZpZXdcbiAgICAgICAgd2ViY2FtSW1hZ2VQcmV2aWV3ID0gYXdhaXQgcmVzaXplSW1hZ2Uod2ViY2FtSW1hZ2UsIDY0MCwgNDgwLCAwLjg1KTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGBIaWdoLXJlc29sdXRpb24gd2ViY2FtIGNhcHR1cmUgY29tcGxldGU6ICR7d2ViY2FtV2lkdGh9eCR7d2ViY2FtSGVpZ2h0fWApO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2xlYW4gdXBcbiAgICAgICAgc3RyZWFtLmdldFRyYWNrcygpLmZvckVhY2godCA9PiB0LnN0b3AoKSk7XG4gICAgICAgIHRlbXBWaWRlby5yZW1vdmUoKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJIaWdoLXJlc29sdXRpb24gd2ViY2FtIGNhcHR1cmUgZmFpbGVkOlwiLCBlcnIpO1xuICAgICAgICBcbiAgICAgICAgLy8gVHJ5IG9uZSBtb3JlIHRpbWUgd2l0aCBiYXNpYyBjb25zdHJhaW50c1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHN0cmVhbSA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsgdmlkZW86IHRydWUgfSk7XG4gICAgICAgICAgY29uc3QgdmlkZW9UcmFjayA9IHN0cmVhbS5nZXRWaWRlb1RyYWNrcygpWzBdO1xuICAgICAgICAgIGNvbnN0IHRyYWNrU2V0dGluZ3MgPSB2aWRlb1RyYWNrLmdldFNldHRpbmdzKCk7XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc3QgdGVtcFZpZGVvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKTtcbiAgICAgICAgICB0ZW1wVmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtO1xuICAgICAgICAgIHRlbXBWaWRlby5tdXRlZCA9IHRydWU7XG4gICAgICAgICAgdGVtcFZpZGVvLnBsYXlzSW5saW5lID0gdHJ1ZTtcbiAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRlbXBWaWRlbyk7XG4gICAgICAgICAgYXdhaXQgdGVtcFZpZGVvLnBsYXkoKTtcbiAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXMgPT4gc2V0VGltZW91dChyZXMsIDMwMCkpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIEdldCBkaW1lbnNpb25zIGZyb20gdHJhY2sgc2V0dGluZ3MgaWYgYXZhaWxhYmxlXG4gICAgICAgICAgaWYgKHRyYWNrU2V0dGluZ3MgJiYgdHJhY2tTZXR0aW5ncy53aWR0aCAmJiB0cmFja1NldHRpbmdzLmhlaWdodCkge1xuICAgICAgICAgICAgd2ViY2FtV2lkdGggPSB0cmFja1NldHRpbmdzLndpZHRoO1xuICAgICAgICAgICAgd2ViY2FtSGVpZ2h0ID0gdHJhY2tTZXR0aW5ncy5oZWlnaHQ7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHdlYmNhbVdpZHRoID0gdGVtcFZpZGVvLnZpZGVvV2lkdGggfHwgMDtcbiAgICAgICAgICAgIHdlYmNhbUhlaWdodCA9IHRlbXBWaWRlby52aWRlb0hlaWdodCB8fCAwO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBGaW5hbCBjaGVjayBmb3IgaW52YWxpZCBkaW1lbnNpb25zXG4gICAgICAgICAgaWYgKHdlYmNhbVdpZHRoIDw9IDAgfHwgd2ViY2FtSGVpZ2h0IDw9IDApIHtcbiAgICAgICAgICAgIHdlYmNhbVdpZHRoID0gNjQwO1xuICAgICAgICAgICAgd2ViY2FtSGVpZ2h0ID0gNDgwO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCB0ZW1wQ2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgICAgdGVtcENhbnZhcy53aWR0aCA9IHdlYmNhbVdpZHRoO1xuICAgICAgICAgIHRlbXBDYW52YXMuaGVpZ2h0ID0gd2ViY2FtSGVpZ2h0O1xuICAgICAgICAgIHRlbXBDYW52YXMuZ2V0Q29udGV4dCgnMmQnKS5kcmF3SW1hZ2UodGVtcFZpZGVvLCAwLCAwLCB3ZWJjYW1XaWR0aCwgd2ViY2FtSGVpZ2h0KTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDcmVhdGUgaGlnaC1yZXNvbHV0aW9uIHZlcnNpb24gZm9yIHNhdmluZ1xuICAgICAgICAgIHdlYmNhbUltYWdlID0gdGVtcENhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL2pwZWcnLCAwLjkpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIENyZWF0ZSBsb3dlci1yZXNvbHV0aW9uIHZlcnNpb24gZm9yIHByZXZpZXdcbiAgICAgICAgICB3ZWJjYW1JbWFnZVByZXZpZXcgPSBhd2FpdCByZXNpemVJbWFnZSh3ZWJjYW1JbWFnZSwgNjQwLCA0ODAsIDAuOCk7XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc29sZS5sb2coYEJhc2ljIHdlYmNhbSByZXNvbHV0aW9uIGNhcHR1cmVkOiAke3dlYmNhbVdpZHRofXgke3dlYmNhbUhlaWdodH1gKTtcbiAgICAgICAgICBcbiAgICAgICAgICBzdHJlYW0uZ2V0VHJhY2tzKCkuZm9yRWFjaCh0ID0+IHQuc3RvcCgpKTtcbiAgICAgICAgICB0ZW1wVmlkZW8ucmVtb3ZlKCk7XG4gICAgICAgIH0gY2F0Y2ggKGZhbGxiYWNrRXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkFsbCB3ZWJjYW0gY2FwdHVyZSBtZXRob2RzIGZhaWxlZDpcIiwgZmFsbGJhY2tFcnIpO1xuICAgICAgICAgIHdlYmNhbVdpZHRoID0gNjQwO1xuICAgICAgICAgIHdlYmNhbUhlaWdodCA9IDQ4MDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIDEuMyBQYXJhbWV0ZXIgZGF0YSAtIE5vdyBpbmNsdWRpbmcgd2ViY2FtIHJlc29sdXRpb25cbiAgICBjb25zdCBjc3ZEYXRhID0gW1xuICAgICAgXCJuYW1lLHZhbHVlXCIsXG4gICAgICBgZG90X3gsJHtwb2ludC54fWAsXG4gICAgICBgZG90X3ksJHtwb2ludC55fWAsXG4gICAgICBgY2FudmFzX3dpZHRoLCR7Y2FudmFzPy53aWR0aCB8fCAwfWAsXG4gICAgICBgY2FudmFzX2hlaWdodCwke2NhbnZhcz8uaGVpZ2h0IHx8IDB9YCxcbiAgICAgIGB3aW5kb3dfd2lkdGgsJHt3aW5kb3cuaW5uZXJXaWR0aH1gLFxuICAgICAgYHdpbmRvd19oZWlnaHQsJHt3aW5kb3cuaW5uZXJIZWlnaHR9YCxcbiAgICAgIGB3ZWJjYW1fcmVzb2x1dGlvbl93aWR0aCwke3dlYmNhbVdpZHRofWAsXG4gICAgICBgd2ViY2FtX3Jlc29sdXRpb25faGVpZ2h0LCR7d2ViY2FtSGVpZ2h0fWAsXG4gICAgICBgdGltZXN0YW1wLCR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpfWAsXG4gICAgICBgZ3JvdXBfaWQsJHtjYXB0dXJlR3JvdXBJZH1gXG4gICAgXS5qb2luKCdcXG4nKTtcbiAgICBcbiAgICAvLyAyLiBTYXZlIGFsbCBmaWxlcyB3aXRoIHRoZSBzYW1lIGdyb3VwIElEIHNvIHRoZXkgZ2V0IHRoZSBzYW1lIG51bWJlclxuICAgIFxuICAgIC8vIDIuMSBTYXZlIHBhcmFtZXRlciBmaWxlXG4gICAgY29uc3QgcGFyYW1SZXN1bHQgPSBhd2FpdCBzYXZlQ1NWVG9TZXJ2ZXIoY3N2RGF0YSwgcGFyYW1ldGVyRmlsZW5hbWUsIGZvbGRlciwgY2FwdHVyZUdyb3VwSWQpO1xuICAgIFxuICAgIGlmIChwYXJhbVJlc3VsdCAmJiBwYXJhbVJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICBjYXB0dXJlTnVtYmVyID0gcGFyYW1SZXN1bHQubnVtYmVyO1xuICAgICAgY29uc29sZS5sb2coYFNlcnZlciBhc3NpZ25lZCBjYXB0dXJlIG51bWJlcjogJHtjYXB0dXJlTnVtYmVyfSBmb3IgZ3JvdXA6ICR7Y2FwdHVyZUdyb3VwSWR9YCk7XG4gICAgfVxuICAgIFxuICAgIC8vIDIuMiBTYXZlIHNjcmVlbiBpbWFnZSBpZiBhdmFpbGFibGVcbiAgICBsZXQgc2NyZWVuUmVzdWx0ID0gbnVsbDtcbiAgICBpZiAoc2NyZWVuSW1hZ2UpIHtcbiAgICAgIHNjcmVlblJlc3VsdCA9IGF3YWl0IHNhdmVJbWFnZVRvU2VydmVyKHNjcmVlbkltYWdlLCBzY3JlZW5GaWxlbmFtZSwgJ3NjcmVlbicsIGZvbGRlciwgY2FwdHVyZUdyb3VwSWQpO1xuICAgIH1cbiAgICBcbiAgICAvLyAyLjMgU2F2ZSB3ZWJjYW0gaW1hZ2UgaWYgYXZhaWxhYmxlXG4gICAgbGV0IHdlYmNhbVJlc3VsdCA9IG51bGw7XG4gICAgaWYgKHdlYmNhbUltYWdlKSB7XG4gICAgICB3ZWJjYW1SZXN1bHQgPSBhd2FpdCBzYXZlSW1hZ2VUb1NlcnZlcih3ZWJjYW1JbWFnZSwgd2ViY2FtRmlsZW5hbWUsICd3ZWJjYW0nLCBmb2xkZXIsIGNhcHR1cmVHcm91cElkKTtcbiAgICB9XG4gICAgXG4gICAgLy8gMy4gU2hvdyBwcmV2aWV3IGlmIG5lZWRlZCAtIHVzZSB0aGUgbG93ZXIgcmVzb2x1dGlvbiB2ZXJzaW9uIGZvciBwcmV2aWV3XG4gICAgaWYgKHNob3dDYXB0dXJlUHJldmlldyAmJiB0eXBlb2Ygc2hvd0NhcHR1cmVQcmV2aWV3ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzaG93Q2FwdHVyZVByZXZpZXcoc2NyZWVuSW1hZ2UsIHdlYmNhbUltYWdlUHJldmlldyB8fCB3ZWJjYW1JbWFnZSwgcG9pbnQpO1xuICAgIH1cbiAgICBcbiAgICAvLyA0LiBJbmNyZW1lbnQgY291bnRlciBmb3IgbmV4dCBjYXB0dXJlXG4gICAgaWYgKHNldENhcHR1cmVDb3VudCAmJiB0eXBlb2Ygc2V0Q2FwdHVyZUNvdW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzZXRDYXB0dXJlQ291bnQocHJldkNvdW50ID0+IHByZXZDb3VudCArIDEpO1xuICAgIH1cbiAgICBcbiAgICAvLyA1LiBSZXR1cm4gcmVzdWx0cyAtIG5vdyBpbmNsdWRpbmcgd2ViY2FtIHJlc29sdXRpb25cbiAgICByZXR1cm4ge1xuICAgICAgc2NyZWVuSW1hZ2UsXG4gICAgICB3ZWJjYW1JbWFnZSxcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBwb2ludCxcbiAgICAgIGNhcHR1cmVOdW1iZXIsXG4gICAgICBncm91cElkOiBjYXB0dXJlR3JvdXBJZCxcbiAgICAgIHdlYmNhbVdpZHRoLFxuICAgICAgd2ViY2FtSGVpZ2h0XG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihcImNhcHR1cmVJbWFnZXNBdFBvaW50IGZhaWxlZDpcIiwgZXJyKTtcbiAgICByZXR1cm4geyBcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbiAgICAgIGVycm9yOiBlcnIubWVzc2FnZSxcbiAgICAgIHNjcmVlbkltYWdlOiBudWxsLFxuICAgICAgd2ViY2FtSW1hZ2U6IG51bGwsXG4gICAgICB3ZWJjYW1XaWR0aDogMCxcbiAgICAgIHdlYmNhbUhlaWdodDogMFxuICAgIH07XG4gIH1cbn07Il0sIm5hbWVzIjpbInJlc2l6ZUltYWdlIiwiaW1hZ2VEYXRhVXJsIiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJxdWFsaXR5IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpbWciLCJJbWFnZSIsIm9ubG9hZCIsIndpZHRoIiwiaGVpZ2h0IiwiTWF0aCIsInJvdW5kIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY3R4IiwiZ2V0Q29udGV4dCIsImRyYXdJbWFnZSIsInJlc2l6ZWREYXRhVXJsIiwidG9EYXRhVVJMIiwib25lcnJvciIsImVyciIsInNyYyIsInNhdmVJbWFnZVRvU2VydmVyIiwiaW1hZ2VEYXRhIiwiZmlsZW5hbWUiLCJ0eXBlIiwiZm9sZGVyIiwiY2FwdHVyZUdyb3VwIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwiY29uc29sZSIsImVycm9yIiwic3RhdHVzIiwid2FybiIsInNpemVzIiwicmVzaXplZEltYWdlIiwicmV0cnlSZXNwb25zZSIsImxvZyIsImpzb24iLCJyZXRyeUVycm9yIiwic3VjY2VzcyIsInJlc3VsdCIsIm1lc3NhZ2UiLCJzYXZlQ1NWVG9TZXJ2ZXIiLCJjc3ZEYXRhIiwiY3N2QmxvYiIsIkJsb2IiLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwiY3N2RGF0YVVybCIsIm9ubG9hZGVuZCIsInJlYWRBc0RhdGFVUkwiLCJnZXRIaWdoZXN0UmVzb2x1dGlvbkNvbnN0cmFpbnRzIiwidmlkZW9UcmFjayIsInRlbXBTdHJlYW0iLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJnZXRVc2VyTWVkaWEiLCJ2aWRlbyIsImdldFZpZGVvVHJhY2tzIiwiY2FwYWJpbGl0aWVzIiwiZ2V0Q2FwYWJpbGl0aWVzIiwic2V0dGluZ3MiLCJnZXRTZXR0aW5ncyIsInN0b3AiLCJtYXgiLCJleGFjdCIsImZyYW1lUmF0ZSIsImlkZWFsIiwicmVzb2x1dGlvbnMiLCJyZXNvbHV0aW9uIiwiY29uc3RyYWludHMiLCJmYWNpbmdNb2RlIiwic3RyZWFtIiwiZ2V0VHJhY2tzIiwiZm9yRWFjaCIsInRyYWNrIiwiY2FwdHVyZUltYWdlc0F0UG9pbnQiLCJwb2ludCIsImNhcHR1cmVDb3VudCIsImNhbnZhc1JlZiIsInNldENhcHR1cmVDb3VudCIsInNob3dDYXB0dXJlUHJldmlldyIsImNhcHR1cmVHcm91cElkIiwiRGF0ZSIsIm5vdyIsInNjcmVlbkZpbGVuYW1lIiwid2ViY2FtRmlsZW5hbWUiLCJwYXJhbWV0ZXJGaWxlbmFtZSIsImN1cnJlbnQiLCJzY3JlZW5JbWFnZSIsIndlYmNhbUltYWdlIiwiY2FwdHVyZU51bWJlciIsIndlYmNhbVdpZHRoIiwid2ViY2FtSGVpZ2h0Iiwid2ViY2FtSW1hZ2VQcmV2aWV3IiwidmlkZW9FbGVtZW50Iiwid2luZG93IiwicXVlcnlTZWxlY3RvciIsInRyYWNrU2V0dGluZ3MiLCJzcmNPYmplY3QiLCJ2aWRlb1dpZHRoIiwidmlkZW9IZWlnaHQiLCJnZXRDb25zdHJhaW50cyIsInRlbXBDYW52YXMiLCJ0ZW1wVmlkZW8iLCJtdXRlZCIsInBsYXlzSW5saW5lIiwiYXV0b3BsYXkiLCJhcHBlbmRDaGlsZCIsIm9ubG9hZGVkbWV0YWRhdGEiLCJwbGF5Iiwic2V0VGltZW91dCIsInJlcyIsImFzcGVjdFJhdGlvIiwiYWJzIiwidCIsInJlbW92ZSIsImZhbGxiYWNrRXJyIiwieCIsInkiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJ0b0lTT1N0cmluZyIsImpvaW4iLCJwYXJhbVJlc3VsdCIsIm51bWJlciIsInNjcmVlblJlc3VsdCIsIndlYmNhbVJlc3VsdCIsInByZXZDb3VudCIsImdyb3VwSWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === 'object' ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyIvYXBwL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSAnb2JqZWN0JyA/IGdsb2JhbC5wcm9jZXNzIDogcmVxdWlyZSgnbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MnKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fapp%2Fpages%2Fcollected-dataset-customized%2Findex.js&page=%2Fcollected-dataset-customized!":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fapp%2Fpages%2Fcollected-dataset-customized%2Findex.js&page=%2Fcollected-dataset-customized! ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/collected-dataset-customized\",\n      function () {\n        return __webpack_require__(/*! ./pages/collected-dataset-customized/index.js */ \"(pages-dir-browser)/./pages/collected-dataset-customized/index.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/collected-dataset-customized\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtY2xpZW50LXBhZ2VzLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPSUyRmFwcCUyRnBhZ2VzJTJGY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZCUyRmluZGV4LmpzJnBhZ2U9JTJGY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx3SEFBK0M7QUFDdEU7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZFwiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi4vcGFnZXMvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZC9pbmRleC5qc1wiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuX19ORVhUX1AucHVzaChbXCIvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZFwiXSlcbiAgICAgIH0pO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fapp%2Fpages%2Fcollected-dataset-customized%2Findex.js&page=%2Fcollected-dataset-customized!\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {



/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsiL2FwcC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/shared/lib/dynamic.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/dynamic.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    /**\n * This function lets you dynamically import a component.\n * It uses [React.lazy()](https://react.dev/reference/react/lazy) with [Suspense](https://react.dev/reference/react/Suspense) under the hood.\n *\n * Read more: [Next.js Docs: `next/dynamic`](https://nextjs.org/docs/app/building-your-application/optimizing/lazy-loading#nextdynamic)\n */ default: function() {\n        return dynamic;\n    },\n    noSSR: function() {\n        return noSSR;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(pages-dir-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\"));\nconst _loadablesharedruntime = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./loadable.shared-runtime */ \"(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable.shared-runtime.js\"));\nconst isServerSide = \"object\" === 'undefined';\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule(mod) {\n    return {\n        default: (mod == null ? void 0 : mod.default) || mod\n    };\n}\nfunction noSSR(LoadableInitializer, loadableOptions) {\n    // Removing webpack and modules means react-loadable won't try preloading\n    delete loadableOptions.webpack;\n    delete loadableOptions.modules;\n    // This check is necessary to prevent react-loadable from initializing on the server\n    if (!isServerSide) {\n        return LoadableInitializer(loadableOptions);\n    }\n    const Loading = loadableOptions.loading;\n    // This will only be rendered on the server side\n    return ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(Loading, {\n            error: null,\n            isLoading: true,\n            pastDelay: false,\n            timedOut: false\n        });\n}\nfunction dynamic(dynamicOptions, options) {\n    let loadableFn = _loadablesharedruntime.default;\n    let loadableOptions = {\n        // A loading component is not required, so we default it\n        loading: (param)=>{\n            let { error, isLoading, pastDelay } = param;\n            if (!pastDelay) return null;\n            if (true) {\n                if (isLoading) {\n                    return null;\n                }\n                if (error) {\n                    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"p\", {\n                        children: [\n                            error.message,\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"br\", {}),\n                            error.stack\n                        ]\n                    });\n                }\n            }\n            return null;\n        }\n    };\n    // Support for direct import(), eg: dynamic(import('../hello-world'))\n    // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n    // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n    // To make sure we don't execute the import without rendering first\n    if (dynamicOptions instanceof Promise) {\n        loadableOptions.loader = ()=>dynamicOptions;\n    // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n    } else if (typeof dynamicOptions === 'function') {\n        loadableOptions.loader = dynamicOptions;\n    // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n    } else if (typeof dynamicOptions === 'object') {\n        loadableOptions = {\n            ...loadableOptions,\n            ...dynamicOptions\n        };\n    }\n    // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n    loadableOptions = {\n        ...loadableOptions,\n        ...options\n    };\n    const loaderFn = loadableOptions.loader;\n    const loader = ()=>loaderFn != null ? loaderFn().then(convertModule) : Promise.resolve(convertModule(()=>null));\n    // coming from build/babel/plugins/react-loadable-plugin.js\n    if (loadableOptions.loadableGenerated) {\n        loadableOptions = {\n            ...loadableOptions,\n            ...loadableOptions.loadableGenerated\n        };\n        delete loadableOptions.loadableGenerated;\n    }\n    // support for disabling server side rendering, eg: dynamic(() => import('../hello-world'), {ssr: false}).\n    if (typeof loadableOptions.ssr === 'boolean' && !loadableOptions.ssr) {\n        delete loadableOptions.webpack;\n        delete loadableOptions.modules;\n        return noSSR(loadableFn, loadableOptions);\n    }\n    return loadableFn({\n        ...loadableOptions,\n        loader: loader\n    });\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=dynamic.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/shared/lib/dynamic.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable-context.shared-runtime.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/loadable-context.shared-runtime.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"LoadableContext\", ({\n    enumerable: true,\n    get: function() {\n        return LoadableContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(pages-dir-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\"));\nconst LoadableContext = _react.default.createContext(null);\nif (true) {\n    LoadableContext.displayName = 'LoadableContext';\n} //# sourceMappingURL=loadable-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9sb2FkYWJsZS1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7bURBTWFBOzs7ZUFBQUE7Ozs7NEVBSks7QUFJWCxNQUFNQSxrQkFBa0JDLE9BQUFBLE9BQUssQ0FBQ0MsYUFBYSxDQUFtQjtBQUVyRSxJQUFJQyxJQUFvQixFQUFtQjtJQUN6Q0gsZ0JBQWdCTSxXQUFXLEdBQUc7QUFDaEMiLCJzb3VyY2VzIjpbIi9zcmMvc2hhcmVkL2xpYi9sb2FkYWJsZS1jb250ZXh0LnNoYXJlZC1ydW50aW1lLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbnR5cGUgQ2FwdHVyZUZuID0gKG1vZHVsZU5hbWU6IHN0cmluZykgPT4gdm9pZFxuXG5leHBvcnQgY29uc3QgTG9hZGFibGVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxDYXB0dXJlRm4gfCBudWxsPihudWxsKVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBMb2FkYWJsZUNvbnRleHQuZGlzcGxheU5hbWUgPSAnTG9hZGFibGVDb250ZXh0J1xufVxuIl0sIm5hbWVzIjpbIkxvYWRhYmxlQ29udGV4dCIsIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImRpc3BsYXlOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable-context.shared-runtime.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable.shared-runtime.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/loadable.shared-runtime.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("// TODO: Remove use of `any` type.\n/**\n@copyright (c) 2017-present James Kyle <me@thejameskyle.com>\n MIT License\n Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n The above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\n*/ // https://github.com/jamiebuilds/react-loadable/blob/v5.5.0/src/index.js\n// Modified to be compatible with webpack 4 / Next.js\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(pages-dir-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\"));\nconst _loadablecontextsharedruntime = __webpack_require__(/*! ./loadable-context.shared-runtime */ \"(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable-context.shared-runtime.js\");\nfunction resolve(obj) {\n    return obj && obj.default ? obj.default : obj;\n}\nconst ALL_INITIALIZERS = [];\nconst READY_INITIALIZERS = [];\nlet initialized = false;\nfunction load(loader) {\n    let promise = loader();\n    let state = {\n        loading: true,\n        loaded: null,\n        error: null\n    };\n    state.promise = promise.then((loaded)=>{\n        state.loading = false;\n        state.loaded = loaded;\n        return loaded;\n    }).catch((err)=>{\n        state.loading = false;\n        state.error = err;\n        throw err;\n    });\n    return state;\n}\nfunction createLoadableComponent(loadFn, options) {\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n    let opts = Object.assign({\n        loader: null,\n        loading: null,\n        delay: 200,\n        timeout: null,\n        webpack: null,\n        modules: null\n    }, options);\n    /** @type LoadableSubscription */ let subscription = null;\n    function init() {\n        if (!subscription) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            const sub = new LoadableSubscription(loadFn, opts);\n            subscription = {\n                getCurrentValue: sub.getCurrentValue.bind(sub),\n                subscribe: sub.subscribe.bind(sub),\n                retry: sub.retry.bind(sub),\n                promise: sub.promise.bind(sub)\n            };\n        }\n        return subscription.promise();\n    }\n    // Server only\n    if (false) {}\n    // Client only\n    if (!initialized && \"object\" !== 'undefined') {\n        // require.resolveWeak check is needed for environments that don't have it available like Jest\n        const moduleIds = opts.webpack && \"function\" === 'function' ? opts.webpack() : opts.modules;\n        if (moduleIds) {\n            READY_INITIALIZERS.push((ids)=>{\n                for (const moduleId of moduleIds){\n                    if (ids.includes(moduleId)) {\n                        return init();\n                    }\n                }\n            });\n        }\n    }\n    function useLoadableModule() {\n        _s();\n        init();\n        const context = _react.default.useContext(_loadablecontextsharedruntime.LoadableContext);\n        if (context && Array.isArray(opts.modules)) {\n            opts.modules.forEach((moduleName)=>{\n                context(moduleName);\n            });\n        }\n    }\n    _s(useLoadableModule, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n    function LoadableComponent(props, ref) {\n        _s1();\n        useLoadableModule();\n        const state = _react.default.useSyncExternalStore(subscription.subscribe, subscription.getCurrentValue, subscription.getCurrentValue);\n        _react.default.useImperativeHandle(ref, {\n            \"createLoadableComponent.LoadableComponent.useImperativeHandle\": ()=>({\n                    retry: subscription.retry\n                })\n        }[\"createLoadableComponent.LoadableComponent.useImperativeHandle\"], []);\n        return _react.default.useMemo({\n            \"createLoadableComponent.LoadableComponent.useMemo\": ()=>{\n                if (state.loading || state.error) {\n                    return /*#__PURE__*/ _react.default.createElement(opts.loading, {\n                        isLoading: state.loading,\n                        pastDelay: state.pastDelay,\n                        timedOut: state.timedOut,\n                        error: state.error,\n                        retry: subscription.retry\n                    });\n                } else if (state.loaded) {\n                    return /*#__PURE__*/ _react.default.createElement(resolve(state.loaded), props);\n                } else {\n                    return null;\n                }\n            }\n        }[\"createLoadableComponent.LoadableComponent.useMemo\"], [\n            props,\n            state\n        ]);\n    }\n    _s1(LoadableComponent, \"FetqI339RA+IfltT8VNzX8RMZ2Q=\", false, function() {\n        return [\n            useLoadableModule\n        ];\n    });\n    LoadableComponent.preload = ()=>init();\n    LoadableComponent.displayName = 'LoadableComponent';\n    return /*#__PURE__*/ _react.default.forwardRef(LoadableComponent);\n}\nclass LoadableSubscription {\n    promise() {\n        return this._res.promise;\n    }\n    retry() {\n        this._clearTimeouts();\n        this._res = this._loadFn(this._opts.loader);\n        this._state = {\n            pastDelay: false,\n            timedOut: false\n        };\n        const { _res: res, _opts: opts } = this;\n        if (res.loading) {\n            if (typeof opts.delay === 'number') {\n                if (opts.delay === 0) {\n                    this._state.pastDelay = true;\n                } else {\n                    this._delay = setTimeout(()=>{\n                        this._update({\n                            pastDelay: true\n                        });\n                    }, opts.delay);\n                }\n            }\n            if (typeof opts.timeout === 'number') {\n                this._timeout = setTimeout(()=>{\n                    this._update({\n                        timedOut: true\n                    });\n                }, opts.timeout);\n            }\n        }\n        this._res.promise.then(()=>{\n            this._update({});\n            this._clearTimeouts();\n        }).catch((_err)=>{\n            this._update({});\n            this._clearTimeouts();\n        });\n        this._update({});\n    }\n    _update(partial) {\n        this._state = {\n            ...this._state,\n            error: this._res.error,\n            loaded: this._res.loaded,\n            loading: this._res.loading,\n            ...partial\n        };\n        this._callbacks.forEach((callback)=>callback());\n    }\n    _clearTimeouts() {\n        clearTimeout(this._delay);\n        clearTimeout(this._timeout);\n    }\n    getCurrentValue() {\n        return this._state;\n    }\n    subscribe(callback) {\n        this._callbacks.add(callback);\n        return ()=>{\n            this._callbacks.delete(callback);\n        };\n    }\n    constructor(loadFn, opts){\n        this._loadFn = loadFn;\n        this._opts = opts;\n        this._callbacks = new Set();\n        this._delay = null;\n        this._timeout = null;\n        this.retry();\n    }\n}\nfunction Loadable(opts) {\n    return createLoadableComponent(load, opts);\n}\n_c = Loadable;\nfunction flushInitializers(initializers, ids) {\n    let promises = [];\n    while(initializers.length){\n        let init = initializers.pop();\n        promises.push(init(ids));\n    }\n    return Promise.all(promises).then(()=>{\n        if (initializers.length) {\n            return flushInitializers(initializers, ids);\n        }\n    });\n}\nLoadable.preloadAll = ()=>{\n    return new Promise((resolveInitializers, reject)=>{\n        flushInitializers(ALL_INITIALIZERS).then(resolveInitializers, reject);\n    });\n};\nLoadable.preloadReady = (ids)=>{\n    if (ids === void 0) ids = [];\n    return new Promise((resolvePreload)=>{\n        const res = ()=>{\n            initialized = true;\n            return resolvePreload();\n        };\n        // We always will resolve, errors should be handled within loading UIs.\n        flushInitializers(READY_INITIALIZERS, ids).then(res, res);\n    });\n};\nif (true) {\n    window.__NEXT_PRELOADREADY = Loadable.preloadReady;\n}\nconst _default = Loadable; //# sourceMappingURL=loadable.shared-runtime.js.map\nvar _c;\n$RefreshReg$(_c, \"Loadable\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable.shared-runtime.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dynamic.js":
/*!**************************************!*\
  !*** ./node_modules/next/dynamic.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/dynamic */ \"(pages-dir-browser)/./node_modules/next/dist/shared/lib/dynamic.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2R5bmFtaWMuanMiLCJtYXBwaW5ncyI6IkFBQUEsMklBQXFEIiwic291cmNlcyI6WyIvYXBwL25vZGVfbW9kdWxlcy9uZXh0L2R5bmFtaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9keW5hbWljJylcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dynamic.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/styled-jsx/dist/index/index.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n__webpack_require__(/*! client-only */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\nvar React = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n        'default': e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n_c = React__default;\n/*\nBased on Glamor's sheet\nhttps://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js\n*/ function _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isProd = typeof process !== \"undefined\" && process.env && \"development\" === \"production\";\nvar isString = function(o) {\n    return Object.prototype.toString.call(o) === \"[object String]\";\n};\nvar StyleSheet = /*#__PURE__*/ function() {\n    function StyleSheet(param) {\n        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? \"stylesheet\" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;\n        invariant$1(isString(name), \"`name` must be a string\");\n        this._name = name;\n        this._deletedRulePlaceholder = \"#\" + name + \"-deleted-rule____{}\";\n        invariant$1(typeof optimizeForSpeed === \"boolean\", \"`optimizeForSpeed` must be a boolean\");\n        this._optimizeForSpeed = optimizeForSpeed;\n        this._serverSheet = undefined;\n        this._tags = [];\n        this._injected = false;\n        this._rulesCount = 0;\n        var node =  true && document.querySelector('meta[property=\"csp-nonce\"]');\n        this._nonce = node ? node.getAttribute(\"content\") : null;\n    }\n    var _proto = StyleSheet.prototype;\n    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {\n        invariant$1(typeof bool === \"boolean\", \"`setOptimizeForSpeed` accepts a boolean\");\n        invariant$1(this._rulesCount === 0, \"optimizeForSpeed cannot be when rules have already been inserted\");\n        this.flush();\n        this._optimizeForSpeed = bool;\n        this.inject();\n    };\n    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {\n        return this._optimizeForSpeed;\n    };\n    _proto.inject = function inject() {\n        var _this = this;\n        invariant$1(!this._injected, \"sheet already injected\");\n        this._injected = true;\n        if ( true && this._optimizeForSpeed) {\n            this._tags[0] = this.makeStyleTag(this._name);\n            this._optimizeForSpeed = \"insertRule\" in this.getSheet();\n            if (!this._optimizeForSpeed) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.\");\n                }\n                this.flush();\n                this._injected = true;\n            }\n            return;\n        }\n        this._serverSheet = {\n            cssRules: [],\n            insertRule: function(rule, index) {\n                if (typeof index === \"number\") {\n                    _this._serverSheet.cssRules[index] = {\n                        cssText: rule\n                    };\n                } else {\n                    _this._serverSheet.cssRules.push({\n                        cssText: rule\n                    });\n                }\n                return index;\n            },\n            deleteRule: function(index) {\n                _this._serverSheet.cssRules[index] = null;\n            }\n        };\n    };\n    _proto.getSheetForTag = function getSheetForTag(tag) {\n        if (tag.sheet) {\n            return tag.sheet;\n        }\n        // this weirdness brought to you by firefox\n        for(var i = 0; i < document.styleSheets.length; i++){\n            if (document.styleSheets[i].ownerNode === tag) {\n                return document.styleSheets[i];\n            }\n        }\n    };\n    _proto.getSheet = function getSheet() {\n        return this.getSheetForTag(this._tags[this._tags.length - 1]);\n    };\n    _proto.insertRule = function insertRule(rule, index) {\n        invariant$1(isString(rule), \"`insertRule` accepts only strings\");\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            var sheet = this.getSheet();\n            if (typeof index !== \"number\") {\n                index = sheet.cssRules.length;\n            }\n            // this weirdness for perf, and chrome's weird bug\n            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                return -1;\n            }\n        } else {\n            var insertionPoint = this._tags[index];\n            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));\n        }\n        return this._rulesCount++;\n    };\n    _proto.replaceRule = function replaceRule(index, rule) {\n        if (this._optimizeForSpeed || \"object\" === \"undefined\") {\n            var sheet =  true ? this.getSheet() : 0;\n            if (!rule.trim()) {\n                rule = this._deletedRulePlaceholder;\n            }\n            if (!sheet.cssRules[index]) {\n                // @TBD Should we throw an error?\n                return index;\n            }\n            sheet.deleteRule(index);\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                // In order to preserve the indices we insert a deleteRulePlaceholder\n                sheet.insertRule(this._deletedRulePlaceholder, index);\n            }\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"old rule at index `\" + index + \"` not found\");\n            tag.textContent = rule;\n        }\n        return index;\n    };\n    _proto.deleteRule = function deleteRule(index) {\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            this.replaceRule(index, \"\");\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"rule at index `\" + index + \"` not found\");\n            tag.parentNode.removeChild(tag);\n            this._tags[index] = null;\n        }\n    };\n    _proto.flush = function flush() {\n        this._injected = false;\n        this._rulesCount = 0;\n        if (true) {\n            this._tags.forEach(function(tag) {\n                return tag && tag.parentNode.removeChild(tag);\n            });\n            this._tags = [];\n        } else {}\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        if (false) {}\n        return this._tags.reduce(function(rules, tag) {\n            if (tag) {\n                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {\n                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;\n                }));\n            } else {\n                rules.push(null);\n            }\n            return rules;\n        }, []);\n    };\n    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {\n        if (cssString) {\n            invariant$1(isString(cssString), \"makeStyleTag accepts only strings as second parameter\");\n        }\n        var tag = document.createElement(\"style\");\n        if (this._nonce) tag.setAttribute(\"nonce\", this._nonce);\n        tag.type = \"text/css\";\n        tag.setAttribute(\"data-\" + name, \"\");\n        if (cssString) {\n            tag.appendChild(document.createTextNode(cssString));\n        }\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        if (relativeToTag) {\n            head.insertBefore(tag, relativeToTag);\n        } else {\n            head.appendChild(tag);\n        }\n        return tag;\n    };\n    _createClass(StyleSheet, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this._rulesCount;\n            }\n        }\n    ]);\n    return StyleSheet;\n}();\nfunction invariant$1(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheet: \" + message + \".\");\n    }\n}\nfunction hash(str) {\n    var _$hash = 5381, i = str.length;\n    while(i){\n        _$hash = _$hash * 33 ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;\n}\nvar stringHash = hash;\nvar sanitize = function(rule) {\n    return rule.replace(/\\/style/gi, \"\\\\/style\");\n};\nvar cache = {};\n/**\n * computeId\n *\n * Compute and memoize a jsx id from a basedId and optionally props.\n */ function computeId(baseId, props) {\n    if (!props) {\n        return \"jsx-\" + baseId;\n    }\n    var propsToString = String(props);\n    var key = baseId + propsToString;\n    if (!cache[key]) {\n        cache[key] = \"jsx-\" + stringHash(baseId + \"-\" + propsToString);\n    }\n    return cache[key];\n}\n/**\n * computeSelector\n *\n * Compute and memoize dynamic selectors.\n */ function computeSelector(id, css) {\n    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;\n    // Sanitize SSR-ed CSS.\n    // Client side code doesn't need to be sanitized since we use\n    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).\n    if (false) {}\n    var idcss = id + css;\n    if (!cache[idcss]) {\n        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);\n    }\n    return cache[idcss];\n}\nfunction mapRulesToStyle(cssRules, options) {\n    if (options === void 0) options = {};\n    return cssRules.map(function(args) {\n        var id = args[0];\n        var css = args[1];\n        return /*#__PURE__*/ React__default[\"default\"].createElement(\"style\", {\n            id: \"__\" + id,\n            // Avoid warnings upon render with a key\n            key: \"__\" + id,\n            nonce: options.nonce ? options.nonce : undefined,\n            dangerouslySetInnerHTML: {\n                __html: css\n            }\n        });\n    });\n}\nvar StyleSheetRegistry = /*#__PURE__*/ function() {\n    function StyleSheetRegistry(param) {\n        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;\n        this._sheet = styleSheet || new StyleSheet({\n            name: \"styled-jsx\",\n            optimizeForSpeed: optimizeForSpeed\n        });\n        this._sheet.inject();\n        if (styleSheet && typeof optimizeForSpeed === \"boolean\") {\n            this._sheet.setOptimizeForSpeed(optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    }\n    var _proto = StyleSheetRegistry.prototype;\n    _proto.add = function add(props) {\n        var _this = this;\n        if (undefined === this._optimizeForSpeed) {\n            this._optimizeForSpeed = Array.isArray(props.children);\n            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        if ( true && !this._fromServer) {\n            this._fromServer = this.selectFromServer();\n            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {\n                acc[tagName] = 0;\n                return acc;\n            }, {});\n        }\n        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;\n        // Deduping: just increase the instances count.\n        if (styleId in this._instancesCounts) {\n            this._instancesCounts[styleId] += 1;\n            return;\n        }\n        var indices = rules.map(function(rule) {\n            return _this._sheet.insertRule(rule);\n        }) // Filter out invalid rules\n        .filter(function(index) {\n            return index !== -1;\n        });\n        this._indices[styleId] = indices;\n        this._instancesCounts[styleId] = 1;\n    };\n    _proto.remove = function remove(props) {\n        var _this = this;\n        var styleId = this.getIdAndRules(props).styleId;\n        invariant(styleId in this._instancesCounts, \"styleId: `\" + styleId + \"` not found\");\n        this._instancesCounts[styleId] -= 1;\n        if (this._instancesCounts[styleId] < 1) {\n            var tagFromServer = this._fromServer && this._fromServer[styleId];\n            if (tagFromServer) {\n                tagFromServer.parentNode.removeChild(tagFromServer);\n                delete this._fromServer[styleId];\n            } else {\n                this._indices[styleId].forEach(function(index) {\n                    return _this._sheet.deleteRule(index);\n                });\n                delete this._indices[styleId];\n            }\n            delete this._instancesCounts[styleId];\n        }\n    };\n    _proto.update = function update(props, nextProps) {\n        this.add(nextProps);\n        this.remove(props);\n    };\n    _proto.flush = function flush() {\n        this._sheet.flush();\n        this._sheet.inject();\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {\n            return [\n                styleId,\n                _this._fromServer[styleId]\n            ];\n        }) : [];\n        var cssRules = this._sheet.cssRules();\n        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {\n            return [\n                styleId,\n                _this._indices[styleId].map(function(index) {\n                    return cssRules[index].cssText;\n                }).join(_this._optimizeForSpeed ? \"\" : \"\\n\")\n            ];\n        }) // filter out empty rules\n        .filter(function(rule) {\n            return Boolean(rule[1]);\n        }));\n    };\n    _proto.styles = function styles(options) {\n        return mapRulesToStyle(this.cssRules(), options);\n    };\n    _proto.getIdAndRules = function getIdAndRules(props) {\n        var css = props.children, dynamic = props.dynamic, id = props.id;\n        if (dynamic) {\n            var styleId = computeId(id, dynamic);\n            return {\n                styleId: styleId,\n                rules: Array.isArray(css) ? css.map(function(rule) {\n                    return computeSelector(styleId, rule);\n                }) : [\n                    computeSelector(styleId, css)\n                ]\n            };\n        }\n        return {\n            styleId: computeId(id),\n            rules: Array.isArray(css) ? css : [\n                css\n            ]\n        };\n    };\n    /**\n   * selectFromServer\n   *\n   * Collects style tags from the document with id __jsx-XXX\n   */ _proto.selectFromServer = function selectFromServer() {\n        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^=\"__jsx-\"]'));\n        return elements.reduce(function(acc, element) {\n            var id = element.id.slice(2);\n            acc[id] = element;\n            return acc;\n        }, {});\n    };\n    return StyleSheetRegistry;\n}();\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheetRegistry: \" + message + \".\");\n    }\n}\nvar StyleSheetContext = /*#__PURE__*/ React.createContext(null);\nStyleSheetContext.displayName = \"StyleSheetContext\";\nfunction createStyleRegistry() {\n    return new StyleSheetRegistry();\n}\nfunction StyleRegistry(param) {\n    _s();\n    var configuredRegistry = param.registry, children = param.children;\n    var rootRegistry = React.useContext(StyleSheetContext);\n    var ref = React.useState({\n        \"StyleRegistry.useState[ref]\": function() {\n            return rootRegistry || configuredRegistry || createStyleRegistry();\n        }\n    }[\"StyleRegistry.useState[ref]\"]), registry = ref[0];\n    return /*#__PURE__*/ React__default[\"default\"].createElement(StyleSheetContext.Provider, {\n        value: registry\n    }, children);\n}\n_s(StyleRegistry, \"F6PIZFsaWgcE6rBNmd+Zkq3zRoY=\");\n_c1 = StyleRegistry;\nfunction useStyleRegistry() {\n    _s1();\n    return React.useContext(StyleSheetContext);\n}\n_s1(useStyleRegistry, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.\n// https://github.com/reactwg/react-18/discussions/110\nvar useInsertionEffect = React__default[\"default\"].useInsertionEffect || React__default[\"default\"].useLayoutEffect;\nvar defaultRegistry =  true ? createStyleRegistry() : 0;\nfunction JSXStyle(props) {\n    _s2();\n    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();\n    // If `registry` does not exist, we do nothing here.\n    if (!registry) {\n        return null;\n    }\n    if (false) {}\n    useInsertionEffect({\n        \"JSXStyle.useInsertionEffect\": function() {\n            registry.add(props);\n            return ({\n                \"JSXStyle.useInsertionEffect\": function() {\n                    registry.remove(props);\n                }\n            })[\"JSXStyle.useInsertionEffect\"];\n        // props.children can be string[], will be striped since id is identical\n        }\n    }[\"JSXStyle.useInsertionEffect\"], [\n        props.id,\n        String(props.dynamic)\n    ]);\n    return null;\n}\n_s2(JSXStyle, \"48Sqj1BUqkshsPdz6NEWXDn8pF4=\", false, function() {\n    return [\n        useStyleRegistry,\n        useInsertionEffect\n    ];\n});\n_c2 = JSXStyle;\nJSXStyle.dynamic = function(info) {\n    return info.map(function(tagInfo) {\n        var baseId = tagInfo[0];\n        var props = tagInfo[1];\n        return computeId(baseId, props);\n    }).join(\" \");\n};\nexports.StyleRegistry = StyleRegistry;\nexports.createStyleRegistry = createStyleRegistry;\nexports.style = JSXStyle;\nexports.useStyleRegistry = useStyleRegistry;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"React__default\");\n$RefreshReg$(_c1, \"StyleRegistry\");\n$RefreshReg$(_c2, \"JSXStyle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/styled-jsx/style.js":
/*!******************************************!*\
  !*** ./node_modules/styled-jsx/style.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = __webpack_require__(/*! ./dist/index */ \"(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js\").style;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdHlsZWQtanN4L3N0eWxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsbUlBQThDIiwic291cmNlcyI6WyIvYXBwL25vZGVfbW9kdWxlcy9zdHlsZWQtanN4L3N0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2luZGV4Jykuc3R5bGVcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSIsInN0eWxlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/styled-jsx/style.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js":
/*!****************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/adminSettings.js ***!
  \****************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AdminSettings),\n/* harmony export */   useAdminSettings: () => (/* binding */ useAdminSettings)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\n// Add deep comparison utility\nconst isEqual = (obj1, obj2)=>{\n    if (obj1 === obj2) return true;\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n    if (obj1 === null || obj2 === null) return false;\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) return false;\n    return keys1.every((key)=>keys2.includes(key) && isEqual(obj1[key], obj2[key]));\n};\n// Add debounce utility\nconst debounce = (func, wait)=>{\n    let timeout;\n    return function executedFunction() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        const later = ()=>{\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n// Helper function to safely access localStorage\nconst getLocalStorage = (key)=>{\n    if (false) {}\n    try {\n        return localStorage.getItem(key);\n    } catch (error) {\n        console.warn('Error accessing localStorage:', error);\n        return null;\n    }\n};\n// Helper function to safely set localStorage\nconst setLocalStorage = (key, value)=>{\n    if (false) {}\n    try {\n        localStorage.setItem(key, value);\n    } catch (error) {\n        console.warn('Error setting localStorage:', error);\n    }\n};\nconst useAdminSettings = (ref)=>{\n    _s();\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        \"useAdminSettings.useState\": ()=>{\n            // Initialize from localStorage on mount, safely\n            return getLocalStorage('currentUserId');\n        }\n    }[\"useAdminSettings.useState\"]);\n    const [isTopBarUpdated, setIsTopBarUpdated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const initialized = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const pollingInterval = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [currentSettings, setCurrentSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const [lastUpdateTime, setLastUpdateTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    // Constants for timing\n    const MIN_UPDATE_INTERVAL = 2000; // 2 seconds minimum between updates\n    const CACHE_DURATION = 30000; // 30 seconds cache duration\n    const POLLING_INTERVAL = 5000; // 5 seconds polling interval\n    // Cache and state tracking\n    const settingsCache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const lastSettingsUpdate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const pendingUpdates = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const isUpdating = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const lastKnownSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    // Debug logging for settings changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            console.log('AdminSettings - Current Settings:', settings);\n            console.log('AdminSettings - Current User ID:', currentUserId);\n            console.log('AdminSettings - Is TopBar Updated:', isTopBarUpdated);\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings,\n        currentUserId,\n        isTopBarUpdated\n    ]);\n    // Helper: Fetch settings for a user from backend with enhanced caching\n    const fetchSettingsForUser = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAdminSettings.useCallback[fetchSettingsForUser]\": async (userId)=>{\n            if (!userId) return;\n            // Check cache first\n            const cachedSettings = settingsCache.current.get(userId);\n            const lastUpdate = lastSettingsUpdate.current.get(userId);\n            const now = Date.now();\n            // If we have cached settings and they're recent enough, use them\n            if (cachedSettings && lastUpdate && now - lastUpdate < CACHE_DURATION) {\n                console.log('[AdminSettings] Using cached settings for user:', userId);\n                return cachedSettings;\n            }\n            // If there's already a pending update, return the cached value\n            if (pendingUpdates.current.has(userId)) {\n                console.log('[AdminSettings] Pending update exists, using cached value');\n                return cachedSettings;\n            }\n            // If an update is in progress, return the cached value\n            if (isUpdating.current) {\n                console.log('[AdminSettings] Update in progress, using cached value');\n                return cachedSettings;\n            }\n            try {\n                isUpdating.current = true;\n                pendingUpdates.current.set(userId, true);\n                const response = await fetch(\"/api/data-center/settings/\".concat(userId), {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                    }\n                });\n                if (!response.ok) {\n                    const errorData = await response.json().catch({\n                        \"useAdminSettings.useCallback[fetchSettingsForUser]\": ()=>({})\n                    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"]);\n                    throw new Error(errorData.detail || 'Failed to fetch settings');\n                }\n                const result = await response.json();\n                const newSettings = result.data || {};\n                // Compare with last known settings\n                const lastKnown = lastKnownSettings.current.get(userId);\n                const hasChanged = !isEqual(lastKnown, newSettings);\n                if (hasChanged) {\n                    console.log('[AdminSettings] Settings changed, updating...');\n                    setSettings({\n                        \"useAdminSettings.useCallback[fetchSettingsForUser]\": (prev)=>({\n                                ...prev,\n                                [userId]: newSettings\n                            })\n                    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"]);\n                    setCurrentSettings(newSettings);\n                    // Update caches\n                    settingsCache.current.set(userId, newSettings);\n                    lastSettingsUpdate.current.set(userId, now);\n                    lastKnownSettings.current.set(userId, newSettings);\n                    // Update TopBar if ref provided\n                    if (ref && ref.current && ref.current.setCaptureSettings) {\n                        ref.current.setCaptureSettings(newSettings);\n                        setIsTopBarUpdated(true);\n                    }\n                } else {\n                    console.log('[AdminSettings] Settings unchanged, skipping update');\n                }\n                setError(null);\n                return newSettings;\n            } catch (error) {\n                console.error('[AdminSettings] Error fetching settings:', error);\n                setError(error.message);\n                return cachedSettings; // Return cached settings on error\n            } finally{\n                isUpdating.current = false;\n                pendingUpdates.current.delete(userId);\n            }\n        }\n    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"], [\n        ref\n    ]);\n    // Debounced version of fetchSettingsForUser\n    const debouncedFetchSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(debounce({\n        \"useAdminSettings.useCallback[debouncedFetchSettings]\": (userId)=>{\n            fetchSettingsForUser(userId);\n        }\n    }[\"useAdminSettings.useCallback[debouncedFetchSettings]\"], 1000), [\n        fetchSettingsForUser\n    ]);\n    // Polling for settings updates with value-based optimization\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (!currentUserId) return;\n            const fetchSettings = {\n                \"useAdminSettings.useEffect.fetchSettings\": async ()=>{\n                    const now = Date.now();\n                    if (now - lastUpdateTime < MIN_UPDATE_INTERVAL) {\n                        return;\n                    }\n                    try {\n                        await debouncedFetchSettings(currentUserId);\n                        setLastUpdateTime(now);\n                    } catch (error) {\n                        console.error('[AdminSettings] Polling error:', error);\n                    }\n                }\n            }[\"useAdminSettings.useEffect.fetchSettings\"];\n            // Initial fetch\n            fetchSettings();\n            // Set up polling with value-based interval\n            pollingInterval.current = setInterval(fetchSettings, POLLING_INTERVAL);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>{\n                    if (pollingInterval.current) {\n                        clearInterval(pollingInterval.current);\n                    }\n                }\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId,\n        lastUpdateTime,\n        debouncedFetchSettings\n    ]);\n    // Listen for userId changes (from index.js navigation)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"useAdminSettings.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.userId) {\n                        console.log('[handleUserIdChange] userId:', event.detail.userId);\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        setLocalStorage('currentUserId', newUserId);\n                        fetchSettingsForUser(newUserId);\n                    }\n                }\n            }[\"useAdminSettings.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>window.removeEventListener('userIdChange', handleUserIdChange)\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        ref\n    ]);\n    // Initial settings fetch on mount if we have a user ID\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (currentUserId && !initialized.current) {\n                fetchSettingsForUser(currentUserId);\n                initialized.current = true;\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId\n    ]);\n    // Effect to handle index.js update after TopBar is updated\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (isTopBarUpdated) {\n                const event = new CustomEvent('settingsUpdated', {\n                    detail: {\n                        type: 'settings',\n                        userId: currentUserId,\n                        settings: settings[currentUserId]\n                    }\n                });\n                window.dispatchEvent(event);\n                setIsTopBarUpdated(false);\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        isTopBarUpdated,\n        currentUserId,\n        settings\n    ]);\n    // Load settings from localStorage on mount (optional, fallback)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            try {\n                const savedSettings = getLocalStorage('adminSettings');\n                if (savedSettings) {\n                    const parsedSettings = JSON.parse(savedSettings);\n                    setSettings(parsedSettings);\n                }\n            } catch (error) {\n                console.warn('Error loading settings from localStorage:', error);\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], []);\n    // Save settings to localStorage when they change (optional)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (initialized.current) {\n                try {\n                    setLocalStorage('adminSettings', JSON.stringify(settings));\n                } catch (error) {\n                    console.warn('Error saving settings to localStorage:', error);\n                }\n            } else {\n                initialized.current = true;\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings\n    ]);\n    // Update settings when they change in the context\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (settings && currentUserId) {\n                console.log('[settings useEffect] currentUserId:', currentUserId); // Debug log\n                const userSettings = settings[currentUserId];\n                if (userSettings) {\n                    setCurrentSettings(userSettings);\n                // Optionally update UI elements if needed\n                }\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings,\n        currentUserId\n    ]);\n    // Listen for settings updates from admin page (captureSettingsUpdate event)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"useAdminSettings.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail && event.detail.type === 'captureSettings') {\n                        const { userId, times, delay } = event.detail;\n                        console.log('[handleSettingsUpdate] userId:', userId, 'currentUserId:', currentUserId); // Debug log\n                        if (userId === currentUserId) {\n                            const newSettings = {\n                                ...currentSettings,\n                                times: times !== undefined ? Number(times) : currentSettings.times,\n                                delay: delay !== undefined ? Number(delay) : currentSettings.delay\n                            };\n                            setCurrentSettings(newSettings);\n                            setSettings({\n                                \"useAdminSettings.useEffect.handleSettingsUpdate\": (prev)=>({\n                                        ...prev,\n                                        [userId]: newSettings\n                                    })\n                            }[\"useAdminSettings.useEffect.handleSettingsUpdate\"]);\n                            updateSettings(newSettings, userId);\n                        }\n                    }\n                }\n            }[\"useAdminSettings.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate)\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId,\n        currentSettings\n    ]);\n    // Update settings for a user with value-based optimization\n    const updateSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAdminSettings.useCallback[updateSettings]\": async (newSettings, userId)=>{\n            if (!userId) return;\n            const now = Date.now();\n            if (now - lastUpdateTime < MIN_UPDATE_INTERVAL) {\n                console.log('[updateSettings] Skipping update - too soon after last update');\n                return;\n            }\n            const updatedSettings = {\n                ...settings[userId],\n                ...newSettings\n            };\n            // Compare with last known settings\n            const lastKnown = lastKnownSettings.current.get(userId);\n            const hasChanged = !isEqual(lastKnown, updatedSettings);\n            if (!hasChanged) {\n                console.log('[updateSettings] Settings unchanged, skipping update');\n                return;\n            }\n            try {\n                isUpdating.current = true;\n                pendingUpdates.current.set(userId, true);\n                const response = await fetch(\"/api/data-center/settings/\".concat(userId), {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                    },\n                    body: JSON.stringify(updatedSettings)\n                });\n                if (!response.ok) {\n                    const errorData = await response.json().catch({\n                        \"useAdminSettings.useCallback[updateSettings]\": ()=>({})\n                    }[\"useAdminSettings.useCallback[updateSettings]\"]);\n                    throw new Error(errorData.detail || 'Failed to save settings');\n                }\n                const result = await response.json();\n                const finalSettings = result.data || updatedSettings;\n                // Update state and caches\n                setSettings({\n                    \"useAdminSettings.useCallback[updateSettings]\": (prev)=>({\n                            ...prev,\n                            [userId]: finalSettings\n                        })\n                }[\"useAdminSettings.useCallback[updateSettings]\"]);\n                setCurrentSettings(finalSettings);\n                settingsCache.current.set(userId, finalSettings);\n                lastSettingsUpdate.current.set(userId, now);\n                lastKnownSettings.current.set(userId, finalSettings);\n                setLastUpdateTime(now);\n                setError(null);\n            } catch (error) {\n                setError(error.message);\n            } finally{\n                isUpdating.current = false;\n                pendingUpdates.current.delete(userId);\n            }\n        }\n    }[\"useAdminSettings.useCallback[updateSettings]\"], [\n        settings,\n        lastUpdateTime\n    ]);\n    // Upload and update image for a user\n    const updateImage = async (userId, base64Image)=>{\n        console.log('[updateImage] userId:', userId); // Debug log\n        if (!userId || !base64Image) return;\n        try {\n            const response = await fetch(\"/api/data-center/image?user_id=\".concat(userId), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                },\n                body: JSON.stringify({\n                    image: base64Image\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json().catch(()=>({}));\n                throw new Error(errorData.detail || 'Failed to upload image');\n            }\n            // Optionally, fetch settings again to get updated image info\n            await fetchSettingsForUser(userId);\n            setError(null);\n            return true;\n        } catch (error) {\n            setError(error.message);\n            return false;\n        }\n    };\n    return {\n        settings,\n        currentSettings,\n        currentUserId,\n        error,\n        updateSettings: fetchSettingsForUser\n    };\n};\n_s(useAdminSettings, \"HR1aFfgBiUAZ7ZTKtNm9Y6L9tLc=\");\n// Add default export component\nfunction AdminSettings() {\n    return null; // This is a utility file, so we don't need to render anything\n}\n_c = AdminSettings;\nvar _c;\n$RefreshReg$(_c, \"AdminSettings\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/displayResponse.js":
/*!******************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/displayResponse.js ***!
  \******************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst DisplayResponse = (param)=>{\n    let { width, height, distance, isVisible = true } = param;\n    _s();\n    // Animation state for visibility transitions\n    const [animationState, setAnimationState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(isVisible ? 'visible' : 'hidden');\n    // Update animation state when visibility changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DisplayResponse.useEffect\": ()=>{\n            console.log('DisplayResponse: isVisible changed to', isVisible);\n            setAnimationState(isVisible ? 'visible' : 'hidden');\n        }\n    }[\"DisplayResponse.useEffect\"], [\n        isVisible\n    ]);\n    // Format values with units and handle missing values\n    const formattedWidth = width || '---';\n    const formattedHeight = height || '---';\n    const formattedDistance = distance || '---';\n    console.log('DisplayResponse: rendering with isVisible:', isVisible, 'animationState:', animationState);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"metrics-display \".concat(animationState),\n        style: {\n            position: 'absolute',\n            right: '20px',\n            top: '80px',\n            backgroundColor: 'rgba(0, 102, 204, 0.8)',\n            color: 'white',\n            padding: '10px 15px',\n            borderRadius: '8px',\n            fontSize: '14px',\n            fontFamily: 'monospace',\n            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\n            transition: 'all 0.3s ease',\n            opacity: animationState === 'visible' ? 1 : 0,\n            transform: animationState === 'visible' ? 'translateX(0)' : 'translateX(50px)',\n            pointerEvents: animationState === 'visible' ? 'auto' : 'none',\n            zIndex: 100\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"metrics-header\",\n                style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: '8px',\n                    borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\n                    paddingBottom: '5px'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        style: {\n                            fontWeight: 'bold'\n                        },\n                        children: \"Display Metrics\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 54,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"metrics-indicator\",\n                        style: {\n                            width: '10px',\n                            height: '10px',\n                            borderRadius: '50%',\n                            backgroundColor: '#00ff00',\n                            boxShadow: '0 0 5px rgba(0, 255, 0, 0.8)'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 55,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                lineNumber: 43,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"metrics-content\",\n                style: {\n                    lineHeight: '1.5'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Width:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 72,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedWidth\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 73,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" pixels\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 74,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 71,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Height:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 77,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedHeight\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 78,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" pixels\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 79,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 76,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Distance:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 82,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedDistance\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 83,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" cm\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 84,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 81,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                lineNumber: 67,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n        lineNumber: 21,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DisplayResponse, \"mi6lEmDyIHWSMf9dWknMjCAipTM=\");\n_c = DisplayResponse;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DisplayResponse);\nvar _c;\n$RefreshReg$(_c, \"DisplayResponse\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3BhZ2VzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvY29tcG9uZW50cy1ndWkvZGlzcGxheVJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUQ7QUFFbkQsTUFBTUcsa0JBQWtCO1FBQUMsRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsWUFBWSxJQUFJLEVBQUU7O0lBQ3BFLDZDQUE2QztJQUM3QyxNQUFNLENBQUNDLGdCQUFnQkMsa0JBQWtCLEdBQUdSLCtDQUFRQSxDQUFDTSxZQUFZLFlBQVk7SUFFN0UsaURBQWlEO0lBQ2pETCxnREFBU0E7cUNBQUM7WUFDUlEsUUFBUUMsR0FBRyxDQUFDLHlDQUF5Q0o7WUFDckRFLGtCQUFrQkYsWUFBWSxZQUFZO1FBQzVDO29DQUFHO1FBQUNBO0tBQVU7SUFFZCxxREFBcUQ7SUFDckQsTUFBTUssaUJBQWlCUixTQUFTO0lBQ2hDLE1BQU1TLGtCQUFrQlIsVUFBVTtJQUNsQyxNQUFNUyxvQkFBb0JSLFlBQVk7SUFFdENJLFFBQVFDLEdBQUcsQ0FBQyw4Q0FBOENKLFdBQVcsbUJBQW1CQztJQUV4RixxQkFDRSw4REFBQ087UUFDQ0MsV0FBVyxtQkFBa0MsT0FBZlI7UUFDOUJTLE9BQU87WUFDTEMsVUFBVTtZQUNWQyxPQUFPO1lBQ1BDLEtBQUs7WUFDTEMsaUJBQWlCO1lBQ2pCQyxPQUFPO1lBQ1BDLFNBQVM7WUFDVEMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLFlBQVk7WUFDWkMsV0FBVztZQUNYQyxZQUFZO1lBQ1pDLFNBQVNyQixtQkFBbUIsWUFBWSxJQUFJO1lBQzVDc0IsV0FBV3RCLG1CQUFtQixZQUMxQixrQkFDQTtZQUNKdUIsZUFBZXZCLG1CQUFtQixZQUFZLFNBQVM7WUFDdkR3QixRQUFRO1FBQ1Y7OzBCQUVBLDhEQUFDakI7Z0JBQ0NDLFdBQVU7Z0JBQ1ZDLE9BQU87b0JBQ0xnQixTQUFTO29CQUNUQyxnQkFBZ0I7b0JBQ2hCQyxZQUFZO29CQUNaQyxjQUFjO29CQUNkQyxjQUFjO29CQUNkQyxlQUFlO2dCQUNqQjs7a0NBRUEsOERBQUNDO3dCQUFLdEIsT0FBTzs0QkFBRXVCLFlBQVk7d0JBQU87a0NBQUc7Ozs7OztrQ0FDckMsOERBQUN6Qjt3QkFDQ0MsV0FBVTt3QkFDVkMsT0FBTzs0QkFDTGIsT0FBTzs0QkFDUEMsUUFBUTs0QkFDUm1CLGNBQWM7NEJBQ2RILGlCQUFpQjs0QkFDakJNLFdBQVc7d0JBQ2I7Ozs7Ozs7Ozs7OzswQkFJSiw4REFBQ1o7Z0JBQ0NDLFdBQVU7Z0JBQ1ZDLE9BQU87b0JBQUV3QixZQUFZO2dCQUFNOztrQ0FFM0IsOERBQUNDOzswQ0FDQyw4REFBQ0g7Z0NBQUt0QixPQUFPO29DQUFFZ0IsU0FBUztvQ0FBZ0I3QixPQUFPO2dDQUFPOzBDQUFHOzs7Ozs7MENBQ3pELDhEQUFDbUM7Z0NBQUt0QixPQUFPO29DQUFFdUIsWUFBWTtnQ0FBTzswQ0FBSTVCOzs7Ozs7MENBQ3RDLDhEQUFDMkI7Z0NBQUt0QixPQUFPO29DQUFFWSxTQUFTO29DQUFLSixVQUFVO2dDQUFPOzBDQUFHOzs7Ozs7Ozs7Ozs7a0NBRW5ELDhEQUFDaUI7OzBDQUNDLDhEQUFDSDtnQ0FBS3RCLE9BQU87b0NBQUVnQixTQUFTO29DQUFnQjdCLE9BQU87Z0NBQU87MENBQUc7Ozs7OzswQ0FDekQsOERBQUNtQztnQ0FBS3RCLE9BQU87b0NBQUV1QixZQUFZO2dDQUFPOzBDQUFJM0I7Ozs7OzswQ0FDdEMsOERBQUMwQjtnQ0FBS3RCLE9BQU87b0NBQUVZLFNBQVM7b0NBQUtKLFVBQVU7Z0NBQU87MENBQUc7Ozs7Ozs7Ozs7OztrQ0FFbkQsOERBQUNpQjs7MENBQ0MsOERBQUNIO2dDQUFLdEIsT0FBTztvQ0FBRWdCLFNBQVM7b0NBQWdCN0IsT0FBTztnQ0FBTzswQ0FBRzs7Ozs7OzBDQUN6RCw4REFBQ21DO2dDQUFLdEIsT0FBTztvQ0FBRXVCLFlBQVk7Z0NBQU87MENBQUkxQjs7Ozs7OzBDQUN0Qyw4REFBQ3lCO2dDQUFLdEIsT0FBTztvQ0FBRVksU0FBUztvQ0FBS0osVUFBVTtnQ0FBTzswQ0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSzNEO0dBdEZNdEI7S0FBQUE7QUF3Rk4saUVBQWVBLGVBQWVBLEVBQUMiLCJzb3VyY2VzIjpbIi9hcHAvcGFnZXMvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZC9jb21wb25lbnRzLWd1aS9kaXNwbGF5UmVzcG9uc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IERpc3BsYXlSZXNwb25zZSA9ICh7IHdpZHRoLCBoZWlnaHQsIGRpc3RhbmNlLCBpc1Zpc2libGUgPSB0cnVlIH0pID0+IHtcbiAgLy8gQW5pbWF0aW9uIHN0YXRlIGZvciB2aXNpYmlsaXR5IHRyYW5zaXRpb25zXG4gIGNvbnN0IFthbmltYXRpb25TdGF0ZSwgc2V0QW5pbWF0aW9uU3RhdGVdID0gdXNlU3RhdGUoaXNWaXNpYmxlID8gJ3Zpc2libGUnIDogJ2hpZGRlbicpO1xuICBcbiAgLy8gVXBkYXRlIGFuaW1hdGlvbiBzdGF0ZSB3aGVuIHZpc2liaWxpdHkgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdEaXNwbGF5UmVzcG9uc2U6IGlzVmlzaWJsZSBjaGFuZ2VkIHRvJywgaXNWaXNpYmxlKTtcbiAgICBzZXRBbmltYXRpb25TdGF0ZShpc1Zpc2libGUgPyAndmlzaWJsZScgOiAnaGlkZGVuJyk7XG4gIH0sIFtpc1Zpc2libGVdKTtcbiAgXG4gIC8vIEZvcm1hdCB2YWx1ZXMgd2l0aCB1bml0cyBhbmQgaGFuZGxlIG1pc3NpbmcgdmFsdWVzXG4gIGNvbnN0IGZvcm1hdHRlZFdpZHRoID0gd2lkdGggfHwgJy0tLSc7XG4gIGNvbnN0IGZvcm1hdHRlZEhlaWdodCA9IGhlaWdodCB8fCAnLS0tJztcbiAgY29uc3QgZm9ybWF0dGVkRGlzdGFuY2UgPSBkaXN0YW5jZSB8fCAnLS0tJztcbiAgXG4gIGNvbnNvbGUubG9nKCdEaXNwbGF5UmVzcG9uc2U6IHJlbmRlcmluZyB3aXRoIGlzVmlzaWJsZTonLCBpc1Zpc2libGUsICdhbmltYXRpb25TdGF0ZTonLCBhbmltYXRpb25TdGF0ZSk7XG4gIFxuICByZXR1cm4gKFxuICAgIDxkaXYgXG4gICAgICBjbGFzc05hbWU9e2BtZXRyaWNzLWRpc3BsYXkgJHthbmltYXRpb25TdGF0ZX1gfVxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIHJpZ2h0OiAnMjBweCcsXG4gICAgICAgIHRvcDogJzgwcHgnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsIDEwMiwgMjA0LCAwLjgpJyxcbiAgICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICAgIHBhZGRpbmc6ICcxMHB4IDE1cHgnLFxuICAgICAgICBib3JkZXJSYWRpdXM6ICc4cHgnLFxuICAgICAgICBmb250U2l6ZTogJzE0cHgnLFxuICAgICAgICBmb250RmFtaWx5OiAnbW9ub3NwYWNlJyxcbiAgICAgICAgYm94U2hhZG93OiAnMCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMyknLFxuICAgICAgICB0cmFuc2l0aW9uOiAnYWxsIDAuM3MgZWFzZScsXG4gICAgICAgIG9wYWNpdHk6IGFuaW1hdGlvblN0YXRlID09PSAndmlzaWJsZScgPyAxIDogMCxcbiAgICAgICAgdHJhbnNmb3JtOiBhbmltYXRpb25TdGF0ZSA9PT0gJ3Zpc2libGUnIFxuICAgICAgICAgID8gJ3RyYW5zbGF0ZVgoMCknIFxuICAgICAgICAgIDogJ3RyYW5zbGF0ZVgoNTBweCknLFxuICAgICAgICBwb2ludGVyRXZlbnRzOiBhbmltYXRpb25TdGF0ZSA9PT0gJ3Zpc2libGUnID8gJ2F1dG8nIDogJ25vbmUnLFxuICAgICAgICB6SW5kZXg6IDEwMFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8ZGl2IFxuICAgICAgICBjbGFzc05hbWU9XCJtZXRyaWNzLWhlYWRlclwiXG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgbWFyZ2luQm90dG9tOiAnOHB4JyxcbiAgICAgICAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpJyxcbiAgICAgICAgICBwYWRkaW5nQm90dG9tOiAnNXB4J1xuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8c3BhbiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcgfX0+RGlzcGxheSBNZXRyaWNzPC9zcGFuPlxuICAgICAgICA8ZGl2IFxuICAgICAgICAgIGNsYXNzTmFtZT1cIm1ldHJpY3MtaW5kaWNhdG9yXCJcbiAgICAgICAgICBzdHlsZT17eyBcbiAgICAgICAgICAgIHdpZHRoOiAnMTBweCcsIFxuICAgICAgICAgICAgaGVpZ2h0OiAnMTBweCcsIFxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNTAlJywgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMDBmZjAwJyxcbiAgICAgICAgICAgIGJveFNoYWRvdzogJzAgMCA1cHggcmdiYSgwLCAyNTUsIDAsIDAuOCknXG4gICAgICAgICAgfX0gXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIFxuICAgICAgPGRpdiBcbiAgICAgICAgY2xhc3NOYW1lPVwibWV0cmljcy1jb250ZW50XCJcbiAgICAgICAgc3R5bGU9e3sgbGluZUhlaWdodDogJzEuNScgfX1cbiAgICAgID5cbiAgICAgICAgPHA+XG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycsIHdpZHRoOiAnODBweCcgfX0+V2lkdGg6PC9zcGFuPiBcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcgfX0+e2Zvcm1hdHRlZFdpZHRofTwvc3Bhbj4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgb3BhY2l0eTogMC44LCBmb250U2l6ZTogJzEycHgnIH19PiBwaXhlbHM8L3NwYW4+XG4gICAgICAgIDwvcD5cbiAgICAgICAgPHA+XG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycsIHdpZHRoOiAnODBweCcgfX0+SGVpZ2h0Ojwvc3Bhbj4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZm9udFdlaWdodDogJ2JvbGQnIH19Pntmb3JtYXR0ZWRIZWlnaHR9PC9zcGFuPiBcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBvcGFjaXR5OiAwLjgsIGZvbnRTaXplOiAnMTJweCcgfX0+IHBpeGVsczwvc3Bhbj5cbiAgICAgICAgPC9wPlxuICAgICAgICA8cD5cbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywgd2lkdGg6ICc4MHB4JyB9fT5EaXN0YW5jZTo8L3NwYW4+IFxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGZvbnRXZWlnaHQ6ICdib2xkJyB9fT57Zm9ybWF0dGVkRGlzdGFuY2V9PC9zcGFuPiBcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBvcGFjaXR5OiAwLjgsIGZvbnRTaXplOiAnMTJweCcgfX0+IGNtPC9zcGFuPlxuICAgICAgICA8L3A+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERpc3BsYXlSZXNwb25zZTsiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkRpc3BsYXlSZXNwb25zZSIsIndpZHRoIiwiaGVpZ2h0IiwiZGlzdGFuY2UiLCJpc1Zpc2libGUiLCJhbmltYXRpb25TdGF0ZSIsInNldEFuaW1hdGlvblN0YXRlIiwiY29uc29sZSIsImxvZyIsImZvcm1hdHRlZFdpZHRoIiwiZm9ybWF0dGVkSGVpZ2h0IiwiZm9ybWF0dGVkRGlzdGFuY2UiLCJkaXYiLCJjbGFzc05hbWUiLCJzdHlsZSIsInBvc2l0aW9uIiwicmlnaHQiLCJ0b3AiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvciIsInBhZGRpbmciLCJib3JkZXJSYWRpdXMiLCJmb250U2l6ZSIsImZvbnRGYW1pbHkiLCJib3hTaGFkb3ciLCJ0cmFuc2l0aW9uIiwib3BhY2l0eSIsInRyYW5zZm9ybSIsInBvaW50ZXJFdmVudHMiLCJ6SW5kZXgiLCJkaXNwbGF5IiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwibWFyZ2luQm90dG9tIiwiYm9yZGVyQm90dG9tIiwicGFkZGluZ0JvdHRvbSIsInNwYW4iLCJmb250V2VpZ2h0IiwibGluZUhlaWdodCIsInAiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/displayResponse.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/topBar.js":
/*!*********************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/topBar.js ***!
  \*********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(pages-dir-browser)/./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"(pages-dir-browser)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _adminSettings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./adminSettings */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js\");\n/* harmony import */ var _utils_consentManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utils/consentManager */ \"(pages-dir-browser)/./utils/consentManager.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n// Improved debounce function\nconst debounce = (func, wait)=>{\n    let timeout;\n    let lastArgs;\n    let lastThis;\n    return function executedFunction() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        lastArgs = args;\n        lastThis = this;\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(()=>{\n            timeout = null;\n            func.apply(lastThis, lastArgs);\n        }, wait);\n    };\n};\nconst TopBar = (param)=>{\n    let { onButtonClick, onCameraAccess, outputText, onOutputChange, onToggleTopBar, onToggleMetrics, canvasRef, isTopBarShown = true, isCanvasVisible = true, showMetrics = true } = param;\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const [canvasStatus, setCanvasStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(isCanvasVisible);\n    const { settings, updateSettings } = (0,_adminSettings__WEBPACK_IMPORTED_MODULE_4__.useAdminSettings)();\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [currentSettings, setCurrentSettings] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        times_set_random: 1,\n        delay_set_random: 3\n    });\n    const isUpdatingRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);\n    // Memoized function to fetch settings\n    const fetchSettings = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"TopBar.useCallback[fetchSettings]\": async (userId)=>{\n            if (!userId || isUpdatingRef.current) return;\n            try {\n                isUpdatingRef.current = true;\n                const response = await fetch(\"/api/data-center/settings/\".concat(userId), {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                    }\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch settings');\n                }\n                const userSettings = await response.json();\n                if (userSettings && (userSettings.times_set_random || userSettings.delay_set_random)) {\n                    setCurrentSettings(userSettings);\n                    if (updateSettings) {\n                        await updateSettings(userSettings, userId);\n                    }\n                }\n            } catch (error) {\n                console.error('TopBar - Error fetching settings:', error);\n            } finally{\n                isUpdatingRef.current = false;\n            }\n        }\n    }[\"TopBar.useCallback[fetchSettings]\"], [\n        updateSettings\n    ]);\n    const ensureCanvasAvailable = ()=>{\n        if (false) {}\n        // Check for existing canvas\n        let canvas = document.querySelector('#tracking-canvas');\n        if (!canvas) {\n            // Create canvas if it doesn't exist\n            canvas = document.createElement('canvas');\n            canvas.className = 'tracking-canvas';\n            canvas.id = 'tracking-canvas';\n            canvas.width = 800;\n            canvas.height = 400;\n            canvas.style.cssText = \"\\n        position: relative;\\n        width: 100%;\\n        height: 400px;\\n        background-color: white;\\n        border: 1px solid #ccc;\\n        display: block;\\n      \";\n            // Initialize with white background\n            const ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Append to appropriate container\n            const container = document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n            container.appendChild(canvas);\n        }\n        // Store global reference\n        window.whiteScreenCanvas = canvas;\n        return canvas;\n    };\n    // Debounced save settings function\n    const debouncedSaveSettings = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(debounce({\n        \"TopBar.useCallback[debouncedSaveSettings]\": async (userId, newSettings)=>{\n            if (!userId || isUpdatingRef.current) return;\n            try {\n                isUpdatingRef.current = true;\n                const response = await fetch(\"/api/data-center/settings/\".concat(userId), {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                    },\n                    body: JSON.stringify(newSettings)\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to save settings to backend');\n                }\n                const latestSettings = await response.json();\n                setCurrentSettings(latestSettings);\n                if (updateSettings) {\n                    await updateSettings(latestSettings, userId);\n                }\n            } catch (error) {\n                console.error('TopBar - Error saving settings:', error);\n            } finally{\n                isUpdatingRef.current = false;\n            }\n        }\n    }[\"TopBar.useCallback[debouncedSaveSettings]\"], 500), [\n        updateSettings\n    ]);\n    // Initialize user ID and fetch initial settings\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const initializeUserId = {\n                \"TopBar.useEffect.initializeUserId\": async ()=>{\n                    const userId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_5__.getOrCreateUserId)();\n                    if (userId) {\n                        setCurrentUserId(userId);\n                        await fetchSettings(userId);\n                        setIsLoading(false);\n                    }\n                }\n            }[\"TopBar.useEffect.initializeUserId\"];\n            initializeUserId();\n        }\n    }[\"TopBar.useEffect\"], [\n        fetchSettings\n    ]);\n    // Update canvas status when prop changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            setCanvasStatus(isCanvasVisible);\n        }\n    }[\"TopBar.useEffect\"], [\n        isCanvasVisible\n    ]);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"TopBar.useEffect.handleUserIdChange\": async (event)=>{\n                    var _event_detail;\n                    if ((_event_detail = event.detail) === null || _event_detail === void 0 ? void 0 : _event_detail.userId) {\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        await fetchSettings(newUserId);\n                    }\n                }\n            }[\"TopBar.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"TopBar.useEffect\": ()=>window.removeEventListener('userIdChange', handleUserIdChange)\n            })[\"TopBar.useEffect\"];\n        }\n    }[\"TopBar.useEffect\"], [\n        fetchSettings\n    ]);\n    // Listen for settings updates from admin page\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"TopBar.useEffect.handleSettingsUpdate\": (event)=>{\n                    var _event_detail;\n                    if (((_event_detail = event.detail) === null || _event_detail === void 0 ? void 0 : _event_detail.type) === 'captureSettings') {\n                        const { userId, times_set_random, delay_set_random } = event.detail;\n                        // Only update if values have actually changed\n                        if (times_set_random !== currentSettings.times_set_random || delay_set_random !== currentSettings.delay_set_random) {\n                            const newSettings = {\n                                times_set_random: Number(times_set_random) || currentSettings.times_set_random,\n                                delay_set_random: Number(delay_set_random) || currentSettings.delay_set_random\n                            };\n                            debouncedSaveSettings(userId, newSettings);\n                        }\n                    }\n                }\n            }[\"TopBar.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"TopBar.useEffect\": ()=>window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate)\n            })[\"TopBar.useEffect\"];\n        }\n    }[\"TopBar.useEffect\"], [\n        currentSettings,\n        debouncedSaveSettings\n    ]);\n    const handleButtonClick = (actionType)=>{\n        // Ensure canvas is available before triggering actions that need it\n        if ([\n            'setRandom',\n            'calibrate',\n            'randomDot',\n            'clearAll'\n        ].includes(actionType)) {\n            const canvas = ensureCanvasAvailable();\n            if (!canvas) {\n                console.warn(\"Canvas not available for action: \".concat(actionType));\n            }\n        }\n        if (onButtonClick) {\n            onButtonClick(actionType);\n        }\n    };\n    const handleToggleTopBar = ()=>{\n        onToggleTopBar(!isTopBarShown);\n    };\n    const handleToggleMetrics = ()=>{\n        console.log('TopBar: handleToggleMetrics called');\n        // Use action handler if available, otherwise fallback to direct toggle\n        if (onButtonClick) {\n            console.log('TopBar: Using action handler for metrics');\n            onButtonClick('metrics');\n        } else {\n            console.log('TopBar: Using direct toggle for metrics');\n            onToggleMetrics();\n        }\n    };\n    const handleGoBack = ()=>{\n        router.push('/');\n    };\n    const statusMessage = \"TopBar \".concat(isTopBarShown ? 'shown' : 'hidden', \", Canvas: \").concat(canvasStatus ? 'Visible' : 'Hidden');\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-8fd840df60237147\" + \" \" + \"topbar\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-left\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"logo\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"logo-text\",\n                            children: \"Logo\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 245,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 244,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"controls-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"control-group\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-label\",\n                                        children: \"Time(s):\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 250,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-input\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"control-input-field\",\n                                            children: currentSettings.times_set_random\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 252,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 251,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, \"times-\".concat(currentSettings.times_set_random, \"-\").concat(Date.now()), true, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 249,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"control-group\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-label\",\n                                        children: \"Delay(s):\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 257,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-input\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"control-input-field\",\n                                            children: currentSettings.delay_set_random\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 259,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 258,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, \"delay-\".concat(currentSettings.delay_set_random, \"-\").concat(Date.now()), true, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 256,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 248,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 243,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-middle\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-groups\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"button-group\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: handleGoBack,\n                                            title: \"Go back to home page\",\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn back-button\",\n                                            children: \"← Back\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 269,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('setRandom'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Set Random\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 277,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('calibrate'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Set Calibrate\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 283,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 268,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        marginRight: '80px'\n                                    },\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('randomDot'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Random Dot\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 292,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('clearAll'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Clear All\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 298,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 291,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 267,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-divider\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 307,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"button-group\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('headPose'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Draw Head pose\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 311,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('boundingBox'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Show Bounding Box\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 317,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 310,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('preview'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Show Preview\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 326,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('mask'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"\\uD83D\\uDE0A Show Mask\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 332,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('parameters'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Parameters\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 338,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 325,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 309,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                    lineNumber: 266,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 265,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-right\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"notes-container\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            title: \"Processing Output\",\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"output-display\",\n                            children: [\n                                statusMessage,\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {\n                                    className: \"jsx-8fd840df60237147\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 356,\n                                    columnNumber: 13\n                                }, undefined),\n                                outputText || \"Processing output will appear here...\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 351,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 350,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-buttons\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleToggleTopBar,\n                                title: \"Toggle TopBar\",\n                                style: {\n                                    padding: '5px 10px',\n                                    backgroundColor: '#0066cc',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    fontSize: '16px',\n                                    cursor: 'pointer',\n                                    marginRight: '5px'\n                                },\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"icon-btn menu-btn\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"icon-text\",\n                                    children: \"≡\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 377,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 362,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleToggleMetrics,\n                                title: \"\".concat(showMetrics ? 'Hide' : 'Show', \" Metrics\"),\n                                style: {\n                                    padding: '5px 10px',\n                                    backgroundColor: showMetrics ? '#00cc00' : '#ff9900',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    fontSize: '16px',\n                                    cursor: 'pointer',\n                                    transition: 'all 0.2s ease'\n                                },\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"icon-btn alert-btn\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"icon-text\",\n                                    children: showMetrics ? '✓' : '!'\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 395,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 380,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 361,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 349,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"8fd840df60237147\",\n                children: \".active-toggle.jsx-8fd840df60237147{-webkit-transform:scale(1.2);-moz-transform:scale(1.2);-ms-transform:scale(1.2);-o-transform:scale(1.2);transform:scale(1.2);-webkit-transition:all.3s ease;-moz-transition:all.3s ease;-o-transition:all.3s ease;transition:all.3s ease}.icon-btn.jsx-8fd840df60237147{-webkit-transition:all.2s ease;-moz-transition:all.2s ease;-o-transition:all.2s ease;transition:all.2s ease}.icon-btn.jsx-8fd840df60237147:hover{opacity:.8}\"\n            }, void 0, false, void 0, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n        lineNumber: 242,\n        columnNumber: 5\n    }, undefined);\n};\n_s(TopBar, \"tCJa33HYRX7crgMOXGrSbYyzpIg=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter,\n        _adminSettings__WEBPACK_IMPORTED_MODULE_4__.useAdminSettings\n    ];\n});\n_c = TopBar;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TopBar);\nvar _c;\n$RefreshReg$(_c, \"TopBar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/topBar.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/index.js":
/*!*****************************************************!*\
  !*** ./pages/collected-dataset-customized/index.js ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActionButton: () => (/* binding */ ActionButton),\n/* harmony export */   MainComponent: () => (/* binding */ MainComponent),\n/* harmony export */   \"default\": () => (/* binding */ MainPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(pages-dir-browser)/./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/head */ \"(pages-dir-browser)/./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-browser)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_gui_topBar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components-gui/topBar */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/topBar.js\");\n/* harmony import */ var _components_gui_displayResponse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components-gui/displayResponse */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/displayResponse.js\");\n/* harmony import */ var _components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/collected-dataset-customized/Action/countSave.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx\");\n/* harmony import */ var _components_collected_dataset_customized_Helper_savefile__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\");\n/* harmony import */ var _components_collected_dataset_customized_Action_CalibratePoints_jsx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/collected-dataset-customized/Action/CalibratePoints.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\");\n/* harmony import */ var _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/consent/ConsentContext */ \"(pages-dir-browser)/./components/consent/ConsentContext.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/router */ \"(pages-dir-browser)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _components_gui_adminSettings__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components-gui/adminSettings */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n// Dynamically import the camera component with SSR disabled\nconst DynamicCameraAccess = next_dynamic__WEBPACK_IMPORTED_MODULE_4___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-browser_pages_collected-dataset-customized_components-gui_cameraAccess_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components-gui/cameraAccess */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/cameraAccess.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"pages/collected-dataset-customized/index.js -> \" + \"./components-gui/cameraAccess\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                width: '480px',\n                height: '360px',\n                backgroundColor: '#f0f8ff',\n                border: '2px solid #0066cc',\n                borderRadius: '8px',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                textAlign: 'center',\n                zIndex: 999\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        fontSize: '48px',\n                        marginBottom: '15px'\n                    },\n                    children: \"\\uD83D\\uDCF7\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 36,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    style: {\n                        fontSize: '16px',\n                        fontWeight: 'bold',\n                        color: '#0066cc'\n                    },\n                    children: \"Loading camera...\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 37,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n            lineNumber: 19,\n            columnNumber: 7\n        }, undefined)\n});\n_c = DynamicCameraAccess;\n// Add deep comparison utility\nconst isEqual = (obj1, obj2)=>{\n    if (obj1 === obj2) return true;\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n    if (obj1 === null || obj2 === null) return false;\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) return false;\n    return keys1.every((key)=>keys2.includes(key) && isEqual(obj1[key], obj2[key]));\n};\n// Create a basic ActionButton component with optimization\nconst ActionButton = (param)=>{\n    let { text, abbreviatedText, onClick, customClass = '', disabled = false, active = false } = param;\n    _s();\n    const [isAbbreviated, setIsAbbreviated] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const { settings } = (0,_components_gui_adminSettings__WEBPACK_IMPORTED_MODULE_12__.useAdminSettings)();\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('default');\n    const [isCapturing1, setIsCapturing1] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [captureCounter, setCaptureCounter] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(1);\n    const [processStatus, setProcessStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');\n    // Memoize button props to prevent unnecessary re-renders\n    const buttonProps = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)({\n        \"ActionButton.useMemo[buttonProps]\": ()=>({\n                className: \"action-button \".concat(customClass, \" \").concat(isAbbreviated ? 'abbreviated' : '', \" \").concat(active ? 'active' : ''),\n                onClick,\n                disabled,\n                title: text\n            })\n    }[\"ActionButton.useMemo[buttonProps]\"], [\n        customClass,\n        isAbbreviated,\n        active,\n        onClick,\n        disabled,\n        text\n    ]);\n    // Check window size and set abbreviated mode with debounce\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"ActionButton.useEffect\": ()=>{\n            if (false) {}\n            let timeoutId;\n            const handleResize = {\n                \"ActionButton.useEffect.handleResize\": ()=>{\n                    clearTimeout(timeoutId);\n                    timeoutId = setTimeout({\n                        \"ActionButton.useEffect.handleResize\": ()=>{\n                            const width = window.innerWidth;\n                            setIsAbbreviated(width < 768);\n                        }\n                    }[\"ActionButton.useEffect.handleResize\"], 100);\n                }\n            }[\"ActionButton.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            handleResize(); // Initial call\n            return ({\n                \"ActionButton.useEffect\": ()=>{\n                    window.removeEventListener('resize', handleResize);\n                    clearTimeout(timeoutId);\n                }\n            })[\"ActionButton.useEffect\"];\n        }\n    }[\"ActionButton.useEffect\"], []);\n    // Add effect to listen for user ID changes with optimization\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"ActionButton.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"ActionButton.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        const newUserId = event.detail.userId;\n                        if (newUserId !== currentUserId) {\n                            setCurrentUserId(newUserId);\n                        }\n                    }\n                }\n            }[\"ActionButton.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"ActionButton.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"ActionButton.useEffect\"];\n        }\n    }[\"ActionButton.useEffect\"], [\n        currentUserId\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        ...buttonProps,\n        children: [\n            isAbbreviated ? abbreviatedText : text,\n            processStatus && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"process-status\",\n                children: processStatus\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 121,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n        lineNumber: 118,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ActionButton, \"Nkz1GO/Uf3mvhA1uh+EhQBsi9aE=\", false, function() {\n    return [\n        _components_gui_adminSettings__WEBPACK_IMPORTED_MODULE_12__.useAdminSettings\n    ];\n});\n_c1 = ActionButton;\n// Global Canvas Manager - Single source of truth for canvas operations\nclass GlobalCanvasManager {\n    // Get or create the single main canvas\n    getCanvas() {\n        if (this.canvas && this.canvas.parentNode) {\n            return this.canvas;\n        }\n        // Try to find existing canvas\n        let canvas = document.querySelector('#tracking-canvas');\n        if (!canvas) {\n            // Create new canvas only if none exists\n            canvas = document.createElement('canvas');\n            canvas.className = 'tracking-canvas';\n            canvas.id = 'tracking-canvas';\n            console.log('Created new main canvas');\n        } else {\n            console.log('Found existing main canvas');\n        }\n        this.canvas = canvas;\n        return canvas;\n    }\n    // Initialize the main canvas\n    initializeCanvas() {\n        let container = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        if (this.isInitialized) {\n            console.log('Canvas already initialized');\n            return this.getCanvas();\n        }\n        const canvas = this.getCanvas();\n        if (!canvas) return null;\n        // Determine container\n        const targetContainer = container || document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n        // Set initial dimensions based on current window size\n        this.updateCanvasSize(canvas, targetContainer);\n        // Initialize with yellow background\n        const ctx = canvas.getContext('2d');\n        ctx.fillStyle = 'yellow';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        // Add to container if not already there\n        if (!canvas.parentNode) {\n            targetContainer.appendChild(canvas);\n        }\n        // Store global reference\n        window.whiteScreenCanvas = canvas;\n        window.globalCanvasManager = this;\n        // Set up responsive behavior\n        this.setupResponsiveCanvas(canvas, targetContainer);\n        this.isInitialized = true;\n        console.log(\"Main canvas initialized: \".concat(canvas.width, \"x\").concat(canvas.height));\n        return canvas;\n    }\n    // Update canvas size to match container and window size\n    updateCanvasSize(canvas, container) {\n        if (!canvas || !container) return;\n        // Get current window dimensions\n        const windowWidth = window.innerWidth || 800;\n        const windowHeight = window.innerHeight || 600;\n        // Get container dimensions\n        const rect = container.getBoundingClientRect();\n        const containerWidth = rect.width || container.clientWidth || windowWidth;\n        const containerHeight = rect.height || container.clientHeight || windowHeight;\n        // Set canvas size to match container and window\n        canvas.width = containerWidth;\n        canvas.height = containerHeight;\n        // Update CSS to match\n        canvas.style.width = '100%';\n        canvas.style.height = '100%';\n        canvas.style.display = 'block';\n        canvas.style.backgroundColor = 'yellow';\n        // Link with other canvases if they exist\n        this.linkWithOtherCanvases(canvas);\n    }\n    // Link this canvas with other canvases\n    linkWithOtherCanvases(canvas) {\n        // Find all other canvases on the page\n        const allCanvases = document.querySelectorAll('canvas');\n        allCanvases.forEach((otherCanvas)=>{\n            if (otherCanvas !== canvas && otherCanvas.id !== 'tracking-canvas') {\n                // Sync dimensions with other canvases\n                otherCanvas.width = canvas.width;\n                otherCanvas.height = canvas.height;\n                otherCanvas.style.width = '100%';\n                otherCanvas.style.height = '100%';\n                // Clear and redraw other canvases\n                const ctx = otherCanvas.getContext('2d');\n                ctx.fillStyle = 'yellow';\n                ctx.fillRect(0, 0, otherCanvas.width, otherCanvas.height);\n            }\n        });\n    }\n    // Set up responsive canvas that adapts to container size\n    setupResponsiveCanvas(canvas, container) {\n        if (!canvas || !container) return;\n        // Remove existing resize observer\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n        }\n        // Create new resize observer\n        this.resizeObserver = new ResizeObserver((entries)=>{\n            for (const entry of entries){\n                if (entry.target === container) {\n                    this.updateCanvasSize(canvas, container);\n                    // Redraw yellow background after resize\n                    const ctx = canvas.getContext('2d');\n                    ctx.fillStyle = 'yellow';\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                }\n            }\n        });\n        // Observe container for size changes\n        this.resizeObserver.observe(container);\n        // Also listen for window resize as fallback\n        const handleWindowResize = ()=>{\n            this.updateCanvasSize(canvas, container);\n            const ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'yellow';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n        };\n        window.addEventListener('resize', handleWindowResize);\n        canvas._windowResizeHandler = handleWindowResize;\n    }\n    // Switch to fullscreen mode\n    enterFullscreen() {\n        const canvas = this.getCanvas();\n        if (!canvas) return null;\n        // Save original state\n        this.originalState = {\n            parent: canvas.parentElement,\n            position: canvas.style.position,\n            top: canvas.style.top,\n            left: canvas.style.left,\n            width: canvas.style.width,\n            height: canvas.style.height,\n            zIndex: canvas.style.zIndex\n        };\n        // Remove canvas from current parent\n        if (canvas.parentNode) {\n            canvas.parentNode.removeChild(canvas);\n        }\n        // Move to body and make fullscreen\n        document.body.appendChild(canvas);\n        // Set fullscreen styles\n        canvas.style.cssText = \"\\n      position: fixed !important;\\n      top: 0 !important;\\n      left: 0 !important;\\n      width: 100vw !important;\\n      height: 100vh !important;\\n      z-index: 99999 !important;\\n      background-color: yellow !important;\\n      border: none !important;\\n      display: block !important;\\n      opacity: 1 !important;\\n      pointer-events: auto !important;\\n      margin: 0 !important;\\n      padding: 0 !important;\\n      box-sizing: border-box !important;\\n      transform: none !important;\\n    \";\n        // Set canvas dimensions to window size\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        // Clear with yellow background\n        const ctx = canvas.getContext('2d');\n        ctx.fillStyle = 'yellow';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        // Hide UI elements\n        this.hideUIElements();\n        this.isFullscreen = true;\n        console.log('Main canvas entered fullscreen mode');\n        return canvas;\n    }\n    // Exit fullscreen mode\n    exitFullscreen() {\n        const canvas = this.getCanvas();\n        if (!canvas || !this.originalState) return null;\n        // Show UI elements\n        this.showUIElements();\n        // Find appropriate container\n        const container = document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n        // Move canvas back to container\n        container.appendChild(canvas);\n        // Restore original styles\n        canvas.style.position = 'relative';\n        canvas.style.top = '';\n        canvas.style.left = '';\n        canvas.style.width = '100%';\n        canvas.style.height = '100%';\n        canvas.style.zIndex = '';\n        canvas.style.backgroundColor = 'yellow';\n        // Update size to match container\n        this.updateCanvasSize(canvas, container);\n        // Clear with yellow background\n        const ctx = canvas.getContext('2d');\n        ctx.fillStyle = 'yellow';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        // Clear original state\n        this.originalState = null;\n        this.isFullscreen = false;\n        console.log('Main canvas exited fullscreen mode');\n        return canvas;\n    }\n    // Hide UI elements during fullscreen\n    hideUIElements() {\n        const elementsToHide = [\n            '.topbar',\n            '.canvas-container',\n            '.main-content',\n            '.metrics-panel',\n            '.display-metrics',\n            'nav',\n            'header',\n            '.button-groups',\n            '.control-buttons'\n        ];\n        elementsToHide.forEach((selector)=>{\n            const elements = document.querySelectorAll(selector);\n            elements.forEach((el)=>{\n                el.style.display = 'none';\n                el.setAttribute('data-hidden-by-canvas', 'true');\n            });\n        });\n    }\n    // Show UI elements after fullscreen\n    showUIElements() {\n        const hiddenElements = document.querySelectorAll('[data-hidden-by-canvas=\"true\"]');\n        hiddenElements.forEach((el)=>{\n            el.style.display = '';\n            el.removeAttribute('data-hidden-by-canvas');\n        });\n    }\n    // Clear canvas content\n    clear() {\n        const canvas = this.getCanvas();\n        if (!canvas) return;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'yellow';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    // Draw dot at position\n    drawDot(x, y) {\n        let radius = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 12;\n        const canvas = this.getCanvas();\n        if (!canvas) return false;\n        const ctx = canvas.getContext('2d');\n        (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_7__.drawRedDot)(ctx, x, y, radius, false);\n        return true;\n    }\n    // Get canvas dimensions\n    getDimensions() {\n        const canvas = this.getCanvas();\n        if (!canvas) return {\n            width: 0,\n            height: 0\n        };\n        return {\n            width: canvas.width,\n            height: canvas.height\n        };\n    }\n    // Check if canvas is in fullscreen mode\n    isInFullscreen() {\n        return this.isFullscreen;\n    }\n    // Cleanup\n    destroy() {\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n        }\n        if (this.canvas && this.canvas._windowResizeHandler) {\n            window.removeEventListener('resize', this.canvas._windowResizeHandler);\n        }\n        // Remove canvas completely from DOM\n        if (this.canvas && this.canvas.parentNode) {\n            this.canvas.parentNode.removeChild(this.canvas);\n        }\n        this.canvas = null;\n        this.originalState = null;\n        this.isFullscreen = false;\n        this.isInitialized = false;\n    }\n    constructor(){\n        this.canvas = null;\n        this.originalState = null;\n        this.resizeObserver = null;\n        this.isFullscreen = false;\n        this.isInitialized = false;\n    }\n}\n// Main component that combines all functionality\nconst MainComponent = /*#__PURE__*/ _s1((0,react__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(_c2 = _s1((param, ref)=>{\n    let { triggerCameraAccess, isCompactMode, onActionClick } = param;\n    _s1();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_11__.useRouter)();\n    const { userId: consentUserId } = (0,_components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_10__.useConsent)();\n    const { settings, updateSettings } = (0,_components_gui_adminSettings__WEBPACK_IMPORTED_MODULE_12__.useAdminSettings)(ref);\n    // State management\n    const [userData, setUserData] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isHydrated, setIsHydrated] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [backendStatus, setBackendStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('checking');\n    const [showTopBar, setShowTopBar] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [showWarning, setShowWarning] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [warningMessage, setWarningMessage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');\n    const [statusMessage, setStatusMessage] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');\n    const [outputText, setOutputText] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');\n    const [showMetrics, setShowMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [showPermissionPopup, setShowPermissionPopup] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [cameraPermissionGranted, setCameraPermissionGranted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [showCamera, setShowCamera] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [showCameraPlaceholder, setShowCameraPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [showHeadPose, setShowHeadPose] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [showBoundingBox, setShowBoundingBox] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [showMask, setShowMask] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [showParameters, setShowParameters] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [windowSize, setWindowSize] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        width: 0,\n        height: 0,\n        percentage: 100\n    });\n    const [metrics, setMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        width: '---',\n        height: '---',\n        distance: '---'\n    });\n    const [captureCounter, setCaptureCounter] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(1);\n    const [captureFolder, setCaptureFolder] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('default');\n    const [showSettings, setShowSettings] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isPageActive, setIsPageActive] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    // Button action states\n    const [randomTimes, setRandomTimes] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(1);\n    const [delaySeconds, setDelaySeconds] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(3);\n    const [processStatus, setProcessStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');\n    const [countdownValue, setCountdownValue] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [currentDot, setCurrentDot] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [calibrationPoints, setCalibrationPoints] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [remainingCaptures, setRemainingCaptures] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const [showCanvas, setShowCanvas] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [calibrationHandler, setCalibrationHandler] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isCameraActive, setIsCameraActive] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // Refs\n    const previewAreaRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const actionButtonGroupRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    // Add cache for settings\n    const settingsCache = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(new Map());\n    const lastSettingsUpdate = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(new Map());\n    // Global canvas manager instance - initialize only once\n    const canvasManager = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)({\n        \"MainComponent.useMemo[canvasManager]\": ()=>{\n            // Create a singleton canvas manager\n            if ( true && window.globalCanvasManager) {\n                return window.globalCanvasManager;\n            }\n            const manager = new GlobalCanvasManager();\n            // Store globally for other components to use\n            if (true) {\n                window.globalCanvasManager = manager;\n            }\n            return manager;\n        }\n    }[\"MainComponent.useMemo[canvasManager]\"], []);\n    // Utility function to easily manage canvas operations\n    const canvasUtils = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)({\n        \"MainComponent.useMemo[canvasUtils]\": ()=>({\n                // Get or create canvas\n                getCanvas: ({\n                    \"MainComponent.useMemo[canvasUtils]\": ()=>canvasManager.getCanvas()\n                })[\"MainComponent.useMemo[canvasUtils]\"],\n                // Enter fullscreen mode\n                enterFullscreen: ({\n                    \"MainComponent.useMemo[canvasUtils]\": ()=>{\n                        return canvasManager.enterFullscreen();\n                    }\n                })[\"MainComponent.useMemo[canvasUtils]\"],\n                // Exit fullscreen mode\n                exitFullscreen: ({\n                    \"MainComponent.useMemo[canvasUtils]\": ()=>{\n                        return canvasManager.exitFullscreen();\n                    }\n                })[\"MainComponent.useMemo[canvasUtils]\"],\n                // Clear canvas\n                clear: ({\n                    \"MainComponent.useMemo[canvasUtils]\": ()=>{\n                        canvasManager.clear();\n                    }\n                })[\"MainComponent.useMemo[canvasUtils]\"],\n                // Draw dot at position\n                drawDot: ({\n                    \"MainComponent.useMemo[canvasUtils]\": function(x, y) {\n                        let radius = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 12;\n                        return canvasManager.drawDot(x, y, radius);\n                    }\n                })[\"MainComponent.useMemo[canvasUtils]\"],\n                // Get canvas dimensions\n                getDimensions: ({\n                    \"MainComponent.useMemo[canvasUtils]\": ()=>{\n                        return canvasManager.getDimensions();\n                    }\n                })[\"MainComponent.useMemo[canvasUtils]\"],\n                // Check if canvas is in fullscreen\n                isFullscreen: ({\n                    \"MainComponent.useMemo[canvasUtils]\": ()=>canvasManager.isInFullscreen()\n                })[\"MainComponent.useMemo[canvasUtils]\"],\n                // Update canvas size to match container and window\n                resizeToContainer: ({\n                    \"MainComponent.useMemo[canvasUtils]\": (container)=>{\n                        const canvas = canvasManager.getCanvas();\n                        if (!canvas || !container) return false;\n                        // Get current window dimensions\n                        const windowWidth = window.innerWidth || 800;\n                        const windowHeight = window.innerHeight || 600;\n                        const rect = container.getBoundingClientRect();\n                        canvas.width = rect.width || container.clientWidth || windowWidth;\n                        canvas.height = rect.height || container.clientHeight || windowHeight;\n                        // Clear and redraw yellow background\n                        const ctx = canvas.getContext('2d');\n                        ctx.fillStyle = 'yellow';\n                        ctx.fillRect(0, 0, canvas.width, canvas.height);\n                        // Link with other canvases\n                        canvasManager.linkWithOtherCanvases(canvas);\n                        return true;\n                    }\n                })[\"MainComponent.useMemo[canvasUtils]\"],\n                // Link with other canvases\n                linkWithOtherCanvases: ({\n                    \"MainComponent.useMemo[canvasUtils]\": (canvas)=>{\n                        canvasManager.linkWithOtherCanvases(canvas);\n                    }\n                })[\"MainComponent.useMemo[canvasUtils]\"]\n            })\n    }[\"MainComponent.useMemo[canvasUtils]\"], [\n        canvasManager\n    ]);\n    // Make canvas utilities globally available\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            if (true) {\n                window.canvasUtils = canvasUtils;\n                window.canvasManager = canvasManager;\n                // Add a function to sync all canvases\n                window.syncAllCanvases = ({\n                    \"MainComponent.useEffect\": ()=>{\n                        if (canvasManager) {\n                            const canvas = canvasManager.getCanvas();\n                            if (canvas) {\n                                canvasManager.linkWithOtherCanvases(canvas);\n                            }\n                        }\n                    }\n                })[\"MainComponent.useEffect\"];\n            }\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    if (true) {\n                        delete window.canvasUtils;\n                        delete window.canvasManager;\n                        delete window.syncAllCanvases;\n                    }\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], [\n        canvasUtils,\n        canvasManager\n    ]);\n    // Set hydrated state after mount\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            setIsHydrated(true);\n            // Reset any existing canvas to prevent size accumulation\n            if (true) {\n                const existingCanvas = document.querySelector('#tracking-canvas');\n                if (existingCanvas) {\n                    existingCanvas.width = 800;\n                    existingCanvas.height = 600;\n                    existingCanvas.style.width = '100%';\n                    existingCanvas.style.height = '100%';\n                    existingCanvas.style.backgroundColor = 'yellow';\n                }\n            }\n            // Cleanup function to reset page state when navigating away\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    // Reset any global styles or state that might affect other pages\n                    if (true) {\n                        // Remove any fixed positioning that might have been applied\n                        document.body.style.position = '';\n                        document.body.style.overflow = '';\n                        document.body.style.height = '';\n                        document.body.style.width = '';\n                        document.documentElement.style.overflow = '';\n                    }\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], []);\n    // Handle page visibility changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            const handleVisibilityChange = {\n                \"MainComponent.useEffect.handleVisibilityChange\": ()=>{\n                    if (document.hidden) {\n                        // Set page as inactive\n                        setIsPageActive(false);\n                        // Page is hidden, cleanup any resources\n                        cleanupPageStyles();\n                    } else {\n                        // Page is visible again, set as active\n                        setIsPageActive(true);\n                    }\n                }\n            }[\"MainComponent.useEffect.handleVisibilityChange\"];\n            const handleBeforeUnload = {\n                \"MainComponent.useEffect.handleBeforeUnload\": ()=>{\n                    // Set page as inactive\n                    setIsPageActive(false);\n                    // Cleanup when page is about to unload\n                    cleanupPageStyles();\n                }\n            }[\"MainComponent.useEffect.handleBeforeUnload\"];\n            const cleanupPageStyles = {\n                \"MainComponent.useEffect.cleanupPageStyles\": ()=>{\n                    if (true) {\n                        // Remove canvas completely from DOM\n                        const canvas = document.querySelector('#tracking-canvas');\n                        if (canvas && canvas.parentNode) {\n                            canvas.parentNode.removeChild(canvas);\n                        }\n                        // Cleanup global canvas manager\n                        if (window.globalCanvasManager) {\n                            window.globalCanvasManager.destroy();\n                            delete window.globalCanvasManager;\n                        }\n                        // Cleanup canvas utilities\n                        if (window.canvasUtils) {\n                            delete window.canvasUtils;\n                        }\n                        // Reset any global styles that might have been applied\n                        document.body.style.position = '';\n                        document.body.style.overflow = '';\n                        document.body.style.height = '';\n                        document.body.style.width = '';\n                        document.body.style.margin = '';\n                        document.body.style.padding = '';\n                        document.documentElement.style.overflow = '';\n                        document.documentElement.style.position = '';\n                        document.documentElement.style.height = '';\n                        document.documentElement.style.width = '';\n                        // Remove any classes that might affect other pages\n                        document.body.classList.remove('collected-dataset-customized-page');\n                        document.documentElement.classList.remove('collected-dataset-customized-page');\n                    }\n                }\n            }[\"MainComponent.useEffect.cleanupPageStyles\"];\n            document.addEventListener('visibilitychange', handleVisibilityChange);\n            window.addEventListener('beforeunload', handleBeforeUnload);\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    document.removeEventListener('visibilitychange', handleVisibilityChange);\n                    window.removeEventListener('beforeunload', handleBeforeUnload);\n                    // Cleanup on unmount\n                    cleanupPageStyles();\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], []);\n    // Handle router events for cleanup\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            const handleRouteChangeStart = {\n                \"MainComponent.useEffect.handleRouteChangeStart\": ()=>{\n                    // Set page as inactive\n                    setIsPageActive(false);\n                    // Cleanup when navigation starts\n                    if (true) {\n                        // Remove canvas completely from DOM\n                        const canvas = document.querySelector('#tracking-canvas');\n                        if (canvas && canvas.parentNode) {\n                            canvas.parentNode.removeChild(canvas);\n                        }\n                        // Cleanup global canvas manager\n                        if (window.globalCanvasManager) {\n                            window.globalCanvasManager.destroy();\n                            delete window.globalCanvasManager;\n                        }\n                        // Cleanup canvas utilities\n                        if (window.canvasUtils) {\n                            delete window.canvasUtils;\n                        }\n                        // Reset any global styles that might have been applied\n                        document.body.style.position = '';\n                        document.body.style.overflow = '';\n                        document.body.style.height = '';\n                        document.body.style.width = '';\n                        document.body.style.margin = '';\n                        document.body.style.padding = '';\n                        document.documentElement.style.overflow = '';\n                        document.documentElement.style.position = '';\n                        document.documentElement.style.height = '';\n                        document.documentElement.style.width = '';\n                        // Remove any classes that might affect other pages\n                        document.body.classList.remove('collected-dataset-customized-page');\n                        document.documentElement.classList.remove('collected-dataset-customized-page');\n                    }\n                }\n            }[\"MainComponent.useEffect.handleRouteChangeStart\"];\n            router.events.on('routeChangeStart', handleRouteChangeStart);\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    router.events.off('routeChangeStart', handleRouteChangeStart);\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], [\n        router\n    ]);\n    // Load user data\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            const loadUserData = {\n                \"MainComponent.useEffect.loadUserData\": async ()=>{\n                    if (!router.isReady) return;\n                    try {\n                        if (router.query.userData) {\n                            const parsedData = JSON.parse(router.query.userData);\n                            setUserData(parsedData);\n                            return;\n                        }\n                        if (router.query.userId) {\n                            const response = await fetch(\"/api/user-preferences/\".concat(router.query.userId), {\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json',\n                                    'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                                }\n                            });\n                            if (!response.ok) {\n                                throw new Error('Failed to fetch user data');\n                            }\n                            const data = await response.json();\n                            setUserData(data);\n                        }\n                    } catch (err) {\n                        console.error('Error loading user data:', err);\n                        setError(err.message);\n                    } finally{\n                        setIsLoading(false);\n                    }\n                }\n            }[\"MainComponent.useEffect.loadUserData\"];\n            loadUserData();\n        }\n    }[\"MainComponent.useEffect\"], [\n        router.isReady,\n        router.query\n    ]);\n    // Check backend connection\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            const checkBackendConnection = {\n                \"MainComponent.useEffect.checkBackendConnection\": async ()=>{\n                    try {\n                        const response = await fetch('/api/check-backend-connection');\n                        const data = await response.json();\n                        setBackendStatus(data.connected ? 'connected' : 'disconnected');\n                    } catch (error) {\n                        console.error('Error checking backend connection:', error);\n                        setBackendStatus('disconnected');\n                    }\n                }\n            }[\"MainComponent.useEffect.checkBackendConnection\"];\n            if (isHydrated) {\n                checkBackendConnection();\n            }\n        }\n    }[\"MainComponent.useEffect\"], [\n        isHydrated\n    ]);\n    // Update window size\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            const updateDimensions = {\n                \"MainComponent.useEffect.updateDimensions\": ()=>{\n                    if (previewAreaRef.current) {\n                        const width = previewAreaRef.current.offsetWidth;\n                        const height = previewAreaRef.current.offsetHeight;\n                        const screenPercentage = window.innerWidth / window.screen.width * 100;\n                        setMetrics({\n                            \"MainComponent.useEffect.updateDimensions\": (prev)=>({\n                                    ...prev,\n                                    width,\n                                    height\n                                })\n                        }[\"MainComponent.useEffect.updateDimensions\"]);\n                        setWindowSize({\n                            width: window.innerWidth,\n                            height: window.innerHeight,\n                            percentage: Math.round(screenPercentage)\n                        });\n                        // Update canvas size when window size changes\n                        if (canvasManager && isPageActive) {\n                            const canvas = canvasManager.getCanvas();\n                            if (canvas) {\n                                canvasManager.updateCanvasSize(canvas, previewAreaRef.current);\n                            }\n                        }\n                    }\n                }\n            }[\"MainComponent.useEffect.updateDimensions\"];\n            if (isHydrated) {\n                updateDimensions();\n                window.addEventListener('resize', updateDimensions);\n                return ({\n                    \"MainComponent.useEffect\": ()=>window.removeEventListener('resize', updateDimensions)\n                })[\"MainComponent.useEffect\"];\n            }\n        }\n    }[\"MainComponent.useEffect\"], [\n        isHydrated,\n        canvasManager,\n        isPageActive\n    ]);\n    // Initialize canvas on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            // Only initialize canvas if page is active\n            if (!isPageActive) return;\n            // Initialize the global canvas manager\n            const canvas = canvasManager.initializeCanvas();\n            console.log('Global canvas initialized:', canvas ? 'success' : 'failed');\n            // Sync all canvases after initialization\n            if (canvas) {\n                setTimeout({\n                    \"MainComponent.useEffect\": ()=>{\n                        canvasManager.linkWithOtherCanvases(canvas);\n                    }\n                }[\"MainComponent.useEffect\"], 100);\n            }\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    // Cleanup canvas on component unmount\n                    if (true) {\n                        // Remove canvas completely from DOM\n                        const canvas = document.querySelector('#tracking-canvas');\n                        if (canvas && canvas.parentNode) {\n                            canvas.parentNode.removeChild(canvas);\n                        }\n                        // Cleanup global canvas manager\n                        if (window.globalCanvasManager) {\n                            window.globalCanvasManager.destroy();\n                            delete window.globalCanvasManager;\n                        }\n                        // Cleanup canvas utilities\n                        if (window.canvasUtils) {\n                            delete window.canvasUtils;\n                        }\n                    }\n                    console.log('MainComponent cleanup - canvas removed');\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], [\n        canvasManager,\n        isPageActive\n    ]);\n    // Optimize settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            if (settings && currentUserId && settings[currentUserId]) {\n                const userSettings = settings[currentUserId];\n                const cachedSettings = settingsCache.current.get(currentUserId);\n                if (!isEqual(cachedSettings, userSettings)) {\n                    setRandomTimes(Number(userSettings.times_set_random) || 1);\n                    setDelaySeconds(Number(userSettings.delay_set_random) || 3);\n                    settingsCache.current.set(currentUserId, userSettings);\n                    lastSettingsUpdate.current.set(currentUserId, Date.now());\n                }\n            }\n        }\n    }[\"MainComponent.useEffect\"], [\n        settings,\n        currentUserId\n    ]);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"MainComponent.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        // Update settings for new user\n                        if (settings && settings[newUserId]) {\n                            const userSettings = settings[newUserId];\n                            setRandomTimes(Number(userSettings.times_set_random) || 1);\n                            setDelaySeconds(Number(userSettings.delay_set_random) || 3);\n                        }\n                    }\n                }\n            }[\"MainComponent.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], [\n        settings\n    ]);\n    // Listen for settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"MainComponent.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail && event.detail.type === 'captureSettings') {\n                        const { userId, times_set_random, delay_set_random } = event.detail;\n                        if (userId === currentUserId) {\n                            if (times_set_random !== undefined) {\n                                const newTimes = Number(times_set_random) || 1;\n                                setRandomTimes(newTimes);\n                            }\n                            if (delay_set_random !== undefined) {\n                                const newDelay = Number(delay_set_random) || 3;\n                                setDelaySeconds(newDelay);\n                            }\n                        }\n                    }\n                }\n            }[\"MainComponent.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate);\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], [\n        currentUserId\n    ]);\n    // Make functions globally accessible\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            if (true) {\n                window.actionButtonFunctions = {\n                    handleRandomDot,\n                    handleSetRandom,\n                    handleSetCalibrate,\n                    handleClearAll\n                };\n            }\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    if (true) {\n                        delete window.actionButtonFunctions;\n                    }\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], []);\n    // Make toggleTopBar function available globally\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"MainComponent.useEffect\": ()=>{\n            if (true) {\n                window.toggleTopBar = ({\n                    \"MainComponent.useEffect\": (show)=>{\n                        setShowTopBar(show);\n                        // Also hide metrics when hiding the top bar\n                        if (!show) {\n                            setShowMetrics(false);\n                        }\n                    }\n                })[\"MainComponent.useEffect\"];\n            }\n            return ({\n                \"MainComponent.useEffect\": ()=>{\n                    if (true) {\n                        delete window.toggleTopBar;\n                    }\n                }\n            })[\"MainComponent.useEffect\"];\n        }\n    }[\"MainComponent.useEffect\"], []);\n    // Action handlers\n    const handleRandomDot = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Import and use RandomDotAction\n            const { default: RandomDotAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_components_collected-dataset-customized_Action_RandomDotAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/RandomDotAction.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/RandomDotAction.jsx\"));\n            const randomDotAction = new RandomDotAction({\n                canvasRef,\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                setIsCapturing,\n                setProcessStatus,\n                setCurrentDot,\n                triggerCameraAccess,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                },\n                saveImageToServer: true,\n                setCaptureCounter,\n                captureCounter: captureCount\n            });\n            await randomDotAction.handleRandomDot();\n        } catch (error) {\n            console.error('Random dot error:', error);\n            setProcessStatus(\"Error: \".concat(error.message));\n            setIsCapturing(false);\n        }\n    };\n    const handleSetRandom = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Import and use SetRandomAction\n            const { default: SetRandomAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_components_collected-dataset-customized_Action_SetRandomAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/SetRandomAction.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/SetRandomAction.jsx\"));\n            const setRandomAction = new SetRandomAction({\n                canvasRef,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                    if (status.remainingCaptures !== undefined) setRemainingCaptures(status.remainingCaptures);\n                },\n                setCaptureCounter,\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                captureCounter: captureCount,\n                triggerCameraAccess\n            });\n            await setRandomAction.handleAction();\n        } catch (error) {\n            console.error(\"Random sequence error:\", error);\n            setProcessStatus(\"Random sequence failed: \".concat(error.message));\n            setIsCapturing(false);\n        }\n    };\n    const handleSetCalibrate = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Ensure canvas is initialized first\n            const canvas = canvasManager.getCanvas();\n            if (!canvas) {\n                throw new Error(\"Canvas not available\");\n            }\n            // Import and use SetCalibrateAction\n            const { default: SetCalibrateAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_components_collected-dataset-customized_Action_SetCalibrateAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/SetCalibrateAction.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/SetCalibrateAction.jsx\"));\n            const setCalibrateAction = new SetCalibrateAction({\n                canvasRef: {\n                    current: canvas\n                },\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                setIsCapturing,\n                setProcessStatus,\n                setCurrentDot,\n                triggerCameraAccess,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                },\n                saveImageToServer: true,\n                setCaptureCounter,\n                captureCounter: captureCount\n            });\n            await setCalibrateAction.handleSetCalibrate();\n        } catch (error) {\n            console.error(\"Calibration error:\", error);\n            setProcessStatus(\"Calibration error: \".concat(error.message));\n            setIsCapturing(false);\n        }\n    };\n    const handleClearAll = ()=>{\n        // Clear canvas content\n        canvasManager.clear();\n        // Reset states\n        setProcessStatus('');\n        setRemainingCaptures(0);\n        setIsCapturing(false);\n        setCountdownValue(null);\n        setShowCanvas(true);\n        setCurrentDot(null);\n    };\n    // Toggle functions\n    const handleToggleHeadPose = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"MainComponent.useCallback[handleToggleHeadPose]\": ()=>{\n            const newHeadPoseState = !showHeadPose;\n            setShowHeadPose(newHeadPoseState);\n            setProcessStatus(\"Head pose visualization \".concat(newHeadPoseState ? 'enabled' : 'disabled'));\n            if (onActionClick) {\n                onActionClick('headPose');\n            }\n            if ( true && window.videoProcessor) {\n                window.videoProcessor.updateOptions({\n                    showHeadPose: newHeadPoseState\n                });\n            }\n        }\n    }[\"MainComponent.useCallback[handleToggleHeadPose]\"], [\n        showHeadPose,\n        onActionClick\n    ]);\n    const handleToggleBoundingBox = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"MainComponent.useCallback[handleToggleBoundingBox]\": ()=>{\n            const newBoundingBoxState = !showBoundingBox;\n            setShowBoundingBox(newBoundingBoxState);\n            setProcessStatus(\"Bounding box \".concat(newBoundingBoxState ? 'shown' : 'hidden'));\n            if (onActionClick) {\n                onActionClick('boundingBox');\n            }\n            if ( true && window.videoProcessor) {\n                window.videoProcessor.updateOptions({\n                    showBoundingBox: newBoundingBoxState\n                });\n            }\n        }\n    }[\"MainComponent.useCallback[handleToggleBoundingBox]\"], [\n        showBoundingBox,\n        onActionClick\n    ]);\n    const handleToggleMask = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"MainComponent.useCallback[handleToggleMask]\": ()=>{\n            const newMaskState = !showMask;\n            setShowMask(newMaskState);\n            setProcessStatus(\"Mask \".concat(newMaskState ? 'shown' : 'hidden'));\n            if (onActionClick) {\n                onActionClick('mask');\n            }\n            if ( true && window.videoProcessor) {\n                window.videoProcessor.updateOptions({\n                    showMask: newMaskState\n                });\n            }\n        }\n    }[\"MainComponent.useCallback[handleToggleMask]\"], [\n        showMask,\n        onActionClick\n    ]);\n    const handleToggleParameters = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"MainComponent.useCallback[handleToggleParameters]\": ()=>{\n            const newParametersState = !showParameters;\n            setShowParameters(newParametersState);\n            setProcessStatus(\"Parameters \".concat(newParametersState ? 'shown' : 'hidden'));\n            if (onActionClick) {\n                onActionClick('parameters');\n            }\n            if ( true && window.videoProcessor) {\n                window.videoProcessor.updateOptions({\n                    showParameters: newParametersState\n                });\n            }\n        }\n    }[\"MainComponent.useCallback[handleToggleParameters]\"], [\n        showParameters,\n        onActionClick\n    ]);\n    const handleToggleCamera = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"MainComponent.useCallback[handleToggleCamera]\": ()=>{\n            const newCameraState = !isCameraActive;\n            setIsCameraActive(newCameraState);\n            setShowCamera(newCameraState); // Link the camera display state with the active state\n            if (onActionClick) {\n                onActionClick('preview', newCameraState);\n            } else {\n                setShowPermissionPopup(true);\n            }\n            if (newCameraState && \"object\" !== 'undefined' && window.videoProcessor) {\n                setTimeout({\n                    \"MainComponent.useCallback[handleToggleCamera]\": ()=>{\n                        if (window.videoProcessor) {\n                            window.videoProcessor.updateOptions({\n                                showHeadPose,\n                                showBoundingBox,\n                                showMask,\n                                showParameters\n                            });\n                        }\n                    }\n                }[\"MainComponent.useCallback[handleToggleCamera]\"], 100);\n            }\n        }\n    }[\"MainComponent.useCallback[handleToggleCamera]\"], [\n        isCameraActive,\n        showCamera,\n        onActionClick,\n        showHeadPose,\n        showBoundingBox,\n        showMask,\n        showParameters\n    ]);\n    // Add a proper action handler for camera preview\n    const handleActionClick = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"MainComponent.useCallback[handleActionClick]\": function(actionType) {\n            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                args[_key - 1] = arguments[_key];\n            }\n            switch(actionType){\n                case 'preview':\n                    const shouldShow = args[0] !== undefined ? args[0] : !showCamera;\n                    setShowCamera(shouldShow);\n                    setIsCameraActive(shouldShow);\n                    setProcessStatus(shouldShow ? 'Camera preview started' : 'Camera preview stopped');\n                    break;\n                case 'headPose':\n                    handleToggleHeadPose();\n                    break;\n                case 'boundingBox':\n                    handleToggleBoundingBox();\n                    break;\n                case 'mask':\n                    handleToggleMask();\n                    break;\n                case 'parameters':\n                    handleToggleParameters();\n                    break;\n                case 'metrics':\n                    console.log('Metrics toggle clicked, current state:', showMetrics);\n                    setShowMetrics(!showMetrics);\n                    setProcessStatus(\"Metrics \".concat(!showMetrics ? 'shown' : 'hidden'));\n                    break;\n                default:\n                    break;\n            }\n        }\n    }[\"MainComponent.useCallback[handleActionClick]\"], [\n        showCamera,\n        showMetrics,\n        handleToggleHeadPose,\n        handleToggleBoundingBox,\n        handleToggleMask,\n        handleToggleParameters\n    ]);\n    // Camera permission handlers\n    const handlePermissionAccepted = ()=>{\n        setShowPermissionPopup(false);\n        if (triggerCameraAccess) {\n            triggerCameraAccess(true);\n        }\n    };\n    const handlePermissionDenied = ()=>{\n        setShowPermissionPopup(false);\n        setProcessStatus('Camera access denied');\n    };\n    // Handle camera close\n    const handleCameraClose = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"MainComponent.useCallback[handleCameraClose]\": ()=>{\n            setShowCamera(false);\n            setIsCameraActive(false);\n            setProcessStatus('Camera preview stopped');\n        }\n    }[\"MainComponent.useCallback[handleCameraClose]\"], []);\n    // Handle camera ready\n    const handleCameraReady = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"MainComponent.useCallback[handleCameraReady]\": (dimensions)=>{\n            setMetrics({\n                width: dimensions.width,\n                height: dimensions.height,\n                distance: dimensions.distance || '---'\n            });\n            setOutputText(\"Camera ready: \".concat(dimensions.width, \"x\").concat(dimensions.height));\n            setProcessStatus('Camera preview active');\n        }\n    }[\"MainComponent.useCallback[handleCameraReady]\"], []);\n    // Add back button handler\n    const handleGoBack = ()=>{\n        router.push('/');\n    };\n    // Dynamic class to reflect current window size\n    const getSizeClass = ()=>{\n        const { percentage } = windowSize;\n        if (percentage < 35) return 'window-size-tiny';\n        if (percentage < 50) return 'window-size-small';\n        if (percentage < 70) return 'window-size-medium';\n        return 'window-size-large';\n    };\n    // Expose functions via ref\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useImperativeHandle)(ref, {\n        \"MainComponent.useImperativeHandle\": ()=>({\n                handleRandomDot,\n                handleSetRandom,\n                handleSetCalibrate,\n                handleClearAll,\n                handleToggleHeadPose,\n                handleToggleBoundingBox,\n                handleToggleMask,\n                handleToggleParameters,\n                handleToggleCamera\n            })\n    }[\"MainComponent.useImperativeHandle\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"main-container collected-dataset-customized-page \".concat(getSizeClass()),\n        style: {\n            height: '100vh',\n            width: '100vw',\n            overflow: 'hidden',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_3___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        className: \"jsx-3c174ad247ffcad7\",\n                        children: \"Camera Dataset Collection\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1328,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\",\n                        className: \"jsx-3c174ad247ffcad7\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1329,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                        id: \"3c174ad247ffcad7\",\n                        children: \".collected-dataset-customized-page.jsx-3c174ad247ffcad7{height:100vh;width:100vw;overflow:hidden;position:fixed;top:0;left:0;margin:0;padding:0;z-index:9999}\"\n                    }, void 0, false, void 0, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1327,\n                columnNumber: 7\n            }, undefined),\n            isHydrated && backendStatus === 'disconnected' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    padding: '6px 0',\n                    backgroundColor: '#ffe0b2',\n                    color: '#e65100',\n                    textAlign: 'center',\n                    fontSize: '14px',\n                    fontWeight: 'bold',\n                    zIndex: 1100\n                },\n                children: \"⚠️ Backend disconnected. Hurry up, Make ONLINE please and Using mock mode\"\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1347,\n                columnNumber: 9\n            }, undefined),\n            isHydrated && showWarning && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"warning-banner\",\n                style: {\n                    position: 'fixed',\n                    top: showTopBar ? backendStatus === 'disconnected' ? '32px' : '60px' : '0',\n                    left: '0',\n                    width: '100%',\n                    backgroundColor: '#ffeb3b',\n                    color: '#333',\n                    padding: '10px',\n                    textAlign: 'center',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n                    zIndex: 1010,\n                    animation: 'fadeIn 0.3s ease-in-out'\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                    children: [\n                        \"⚠️ \",\n                        warningMessage\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 1379,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1366,\n                columnNumber: 9\n            }, undefined),\n            isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"loading-container\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Loading user settings...\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 1385,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1384,\n                columnNumber: 9\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    showTopBar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            position: 'fixed',\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            zIndex: 1000,\n                            height: '120px'\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_topBar__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            onButtonClick: handleActionClick,\n                            onCameraAccess: ()=>setShowPermissionPopup(true),\n                            outputText: statusMessage || outputText,\n                            onOutputChange: (text)=>setOutputText(text),\n                            onToggleTopBar: (show)=>setShowTopBar(show),\n                            onToggleMetrics: ()=>setShowMetrics(!showMetrics),\n                            canvasRef: canvasRef,\n                            showMetrics: showMetrics\n                        }, \"topbar-\".concat(showTopBar, \"-\").concat(showMetrics), false, {\n                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                            lineNumber: 1399,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1391,\n                        columnNumber: 13\n                    }, undefined),\n                    !showTopBar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"restore-button-container\",\n                        style: {\n                            position: 'fixed',\n                            top: '10px',\n                            right: '10px',\n                            zIndex: 1000\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"restore-btn\",\n                            onClick: ()=>setShowTopBar(true),\n                            title: \"Show TopBar and Metrics\",\n                            style: {\n                                padding: '5px 10px',\n                                background: '#0066cc',\n                                color: 'white',\n                                border: 'none',\n                                borderRadius: '4px',\n                                fontSize: '16px',\n                                cursor: 'pointer'\n                            },\n                            children: \"≡\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                            lineNumber: 1421,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1415,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: previewAreaRef,\n                        className: \"camera-preview-area\",\n                        style: {\n                            height: showTopBar ? 'calc(100vh - 120px)' : '100vh',\n                            marginTop: backendStatus === 'disconnected' ? '32px' : '0',\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            bottom: 0,\n                            backgroundColor: '#f5f5f5',\n                            overflow: 'hidden',\n                            zIndex: 1\n                        },\n                        children: [\n                            !showCamera ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"camera-preview-message\",\n                                        style: {\n                                            padding: '20px',\n                                            textAlign: 'center',\n                                            position: 'absolute',\n                                            top: '50%',\n                                            left: '50%',\n                                            transform: 'translate(-50%, -50%)',\n                                            width: '100%',\n                                            maxWidth: '600px',\n                                            zIndex: 5,\n                                            pointerEvents: 'none'\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                style: {\n                                                    margin: '0 0 10px 0',\n                                                    fontSize: '16px'\n                                                },\n                                                children: \"Camera preview will appear here\"\n                                            }, void 0, false, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1471,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"camera-size-indicator\",\n                                                style: {\n                                                    margin: '0',\n                                                    fontSize: '14px',\n                                                    color: '#666'\n                                                },\n                                                children: [\n                                                    \"Current window: \",\n                                                    windowSize.percentage,\n                                                    \"% of screen width\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1472,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            isHydrated && showCameraPlaceholder && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"camera-placeholder-square\",\n                                                style: {\n                                                    width: '180px',\n                                                    height: '135px',\n                                                    margin: '20px auto',\n                                                    border: '2px dashed #666',\n                                                    borderRadius: '4px',\n                                                    backgroundColor: '#f5f5f5',\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent: 'center',\n                                                    pointerEvents: 'none'\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    style: {\n                                                        fontSize: '1.5rem'\n                                                    },\n                                                    children: \"\\uD83D\\uDCF7\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1493,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1478,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                        lineNumber: 1459,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"canvas-container\",\n                                        style: {\n                                            position: 'absolute',\n                                            top: 0,\n                                            left: 0,\n                                            width: '100%',\n                                            height: '100%',\n                                            backgroundColor: 'yellow',\n                                            overflow: 'hidden',\n                                            border: 'none',\n                                            zIndex: 10,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            pointerEvents: 'auto'\n                                        },\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                                            ref: canvasRef,\n                                            className: \"tracking-canvas\",\n                                            style: {\n                                                width: '100%',\n                                                height: '100%',\n                                                display: 'block',\n                                                maxWidth: '100%',\n                                                maxHeight: '100%',\n                                                objectFit: 'contain',\n                                                backgroundColor: 'yellow',\n                                                pointerEvents: 'auto'\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1517,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                        lineNumber: 1499,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true) : null,\n                            isHydrated && showMetrics && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_displayResponse__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                width: metrics.width,\n                                height: metrics.height,\n                                distance: metrics.distance,\n                                isVisible: showMetrics\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1537,\n                                columnNumber: 15\n                            }, undefined),\n                            console.log('Rendering DisplayResponse, showMetrics:', showMetrics, 'isHydrated:', isHydrated),\n                            isHydrated && \"object\" !== 'undefined' && showCamera && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicCameraAccess, {\n                                isShowing: showCamera,\n                                onClose: handleCameraClose,\n                                onCameraReady: handleCameraReady,\n                                showHeadPose: showHeadPose,\n                                showBoundingBox: showBoundingBox,\n                                showMask: showMask,\n                                showParameters: showParameters,\n                                videoRef: videoRef\n                            }, \"camera-\".concat(showCamera, \"-\").concat(showHeadPose, \"-\").concat(showBoundingBox, \"-\").concat(showMask, \"-\").concat(showParameters), false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1548,\n                                columnNumber: 15\n                            }, undefined),\n                            isHydrated && \"object\" !== 'undefined' && showPermissionPopup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"camera-permission-popup\",\n                                style: {\n                                    position: 'fixed',\n                                    top: 0,\n                                    left: 0,\n                                    width: '100%',\n                                    height: '100%',\n                                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    zIndex: 2000\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"camera-permission-dialog\",\n                                    style: {\n                                        width: '400px',\n                                        backgroundColor: 'white',\n                                        borderRadius: '8px',\n                                        padding: '20px',\n                                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"camera-permission-title\",\n                                            style: {\n                                                margin: '0 0 15px',\n                                                fontSize: '18px',\n                                                fontWeight: 'bold'\n                                            },\n                                            children: \"Camera Access Required\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1582,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"camera-permission-message\",\n                                            style: {\n                                                margin: '0 0 20px',\n                                                fontSize: '14px',\n                                                lineHeight: '1.4'\n                                            },\n                                            children: 'This application needs access to your camera to function properly. When prompted by your browser, please click \"Allow\" to grant camera access.'\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1587,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"camera-permission-buttons\",\n                                            style: {\n                                                display: 'flex',\n                                                justifyContent: 'flex-end',\n                                                gap: '10px'\n                                            },\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: handlePermissionDenied,\n                                                    className: \"camera-btn\",\n                                                    style: {\n                                                        padding: '8px 16px',\n                                                        backgroundColor: '#f0f0f0',\n                                                        border: 'none',\n                                                        borderRadius: '4px',\n                                                        cursor: 'pointer'\n                                                    },\n                                                    children: \"Cancel\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1600,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: handlePermissionAccepted,\n                                                    className: \"camera-btn\",\n                                                    style: {\n                                                        padding: '8px 16px',\n                                                        backgroundColor: '#0066cc',\n                                                        color: 'white',\n                                                        border: 'none',\n                                                        borderRadius: '4px',\n                                                        cursor: 'pointer'\n                                                    },\n                                                    children: \"Continue\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1613,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1595,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                    lineNumber: 1575,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1563,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1441,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n        lineNumber: 1317,\n        columnNumber: 5\n    }, undefined);\n}, \"w1kXC11wUBplJZ8zvS2KlRV8l6k=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_11__.useRouter,\n        _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_10__.useConsent,\n        _components_gui_adminSettings__WEBPACK_IMPORTED_MODULE_12__.useAdminSettings\n    ];\n})), \"w1kXC11wUBplJZ8zvS2KlRV8l6k=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_11__.useRouter,\n        _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_10__.useConsent,\n        _components_gui_adminSettings__WEBPACK_IMPORTED_MODULE_12__.useAdminSettings\n    ];\n});\n_c3 = MainComponent;\n// Create a client-only version of MainComponent\nconst MainComponentClient = next_dynamic__WEBPACK_IMPORTED_MODULE_4___default()(()=>Promise.resolve(MainComponent), {\n    ssr: false\n});\n_c4 = MainComponentClient;\n// Export the main component\nfunction MainPage() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MainComponentClient, {}, void 0, false, {\n        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n        lineNumber: 1643,\n        columnNumber: 10\n    }, this);\n}\n_c5 = MainPage;\n\nvar _c, _c1, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DynamicCameraAccess\");\n$RefreshReg$(_c1, \"ActionButton\");\n$RefreshReg$(_c2, \"MainComponent$forwardRef\");\n$RefreshReg$(_c3, \"MainComponent\");\n$RefreshReg$(_c4, \"MainComponentClient\");\n$RefreshReg$(_c5, \"MainPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/index.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["pages/_app","main"], () => (__webpack_exec__("(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fapp%2Fpages%2Fcollected-dataset-customized%2Findex.js&page=%2Fcollected-dataset-customized!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);