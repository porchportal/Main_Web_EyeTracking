/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/collected-dataset-customized"],{

/***/ "(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibratePoints.jsx":
/*!****************************************************************************!*\
  !*** ./components/collected-dataset-customized/Action/CalibratePoints.jsx ***!
  \****************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearCalibrationPoints: () => (/* binding */ clearCalibrationPoints),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   drawCalibrationGrid: () => (/* binding */ drawCalibrationGrid),\n/* harmony export */   drawCalibrationPoint: () => (/* binding */ drawCalibrationPoint),\n/* harmony export */   drawCalibrationPointLegacy: () => (/* binding */ drawCalibrationPointLegacy),\n/* harmony export */   generateCalibrationPoints: () => (/* binding */ generateCalibrationPoints)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// CalibratePoints.jsx\n// Utility for generating and managing calibration points on a canvas\n\n/**\n * Get canvas management utilities from global scope (from actionButton.js)\n * @returns {Object} Canvas utilities object\n */ const getCanvasUtils = ()=>{\n    if (true) {\n        return {\n            canvasUtils: window.canvasUtils,\n            canvasManager: window.canvasManager\n        };\n    }\n    return {\n        canvasUtils: null,\n        canvasManager: null\n    };\n};\n/**\n * Get or create canvas using the canvas management system from actionButton.js\n * @returns {HTMLCanvasElement} Canvas element\n */ const getCanvas = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    // First try to use canvasUtils from actionButton.js\n    if (canvasUtils && typeof canvasUtils.getCanvas === 'function') {\n        return canvasUtils.getCanvas();\n    }\n    // Fallback to canvasManager\n    if (canvasManager && typeof canvasManager.getCanvas === 'function') {\n        return canvasManager.getCanvas() || canvasManager.createCanvas();\n    }\n    // Fallback to direct query\n    return document.querySelector('#tracking-canvas');\n};\n/**\n * Draw dot using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {boolean} Success status\n */ const drawDotWithCanvasManager = function(x, y) {\n    let radius = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 12;\n    const { canvasUtils } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.drawDot === 'function') {\n        return canvasUtils.drawDot(x, y, radius);\n    }\n    // Fallback: manually draw dot\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        drawCalibrationPointLegacy(ctx, x, y, radius);\n        return true;\n    }\n    return false;\n};\n/**\n * Clear canvas using the canvas management system\n */ const clearCanvasWithManager = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.clear === 'function') {\n        canvasUtils.clear();\n        return;\n    }\n    if (canvasManager && typeof canvasManager.clear === 'function') {\n        canvasManager.clear();\n        return;\n    }\n    // Fallback: manually clear canvas\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n};\n/**\n * Generate a grid of calibration points based on canvas dimensions\n * @param {number} width - Canvas width\n * @param {number} height - Canvas height\n * @returns {Array} Array of point objects with x,y coordinates\n */ const generateCalibrationPoints = (width, height)=>{\n    if (!width || !height || width <= 0 || height <= 0) {\n        console.error(\"generateCalibrationPoints: Invalid canvas dimensions\", {\n            width,\n            height\n        });\n        return [];\n    }\n    const conditionalRound = (dimension, percentage)=>Math.round(dimension * percentage);\n    // Outer frame (12% from edges)\n    const xLeftOuter = conditionalRound(width, 0.12);\n    const xRightOuter = width - xLeftOuter;\n    const yTopOuter = conditionalRound(height, 0.12);\n    const yBottomOuter = height - yTopOuter;\n    // Inner frame (26% from edges)\n    const xLeftInner = conditionalRound(width, 0.26);\n    const xRightInner = width - xLeftInner;\n    const yTopInner = conditionalRound(height, 0.26);\n    const yBottomInner = height - yTopInner;\n    const xCenter = Math.floor(width / 2);\n    const yCenter = Math.floor(height / 2);\n    return [\n        // Outer frame (8 points)\n        {\n            x: xLeftOuter,\n            y: yTopOuter,\n            label: \"Outer Top-Left\"\n        },\n        {\n            x: xCenter,\n            y: yTopOuter,\n            label: \"Outer Top-Center\"\n        },\n        {\n            x: xRightOuter,\n            y: yTopOuter,\n            label: \"Outer Top-Right\"\n        },\n        {\n            x: xLeftOuter,\n            y: yCenter,\n            label: \"Outer Middle-Left\"\n        },\n        {\n            x: xRightOuter,\n            y: yCenter,\n            label: \"Outer Middle-Right\"\n        },\n        {\n            x: xLeftOuter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Left\"\n        },\n        {\n            x: xCenter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Center\"\n        },\n        {\n            x: xRightOuter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Right\"\n        },\n        // Inner frame (8 points)\n        {\n            x: xLeftInner,\n            y: yTopInner,\n            label: \"Inner Top-Left\"\n        },\n        {\n            x: xCenter,\n            y: yTopInner,\n            label: \"Inner Top-Center\"\n        },\n        {\n            x: xRightInner,\n            y: yTopInner,\n            label: \"Inner Top-Right\"\n        },\n        {\n            x: xLeftInner,\n            y: yCenter,\n            label: \"Inner Middle-Left\"\n        },\n        {\n            x: xRightInner,\n            y: yCenter,\n            label: \"Inner Middle-Right\"\n        },\n        {\n            x: xLeftInner,\n            y: yBottomInner,\n            label: \"Inner Bottom-Left\"\n        },\n        {\n            x: xCenter,\n            y: yBottomInner,\n            label: \"Inner Bottom-Center\"\n        },\n        {\n            x: xRightInner,\n            y: yBottomInner,\n            label: \"Inner Bottom-Right\"\n        }\n    ];\n};\n/**\n * Draw a calibration point on a canvas using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {Object} options - Optional settings (color, radius)\n * @returns {Object} Point position object {x, y}\n */ const drawCalibrationPoint = function(x, y) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    const radius = options.radius || 12; // Use standard radius\n    const success = drawDotWithCanvasManager(x, y, radius);\n    return {\n        x,\n        y,\n        success\n    };\n};\n/**\n * Legacy function for backward compatibility (draws directly on canvas context)\n * @param {CanvasRenderingContext2D} ctx - Canvas 2D context\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {Object} Point position object {x, y}\n */ const drawCalibrationPointLegacy = function(ctx, x, y) {\n    let radius = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 12;\n    if (!ctx) return {\n        x,\n        y\n    };\n    const canvas = ctx.canvas;\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    // Draw the dot with a bright red color\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = 'red';\n    ctx.fill();\n    // Add glow effect for better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 3, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    // Add a second larger glow for even better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 6, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    return {\n        x,\n        y\n    };\n};\n/**\n * Draw all calibration points on a canvas (for debugging/visualization)\n * @param {Array} points - Array of point objects\n * @param {number} activeIndex - Index of the currently active point\n */ const drawCalibrationGrid = function(points) {\n    let activeIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;\n    if (!points || !points.length) return;\n    const canvas = getCanvas();\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    clearCanvasWithManager();\n    points.forEach((point, index)=>{\n        const isActive = index === activeIndex;\n        const radius = isActive ? 12 : 6; // Use standard radius for active, smaller for inactive\n        // Draw the point\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, radius, 0, Math.PI * 2);\n        ctx.fillStyle = isActive ? 'red' : 'rgba(0, 102, 204, 0.7)';\n        ctx.fill();\n        // Add glow effect for active points\n        if (isActive) {\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, radius + 3, 0, Math.PI * 2);\n            ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n            ctx.lineWidth = 3;\n            ctx.stroke();\n        }\n        // Draw point number\n        ctx.fillStyle = 'white';\n        ctx.font = '10px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(\"\".concat(index + 1), point.x, point.y);\n        // Draw label for active point\n        if (isActive && point.label) {\n            ctx.font = '12px Arial';\n            ctx.fillStyle = 'black';\n            ctx.fillText(point.label, point.x, point.y - 25);\n        }\n    });\n    // Draw connecting lines (optional)\n    if (points.length > 1) {\n        ctx.beginPath();\n        ctx.moveTo(points[0].x, points[0].y);\n        for(let i = 1; i < points.length; i++){\n            ctx.lineTo(points[i].x, points[i].y);\n        }\n        ctx.strokeStyle = 'rgba(0, 102, 204, 0.3)';\n        ctx.lineWidth = 1;\n        ctx.stroke();\n    }\n};\n/**\n * Clear all calibration points from canvas\n */ const clearCalibrationPoints = ()=>{\n    clearCanvasWithManager();\n};\n// Default export for React compatibility\nconst CalibratePoints = ()=>null; // This is a utility file, so we don't need to render anything\n_c = CalibratePoints;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CalibratePoints);\nvar _c;\n$RefreshReg$(_c, \"CalibratePoints\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\n"));

/***/ }),

/***/ "(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx":
/*!**********************************************************************!*\
  !*** ./components/collected-dataset-customized/Action/countSave.jsx ***!
  \**********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calibrationCapture: () => (/* binding */ calibrationCapture),\n/* harmony export */   captureAndPreviewProcess: () => (/* binding */ captureAndPreviewProcess),\n/* harmony export */   captureImages: () => (/* binding */ captureImages),\n/* harmony export */   createCountdownElement: () => (/* binding */ createCountdownElement),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   drawRedDot: () => (/* binding */ drawRedDot),\n/* harmony export */   getRandomPosition: () => (/* binding */ getRandomPosition),\n/* harmony export */   runCountdown: () => (/* binding */ runCountdown),\n/* harmony export */   showCapturePreview: () => (/* binding */ showCapturePreview)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Helper_savefile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Helper/savefile */ \"(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\");\n// Fixed countSave.jsx - Resolving redrawInterval reference error\n// Shared functionality for countdown and image capture processes\n\n\n/**\n * Get canvas management utilities from global scope (from actionButton.js)\n * @returns {Object} Canvas utilities object\n */ const getCanvasUtils = ()=>{\n    if (true) {\n        return {\n            canvasUtils: window.canvasUtils,\n            canvasManager: window.canvasManager\n        };\n    }\n    return {\n        canvasUtils: null,\n        canvasManager: null\n    };\n};\n/**\n * Get or create canvas using the canvas management system from actionButton.js\n * @returns {HTMLCanvasElement} Canvas element\n */ const getCanvas = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    // First try to use canvasUtils from actionButton.js\n    if (canvasUtils && typeof canvasUtils.getCanvas === 'function') {\n        return canvasUtils.getCanvas();\n    }\n    // Fallback to canvasManager\n    if (canvasManager && typeof canvasManager.getCanvas === 'function') {\n        return canvasManager.getCanvas() || canvasManager.createCanvas();\n    }\n    // Fallback to direct query\n    return document.querySelector('#tracking-canvas');\n};\n/**\n * Draw dot using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {boolean} Success status\n */ const drawDotWithCanvasManager = function(x, y) {\n    let radius = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 12;\n    const { canvasUtils } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.drawDot === 'function') {\n        return canvasUtils.drawDot(x, y, radius);\n    }\n    // Fallback: manually draw dot\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        drawRedDot(ctx, x, y, radius, false);\n        return true;\n    }\n    return false;\n};\n/**\n * Clear canvas using the canvas management system\n */ const clearCanvasWithManager = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.clear === 'function') {\n        canvasUtils.clear();\n        return;\n    }\n    if (canvasManager && typeof canvasManager.clear === 'function') {\n        canvasManager.clear();\n        return;\n    }\n    // Fallback: manually clear canvas\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n};\n/**\n * Creates and displays a countdown element above a dot position\n * @param {Object} position - {x, y} position of the dot\n * @param {DOMRect} canvasRect - getBoundingClientRect() of the canvas\n * @returns {HTMLElement} - The created countdown element\n */ const createCountdownElement = (position, canvasRect)=>{\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[createCountdownElement] Invalid position:', position);\n        return null;\n    }\n    const existingCountdowns = document.querySelectorAll('.calibrate-countdown, .forced-countdown, .center-countdown-backup');\n    existingCountdowns.forEach((el)=>el.remove());\n    const absoluteX = canvasRect.left + position.x;\n    const absoluteY = canvasRect.top + position.y;\n    const countdownElement = document.createElement('div');\n    countdownElement.className = 'dot-countdown';\n    countdownElement.style.cssText = \"\\n    position: fixed;\\n    left: \".concat(absoluteX, \"px;\\n    top: \").concat(absoluteY - 60, \"px;\\n    transform: translateX(-50%);\\n    color: red;\\n    font-size: 36px;\\n    font-weight: bold;\\n    text-shadow: 0 0 10px white, 0 0 20px white;\\n    z-index: 9999;\\n    background-color: rgba(255, 255, 255, 0.8);\\n    border: 2px solid red;\\n    border-radius: 50%;\\n    width: 50px;\\n    height: 50px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n  \");\n    document.body.appendChild(countdownElement);\n    return countdownElement;\n};\n/**\n * Display a preview of the captured images\n * @param {string} screenImage - Data URL of the screen image\n * @param {string} webcamImage - Data URL of the webcam image\n * @param {Object} point - {x, y} position of the dot\n */ const showCapturePreview = (screenImage, webcamImage, point)=>{\n    if (!screenImage && !webcamImage) return;\n    // Remove any existing previews\n    const existingPreviews = document.querySelectorAll('.capture-preview-container');\n    existingPreviews.forEach((preview)=>{\n        if (preview.parentNode) {\n            preview.parentNode.removeChild(preview);\n        }\n    });\n    // Create preview container\n    const previewContainer = document.createElement('div');\n    previewContainer.className = 'capture-preview-container';\n    previewContainer.style.cssText = \"\\n    position: fixed;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    display: flex;\\n    gap: 20px;\\n    background-color: rgba(0, 0, 0, 0.85);\\n    padding: 20px;\\n    border-radius: 12px;\\n    z-index: 999999;\\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.6);\\n  \";\n    // Add screen image if available\n    if (screenImage) {\n        const screenPreview = document.createElement('div');\n        screenPreview.style.cssText = \"\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center;\\n    \";\n        const screenImg = document.createElement('img');\n        screenImg.src = screenImage;\n        screenImg.alt = 'Screen Capture';\n        screenImg.style.cssText = \"\\n      max-width: 320px;\\n      max-height: 240px;\\n      border: 3px solid white;\\n      border-radius: 8px;\\n      background-color: #333;\\n    \";\n        const screenLabel = document.createElement('div');\n        screenLabel.textContent = 'Screen Capture';\n        screenLabel.style.cssText = \"\\n      color: white;\\n      font-size: 14px;\\n      margin-top: 10px;\\n      font-weight: bold;\\n    \";\n        screenPreview.appendChild(screenImg);\n        screenPreview.appendChild(screenLabel);\n        previewContainer.appendChild(screenPreview);\n    }\n    // Add webcam image if available\n    if (webcamImage) {\n        const webcamPreview = document.createElement('div');\n        webcamPreview.style.cssText = \"\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center;\\n    \";\n        const webcamImg = document.createElement('img');\n        webcamImg.src = webcamImage;\n        webcamImg.alt = 'Webcam Capture';\n        webcamImg.style.cssText = \"\\n      max-width: 320px;\\n      max-height: 240px;\\n      border: 3px solid white;\\n      border-radius: 8px;\\n      background-color: #333;\\n    \";\n        const webcamLabel = document.createElement('div');\n        webcamLabel.textContent = 'Webcam Capture';\n        webcamLabel.style.cssText = \"\\n      color: white;\\n      font-size: 14px;\\n      margin-top: 10px;\\n      font-weight: bold;\\n    \";\n        webcamPreview.appendChild(webcamImg);\n        webcamPreview.appendChild(webcamLabel);\n        previewContainer.appendChild(webcamPreview);\n    }\n    // Add point info\n    if (point) {\n        const pointInfo = document.createElement('div');\n        pointInfo.textContent = point.label ? \"\".concat(point.label, \": x=\").concat(Math.round(point.x), \", y=\").concat(Math.round(point.y)) : \"Point: x=\".concat(Math.round(point.x), \", y=\").concat(Math.round(point.y));\n        pointInfo.style.cssText = \"\\n      color: #ffcc00;\\n      font-size: 14px;\\n      position: absolute;\\n      top: -40px;\\n      left: 0;\\n      width: 100%;\\n      text-align: center;\\n    \";\n        previewContainer.appendChild(pointInfo);\n    }\n    // Add timer\n    const timerElement = document.createElement('div');\n    timerElement.textContent = '2.0s';\n    timerElement.style.cssText = \"\\n    position: absolute;\\n    bottom: -25px;\\n    right: 20px;\\n    color: white;\\n    font-size: 12px;\\n    background-color: rgba(0, 0, 0, 0.7);\\n    padding: 3px 8px;\\n    border-radius: 4px;\\n  \";\n    previewContainer.appendChild(timerElement);\n    // Add to document\n    document.body.appendChild(previewContainer);\n    // Countdown\n    let timeLeft = 2.0;\n    const interval = setInterval(()=>{\n        timeLeft -= 0.1;\n        if (timeLeft <= 0) {\n            clearInterval(interval);\n            previewContainer.style.opacity = '0';\n            previewContainer.style.transition = 'opacity 0.3s ease';\n            setTimeout(()=>{\n                if (previewContainer.parentNode) {\n                    previewContainer.parentNode.removeChild(previewContainer);\n                }\n            }, 300);\n        } else {\n            timerElement.textContent = \"\".concat(timeLeft.toFixed(1), \"s\");\n        }\n    }, 100);\n    // Safety cleanup\n    setTimeout(()=>{\n        if (previewContainer.parentNode) {\n            previewContainer.parentNode.removeChild(previewContainer);\n        }\n    }, 5000);\n};\n/**\n * Runs a countdown process that displays 3-2-1 above a dot\n * @param {Object} position - {x, y} position of the dot\n * @param {HTMLCanvasElement} canvas - Canvas element with the dot\n * @param {Function} onStatusUpdate - Function to update status messages\n * @param {Function} onComplete - Callback to execute when countdown completes\n */ const runCountdown = async (position, canvas, onStatusUpdate, onComplete)=>{\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[runCountdown] Invalid position:', position);\n        onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n            processStatus: \"Invalid dot position\",\n            countdownValue: null,\n            isCapturing: false\n        });\n        return;\n    }\n    const canvasRect = canvas.getBoundingClientRect();\n    const countdownElement = createCountdownElement(position, canvasRect);\n    if (!countdownElement) {\n        console.warn('[runCountdown] Countdown element could not be created.');\n        return;\n    }\n    // Use canvas management system to draw dot\n    drawDotWithCanvasManager(position.x, position.y);\n    let count = 3;\n    countdownElement.textContent = count;\n    onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n        processStatus: \"Countdown\",\n        countdownValue: count,\n        isCapturing: true\n    });\n    // Create redrawInterval for keeping dot visible during countdown\n    let redrawInterval = setInterval(()=>{\n        drawDotWithCanvasManager(position.x, position.y);\n    }, 200);\n    return new Promise((resolve)=>{\n        const countdownInterval = setInterval(()=>{\n            count--;\n            if (count <= 0) {\n                clearInterval(countdownInterval);\n                countdownElement.textContent = \"✓\";\n                onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                    countdownValue: \"Capturing...\",\n                    processStatus: \"Capturing image...\",\n                    isCapturing: true\n                });\n                setTimeout(()=>{\n                    if (countdownElement.parentNode) {\n                        countdownElement.parentNode.removeChild(countdownElement);\n                    }\n                    drawDotWithCanvasManager(position.x, position.y);\n                    // Clear the redrawInterval we defined above\n                    if (redrawInterval) {\n                        clearInterval(redrawInterval);\n                    }\n                    if (onComplete) {\n                        drawDotWithCanvasManager(position.x, position.y);\n                        onComplete();\n                    }\n                    resolve();\n                }, 300);\n            } else {\n                countdownElement.textContent = count;\n                onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                    processStatus: \"Countdown\",\n                    countdownValue: count,\n                    isCapturing: true\n                });\n            }\n        }, 800);\n    });\n};\n/**\n * Draw a red dot on the canvas (legacy function for backward compatibility)\n * @param {CanvasRenderingContext2D} ctx - Canvas 2D context\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @param {boolean} clearCanvas - Whether to clear the canvas before drawing (default: true)\n * @returns {Object} - {x, y} position\n */ const drawRedDot = function(ctx, x, y) {\n    let radius = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 12, clearCanvas = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : true;\n    const canvas = ctx.canvas;\n    // Clear the canvas if requested (default behavior)\n    if (clearCanvas) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    // Draw the dot with a bright red color\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = 'red';\n    ctx.fill();\n    // Add glow effect for better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 3, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    // Add a second larger glow for even better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 6, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    return {\n        x,\n        y\n    };\n};\n/**\n * Get highest resolution camera constraints\n * @returns {Promise<Object>} - Camera constraints\n */ const getHighestResolutionConstraints = async ()=>{\n    try {\n        // Get all video input devices\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter((device)=>device.kind === 'videoinput');\n        if (videoDevices.length === 0) {\n            console.warn('No video devices found, using default constraints');\n            return {\n                video: true\n            };\n        }\n        // Try to get capabilities for the first video device\n        const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        const videoTrack = stream.getVideoTracks()[0];\n        if (!videoTrack.getCapabilities) {\n            console.warn('getCapabilities not supported, using default constraints');\n            stream.getTracks().forEach((track)=>track.stop());\n            return {\n                video: true\n            };\n        }\n        const capabilities = videoTrack.getCapabilities();\n        stream.getTracks().forEach((track)=>track.stop());\n        if (!capabilities.width || !capabilities.height) {\n            console.warn('No width/height capabilities, using default constraints');\n            return {\n                video: true\n            };\n        }\n        // Get the highest resolution available\n        const maxWidth = Math.max(...capabilities.width.values);\n        const maxHeight = Math.max(...capabilities.height.values);\n        console.log(\"Using highest resolution: \".concat(maxWidth, \"x\").concat(maxHeight));\n        return {\n            video: {\n                width: {\n                    ideal: maxWidth\n                },\n                height: {\n                    ideal: maxHeight\n                },\n                frameRate: {\n                    ideal: 30\n                }\n            }\n        };\n    } catch (error) {\n        console.warn('Error getting camera constraints, using default:', error);\n        return {\n            video: true\n        };\n    }\n};\n/**\n * Capture images at a specific point\n * @param {Object} options - Capture options\n * @returns {Promise} - Promise that resolves with the capture result\n */ const captureImages = async (options)=>{\n    const { canvasRef, position, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, captureFolder = 'eye_tracking_captures' } = options;\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[captureImages] Invalid position object:', position);\n        setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus('Error: Invalid capture position');\n        return null;\n    }\n    try {\n        // Get highest resolution constraints\n        const constraints = await getHighestResolutionConstraints();\n        console.log('Using camera constraints:', constraints);\n        // Get a new stream with the highest resolution\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        const videoTrack = stream.getVideoTracks()[0];\n        const settings = videoTrack.getSettings();\n        console.log('Actual camera settings:', settings);\n        // Update video element with new stream\n        const videoElement = window.videoElement || document.querySelector('video');\n        if (videoElement) {\n            videoElement.srcObject = stream;\n            await videoElement.play();\n        }\n        // Call the captureImagesAtPoint with all necessary parameters\n        const result = await (0,_Helper_savefile__WEBPACK_IMPORTED_MODULE_1__.captureImagesAtPoint)({\n            point: position,\n            captureCount: captureCounter,\n            canvasRef,\n            setCaptureCount: setCaptureCounter,\n            showCapturePreview\n        });\n        console.log('Capture successful with ID:', result.captureId);\n        // Clean up the stream\n        stream.getTracks().forEach((track)=>track.stop());\n        return {\n            screenImage: (result === null || result === void 0 ? void 0 : result.screenImage) || '',\n            webcamImage: (result === null || result === void 0 ? void 0 : result.webcamImage) || '',\n            success: true,\n            captureId: result === null || result === void 0 ? void 0 : result.captureId,\n            resolution: {\n                width: settings.width,\n                height: settings.height\n            }\n        };\n    } catch (err) {\n        console.error('[captureImages] Unexpected error:', err);\n        setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Error: \".concat(err.message));\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: err.message\n        };\n    }\n};\n/**\n * Generate a random dot position within the canvas\n * @param {HTMLCanvasElement} canvas - Canvas element\n * @param {number} padding - Padding from the edges\n * @returns {Object} - {x, y} position\n */ const getRandomPosition = function(canvas) {\n    let padding = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 40;\n    if (!canvas) return {\n        x: 100,\n        y: 100\n    }; // Fallback position\n    const width = canvas.width || 400; // Fallback if width is 0\n    const height = canvas.height || 300; // Fallback if height is 0\n    return {\n        x: Math.floor(Math.random() * (width - 2 * padding)) + padding,\n        y: Math.floor(Math.random() * (height - 2 * padding)) + padding\n    };\n};\n/**\n * Special calibration capture function that behaves like random dot capture\n * @param {Object} options - All the calibration options\n * @returns {Promise<Object>} Result object with captured data\n */ const calibrationCapture = async (options)=>{\n    const { canvasRef, point, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, captureFolder = 'eye_tracking_captures', pointIndex, totalPoints } = options;\n    try {\n        console.log(\"Starting calibration capture for point \".concat(pointIndex + 1, \"/\").concat(totalPoints));\n        // Get canvas using canvas management system\n        const canvas = getCanvas();\n        if (!canvas) {\n            console.error(\"Canvas reference is null in calibrationCapture\");\n            setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Error: Canvas not available\");\n            return {\n                success: false\n            };\n        }\n        // Use canvas management system to draw dot\n        drawDotWithCanvasManager(point.x, point.y);\n        setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Calibration point \".concat(pointIndex + 1, \"/\").concat(totalPoints));\n        // Use the same countdown element creation method\n        const canvasRect = canvas.getBoundingClientRect();\n        const countdownElement = createCountdownElement(point, canvasRect);\n        if (!countdownElement) {\n            console.error(\"Failed to create countdown element\");\n            return {\n                success: false\n            };\n        }\n        // Create a redrawInterval for keeping the dot visible\n        let redrawInterval = setInterval(()=>{\n            drawDotWithCanvasManager(point.x, point.y);\n        }, 200);\n        // Run the same countdown as random dot\n        for(let count = 3; count > 0; count--){\n            countdownElement.textContent = count;\n            setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Point \".concat(pointIndex + 1, \"/\").concat(totalPoints, \" - countdown \").concat(count));\n            // Redraw the dot at each step to ensure it remains visible\n            drawDotWithCanvasManager(point.x, point.y);\n            await new Promise((resolve)=>setTimeout(resolve, 800));\n        }\n        // Show checkmark\n        countdownElement.textContent = \"✓\";\n        // Remove countdown element\n        setTimeout(()=>{\n            if (countdownElement.parentNode) {\n                countdownElement.parentNode.removeChild(countdownElement);\n            }\n            // Clear redrawInterval\n            if (redrawInterval) {\n                clearInterval(redrawInterval);\n            }\n        }, 300);\n        // Use captureAndPreviewProcess instead of directly calling captureImagesAtPoint\n        const captureResult = await captureAndPreviewProcess({\n            canvasRef,\n            position: point,\n            captureCounter,\n            setCaptureCounter,\n            setProcessStatus: (status)=>{\n                if (typeof status === 'string') {\n                    setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(status);\n                } else if (status && typeof status === 'object') {\n                    setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(status.processStatus || '');\n                }\n            },\n            toggleTopBar,\n            onStatusUpdate: (status)=>{\n                if (typeof status === 'string') {\n                    setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(status);\n                } else if (status && typeof status === 'object') {\n                    setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(status.processStatus || '');\n                }\n            },\n            captureFolder\n        });\n        // Ensure proper return even if captureResult is null\n        const safeResult = captureResult && typeof captureResult === 'object' ? captureResult : {\n            screenImage: '',\n            webcamImage: '',\n            success: false\n        };\n        return {\n            screenImage: safeResult.screenImage || '',\n            webcamImage: safeResult.webcamImage || '',\n            success: true,\n            point\n        };\n    } catch (error) {\n        console.error(\"Error in calibrationCapture:\", error);\n        setProcessStatus === null || setProcessStatus === void 0 ? void 0 : setProcessStatus(\"Error: \".concat(error.message));\n        // Always return a valid object with default values\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\n * Complete capture and preview process\n * @param {Object} options - Process options\n */ const captureAndPreviewProcess = async (options)=>{\n    const { canvasRef, position, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, onStatusUpdate, captureFolder } = options;\n    try {\n        // Get canvas using canvas management system\n        const canvas = getCanvas();\n        if (!canvas) {\n            console.error(\"[captureAndPreviewProcess] Canvas reference is null\");\n            if (setProcessStatus) setProcessStatus('Error: Canvas is not available');\n            return null;\n        }\n        // Draw the dot using canvas management system\n        drawDotWithCanvasManager(position.x, position.y);\n        // Countdown before capture\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Starting countdown...',\n                isCapturing: true\n            });\n        }\n        // Create a custom countdown element\n        const canvasRect = canvas.getBoundingClientRect();\n        const countdownElement = document.createElement('div');\n        countdownElement.className = 'calibrate-countdown';\n        countdownElement.style.cssText = \"\\n      position: fixed;\\n      left: \".concat(canvasRect.left + position.x, \"px;\\n      top: \").concat(canvasRect.top + position.y - 60, \"px;\\n      transform: translateX(-50%);\\n      color: red;\\n      font-size: 36px;\\n      font-weight: bold;\\n      text-shadow: 0 0 10px white, 0 0 20px white;\\n      z-index: 9999;\\n      background-color: rgba(255, 255, 255, 0.8);\\n      border: 2px solid red;\\n      border-radius: 50%;\\n      width: 50px;\\n      height: 50px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n    \");\n        document.body.appendChild(countdownElement);\n        // Create a redrawInterval for keeping the dot visible\n        let redrawInterval = setInterval(()=>{\n            drawDotWithCanvasManager(position.x, position.y);\n        }, 200);\n        // Manual countdown\n        for(let count = 3; count > 0; count--){\n            countdownElement.textContent = count;\n            if (onStatusUpdate) {\n                onStatusUpdate({\n                    processStatus: \"Countdown: \".concat(count),\n                    countdownValue: count,\n                    isCapturing: true\n                });\n            }\n            // Redraw dot to ensure it's visible\n            drawDotWithCanvasManager(position.x, position.y);\n            await new Promise((resolve)=>setTimeout(resolve, 800));\n        }\n        // Change to checkmark\n        countdownElement.textContent = \"✓\";\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Capturing images...',\n                countdownValue: \"Capturing...\",\n                isCapturing: true\n            });\n        }\n        // Remove countdown element and clear redrawInterval\n        setTimeout(()=>{\n            if (countdownElement.parentNode) {\n                countdownElement.parentNode.removeChild(countdownElement);\n            }\n            if (redrawInterval) {\n                clearInterval(redrawInterval);\n            }\n        }, 300);\n        // Use captureImagesAtPoint from savefile.js\n        const captureResult = await (0,_Helper_savefile__WEBPACK_IMPORTED_MODULE_1__.captureImagesAtPoint)({\n            point: position,\n            captureCount: captureCounter,\n            canvasRef,\n            setCaptureCount: setCaptureCounter,\n            showCapturePreview\n        });\n        if (setProcessStatus) {\n            setProcessStatus(\"Captured dot at x=\".concat(Math.round(position.x), \", y=\").concat(Math.round(position.y)));\n        }\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Capture complete',\n                isCapturing: false\n            });\n        }\n        // Show TopBar again with delay\n        setTimeout(()=>{\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(true);\n            } else if ( true && window.toggleTopBar) {\n                window.toggleTopBar(true);\n            }\n        }, 2500);\n        return captureResult;\n    } catch (error) {\n        console.error(\"[captureAndPreviewProcess] Fatal error:\", error);\n        if (setProcessStatus) {\n            setProcessStatus(\"Fatal error: \".concat(error.message));\n        }\n        // Ensure TopBar is shown even on error\n        setTimeout(()=>{\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(true);\n            } else if ( true && window.toggleTopBar) {\n                window.toggleTopBar(true);\n            }\n        }, 1500);\n        // Return a minimal valid object to prevent null reference errors\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Default export for React compatibility\nconst CountSave = ()=>null; // This is a utility file, so we don't need to render anything\n_c = CountSave;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CountSave);\nvar _c;\n$RefreshReg$(_c, \"CountSave\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx\n"));

/***/ }),

/***/ "(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js":
/*!********************************************************************!*\
  !*** ./components/collected-dataset-customized/Helper/savefile.js ***!
  \********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   captureImagesAtPoint: () => (/* binding */ captureImagesAtPoint),\n/* harmony export */   getHighestResolutionConstraints: () => (/* binding */ getHighestResolutionConstraints),\n/* harmony export */   saveCSVToServer: () => (/* binding */ saveCSVToServer),\n/* harmony export */   saveImageToServer: () => (/* binding */ saveImageToServer)\n/* harmony export */ });\n// Helper/savefile.js - Added highest resolution webcam capture\n/**\n * Resize an image to fit within a certain size limit\n * @param {string} imageDataUrl - Base64 encoded image data\n * @param {number} maxWidth - Maximum width of the resized image\n * @param {number} maxHeight - Maximum height of the resized image\n * @param {number} quality - JPEG quality (0-1)\n * @returns {Promise<string>} - Resized image data URL\n */ const resizeImage = async function(imageDataUrl) {\n    let maxWidth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 800, maxHeight = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 600, quality = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0.85;\n    return new Promise((resolve, reject)=>{\n        try {\n            const img = new Image();\n            img.onload = ()=>{\n                // Calculate new dimensions while maintaining aspect ratio\n                let width = img.width;\n                let height = img.height;\n                if (width > maxWidth) {\n                    height = Math.round(height * (maxWidth / width));\n                    width = maxWidth;\n                }\n                if (height > maxHeight) {\n                    width = Math.round(width * (maxHeight / height));\n                    height = maxHeight;\n                }\n                // Create canvas for resizing\n                const canvas = document.createElement('canvas');\n                canvas.width = width;\n                canvas.height = height;\n                // Draw and resize image on canvas\n                const ctx = canvas.getContext('2d');\n                ctx.drawImage(img, 0, 0, width, height);\n                // Convert to JPEG with specified quality\n                const resizedDataUrl = canvas.toDataURL('image/jpeg', quality);\n                resolve(resizedDataUrl);\n            };\n            img.onerror = (err)=>reject(err);\n            img.src = imageDataUrl;\n        } catch (err) {\n            reject(err);\n        }\n    });\n};\n/**\n * Save an image or data to the server with group ID to ensure consistent numbering\n * @param {string} imageData - Base64 encoded image data\n * @param {string} filename - Filename pattern to save as\n * @param {string} type - Type of file (screen, webcam, parameters)\n * @param {string} folder - Folder to save in\n * @param {string} captureGroup - Unique ID for grouping files from the same capture\n * @returns {Promise<Object>} - Server response\n */ const saveImageToServer = async function(imageData, filename, type) {\n    let folder = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 'eye_tracking_captures', captureGroup = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : null;\n    try {\n        const response = await fetch('/api/save-capture', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                imageData,\n                filename,\n                type,\n                folder,\n                captureGroup\n            })\n        });\n        if (!response.ok) {\n            console.error(\"Server returned \".concat(response.status, \" for \").concat(type));\n            // If the error is 413 (payload too large) and it's an image, try resizing\n            if (response.status === 413 && type !== 'parameters') {\n                console.warn(\"Image too large for server (413 error), will resize and retry\");\n                // Start with higher quality and progressively reduce quality/size until it fits\n                const sizes = [\n                    {\n                        width: 1920,\n                        height: 1080,\n                        quality: 0.9\n                    },\n                    {\n                        width: 1280,\n                        height: 720,\n                        quality: 0.85\n                    },\n                    {\n                        width: 800,\n                        height: 600,\n                        quality: 0.8\n                    },\n                    {\n                        width: 640,\n                        height: 480,\n                        quality: 0.75\n                    }\n                ];\n                for (const { width, height, quality } of sizes){\n                    const resizedImage = await resizeImage(imageData, width, height, quality);\n                    try {\n                        const retryResponse = await fetch('/api/save-capture', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                imageData: resizedImage,\n                                filename,\n                                type,\n                                folder,\n                                captureGroup\n                            })\n                        });\n                        if (retryResponse.ok) {\n                            console.log(\"Successfully saved resized \".concat(type, \" at \").concat(width, \"x\").concat(height, \", quality \").concat(quality));\n                            return await retryResponse.json();\n                        }\n                    } catch (retryError) {\n                        console.error(\"Error during retry for \".concat(type, \":\"), retryError);\n                    }\n                }\n                return {\n                    success: false,\n                    error: \"Failed to save image even after resizing\"\n                };\n            }\n            return {\n                success: false,\n                error: \"Server returned \".concat(response.status)\n            };\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        console.error(\"Error saving \".concat(type, \":\"), error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\n * Save CSV data to the server\n * @param {string} csvData - CSV data\n * @param {string} filename - Filename pattern to save as\n * @param {string} folder - Folder to save in\n * @param {string} captureGroup - Unique ID for grouping files from the same capture\n * @returns {Promise<Object>} - Server response\n */ const saveCSVToServer = async function(csvData, filename) {\n    let folder = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 'eye_tracking_captures', captureGroup = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n    try {\n        const csvBlob = new Blob([\n            csvData\n        ], {\n            type: 'text/csv'\n        });\n        const reader = new FileReader();\n        const csvDataUrl = await new Promise((resolve)=>{\n            reader.onloadend = ()=>resolve(reader.result);\n            reader.readAsDataURL(csvBlob);\n        });\n        const result = await saveImageToServer(csvDataUrl, filename, 'parameters', folder, captureGroup);\n        return result;\n    } catch (error) {\n        console.error('Error saving CSV:', error);\n        return null;\n    }\n};\n/**\n * Get the highest resolution camera constraints supported by the device\n * @returns {Promise<MediaStreamConstraints>} - Camera constraints with highest resolution\n */ const getHighestResolutionConstraints = async ()=>{\n    // Try to get all available camera capabilities first\n    try {\n        var _videoTrack_getCapabilities;\n        // Get a temporary access to the camera\n        const tempStream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        const videoTrack = tempStream.getVideoTracks()[0];\n        // Get capabilities\n        const capabilities = (_videoTrack_getCapabilities = videoTrack.getCapabilities) === null || _videoTrack_getCapabilities === void 0 ? void 0 : _videoTrack_getCapabilities.call(videoTrack);\n        console.log(\"Camera capabilities:\", capabilities);\n        // Get current settings to check aspect ratio\n        const settings = videoTrack.getSettings();\n        console.log(\"Current camera settings:\", settings);\n        // Stop the temporary stream\n        videoTrack.stop();\n        if (capabilities && capabilities.width && capabilities.height) {\n            // Use the maximum width and height from device capabilities\n            const maxWidth = capabilities.width.max;\n            const maxHeight = capabilities.height.max;\n            // Force exact resolution instead of ideal\n            return {\n                video: {\n                    width: {\n                        exact: maxWidth\n                    },\n                    height: {\n                        exact: maxHeight\n                    },\n                    frameRate: {\n                        ideal: 30\n                    } // Try to maintain good frame rate\n                }\n            };\n        }\n    } catch (err) {\n        console.log(\"Could not get camera capabilities:\", err);\n    }\n    // Fallback: try standard resolutions in order\n    const resolutions = [\n        {\n            width: {\n                exact: 4096\n            },\n            height: {\n                exact: 2160\n            }\n        },\n        {\n            width: {\n                exact: 3840\n            },\n            height: {\n                exact: 2160\n            }\n        },\n        {\n            width: {\n                exact: 2560\n            },\n            height: {\n                exact: 1440\n            }\n        },\n        {\n            width: {\n                exact: 1920\n            },\n            height: {\n                exact: 1080\n            }\n        },\n        {\n            width: {\n                exact: 1280\n            },\n            height: {\n                exact: 720\n            }\n        },\n        {\n            width: {\n                exact: 640\n            },\n            height: {\n                exact: 480\n            }\n        },\n        {} // Default - let browser decide\n    ];\n    // Try the resolutions in order until one works\n    for (const resolution of resolutions){\n        try {\n            const constraints = {\n                video: {\n                    ...resolution,\n                    facingMode: \"user\",\n                    frameRate: {\n                        ideal: 30\n                    }\n                }\n            };\n            // Test if this resolution is supported\n            const stream = await navigator.mediaDevices.getUserMedia(constraints);\n            // Get the actual dimensions\n            const videoTrack = stream.getVideoTracks()[0];\n            const settings = videoTrack.getSettings();\n            console.log(\"Supported resolution:\", settings.width, \"x\", settings.height);\n            // Stop the test stream immediately\n            stream.getTracks().forEach((track)=>track.stop());\n            return constraints;\n        } catch (err) {\n            console.log(\"Resolution not supported: \".concat(JSON.stringify(resolution)));\n        // Continue to next resolution\n        }\n    }\n    // If nothing worked, return basic constraints\n    return {\n        video: {\n            width: {\n                exact: 1280\n            },\n            height: {\n                exact: 720\n            },\n            frameRate: {\n                ideal: 30\n            }\n        }\n    };\n};\n/**\n * Capture and save images at a specific point with consistent numbering\n * @param {Object} options - Capture options\n * @returns {Promise<Object>} - Capture results\n */ const captureImagesAtPoint = async (param)=>{\n    let { point, captureCount = 1, canvasRef, setCaptureCount, showCapturePreview } = param;\n    try {\n        const folder = 'eye_tracking_captures';\n        // Create a unique ID for this capture group\n        const captureGroupId = \"capture-\".concat(Date.now());\n        console.log(\"Generated capture group ID: \".concat(captureGroupId));\n        // File patterns for saving\n        const screenFilename = 'screen_001.jpg'; // Pattern only - server will assign number\n        const webcamFilename = 'webcam_001.jpg'; // Pattern only - server will assign number\n        const parameterFilename = 'parameter_001.csv'; // Pattern only - server will assign number\n        // For logging\n        console.log(\"Starting capture with group ID:\", captureGroupId);\n        const canvas = canvasRef.current;\n        let screenImage = null;\n        let webcamImage = null;\n        let captureNumber = null;\n        // Variables to store webcam resolution\n        let webcamWidth = 0;\n        let webcamHeight = 0;\n        // 1. Prepare all data first\n        // 1.1 Canvas/screen image\n        if (canvas) {\n            screenImage = canvas.toDataURL('image/png');\n        }\n        // 1.2 Webcam image - Try to get the highest resolution available \n        // with device's native capabilities instead of fixed values\n        let webcamImagePreview = null; // Separate lower-resolution version for preview\n        const videoElement = window.videoElement || document.querySelector('video');\n        if (videoElement) {\n            try {\n                // Use existing video element if available\n                // First check if videoTrack has settings info\n                let trackSettings = null;\n                if (videoElement.srcObject) {\n                    const videoTrack = videoElement.srcObject.getVideoTracks()[0];\n                    if (videoTrack) {\n                        trackSettings = videoTrack.getSettings();\n                        console.log(\"Video track settings:\", trackSettings);\n                    }\n                }\n                // Get dimensions from track if available, otherwise from element\n                if (trackSettings && trackSettings.width && trackSettings.height) {\n                    webcamWidth = trackSettings.width;\n                    webcamHeight = trackSettings.height;\n                    console.log(\"Using track settings dimensions: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                } else {\n                    webcamWidth = videoElement.videoWidth || 0;\n                    webcamHeight = videoElement.videoHeight || 0;\n                    console.log(\"Using video element dimensions: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                }\n                // Sanity check - if both dimensions are the same, double-check\n                if (webcamWidth === webcamHeight && webcamWidth > 100) {\n                    console.warn(\"Suspicious square aspect ratio detected, double-checking dimensions\");\n                    // Try to get more reliable info\n                    if (videoElement.srcObject) {\n                        const videoTrack = videoElement.srcObject.getVideoTracks()[0];\n                        if (videoTrack) {\n                            const constraints = videoTrack.getConstraints();\n                            console.log(\"Video constraints:\", constraints);\n                            // If constraints have width/height, use those\n                            if (constraints.width && constraints.height) {\n                                if (typeof constraints.width.exact === 'number') {\n                                    webcamWidth = constraints.width.exact;\n                                } else if (typeof constraints.width.ideal === 'number') {\n                                    webcamWidth = constraints.width.ideal;\n                                }\n                                if (typeof constraints.height.exact === 'number') {\n                                    webcamHeight = constraints.height.exact;\n                                } else if (typeof constraints.height.ideal === 'number') {\n                                    webcamHeight = constraints.height.ideal;\n                                }\n                                console.log(\"Updated dimensions from constraints: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                            }\n                        }\n                    }\n                }\n                // Final reality check - make sure dimensions are reasonable\n                if (webcamWidth <= 0 || webcamHeight <= 0) {\n                    console.warn(\"Invalid webcam dimensions, using defaults\");\n                    webcamWidth = 640;\n                    webcamHeight = 480;\n                }\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = webcamWidth;\n                tempCanvas.height = webcamHeight;\n                tempCanvas.getContext('2d').drawImage(videoElement, 0, 0, webcamWidth, webcamHeight);\n                // Create high-resolution version for saving\n                webcamImage = tempCanvas.toDataURL('image/jpeg', 0.95);\n                // Create lower-resolution version for preview\n                webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.85);\n                console.log(\"Webcam capture complete at resolution: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n            } catch (err) {\n                console.error(\"Error capturing from existing video element:\", err);\n                webcamWidth = videoElement.videoWidth || 640;\n                webcamHeight = videoElement.videoHeight || 480;\n            }\n        } else {\n            try {\n                // Get highest resolution constraints for this device\n                const constraints = await getHighestResolutionConstraints();\n                console.log(\"Using camera constraints:\", constraints);\n                // Try to get stream with highest resolution\n                const stream = await navigator.mediaDevices.getUserMedia(constraints);\n                // Get the actual dimensions from the track first\n                const videoTrack = stream.getVideoTracks()[0];\n                const trackSettings = videoTrack.getSettings();\n                console.log(\"Actual camera settings:\", trackSettings);\n                // Create temporary video element to get the stream\n                const tempVideo = document.createElement('video');\n                tempVideo.srcObject = stream;\n                tempVideo.muted = true;\n                tempVideo.playsInline = true;\n                tempVideo.autoplay = true;\n                document.body.appendChild(tempVideo);\n                // Need to wait for video to be initialized\n                await new Promise((resolve)=>{\n                    tempVideo.onloadedmetadata = ()=>{\n                        tempVideo.play();\n                        resolve();\n                    };\n                    // Fallback if onloadedmetadata doesn't fire\n                    setTimeout(resolve, 1000);\n                });\n                // Wait a bit longer for the video to actually start playing\n                await new Promise((res)=>setTimeout(res, 500));\n                // Store webcam resolution - prioritize track settings over video element\n                if (trackSettings && trackSettings.width && trackSettings.height) {\n                    webcamWidth = trackSettings.width;\n                    webcamHeight = trackSettings.height;\n                    console.log(\"Using track settings for resolution: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                } else {\n                    webcamWidth = tempVideo.videoWidth || 0;\n                    webcamHeight = tempVideo.videoHeight || 0;\n                    console.log(\"Using video element for resolution: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                }\n                // Reality check on dimensions\n                if (webcamWidth <= 0 || webcamHeight <= 0) {\n                    console.warn(\"Invalid webcam dimensions, trying to get from constraints\");\n                    if (constraints.video && typeof constraints.video === 'object') {\n                        if (constraints.video.width && constraints.video.width.exact) {\n                            webcamWidth = constraints.video.width.exact;\n                        }\n                        if (constraints.video.height && constraints.video.height.exact) {\n                            webcamHeight = constraints.video.height.exact;\n                        }\n                    }\n                    if (webcamWidth <= 0 || webcamHeight <= 0) {\n                        console.warn(\"Still invalid dimensions, using defaults\");\n                        webcamWidth = 640;\n                        webcamHeight = 480;\n                    }\n                }\n                // Final check for square aspect ratio which is usually incorrect\n                if (webcamWidth === webcamHeight && webcamWidth > 100) {\n                    var _videoTrack_getCapabilities;\n                    console.warn(\"Square aspect ratio detected, may be incorrect\");\n                    // Try to get more reliable dimensions\n                    const capabilities = (_videoTrack_getCapabilities = videoTrack.getCapabilities) === null || _videoTrack_getCapabilities === void 0 ? void 0 : _videoTrack_getCapabilities.call(videoTrack);\n                    if (capabilities && capabilities.width && capabilities.height) {\n                        if (capabilities.width.max && capabilities.height.max) {\n                            // Assume the maximum capabilities have the correct aspect ratio\n                            const aspectRatio = capabilities.width.max / capabilities.height.max;\n                            if (Math.abs(aspectRatio - 1.33) < 0.1) {\n                                webcamHeight = Math.round(webcamWidth / 1.33);\n                                console.log(\"Corrected to 4:3 aspect ratio: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                            } else if (Math.abs(aspectRatio - 1.78) < 0.1) {\n                                webcamHeight = Math.round(webcamWidth / 1.78);\n                                console.log(\"Corrected to 16:9 aspect ratio: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                            }\n                        }\n                    }\n                }\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = webcamWidth;\n                tempCanvas.height = webcamHeight;\n                tempCanvas.getContext('2d').drawImage(tempVideo, 0, 0, webcamWidth, webcamHeight);\n                // Create high-resolution version for saving\n                webcamImage = tempCanvas.toDataURL('image/jpeg', 0.95);\n                // Create lower-resolution version for preview\n                webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.85);\n                console.log(\"High-resolution webcam capture complete: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                // Clean up\n                stream.getTracks().forEach((t)=>t.stop());\n                tempVideo.remove();\n            } catch (err) {\n                console.warn(\"High-resolution webcam capture failed:\", err);\n                // Try one more time with basic constraints\n                try {\n                    const stream = await navigator.mediaDevices.getUserMedia({\n                        video: true\n                    });\n                    const videoTrack = stream.getVideoTracks()[0];\n                    const trackSettings = videoTrack.getSettings();\n                    const tempVideo = document.createElement('video');\n                    tempVideo.srcObject = stream;\n                    tempVideo.muted = true;\n                    tempVideo.playsInline = true;\n                    document.body.appendChild(tempVideo);\n                    await tempVideo.play();\n                    await new Promise((res)=>setTimeout(res, 300));\n                    // Get dimensions from track settings if available\n                    if (trackSettings && trackSettings.width && trackSettings.height) {\n                        webcamWidth = trackSettings.width;\n                        webcamHeight = trackSettings.height;\n                    } else {\n                        webcamWidth = tempVideo.videoWidth || 0;\n                        webcamHeight = tempVideo.videoHeight || 0;\n                    }\n                    // Final check for invalid dimensions\n                    if (webcamWidth <= 0 || webcamHeight <= 0) {\n                        webcamWidth = 640;\n                        webcamHeight = 480;\n                    }\n                    const tempCanvas = document.createElement('canvas');\n                    tempCanvas.width = webcamWidth;\n                    tempCanvas.height = webcamHeight;\n                    tempCanvas.getContext('2d').drawImage(tempVideo, 0, 0, webcamWidth, webcamHeight);\n                    // Create high-resolution version for saving\n                    webcamImage = tempCanvas.toDataURL('image/jpeg', 0.9);\n                    // Create lower-resolution version for preview\n                    webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.8);\n                    console.log(\"Basic webcam resolution captured: \".concat(webcamWidth, \"x\").concat(webcamHeight));\n                    stream.getTracks().forEach((t)=>t.stop());\n                    tempVideo.remove();\n                } catch (fallbackErr) {\n                    console.error(\"All webcam capture methods failed:\", fallbackErr);\n                    webcamWidth = 640;\n                    webcamHeight = 480;\n                }\n            }\n        }\n        // 1.3 Parameter data - Now including webcam resolution\n        const csvData = [\n            \"name,value\",\n            \"dot_x,\".concat(point.x),\n            \"dot_y,\".concat(point.y),\n            \"canvas_width,\".concat((canvas === null || canvas === void 0 ? void 0 : canvas.width) || 0),\n            \"canvas_height,\".concat((canvas === null || canvas === void 0 ? void 0 : canvas.height) || 0),\n            \"window_width,\".concat(window.innerWidth),\n            \"window_height,\".concat(window.innerHeight),\n            \"webcam_resolution_width,\".concat(webcamWidth),\n            \"webcam_resolution_height,\".concat(webcamHeight),\n            \"timestamp,\".concat(new Date().toISOString()),\n            \"group_id,\".concat(captureGroupId)\n        ].join('\\n');\n        // 2. Save all files with the same group ID so they get the same number\n        // 2.1 Save parameter file\n        const paramResult = await saveCSVToServer(csvData, parameterFilename, folder, captureGroupId);\n        if (paramResult && paramResult.success) {\n            captureNumber = paramResult.number;\n            console.log(\"Server assigned capture number: \".concat(captureNumber, \" for group: \").concat(captureGroupId));\n        }\n        // 2.2 Save screen image if available\n        let screenResult = null;\n        if (screenImage) {\n            screenResult = await saveImageToServer(screenImage, screenFilename, 'screen', folder, captureGroupId);\n        }\n        // 2.3 Save webcam image if available\n        let webcamResult = null;\n        if (webcamImage) {\n            webcamResult = await saveImageToServer(webcamImage, webcamFilename, 'webcam', folder, captureGroupId);\n        }\n        // 3. Show preview if needed - use the lower resolution version for preview\n        if (showCapturePreview && typeof showCapturePreview === 'function') {\n            showCapturePreview(screenImage, webcamImagePreview || webcamImage, point);\n        }\n        // 4. Increment counter for next capture\n        if (setCaptureCount && typeof setCaptureCount === 'function') {\n            setCaptureCount((prevCount)=>prevCount + 1);\n        }\n        // 5. Return results - now including webcam resolution\n        return {\n            screenImage,\n            webcamImage,\n            success: true,\n            point,\n            captureNumber,\n            groupId: captureGroupId,\n            webcamWidth,\n            webcamHeight\n        };\n    } catch (err) {\n        console.error(\"captureImagesAtPoint failed:\", err);\n        return {\n            success: false,\n            error: err.message,\n            screenImage: null,\n            webcamImage: null,\n            webcamWidth: 0,\n            webcamHeight: 0\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === 'object' ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyIvYXBwL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2dsb2JhbF9wcm9jZXNzLCBfZ2xvYmFsX3Byb2Nlc3MxO1xubW9kdWxlLmV4cG9ydHMgPSAoKF9nbG9iYWxfcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzLmVudikgJiYgdHlwZW9mICgoX2dsb2JhbF9wcm9jZXNzMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX2dsb2JhbF9wcm9jZXNzMS5lbnYpID09PSAnb2JqZWN0JyA/IGdsb2JhbC5wcm9jZXNzIDogcmVxdWlyZSgnbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MnKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fapp%2Fpages%2Fcollected-dataset-customized%2Findex.js&page=%2Fcollected-dataset-customized!":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fapp%2Fpages%2Fcollected-dataset-customized%2Findex.js&page=%2Fcollected-dataset-customized! ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/collected-dataset-customized\",\n      function () {\n        return __webpack_require__(/*! ./pages/collected-dataset-customized/index.js */ \"(pages-dir-browser)/./pages/collected-dataset-customized/index.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/collected-dataset-customized\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtY2xpZW50LXBhZ2VzLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPSUyRmFwcCUyRnBhZ2VzJTJGY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZCUyRmluZGV4LmpzJnBhZ2U9JTJGY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZCEiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyx3SEFBK0M7QUFDdEU7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZFwiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi4vcGFnZXMvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZC9pbmRleC5qc1wiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuX19ORVhUX1AucHVzaChbXCIvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZFwiXSlcbiAgICAgIH0pO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fapp%2Fpages%2Fcollected-dataset-customized%2Findex.js&page=%2Fcollected-dataset-customized!\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {



/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsiL2FwcC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/shared/lib/dynamic.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/dynamic.js ***!
  \******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    /**\n * This function lets you dynamically import a component.\n * It uses [React.lazy()](https://react.dev/reference/react/lazy) with [Suspense](https://react.dev/reference/react/Suspense) under the hood.\n *\n * Read more: [Next.js Docs: `next/dynamic`](https://nextjs.org/docs/app/building-your-application/optimizing/lazy-loading#nextdynamic)\n */ default: function() {\n        return dynamic;\n    },\n    noSSR: function() {\n        return noSSR;\n    }\n});\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(pages-dir-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\"));\nconst _loadablesharedruntime = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./loadable.shared-runtime */ \"(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable.shared-runtime.js\"));\nconst isServerSide = \"object\" === 'undefined';\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule(mod) {\n    return {\n        default: (mod == null ? void 0 : mod.default) || mod\n    };\n}\nfunction noSSR(LoadableInitializer, loadableOptions) {\n    // Removing webpack and modules means react-loadable won't try preloading\n    delete loadableOptions.webpack;\n    delete loadableOptions.modules;\n    // This check is necessary to prevent react-loadable from initializing on the server\n    if (!isServerSide) {\n        return LoadableInitializer(loadableOptions);\n    }\n    const Loading = loadableOptions.loading;\n    // This will only be rendered on the server side\n    return ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)(Loading, {\n            error: null,\n            isLoading: true,\n            pastDelay: false,\n            timedOut: false\n        });\n}\nfunction dynamic(dynamicOptions, options) {\n    let loadableFn = _loadablesharedruntime.default;\n    let loadableOptions = {\n        // A loading component is not required, so we default it\n        loading: (param)=>{\n            let { error, isLoading, pastDelay } = param;\n            if (!pastDelay) return null;\n            if (true) {\n                if (isLoading) {\n                    return null;\n                }\n                if (error) {\n                    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(\"p\", {\n                        children: [\n                            error.message,\n                            /*#__PURE__*/ (0, _jsxruntime.jsx)(\"br\", {}),\n                            error.stack\n                        ]\n                    });\n                }\n            }\n            return null;\n        }\n    };\n    // Support for direct import(), eg: dynamic(import('../hello-world'))\n    // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n    // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n    // To make sure we don't execute the import without rendering first\n    if (dynamicOptions instanceof Promise) {\n        loadableOptions.loader = ()=>dynamicOptions;\n    // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n    } else if (typeof dynamicOptions === 'function') {\n        loadableOptions.loader = dynamicOptions;\n    // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n    } else if (typeof dynamicOptions === 'object') {\n        loadableOptions = {\n            ...loadableOptions,\n            ...dynamicOptions\n        };\n    }\n    // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n    loadableOptions = {\n        ...loadableOptions,\n        ...options\n    };\n    const loaderFn = loadableOptions.loader;\n    const loader = ()=>loaderFn != null ? loaderFn().then(convertModule) : Promise.resolve(convertModule(()=>null));\n    // coming from build/babel/plugins/react-loadable-plugin.js\n    if (loadableOptions.loadableGenerated) {\n        loadableOptions = {\n            ...loadableOptions,\n            ...loadableOptions.loadableGenerated\n        };\n        delete loadableOptions.loadableGenerated;\n    }\n    // support for disabling server side rendering, eg: dynamic(() => import('../hello-world'), {ssr: false}).\n    if (typeof loadableOptions.ssr === 'boolean' && !loadableOptions.ssr) {\n        delete loadableOptions.webpack;\n        delete loadableOptions.modules;\n        return noSSR(loadableFn, loadableOptions);\n    }\n    return loadableFn({\n        ...loadableOptions,\n        loader: loader\n    });\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=dynamic.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/shared/lib/dynamic.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable-context.shared-runtime.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/loadable-context.shared-runtime.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"LoadableContext\", ({\n    enumerable: true,\n    get: function() {\n        return LoadableContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(pages-dir-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\"));\nconst LoadableContext = _react.default.createContext(null);\nif (true) {\n    LoadableContext.displayName = 'LoadableContext';\n} //# sourceMappingURL=loadable-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9sb2FkYWJsZS1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7bURBTWFBOzs7ZUFBQUE7Ozs7NEVBSks7QUFJWCxNQUFNQSxrQkFBa0JDLE9BQUFBLE9BQUssQ0FBQ0MsYUFBYSxDQUFtQjtBQUVyRSxJQUFJQyxJQUFvQixFQUFtQjtJQUN6Q0gsZ0JBQWdCTSxXQUFXLEdBQUc7QUFDaEMiLCJzb3VyY2VzIjpbIi9zcmMvc2hhcmVkL2xpYi9sb2FkYWJsZS1jb250ZXh0LnNoYXJlZC1ydW50aW1lLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbnR5cGUgQ2FwdHVyZUZuID0gKG1vZHVsZU5hbWU6IHN0cmluZykgPT4gdm9pZFxuXG5leHBvcnQgY29uc3QgTG9hZGFibGVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxDYXB0dXJlRm4gfCBudWxsPihudWxsKVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBMb2FkYWJsZUNvbnRleHQuZGlzcGxheU5hbWUgPSAnTG9hZGFibGVDb250ZXh0J1xufVxuIl0sIm5hbWVzIjpbIkxvYWRhYmxlQ29udGV4dCIsIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImRpc3BsYXlOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable-context.shared-runtime.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable.shared-runtime.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/loadable.shared-runtime.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("// TODO: Remove use of `any` type.\n/**\n@copyright (c) 2017-present James Kyle <me@thejameskyle.com>\n MIT License\n Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n The above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\n*/ // https://github.com/jamiebuilds/react-loadable/blob/v5.5.0/src/index.js\n// Modified to be compatible with webpack 4 / Next.js\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(pages-dir-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\"));\nconst _loadablecontextsharedruntime = __webpack_require__(/*! ./loadable-context.shared-runtime */ \"(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable-context.shared-runtime.js\");\nfunction resolve(obj) {\n    return obj && obj.default ? obj.default : obj;\n}\nconst ALL_INITIALIZERS = [];\nconst READY_INITIALIZERS = [];\nlet initialized = false;\nfunction load(loader) {\n    let promise = loader();\n    let state = {\n        loading: true,\n        loaded: null,\n        error: null\n    };\n    state.promise = promise.then((loaded)=>{\n        state.loading = false;\n        state.loaded = loaded;\n        return loaded;\n    }).catch((err)=>{\n        state.loading = false;\n        state.error = err;\n        throw err;\n    });\n    return state;\n}\nfunction createLoadableComponent(loadFn, options) {\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n    let opts = Object.assign({\n        loader: null,\n        loading: null,\n        delay: 200,\n        timeout: null,\n        webpack: null,\n        modules: null\n    }, options);\n    /** @type LoadableSubscription */ let subscription = null;\n    function init() {\n        if (!subscription) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            const sub = new LoadableSubscription(loadFn, opts);\n            subscription = {\n                getCurrentValue: sub.getCurrentValue.bind(sub),\n                subscribe: sub.subscribe.bind(sub),\n                retry: sub.retry.bind(sub),\n                promise: sub.promise.bind(sub)\n            };\n        }\n        return subscription.promise();\n    }\n    // Server only\n    if (false) {}\n    // Client only\n    if (!initialized && \"object\" !== 'undefined') {\n        // require.resolveWeak check is needed for environments that don't have it available like Jest\n        const moduleIds = opts.webpack && \"function\" === 'function' ? opts.webpack() : opts.modules;\n        if (moduleIds) {\n            READY_INITIALIZERS.push((ids)=>{\n                for (const moduleId of moduleIds){\n                    if (ids.includes(moduleId)) {\n                        return init();\n                    }\n                }\n            });\n        }\n    }\n    function useLoadableModule() {\n        _s();\n        init();\n        const context = _react.default.useContext(_loadablecontextsharedruntime.LoadableContext);\n        if (context && Array.isArray(opts.modules)) {\n            opts.modules.forEach((moduleName)=>{\n                context(moduleName);\n            });\n        }\n    }\n    _s(useLoadableModule, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n    function LoadableComponent(props, ref) {\n        _s1();\n        useLoadableModule();\n        const state = _react.default.useSyncExternalStore(subscription.subscribe, subscription.getCurrentValue, subscription.getCurrentValue);\n        _react.default.useImperativeHandle(ref, {\n            \"createLoadableComponent.LoadableComponent.useImperativeHandle\": ()=>({\n                    retry: subscription.retry\n                })\n        }[\"createLoadableComponent.LoadableComponent.useImperativeHandle\"], []);\n        return _react.default.useMemo({\n            \"createLoadableComponent.LoadableComponent.useMemo\": ()=>{\n                if (state.loading || state.error) {\n                    return /*#__PURE__*/ _react.default.createElement(opts.loading, {\n                        isLoading: state.loading,\n                        pastDelay: state.pastDelay,\n                        timedOut: state.timedOut,\n                        error: state.error,\n                        retry: subscription.retry\n                    });\n                } else if (state.loaded) {\n                    return /*#__PURE__*/ _react.default.createElement(resolve(state.loaded), props);\n                } else {\n                    return null;\n                }\n            }\n        }[\"createLoadableComponent.LoadableComponent.useMemo\"], [\n            props,\n            state\n        ]);\n    }\n    _s1(LoadableComponent, \"FetqI339RA+IfltT8VNzX8RMZ2Q=\", false, function() {\n        return [\n            useLoadableModule\n        ];\n    });\n    LoadableComponent.preload = ()=>init();\n    LoadableComponent.displayName = 'LoadableComponent';\n    return /*#__PURE__*/ _react.default.forwardRef(LoadableComponent);\n}\nclass LoadableSubscription {\n    promise() {\n        return this._res.promise;\n    }\n    retry() {\n        this._clearTimeouts();\n        this._res = this._loadFn(this._opts.loader);\n        this._state = {\n            pastDelay: false,\n            timedOut: false\n        };\n        const { _res: res, _opts: opts } = this;\n        if (res.loading) {\n            if (typeof opts.delay === 'number') {\n                if (opts.delay === 0) {\n                    this._state.pastDelay = true;\n                } else {\n                    this._delay = setTimeout(()=>{\n                        this._update({\n                            pastDelay: true\n                        });\n                    }, opts.delay);\n                }\n            }\n            if (typeof opts.timeout === 'number') {\n                this._timeout = setTimeout(()=>{\n                    this._update({\n                        timedOut: true\n                    });\n                }, opts.timeout);\n            }\n        }\n        this._res.promise.then(()=>{\n            this._update({});\n            this._clearTimeouts();\n        }).catch((_err)=>{\n            this._update({});\n            this._clearTimeouts();\n        });\n        this._update({});\n    }\n    _update(partial) {\n        this._state = {\n            ...this._state,\n            error: this._res.error,\n            loaded: this._res.loaded,\n            loading: this._res.loading,\n            ...partial\n        };\n        this._callbacks.forEach((callback)=>callback());\n    }\n    _clearTimeouts() {\n        clearTimeout(this._delay);\n        clearTimeout(this._timeout);\n    }\n    getCurrentValue() {\n        return this._state;\n    }\n    subscribe(callback) {\n        this._callbacks.add(callback);\n        return ()=>{\n            this._callbacks.delete(callback);\n        };\n    }\n    constructor(loadFn, opts){\n        this._loadFn = loadFn;\n        this._opts = opts;\n        this._callbacks = new Set();\n        this._delay = null;\n        this._timeout = null;\n        this.retry();\n    }\n}\nfunction Loadable(opts) {\n    return createLoadableComponent(load, opts);\n}\n_c = Loadable;\nfunction flushInitializers(initializers, ids) {\n    let promises = [];\n    while(initializers.length){\n        let init = initializers.pop();\n        promises.push(init(ids));\n    }\n    return Promise.all(promises).then(()=>{\n        if (initializers.length) {\n            return flushInitializers(initializers, ids);\n        }\n    });\n}\nLoadable.preloadAll = ()=>{\n    return new Promise((resolveInitializers, reject)=>{\n        flushInitializers(ALL_INITIALIZERS).then(resolveInitializers, reject);\n    });\n};\nLoadable.preloadReady = (ids)=>{\n    if (ids === void 0) ids = [];\n    return new Promise((resolvePreload)=>{\n        const res = ()=>{\n            initialized = true;\n            return resolvePreload();\n        };\n        // We always will resolve, errors should be handled within loading UIs.\n        flushInitializers(READY_INITIALIZERS, ids).then(res, res);\n    });\n};\nif (true) {\n    window.__NEXT_PRELOADREADY = Loadable.preloadReady;\n}\nconst _default = Loadable; //# sourceMappingURL=loadable.shared-runtime.js.map\nvar _c;\n$RefreshReg$(_c, \"Loadable\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dist/shared/lib/loadable.shared-runtime.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dynamic.js":
/*!**************************************!*\
  !*** ./node_modules/next/dynamic.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/dynamic */ \"(pages-dir-browser)/./node_modules/next/dist/shared/lib/dynamic.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2R5bmFtaWMuanMiLCJtYXBwaW5ncyI6IkFBQUEsMklBQXFEIiwic291cmNlcyI6WyIvYXBwL25vZGVfbW9kdWxlcy9uZXh0L2R5bmFtaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9keW5hbWljJylcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/next/dynamic.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/styled-jsx/dist/index/index.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n__webpack_require__(/*! client-only */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\nvar React = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n        'default': e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n_c = React__default;\n/*\nBased on Glamor's sheet\nhttps://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js\n*/ function _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isProd = typeof process !== \"undefined\" && process.env && \"development\" === \"production\";\nvar isString = function(o) {\n    return Object.prototype.toString.call(o) === \"[object String]\";\n};\nvar StyleSheet = /*#__PURE__*/ function() {\n    function StyleSheet(param) {\n        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? \"stylesheet\" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;\n        invariant$1(isString(name), \"`name` must be a string\");\n        this._name = name;\n        this._deletedRulePlaceholder = \"#\" + name + \"-deleted-rule____{}\";\n        invariant$1(typeof optimizeForSpeed === \"boolean\", \"`optimizeForSpeed` must be a boolean\");\n        this._optimizeForSpeed = optimizeForSpeed;\n        this._serverSheet = undefined;\n        this._tags = [];\n        this._injected = false;\n        this._rulesCount = 0;\n        var node =  true && document.querySelector('meta[property=\"csp-nonce\"]');\n        this._nonce = node ? node.getAttribute(\"content\") : null;\n    }\n    var _proto = StyleSheet.prototype;\n    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {\n        invariant$1(typeof bool === \"boolean\", \"`setOptimizeForSpeed` accepts a boolean\");\n        invariant$1(this._rulesCount === 0, \"optimizeForSpeed cannot be when rules have already been inserted\");\n        this.flush();\n        this._optimizeForSpeed = bool;\n        this.inject();\n    };\n    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {\n        return this._optimizeForSpeed;\n    };\n    _proto.inject = function inject() {\n        var _this = this;\n        invariant$1(!this._injected, \"sheet already injected\");\n        this._injected = true;\n        if ( true && this._optimizeForSpeed) {\n            this._tags[0] = this.makeStyleTag(this._name);\n            this._optimizeForSpeed = \"insertRule\" in this.getSheet();\n            if (!this._optimizeForSpeed) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.\");\n                }\n                this.flush();\n                this._injected = true;\n            }\n            return;\n        }\n        this._serverSheet = {\n            cssRules: [],\n            insertRule: function(rule, index) {\n                if (typeof index === \"number\") {\n                    _this._serverSheet.cssRules[index] = {\n                        cssText: rule\n                    };\n                } else {\n                    _this._serverSheet.cssRules.push({\n                        cssText: rule\n                    });\n                }\n                return index;\n            },\n            deleteRule: function(index) {\n                _this._serverSheet.cssRules[index] = null;\n            }\n        };\n    };\n    _proto.getSheetForTag = function getSheetForTag(tag) {\n        if (tag.sheet) {\n            return tag.sheet;\n        }\n        // this weirdness brought to you by firefox\n        for(var i = 0; i < document.styleSheets.length; i++){\n            if (document.styleSheets[i].ownerNode === tag) {\n                return document.styleSheets[i];\n            }\n        }\n    };\n    _proto.getSheet = function getSheet() {\n        return this.getSheetForTag(this._tags[this._tags.length - 1]);\n    };\n    _proto.insertRule = function insertRule(rule, index) {\n        invariant$1(isString(rule), \"`insertRule` accepts only strings\");\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            var sheet = this.getSheet();\n            if (typeof index !== \"number\") {\n                index = sheet.cssRules.length;\n            }\n            // this weirdness for perf, and chrome's weird bug\n            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                return -1;\n            }\n        } else {\n            var insertionPoint = this._tags[index];\n            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));\n        }\n        return this._rulesCount++;\n    };\n    _proto.replaceRule = function replaceRule(index, rule) {\n        if (this._optimizeForSpeed || \"object\" === \"undefined\") {\n            var sheet =  true ? this.getSheet() : 0;\n            if (!rule.trim()) {\n                rule = this._deletedRulePlaceholder;\n            }\n            if (!sheet.cssRules[index]) {\n                // @TBD Should we throw an error?\n                return index;\n            }\n            sheet.deleteRule(index);\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                // In order to preserve the indices we insert a deleteRulePlaceholder\n                sheet.insertRule(this._deletedRulePlaceholder, index);\n            }\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"old rule at index `\" + index + \"` not found\");\n            tag.textContent = rule;\n        }\n        return index;\n    };\n    _proto.deleteRule = function deleteRule(index) {\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            this.replaceRule(index, \"\");\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"rule at index `\" + index + \"` not found\");\n            tag.parentNode.removeChild(tag);\n            this._tags[index] = null;\n        }\n    };\n    _proto.flush = function flush() {\n        this._injected = false;\n        this._rulesCount = 0;\n        if (true) {\n            this._tags.forEach(function(tag) {\n                return tag && tag.parentNode.removeChild(tag);\n            });\n            this._tags = [];\n        } else {}\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        if (false) {}\n        return this._tags.reduce(function(rules, tag) {\n            if (tag) {\n                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {\n                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;\n                }));\n            } else {\n                rules.push(null);\n            }\n            return rules;\n        }, []);\n    };\n    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {\n        if (cssString) {\n            invariant$1(isString(cssString), \"makeStyleTag accepts only strings as second parameter\");\n        }\n        var tag = document.createElement(\"style\");\n        if (this._nonce) tag.setAttribute(\"nonce\", this._nonce);\n        tag.type = \"text/css\";\n        tag.setAttribute(\"data-\" + name, \"\");\n        if (cssString) {\n            tag.appendChild(document.createTextNode(cssString));\n        }\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        if (relativeToTag) {\n            head.insertBefore(tag, relativeToTag);\n        } else {\n            head.appendChild(tag);\n        }\n        return tag;\n    };\n    _createClass(StyleSheet, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this._rulesCount;\n            }\n        }\n    ]);\n    return StyleSheet;\n}();\nfunction invariant$1(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheet: \" + message + \".\");\n    }\n}\nfunction hash(str) {\n    var _$hash = 5381, i = str.length;\n    while(i){\n        _$hash = _$hash * 33 ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;\n}\nvar stringHash = hash;\nvar sanitize = function(rule) {\n    return rule.replace(/\\/style/gi, \"\\\\/style\");\n};\nvar cache = {};\n/**\n * computeId\n *\n * Compute and memoize a jsx id from a basedId and optionally props.\n */ function computeId(baseId, props) {\n    if (!props) {\n        return \"jsx-\" + baseId;\n    }\n    var propsToString = String(props);\n    var key = baseId + propsToString;\n    if (!cache[key]) {\n        cache[key] = \"jsx-\" + stringHash(baseId + \"-\" + propsToString);\n    }\n    return cache[key];\n}\n/**\n * computeSelector\n *\n * Compute and memoize dynamic selectors.\n */ function computeSelector(id, css) {\n    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;\n    // Sanitize SSR-ed CSS.\n    // Client side code doesn't need to be sanitized since we use\n    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).\n    if (false) {}\n    var idcss = id + css;\n    if (!cache[idcss]) {\n        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);\n    }\n    return cache[idcss];\n}\nfunction mapRulesToStyle(cssRules, options) {\n    if (options === void 0) options = {};\n    return cssRules.map(function(args) {\n        var id = args[0];\n        var css = args[1];\n        return /*#__PURE__*/ React__default[\"default\"].createElement(\"style\", {\n            id: \"__\" + id,\n            // Avoid warnings upon render with a key\n            key: \"__\" + id,\n            nonce: options.nonce ? options.nonce : undefined,\n            dangerouslySetInnerHTML: {\n                __html: css\n            }\n        });\n    });\n}\nvar StyleSheetRegistry = /*#__PURE__*/ function() {\n    function StyleSheetRegistry(param) {\n        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;\n        this._sheet = styleSheet || new StyleSheet({\n            name: \"styled-jsx\",\n            optimizeForSpeed: optimizeForSpeed\n        });\n        this._sheet.inject();\n        if (styleSheet && typeof optimizeForSpeed === \"boolean\") {\n            this._sheet.setOptimizeForSpeed(optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    }\n    var _proto = StyleSheetRegistry.prototype;\n    _proto.add = function add(props) {\n        var _this = this;\n        if (undefined === this._optimizeForSpeed) {\n            this._optimizeForSpeed = Array.isArray(props.children);\n            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        if ( true && !this._fromServer) {\n            this._fromServer = this.selectFromServer();\n            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {\n                acc[tagName] = 0;\n                return acc;\n            }, {});\n        }\n        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;\n        // Deduping: just increase the instances count.\n        if (styleId in this._instancesCounts) {\n            this._instancesCounts[styleId] += 1;\n            return;\n        }\n        var indices = rules.map(function(rule) {\n            return _this._sheet.insertRule(rule);\n        }) // Filter out invalid rules\n        .filter(function(index) {\n            return index !== -1;\n        });\n        this._indices[styleId] = indices;\n        this._instancesCounts[styleId] = 1;\n    };\n    _proto.remove = function remove(props) {\n        var _this = this;\n        var styleId = this.getIdAndRules(props).styleId;\n        invariant(styleId in this._instancesCounts, \"styleId: `\" + styleId + \"` not found\");\n        this._instancesCounts[styleId] -= 1;\n        if (this._instancesCounts[styleId] < 1) {\n            var tagFromServer = this._fromServer && this._fromServer[styleId];\n            if (tagFromServer) {\n                tagFromServer.parentNode.removeChild(tagFromServer);\n                delete this._fromServer[styleId];\n            } else {\n                this._indices[styleId].forEach(function(index) {\n                    return _this._sheet.deleteRule(index);\n                });\n                delete this._indices[styleId];\n            }\n            delete this._instancesCounts[styleId];\n        }\n    };\n    _proto.update = function update(props, nextProps) {\n        this.add(nextProps);\n        this.remove(props);\n    };\n    _proto.flush = function flush() {\n        this._sheet.flush();\n        this._sheet.inject();\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {\n            return [\n                styleId,\n                _this._fromServer[styleId]\n            ];\n        }) : [];\n        var cssRules = this._sheet.cssRules();\n        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {\n            return [\n                styleId,\n                _this._indices[styleId].map(function(index) {\n                    return cssRules[index].cssText;\n                }).join(_this._optimizeForSpeed ? \"\" : \"\\n\")\n            ];\n        }) // filter out empty rules\n        .filter(function(rule) {\n            return Boolean(rule[1]);\n        }));\n    };\n    _proto.styles = function styles(options) {\n        return mapRulesToStyle(this.cssRules(), options);\n    };\n    _proto.getIdAndRules = function getIdAndRules(props) {\n        var css = props.children, dynamic = props.dynamic, id = props.id;\n        if (dynamic) {\n            var styleId = computeId(id, dynamic);\n            return {\n                styleId: styleId,\n                rules: Array.isArray(css) ? css.map(function(rule) {\n                    return computeSelector(styleId, rule);\n                }) : [\n                    computeSelector(styleId, css)\n                ]\n            };\n        }\n        return {\n            styleId: computeId(id),\n            rules: Array.isArray(css) ? css : [\n                css\n            ]\n        };\n    };\n    /**\n   * selectFromServer\n   *\n   * Collects style tags from the document with id __jsx-XXX\n   */ _proto.selectFromServer = function selectFromServer() {\n        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^=\"__jsx-\"]'));\n        return elements.reduce(function(acc, element) {\n            var id = element.id.slice(2);\n            acc[id] = element;\n            return acc;\n        }, {});\n    };\n    return StyleSheetRegistry;\n}();\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheetRegistry: \" + message + \".\");\n    }\n}\nvar StyleSheetContext = /*#__PURE__*/ React.createContext(null);\nStyleSheetContext.displayName = \"StyleSheetContext\";\nfunction createStyleRegistry() {\n    return new StyleSheetRegistry();\n}\nfunction StyleRegistry(param) {\n    _s();\n    var configuredRegistry = param.registry, children = param.children;\n    var rootRegistry = React.useContext(StyleSheetContext);\n    var ref = React.useState({\n        \"StyleRegistry.useState[ref]\": function() {\n            return rootRegistry || configuredRegistry || createStyleRegistry();\n        }\n    }[\"StyleRegistry.useState[ref]\"]), registry = ref[0];\n    return /*#__PURE__*/ React__default[\"default\"].createElement(StyleSheetContext.Provider, {\n        value: registry\n    }, children);\n}\n_s(StyleRegistry, \"F6PIZFsaWgcE6rBNmd+Zkq3zRoY=\");\n_c1 = StyleRegistry;\nfunction useStyleRegistry() {\n    _s1();\n    return React.useContext(StyleSheetContext);\n}\n_s1(useStyleRegistry, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.\n// https://github.com/reactwg/react-18/discussions/110\nvar useInsertionEffect = React__default[\"default\"].useInsertionEffect || React__default[\"default\"].useLayoutEffect;\nvar defaultRegistry =  true ? createStyleRegistry() : 0;\nfunction JSXStyle(props) {\n    _s2();\n    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();\n    // If `registry` does not exist, we do nothing here.\n    if (!registry) {\n        return null;\n    }\n    if (false) {}\n    useInsertionEffect({\n        \"JSXStyle.useInsertionEffect\": function() {\n            registry.add(props);\n            return ({\n                \"JSXStyle.useInsertionEffect\": function() {\n                    registry.remove(props);\n                }\n            })[\"JSXStyle.useInsertionEffect\"];\n        // props.children can be string[], will be striped since id is identical\n        }\n    }[\"JSXStyle.useInsertionEffect\"], [\n        props.id,\n        String(props.dynamic)\n    ]);\n    return null;\n}\n_s2(JSXStyle, \"48Sqj1BUqkshsPdz6NEWXDn8pF4=\", false, function() {\n    return [\n        useStyleRegistry,\n        useInsertionEffect\n    ];\n});\n_c2 = JSXStyle;\nJSXStyle.dynamic = function(info) {\n    return info.map(function(tagInfo) {\n        var baseId = tagInfo[0];\n        var props = tagInfo[1];\n        return computeId(baseId, props);\n    }).join(\" \");\n};\nexports.StyleRegistry = StyleRegistry;\nexports.createStyleRegistry = createStyleRegistry;\nexports.style = JSXStyle;\nexports.useStyleRegistry = useStyleRegistry;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"React__default\");\n$RefreshReg$(_c1, \"StyleRegistry\");\n$RefreshReg$(_c2, \"JSXStyle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/styled-jsx/style.js":
/*!******************************************!*\
  !*** ./node_modules/styled-jsx/style.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = __webpack_require__(/*! ./dist/index */ \"(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js\").style;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdHlsZWQtanN4L3N0eWxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsbUlBQThDIiwic291cmNlcyI6WyIvYXBwL25vZGVfbW9kdWxlcy9zdHlsZWQtanN4L3N0eWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2luZGV4Jykuc3R5bGVcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSIsInN0eWxlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/styled-jsx/style.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/actionButton.js":
/*!***************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/actionButton.js ***!
  \***************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActionButton: () => (/* binding */ ActionButton),\n/* harmony export */   ActionButtonGroup: () => (/* binding */ ActionButtonGroup),\n/* harmony export */   \"default\": () => (/* binding */ ActionButtonPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-browser)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_collected_dataset_customized_Action_CalibratePoints_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../components/collected-dataset-customized/Action/CalibratePoints.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\");\n/* harmony import */ var _components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../components/collected-dataset-customized/Action/countSave.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx\");\n/* harmony import */ var _components_collected_dataset_customized_Helper_savefile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ \"(pages-dir-browser)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _adminSettings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./adminSettings */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n// Add deep comparison utility\nconst isEqual = (obj1, obj2)=>{\n    if (obj1 === obj2) return true;\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n    if (obj1 === null || obj2 === null) return false;\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) return false;\n    return keys1.every((key)=>keys2.includes(key) && isEqual(obj1[key], obj2[key]));\n};\n// Create a basic ActionButton component with optimization\nconst ActionButton = (param)=>{\n    let { text, abbreviatedText, onClick, customClass = '', disabled = false, active = false } = param;\n    _s();\n    const [isAbbreviated, setIsAbbreviated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { settings } = (0,_adminSettings__WEBPACK_IMPORTED_MODULE_7__.useAdminSettings)();\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('default');\n    const [isCapturing, setIsCapturing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [captureCounter, setCaptureCounter1] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [processStatus, setProcessStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    // Memoize button props to prevent unnecessary re-renders\n    const buttonProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ActionButton.useMemo[buttonProps]\": ()=>({\n                className: \"action-button \".concat(customClass, \" \").concat(isAbbreviated ? 'abbreviated' : '', \" \").concat(active ? 'active' : ''),\n                onClick,\n                disabled,\n                title: text\n            })\n    }[\"ActionButton.useMemo[buttonProps]\"], [\n        customClass,\n        isAbbreviated,\n        active,\n        onClick,\n        disabled,\n        text\n    ]);\n    // Check window size and set abbreviated mode with debounce\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButton.useEffect\": ()=>{\n            if (false) {}\n            let timeoutId;\n            const handleResize = {\n                \"ActionButton.useEffect.handleResize\": ()=>{\n                    clearTimeout(timeoutId);\n                    timeoutId = setTimeout({\n                        \"ActionButton.useEffect.handleResize\": ()=>{\n                            const width = window.innerWidth;\n                            setIsAbbreviated(width < 768);\n                        }\n                    }[\"ActionButton.useEffect.handleResize\"], 100);\n                }\n            }[\"ActionButton.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            handleResize(); // Initial call\n            return ({\n                \"ActionButton.useEffect\": ()=>{\n                    window.removeEventListener('resize', handleResize);\n                    clearTimeout(timeoutId);\n                }\n            })[\"ActionButton.useEffect\"];\n        }\n    }[\"ActionButton.useEffect\"], []);\n    // Add effect to listen for user ID changes with optimization\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButton.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"ActionButton.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        const newUserId = event.detail.userId;\n                        if (newUserId !== currentUserId) {\n                            setCurrentUserId(newUserId);\n                        }\n                    }\n                }\n            }[\"ActionButton.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"ActionButton.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"ActionButton.useEffect\"];\n        }\n    }[\"ActionButton.useEffect\"], [\n        currentUserId\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        ...buttonProps,\n        children: [\n            isAbbreviated ? abbreviatedText : text,\n            processStatus && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"process-status\",\n                children: processStatus\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                lineNumber: 91,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n        lineNumber: 88,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ActionButton, \"Nkz1GO/Uf3mvhA1uh+EhQBsi9aE=\", false, function() {\n    return [\n        _adminSettings__WEBPACK_IMPORTED_MODULE_7__.useAdminSettings\n    ];\n});\n_c = ActionButton;\n// Create the ActionButtonGroup component with client-side only rendering and optimization\nconst ActionButtonGroupInner = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(_s1((param, ref)=>{\n    let { triggerCameraAccess, isCompactMode, onActionClick } = param;\n    _s1();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    const { settings, updateSettings } = (0,_adminSettings__WEBPACK_IMPORTED_MODULE_7__.useAdminSettings)(ref);\n    // State for button actions\n    const [randomTimes, setRandomTimes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [delaySeconds, setDelaySeconds] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(3);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [processStatus, setProcessStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [countdownValue, setCountdownValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [currentDot, setCurrentDot] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [calibrationPoints, setCalibrationPoints] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [remainingCaptures, setRemainingCaptures] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [showCanvas, setShowCanvas] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Track the capture count\n    const [calibrationHandler, setCalibrationHandler] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [captureCount, setCaptureCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [isCapturing, setIsCapturing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Toggle states\n    const [showHeadPose, setShowHeadPose] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBoundingBox, setShowBoundingBox] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showMask, setShowMask] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showParameters, setShowParameters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isCameraActive, setIsCameraActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showPermissionPopup, setShowPermissionPopup] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('default');\n    // Add cache for settings\n    const settingsCache = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map());\n    const lastSettingsUpdate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map());\n    // Global canvas manager instance - initialize only once\n    const canvasManager = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ActionButtonGroupInner.useMemo[canvasManager]\": ()=>new CanvasManager()\n    }[\"ActionButtonGroupInner.useMemo[canvasManager]\"], []);\n    // Replace the complex canvas functions with simplified versions\n    const getMainCanvas = ()=>{\n        return canvasManager.getCanvas() || canvasManager.createCanvas();\n    };\n    const ensureCanvasExists = ()=>{\n        return canvasManager.createCanvas();\n    };\n    const restoreCanvasToContainer = (canvas)=>{\n        canvasManager.exitFullscreen();\n    };\n    const cleanupCanvas = ()=>{\n        canvasManager.destroy();\n    };\n    const clearCanvas = ()=>{\n        canvasManager.clear();\n    };\n    // Utility function to easily manage canvas operations\n    const canvasUtils = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>({\n                // Get or create canvas\n                getCanvas: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>canvasManager.getCanvas() || canvasManager.createCanvas()\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Enter fullscreen mode\n                enterFullscreen: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>{\n                        canvasManager.enterFullscreen();\n                        return canvasManager.getCanvas();\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Exit fullscreen mode\n                exitFullscreen: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>{\n                        canvasManager.exitFullscreen();\n                        return canvasManager.getCanvas();\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Clear canvas\n                clear: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>{\n                        canvasManager.clear();\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Draw dot at position\n                drawDot: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": function(x, y) {\n                        let radius = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 12;\n                        const canvas = canvasManager.getCanvas();\n                        if (!canvas) return false;\n                        const ctx = canvas.getContext('2d');\n                        (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, x, y, radius, false);\n                        return true;\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Get canvas dimensions\n                getDimensions: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>{\n                        const canvas = canvasManager.getCanvas();\n                        if (!canvas) return {\n                            width: 0,\n                            height: 0\n                        };\n                        return {\n                            width: canvas.width,\n                            height: canvas.height\n                        };\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Check if canvas is in fullscreen\n                isFullscreen: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>canvasManager.isInFullscreen()\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Update canvas size to match container\n                resizeToContainer: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": (container)=>{\n                        const canvas = canvasManager.getCanvas();\n                        if (!canvas || !container) return false;\n                        const rect = container.getBoundingClientRect();\n                        canvas.width = rect.width || container.clientWidth || 800;\n                        canvas.height = rect.height || container.clientHeight || 600;\n                        // Clear and redraw white background\n                        const ctx = canvas.getContext('2d');\n                        ctx.fillStyle = 'white';\n                        ctx.fillRect(0, 0, canvas.width, canvas.height);\n                        return true;\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"]\n            })\n    }[\"ActionButtonGroupInner.useMemo[canvasUtils]\"], []);\n    // Make canvas utilities globally available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (true) {\n                window.canvasUtils = canvasUtils;\n                window.canvasManager = canvasManager;\n            }\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    if (true) {\n                        delete window.canvasUtils;\n                        delete window.canvasManager;\n                    }\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        canvasUtils,\n        canvasManager\n    ]);\n    // Optimize settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (settings && currentUserId && settings[currentUserId]) {\n                const userSettings = settings[currentUserId];\n                const cachedSettings = settingsCache.current.get(currentUserId);\n                if (!isEqual(cachedSettings, userSettings)) {\n                    setRandomTimes(Number(userSettings.times_set_random) || 1);\n                    setDelaySeconds(Number(userSettings.delay_set_random) || 3);\n                    settingsCache.current.set(currentUserId, userSettings);\n                    lastSettingsUpdate.current.set(currentUserId, Date.now());\n                }\n            }\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        settings,\n        currentUserId\n    ]);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"ActionButtonGroupInner.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        // Update settings for new user\n                        if (settings && settings[newUserId]) {\n                            const userSettings = settings[newUserId];\n                            setRandomTimes(Number(userSettings.times_set_random) || 1);\n                            setDelaySeconds(Number(userSettings.delay_set_random) || 3);\n                        }\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        settings\n    ]);\n    // Listen for settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"ActionButtonGroupInner.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail && event.detail.type === 'captureSettings') {\n                        const { userId, times_set_random, delay_set_random } = event.detail;\n                        if (userId === currentUserId) {\n                            if (times_set_random !== undefined) {\n                                const newTimes = Number(times_set_random) || 1;\n                                setRandomTimes(newTimes);\n                            }\n                            if (delay_set_random !== undefined) {\n                                const newDelay = Number(delay_set_random) || 3;\n                                setDelaySeconds(newDelay);\n                            }\n                        }\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate);\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        currentUserId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            // Make functions globally accessible as a fallback\n            if (true) {\n                window.actionButtonFunctions = {\n                    handleRandomDot,\n                    handleSetRandom,\n                    handleSetCalibrate,\n                    handleClearAll\n                };\n            // console.log('Action button functions exposed to window.actionButtonFunctions');\n            }\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    if (true) {\n                        delete window.actionButtonFunctions;\n                    }\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            // Only initialize if canvas doesn't exist\n            if (!document.querySelector('#tracking-canvas')) {\n                const canvas = getMainCanvas();\n                console.log('Canvas initialized:', canvas ? 'success' : 'failed');\n            }\n            // Cleanup function\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    // Don't remove canvas on cleanup to prevent recreation issues\n                    console.log('ActionButton cleanup - canvas preserved');\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (false) {}\n            // Function to get control values from TopBar\n            const updateControlValues = {\n                \"ActionButtonGroupInner.useEffect.updateControlValues\": ()=>{\n                    // Get the time input element\n                    const timeInput = document.querySelector('.control-input-field[data-control=\"time\"]');\n                    if (timeInput) {\n                        const timeValue = parseInt(timeInput.value, 10);\n                        if (!isNaN(timeValue) && timeValue > 0) {\n                            console.log('Updating randomTimes to:', timeValue);\n                            setRandomTimes(timeValue);\n                        }\n                    }\n                    // Get the delay input element\n                    const delayInput = document.querySelector('.control-input-field[data-control=\"delay\"]');\n                    if (delayInput) {\n                        const delayValue = parseInt(delayInput.value, 10);\n                        if (!isNaN(delayValue) && delayValue > 0) {\n                            console.log('Updating delaySeconds to:', delayValue);\n                            setDelaySeconds(delayValue);\n                        }\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.updateControlValues\"];\n            // Add event listeners to the control inputs\n            const timeInput = document.querySelector('.control-input-field[data-control=\"time\"]');\n            const delayInput = document.querySelector('.control-input-field[data-control=\"delay\"]');\n            if (timeInput) {\n                timeInput.addEventListener('change', updateControlValues);\n                timeInput.addEventListener('input', updateControlValues); // Also listen for input events\n            }\n            if (delayInput) {\n                delayInput.addEventListener('change', updateControlValues);\n                delayInput.addEventListener('input', updateControlValues); // Also listen for input events\n            }\n            // Initial update\n            updateControlValues();\n            // Cleanup event listeners\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    if (timeInput) {\n                        timeInput.removeEventListener('change', updateControlValues);\n                        timeInput.removeEventListener('input', updateControlValues);\n                    }\n                    if (delayInput) {\n                        delayInput.removeEventListener('change', updateControlValues);\n                        delayInput.removeEventListener('input', updateControlValues);\n                    }\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    // Initialize canvas on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            // Canvas is now managed by CanvasManager\n            const canvas = getMainCanvas();\n            console.log('Canvas initialized:', canvas ? 'success' : 'failed');\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    // Cleanup is handled by CanvasManager\n                    console.log('ActionButton cleanup - canvas preserved');\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    // Canvas Manager - Simplified and centralized\n    class CanvasManager {\n        // Create or get canvas with automatic sizing\n        createCanvas() {\n            let container = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n            // Try to find existing canvas first\n            let canvas = document.querySelector('#tracking-canvas');\n            if (!canvas) {\n                canvas = document.createElement('canvas');\n                canvas.className = 'tracking-canvas';\n                canvas.id = 'tracking-canvas';\n            }\n            // Determine container\n            const targetContainer = container || document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n            // Set initial dimensions based on container\n            this.updateCanvasSize(canvas, targetContainer);\n            // Initialize with white background\n            const ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Add to container if not already there\n            if (!canvas.parentNode) {\n                targetContainer.appendChild(canvas);\n            }\n            // Store reference\n            this.canvas = canvas;\n            window.whiteScreenCanvas = canvas;\n            // Set up responsive behavior\n            this.setupResponsiveCanvas(canvas, targetContainer);\n            console.log(\"Canvas created/updated: \".concat(canvas.width, \"x\").concat(canvas.height));\n            return canvas;\n        }\n        // Update canvas size to match container\n        updateCanvasSize(canvas, container) {\n            if (!canvas || !container) return;\n            const rect = container.getBoundingClientRect();\n            const width = rect.width || container.clientWidth || 800;\n            const height = rect.height || container.clientHeight || 600;\n            canvas.width = width;\n            canvas.height = height;\n            // Update CSS to match\n            canvas.style.width = '100%';\n            canvas.style.height = '100%';\n            canvas.style.display = 'block';\n            canvas.style.backgroundColor = 'white';\n        }\n        // Set up responsive canvas that adapts to container size\n        setupResponsiveCanvas(canvas, container) {\n            if (!canvas || !container) return;\n            // Remove existing resize observer\n            if (this.resizeObserver) {\n                this.resizeObserver.disconnect();\n            }\n            // Create new resize observer\n            this.resizeObserver = new ResizeObserver((entries)=>{\n                for (const entry of entries){\n                    if (entry.target === container) {\n                        this.updateCanvasSize(canvas, container);\n                        // Redraw white background after resize\n                        const ctx = canvas.getContext('2d');\n                        ctx.fillStyle = 'white';\n                        ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    }\n                }\n            });\n            // Observe container for size changes\n            this.resizeObserver.observe(container);\n            // Also listen for window resize as fallback\n            const handleWindowResize = ()=>{\n                this.updateCanvasSize(canvas, container);\n                const ctx = canvas.getContext('2d');\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            };\n            window.addEventListener('resize', handleWindowResize);\n            canvas._windowResizeHandler = handleWindowResize;\n        }\n        // Switch to fullscreen mode\n        enterFullscreen() {\n            if (!this.canvas) {\n                this.canvas = this.createCanvas();\n            }\n            // Save original state\n            this.originalState = {\n                parent: this.canvas.parentElement,\n                position: this.canvas.style.position,\n                top: this.canvas.style.top,\n                left: this.canvas.style.left,\n                width: this.canvas.style.width,\n                height: this.canvas.style.height,\n                zIndex: this.canvas.style.zIndex\n            };\n            // Move to body and make fullscreen\n            document.body.appendChild(this.canvas);\n            // Set fullscreen styles\n            this.canvas.style.cssText = \"\\n        position: fixed;\\n        top: 0;\\n        left: 0;\\n        width: 100vw;\\n        height: 100vh;\\n        z-index: 99999;\\n        background-color: white;\\n        border: none;\\n        display: block;\\n        opacity: 1;\\n        pointer-events: auto;\\n        margin: 0;\\n        padding: 0;\\n        box-sizing: border-box;\\n      \";\n            // Set canvas dimensions to window size\n            this.canvas.width = window.innerWidth;\n            this.canvas.height = window.innerHeight;\n            // Clear with white background\n            const ctx = this.canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            // Hide UI elements\n            this.hideUIElements();\n            this.isFullscreen = true;\n            console.log('Canvas entered fullscreen mode');\n        }\n        // Exit fullscreen mode\n        exitFullscreen() {\n            if (!this.canvas || !this.originalState) return;\n            // Show UI elements\n            this.showUIElements();\n            // Find appropriate container\n            const container = document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n            // Move canvas back to container\n            container.appendChild(this.canvas);\n            // Restore original styles\n            this.canvas.style.position = 'relative';\n            this.canvas.style.top = '';\n            this.canvas.style.left = '';\n            this.canvas.style.width = '100%';\n            this.canvas.style.height = '100%';\n            this.canvas.style.zIndex = '';\n            this.canvas.style.backgroundColor = 'white';\n            // Update size to match container\n            this.updateCanvasSize(this.canvas, container);\n            // Clear with white background\n            const ctx = this.canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            // Clear original state\n            this.originalState = null;\n            this.isFullscreen = false;\n            console.log('Canvas exited fullscreen mode');\n        }\n        // Hide UI elements during fullscreen\n        hideUIElements() {\n            const elementsToHide = [\n                '.topbar',\n                '.canvas-container',\n                '.main-content',\n                '.metrics-panel',\n                '.display-metrics',\n                'nav',\n                'header',\n                '.button-groups',\n                '.control-buttons'\n            ];\n            elementsToHide.forEach((selector)=>{\n                const elements = document.querySelectorAll(selector);\n                elements.forEach((el)=>{\n                    el.style.display = 'none';\n                    el.setAttribute('data-hidden-by-canvas', 'true');\n                });\n            });\n        }\n        // Show UI elements after fullscreen\n        showUIElements() {\n            const hiddenElements = document.querySelectorAll('[data-hidden-by-canvas=\"true\"]');\n            hiddenElements.forEach((el)=>{\n                el.style.display = '';\n                el.removeAttribute('data-hidden-by-canvas');\n            });\n        }\n        // Clear canvas content\n        clear() {\n            if (!this.canvas) return;\n            const ctx = this.canvas.getContext('2d');\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        // Cleanup\n        destroy() {\n            if (this.resizeObserver) {\n                this.resizeObserver.disconnect();\n            }\n            if (this.canvas && this.canvas._windowResizeHandler) {\n                window.removeEventListener('resize', this.canvas._windowResizeHandler);\n            }\n            if (this.canvas && this.canvas.parentNode) {\n                this.canvas.parentNode.removeChild(this.canvas);\n            }\n            if (window.whiteScreenCanvas === this.canvas) {\n                delete window.whiteScreenCanvas;\n            }\n            this.canvas = null;\n            this.originalState = null;\n            this.isFullscreen = false;\n        }\n        // Get current canvas\n        getCanvas() {\n            return this.canvas;\n        }\n        // Check if canvas is in fullscreen mode\n        isInFullscreen() {\n            return this.isFullscreen;\n        }\n        constructor(){\n            this.canvas = null;\n            this.originalState = null;\n            this.resizeObserver = null;\n            this.isFullscreen = false;\n        }\n    }\n    // Modified handleDotProcess function with improved dot and countdown alignment\n    // Complete handleDotProcess function with proper canvas management\n    const handleDotProcess = async (options)=>{\n        const { position, onStatusUpdate, toggleTopBar, triggerCameraAccess, setIsCapturing, captureCount, setCaptureCount, useRandomPosition = false, postCountdownDelay = 500 } = options;\n        let canvas = null;\n        let keepDotVisibleInterval = null;\n        let countdownElement = null;\n        try {\n            // Hide the TopBar before showing the dot\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(false);\n            } else if ( true && window.toggleTopBar) {\n                window.toggleTopBar(false);\n            }\n            // Set capturing state\n            setIsCapturing(true);\n            // Update status\n            onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                processStatus: useRandomPosition ? 'Generating random dot...' : 'Starting dot process...',\n                isCapturing: true\n            });\n            // Wait for UI updates to take effect\n            await new Promise((resolve)=>setTimeout(resolve, 200));\n            // Use ensureCanvasExists to get or create canvas\n            canvas = ensureCanvasExists();\n            if (!canvas) {\n                throw new Error(\"Failed to create or find canvas\");\n            }\n            // Canvas is already set to fullscreen by ensureCanvasExists\n            const canvasWidth = canvas.width;\n            const canvasHeight = canvas.height;\n            // Get context and clear canvas with white background\n            const ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n            // Get position for the dot - either use provided position or generate random one\n            const dotPosition = useRandomPosition ? (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.getRandomPosition)(canvas, 20) : position;\n            if (!dotPosition || typeof dotPosition.x !== 'number' || typeof dotPosition.y !== 'number') {\n                throw new Error(\"Invalid dot position\");\n            }\n            // Draw the dot\n            const dotRadius = 12;\n            (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            // Create a redraw interval to ensure dot stays visible\n            keepDotVisibleInterval = setInterval(()=>{\n                (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            }, 50); // More frequent updates for reliability\n            // Remove any existing countdown elements\n            const existingCountdowns = document.querySelectorAll('.dot-countdown, .calibrate-countdown');\n            existingCountdowns.forEach((el)=>{\n                if (el.parentNode) el.parentNode.removeChild(el);\n            });\n            // Create a countdown element directly on top of the dot\n            countdownElement = document.createElement('div');\n            countdownElement.className = 'dot-countdown';\n            countdownElement.style.cssText = \"\\n        position: fixed;\\n        left: \".concat(dotPosition.x, \"px;\\n        top: \").concat(dotPosition.y, \"px;\\n        transform: translate(-50%, -50%);\\n        color: red;\\n        font-size: 36px;\\n        font-weight: bold;\\n        text-shadow: 0 0 10px white, 0 0 20px white;\\n        z-index: 10000;\\n        background-color: rgba(255, 255, 255, 0.8);\\n        border: 2px solid red;\\n        border-radius: 50%;\\n        width: 50px;\\n        height: 50px;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n      \");\n            document.body.appendChild(countdownElement);\n            // Manual countdown\n            for(let count = 3; count > 0; count--){\n                countdownElement.textContent = count;\n                onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                    processStatus: \"Countdown: \".concat(count),\n                    countdownValue: count,\n                    isCapturing: true\n                });\n                // Redraw the dot for reliability\n                (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n                await new Promise((resolve)=>setTimeout(resolve, 800));\n                // Additional redraw during countdown to ensure visibility\n                (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            }\n            // Show checkmark\n            countdownElement.textContent = \"✓\";\n            // Make sure dot is still visible\n            (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            // Remove countdown element after delay\n            setTimeout(()=>{\n                if (countdownElement && countdownElement.parentNode) {\n                    countdownElement.parentNode.removeChild(countdownElement);\n                }\n            }, 300);\n            // Wait after countdown completes\n            await new Promise((resolve)=>setTimeout(resolve, postCountdownDelay));\n            // Ensure the dot is still visible\n            (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            // Capture images at this point\n            const captureResult = await (0,_components_collected_dataset_customized_Helper_savefile__WEBPACK_IMPORTED_MODULE_5__.captureImagesAtPoint)({\n                point: dotPosition,\n                captureCount: captureCount,\n                canvasRef: {\n                    current: canvas\n                },\n                setCaptureCount: setCaptureCount,\n                showCapturePreview: _components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.showCapturePreview\n            });\n            // Update status\n            onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                processStatus: 'Capture completed',\n                isCapturing: false\n            });\n            return {\n                success: true,\n                position: dotPosition,\n                captureResult\n            };\n        } catch (error) {\n            console.error(\"Error in handleDotProcess:\", error);\n            onStatusUpdate === null || onStatusUpdate === void 0 ? void 0 : onStatusUpdate({\n                processStatus: \"Error: \".concat(error.message),\n                isCapturing: false\n            });\n            return {\n                success: false,\n                error: error.message\n            };\n        } finally{\n            // Clear redraw interval first\n            if (keepDotVisibleInterval) {\n                clearInterval(keepDotVisibleInterval);\n                keepDotVisibleInterval = null;\n            }\n            // Remove countdown element if it still exists\n            if (countdownElement && countdownElement.parentNode) {\n                countdownElement.parentNode.removeChild(countdownElement);\n            }\n            // Remove any remaining countdown elements\n            const remainingCountdowns = document.querySelectorAll('.dot-countdown, .calibrate-countdown');\n            remainingCountdowns.forEach((el)=>{\n                if (el.parentNode) el.parentNode.removeChild(el);\n            });\n            // Use restoreCanvasToContainer to properly restore canvas\n            if (canvas) {\n                restoreCanvasToContainer(canvas);\n            }\n            // Show TopBar again after a delay\n            setTimeout(()=>{\n                if (typeof toggleTopBar === 'function') {\n                    toggleTopBar(true);\n                } else if ( true && window.toggleTopBar) {\n                    window.toggleTopBar(true);\n                }\n            }, 1000);\n        }\n    };\n    const handleSetCalibrate = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Ensure canvas is initialized first\n            const canvas = getMainCanvas();\n            if (!canvas) {\n                throw new Error(\"Canvas not available\");\n            }\n            // Import and use SetCalibrateAction\n            const { default: SetCalibrateAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_components_collected-dataset-customized_Action_SetCalibrateAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/collected-dataset-customized/Action/SetCalibrateAction.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/SetCalibrateAction.jsx\"));\n            const setCalibrateAction = new SetCalibrateAction({\n                canvasRef: {\n                    current: canvas\n                },\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                setIsCapturing,\n                setProcessStatus,\n                setCurrentDot,\n                triggerCameraAccess,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                },\n                saveImageToServer: true,\n                setCaptureCounter,\n                captureCounter: captureCount\n            });\n            await setCalibrateAction.handleSetCalibrate();\n        } catch (error) {\n            console.error(\"Calibration error:\", error);\n            setProcessStatus(\"Calibration error: \".concat(error.message));\n            setIsCapturing(false);\n        }\n    };\n    const handleSetRandom = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Import and use SetRandomAction\n            const { default: SetRandomAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_components_collected-dataset-customized_Action_SetRandomAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/collected-dataset-customized/Action/SetRandomAction.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/SetRandomAction.jsx\"));\n            const setRandomAction = new SetRandomAction({\n                canvasRef,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                    if (status.remainingCaptures !== undefined) setRemainingCaptures(status.remainingCaptures);\n                },\n                setCaptureCounter,\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                captureCounter: captureCount,\n                triggerCameraAccess\n            });\n            await setRandomAction.handleAction();\n        } catch (error) {\n            console.error(\"Random sequence error:\", error);\n            setProcessStatus(\"Random sequence failed: \".concat(error.message));\n            setIsCapturing(false);\n        }\n    };\n    const handleRandomDot = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Import and use RandomDotAction\n            const { default: RandomDotAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_components_collected-dataset-customized_Action_RandomDotAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/collected-dataset-customized/Action/RandomDotAction.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/RandomDotAction.jsx\"));\n            const randomDotAction = new RandomDotAction({\n                canvasRef,\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                setIsCapturing,\n                setProcessStatus,\n                setCurrentDot,\n                triggerCameraAccess,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                },\n                saveImageToServer: true,\n                setCaptureCounter,\n                captureCounter: captureCount\n            });\n            await randomDotAction.handleRandomDot();\n        } catch (error) {\n            console.error('Random dot error:', error);\n            setProcessStatus(\"Error: \".concat(error.message));\n            setIsCapturing(false);\n        }\n    };\n    // Load calibration setup\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (false) {}\n            const setupCalibration = {\n                \"ActionButtonGroupInner.useEffect.setupCalibration\": async ()=>{\n                    try {\n                        const { default: CalibrateHandler } = await __webpack_require__.e(/*! import() */ \"_pages-dir-browser_components_collected-dataset-customized_Action_CalibrateHandler_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/collected-dataset-customized/Action/CalibrateHandler */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibrateHandler.js\"));\n                        const canvas = getMainCanvas();\n                        if (!canvas) {\n                            console.warn(\"Canvas not available during setupCalibration\");\n                            return;\n                        }\n                        if (canvas) {\n                            makeCanvasFullscreen(canvas);\n                        }\n                        // console.log('Canvas size:', canvas.width, canvas.height);\n                        const points = (0,_components_collected_dataset_customized_Action_CalibratePoints_jsx__WEBPACK_IMPORTED_MODULE_3__.generateCalibrationPoints)(canvas.width, canvas.height);\n                        // console.log('Generated calibration points:', points);\n                        setCalibrationPoints(points);\n                        const calibrateHandler = new CalibrateHandler({\n                            canvasRef: {\n                                current: canvas\n                            },\n                            calibrationPoints: points,\n                            toggleTopBar: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (show)=>onActionClick === null || onActionClick === void 0 ? void 0 : onActionClick('toggleTopBar', show)\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            setOutputText: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (status)=>{\n                                    setProcessStatus(status);\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            captureCounter: captureCount,\n                            setCaptureCounter: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (newCounter)=>{\n                                    if (typeof newCounter === 'function') {\n                                        setCaptureCount({\n                                            \"ActionButtonGroupInner.useEffect.setupCalibration\": (prev)=>newCounter(prev)\n                                        }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]);\n                                    } else {\n                                        setCaptureCount(newCounter);\n                                    }\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            captureFolder: 'eye_tracking_captures',\n                            onComplete: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": ()=>{\n                                    setIsCapturing(false);\n                                    setProcessStatus('Calibration completed');\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]\n                        });\n                        setCalibrationHandler({\n                            handleAction: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": async ()=>{\n                                    setIsCapturing(true);\n                                    setProcessStatus('Starting calibration...');\n                                    await calibrateHandler.startCalibration();\n                                    setIsCapturing(false);\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]\n                        });\n                        if (canvas) {\n                            restoreCanvasSize(canvas);\n                        }\n                    } catch (err) {\n                        console.error('Error initializing calibration:', err);\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"];\n            setupCalibration();\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        captureCount,\n        onActionClick\n    ]);\n    // Clear All Button - Reset everything\n    const handleClearAll = ()=>{\n        // Clear canvas content\n        const canvas = document.querySelector('#tracking-canvas');\n        if (canvas) {\n            const ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Restore canvas to container mode\n            restoreCanvasToContainer(canvas);\n        }\n        // Reset states\n        setProcessStatus('');\n        setRemainingCaptures(0);\n        setIsCapturing(false);\n        setCountdownValue(null);\n        setShowCanvas(true);\n        setCurrentDot(null);\n    };\n    // Toggle Head Pose visualization\n    const handleToggleHeadPose = ()=>{\n        const newHeadPoseState = !showHeadPose;\n        setShowHeadPose(newHeadPoseState);\n        setProcessStatus(\"Head pose visualization \".concat(newHeadPoseState ? 'enabled' : 'disabled'));\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('headPose');\n        }\n        // Update videoProcessor options directly if available\n        if ( true && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showHeadPose: newHeadPoseState\n            });\n        // console.log(`Updated backend head pose: ${newHeadPoseState}`);\n        }\n    };\n    // Toggle Bounding Box visualization\n    const handleToggleBoundingBox = ()=>{\n        const newBoundingBoxState = !showBoundingBox;\n        setShowBoundingBox(newBoundingBoxState);\n        setProcessStatus(\"Bounding box \".concat(newBoundingBoxState ? 'shown' : 'hidden'));\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('boundingBox');\n        }\n        // Update videoProcessor options directly if available\n        if ( true && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showBoundingBox: newBoundingBoxState\n            });\n        // console.log(`Updated backend bounding box: ${newBoundingBoxState}`);\n        }\n    };\n    // Toggle Mask visualization\n    const handleToggleMask = ()=>{\n        const newMaskState = !showMask;\n        setShowMask(newMaskState);\n        setProcessStatus(\"Mask \".concat(newMaskState ? 'shown' : 'hidden'));\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('mask');\n        }\n        // Update videoProcessor options directly if available\n        if ( true && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showMask: newMaskState\n            });\n        // console.log(`Updated backend mask: ${newMaskState}`);\n        }\n    };\n    // Toggle Parameters display\n    const handleToggleParameters = ()=>{\n        const newParametersState = !showParameters;\n        setShowParameters(newParametersState);\n        setProcessStatus(\"Parameters \".concat(newParametersState ? 'shown' : 'hidden'));\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('parameters');\n        }\n        // Update videoProcessor options directly if available\n        if ( true && window.videoProcessor) {\n            window.videoProcessor.updateOptions({\n                showParameters: newParametersState\n            });\n        // console.log(`Updated backend parameters: ${newParametersState}`);\n        }\n    };\n    // Toggle camera preview\n    const handleToggleCamera = ()=>{\n        const newCameraState = !isCameraActive;\n        setIsCameraActive(newCameraState);\n        // Call the parent handler with 'preview' action\n        if (onActionClick) {\n            onActionClick('preview', newCameraState); // Pass the new state\n        } else {\n            // Fallback to direct trigger if no action handler\n            setShowPermissionPopup(true);\n        }\n        // If turning on camera, ensure we apply current visualization settings\n        if (newCameraState && \"object\" !== 'undefined' && window.videoProcessor) {\n            // Wait a short moment to ensure the video element is ready\n            setTimeout(()=>{\n                if (window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        showHeadPose,\n                        showBoundingBox,\n                        showMask,\n                        showParameters\n                    });\n                }\n            }, 100);\n        }\n    };\n    // Camera permission handlers\n    const handlePermissionAccepted = ()=>{\n        setShowPermissionPopup(false);\n        if (triggerCameraAccess) {\n            triggerCameraAccess(true);\n        }\n    };\n    const handlePermissionDenied = ()=>{\n        setShowPermissionPopup(false);\n        setProcessStatus('Camera access denied');\n    };\n    // Add back button handler\n    const handleGoBack = ()=>{\n        router.push('/');\n    };\n    // Mobile layout - 2x5 grid\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            isCompactMode ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 gap-2 mb-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {}, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                    lineNumber: 1210,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                lineNumber: 1209,\n                columnNumber: 9\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 gap-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {}, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                    lineNumber: 1214,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                lineNumber: 1213,\n                columnNumber: 9\n            }, undefined),\n            showPermissionPopup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"camera-permission-popup\",\n                style: {\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    zIndex: 15\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"camera-permission-dialog\",\n                    style: {\n                        width: '400px',\n                        backgroundColor: 'white',\n                        borderRadius: '8px',\n                        padding: '20px',\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"camera-permission-title\",\n                            style: {\n                                margin: '0 0 15px',\n                                fontSize: '18px',\n                                fontWeight: 'bold'\n                            },\n                            children: \"Camera Access Required\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                            lineNumber: 1245,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"camera-permission-message\",\n                            style: {\n                                margin: '0 0 20px',\n                                fontSize: '14px',\n                                lineHeight: '1.4'\n                            },\n                            children: 'This application needs access to your camera to function properly. When prompted by your browser, please click \"Allow\" to grant camera access.'\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                            lineNumber: 1255,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"camera-permission-buttons\",\n                            style: {\n                                display: 'flex',\n                                justifyContent: 'flex-end',\n                                gap: '10px'\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handlePermissionDenied,\n                                    className: \"camera-btn\",\n                                    style: {\n                                        padding: '8px 16px',\n                                        backgroundColor: '#f0f0f0',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        cursor: 'pointer'\n                                    },\n                                    children: \"Cancel\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                                    lineNumber: 1273,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handlePermissionAccepted,\n                                    className: \"camera-btn\",\n                                    style: {\n                                        padding: '8px 16px',\n                                        backgroundColor: '#0066cc',\n                                        color: 'white',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        cursor: 'pointer'\n                                    },\n                                    children: \"Continue\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                                    lineNumber: 1286,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                            lineNumber: 1265,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                    lineNumber: 1235,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                lineNumber: 1220,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n        lineNumber: 1207,\n        columnNumber: 5\n    }, undefined);\n}, \"3m6WU+NWDgNRt++RkwBY6SLMuUQ=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_6__.useRouter,\n        _adminSettings__WEBPACK_IMPORTED_MODULE_7__.useAdminSettings\n    ];\n}));\n_c1 = ActionButtonGroupInner;\nconst ActionButtonGroup = next_dynamic__WEBPACK_IMPORTED_MODULE_2___default()(_c2 = ()=>Promise.resolve(/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButtonGroupInner, {\n            ...props,\n            ref: ref\n        }, void 0, false, {\n            fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n            lineNumber: 1308,\n            columnNumber: 30\n        }, undefined))), {\n    ssr: false\n});\n_c3 = ActionButtonGroup;\n// Create a client-only version of ActionButtonGroup\n// const ActionButtonGroup = dynamic(() => Promise.resolve(ActionButtonGroupInner), { ssr: false });\n// Add default export component\nfunction ActionButtonPage() {\n    return null; // This is a utility file, so we don't need to render anything\n}\n_c4 = ActionButtonPage;\n\nvar _c, _c1, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ActionButton\");\n$RefreshReg$(_c1, \"ActionButtonGroupInner\");\n$RefreshReg$(_c2, \"ActionButtonGroup$dynamic\");\n$RefreshReg$(_c3, \"ActionButtonGroup\");\n$RefreshReg$(_c4, \"ActionButtonPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/actionButton.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js":
/*!****************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/adminSettings.js ***!
  \****************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AdminSettings),\n/* harmony export */   useAdminSettings: () => (/* binding */ useAdminSettings)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\n// Add deep comparison utility\nconst isEqual = (obj1, obj2)=>{\n    if (obj1 === obj2) return true;\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n    if (obj1 === null || obj2 === null) return false;\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) return false;\n    return keys1.every((key)=>keys2.includes(key) && isEqual(obj1[key], obj2[key]));\n};\n// Add debounce utility\nconst debounce = (func, wait)=>{\n    let timeout;\n    return function executedFunction() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        const later = ()=>{\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n// Helper function to safely access localStorage\nconst getLocalStorage = (key)=>{\n    if (false) {}\n    try {\n        return localStorage.getItem(key);\n    } catch (error) {\n        console.warn('Error accessing localStorage:', error);\n        return null;\n    }\n};\n// Helper function to safely set localStorage\nconst setLocalStorage = (key, value)=>{\n    if (false) {}\n    try {\n        localStorage.setItem(key, value);\n    } catch (error) {\n        console.warn('Error setting localStorage:', error);\n    }\n};\nconst useAdminSettings = (ref)=>{\n    _s();\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        \"useAdminSettings.useState\": ()=>{\n            // Initialize from localStorage on mount, safely\n            return getLocalStorage('currentUserId');\n        }\n    }[\"useAdminSettings.useState\"]);\n    const [isTopBarUpdated, setIsTopBarUpdated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const initialized = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const pollingInterval = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [currentSettings, setCurrentSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const [lastUpdateTime, setLastUpdateTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    // Constants for timing\n    const MIN_UPDATE_INTERVAL = 2000; // 2 seconds minimum between updates\n    const CACHE_DURATION = 30000; // 30 seconds cache duration\n    const POLLING_INTERVAL = 5000; // 5 seconds polling interval\n    // Cache and state tracking\n    const settingsCache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const lastSettingsUpdate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const pendingUpdates = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const isUpdating = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const lastKnownSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    // Debug logging for settings changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            console.log('AdminSettings - Current Settings:', settings);\n            console.log('AdminSettings - Current User ID:', currentUserId);\n            console.log('AdminSettings - Is TopBar Updated:', isTopBarUpdated);\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings,\n        currentUserId,\n        isTopBarUpdated\n    ]);\n    // Helper: Fetch settings for a user from backend with enhanced caching\n    const fetchSettingsForUser = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAdminSettings.useCallback[fetchSettingsForUser]\": async (userId)=>{\n            if (!userId) return;\n            // Check cache first\n            const cachedSettings = settingsCache.current.get(userId);\n            const lastUpdate = lastSettingsUpdate.current.get(userId);\n            const now = Date.now();\n            // If we have cached settings and they're recent enough, use them\n            if (cachedSettings && lastUpdate && now - lastUpdate < CACHE_DURATION) {\n                console.log('[AdminSettings] Using cached settings for user:', userId);\n                return cachedSettings;\n            }\n            // If there's already a pending update, return the cached value\n            if (pendingUpdates.current.has(userId)) {\n                console.log('[AdminSettings] Pending update exists, using cached value');\n                return cachedSettings;\n            }\n            // If an update is in progress, return the cached value\n            if (isUpdating.current) {\n                console.log('[AdminSettings] Update in progress, using cached value');\n                return cachedSettings;\n            }\n            try {\n                isUpdating.current = true;\n                pendingUpdates.current.set(userId, true);\n                const response = await fetch(\"/api/data-center/settings/\".concat(userId), {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                    }\n                });\n                if (!response.ok) {\n                    const errorData = await response.json().catch({\n                        \"useAdminSettings.useCallback[fetchSettingsForUser]\": ()=>({})\n                    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"]);\n                    throw new Error(errorData.detail || 'Failed to fetch settings');\n                }\n                const result = await response.json();\n                const newSettings = result.data || {};\n                // Compare with last known settings\n                const lastKnown = lastKnownSettings.current.get(userId);\n                const hasChanged = !isEqual(lastKnown, newSettings);\n                if (hasChanged) {\n                    console.log('[AdminSettings] Settings changed, updating...');\n                    setSettings({\n                        \"useAdminSettings.useCallback[fetchSettingsForUser]\": (prev)=>({\n                                ...prev,\n                                [userId]: newSettings\n                            })\n                    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"]);\n                    setCurrentSettings(newSettings);\n                    // Update caches\n                    settingsCache.current.set(userId, newSettings);\n                    lastSettingsUpdate.current.set(userId, now);\n                    lastKnownSettings.current.set(userId, newSettings);\n                    // Update TopBar if ref provided\n                    if (ref && ref.current && ref.current.setCaptureSettings) {\n                        ref.current.setCaptureSettings(newSettings);\n                        setIsTopBarUpdated(true);\n                    }\n                } else {\n                    console.log('[AdminSettings] Settings unchanged, skipping update');\n                }\n                setError(null);\n                return newSettings;\n            } catch (error) {\n                console.error('[AdminSettings] Error fetching settings:', error);\n                setError(error.message);\n                return cachedSettings; // Return cached settings on error\n            } finally{\n                isUpdating.current = false;\n                pendingUpdates.current.delete(userId);\n            }\n        }\n    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"], [\n        ref\n    ]);\n    // Debounced version of fetchSettingsForUser\n    const debouncedFetchSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(debounce({\n        \"useAdminSettings.useCallback[debouncedFetchSettings]\": (userId)=>{\n            fetchSettingsForUser(userId);\n        }\n    }[\"useAdminSettings.useCallback[debouncedFetchSettings]\"], 1000), [\n        fetchSettingsForUser\n    ]);\n    // Polling for settings updates with value-based optimization\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (!currentUserId) return;\n            const fetchSettings = {\n                \"useAdminSettings.useEffect.fetchSettings\": async ()=>{\n                    const now = Date.now();\n                    if (now - lastUpdateTime < MIN_UPDATE_INTERVAL) {\n                        return;\n                    }\n                    try {\n                        await debouncedFetchSettings(currentUserId);\n                        setLastUpdateTime(now);\n                    } catch (error) {\n                        console.error('[AdminSettings] Polling error:', error);\n                    }\n                }\n            }[\"useAdminSettings.useEffect.fetchSettings\"];\n            // Initial fetch\n            fetchSettings();\n            // Set up polling with value-based interval\n            pollingInterval.current = setInterval(fetchSettings, POLLING_INTERVAL);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>{\n                    if (pollingInterval.current) {\n                        clearInterval(pollingInterval.current);\n                    }\n                }\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId,\n        lastUpdateTime,\n        debouncedFetchSettings\n    ]);\n    // Listen for userId changes (from index.js navigation)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"useAdminSettings.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.userId) {\n                        console.log('[handleUserIdChange] userId:', event.detail.userId);\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        setLocalStorage('currentUserId', newUserId);\n                        fetchSettingsForUser(newUserId);\n                    }\n                }\n            }[\"useAdminSettings.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>window.removeEventListener('userIdChange', handleUserIdChange)\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        ref\n    ]);\n    // Initial settings fetch on mount if we have a user ID\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (currentUserId && !initialized.current) {\n                fetchSettingsForUser(currentUserId);\n                initialized.current = true;\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId\n    ]);\n    // Effect to handle index.js update after TopBar is updated\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (isTopBarUpdated) {\n                const event = new CustomEvent('settingsUpdated', {\n                    detail: {\n                        type: 'settings',\n                        userId: currentUserId,\n                        settings: settings[currentUserId]\n                    }\n                });\n                window.dispatchEvent(event);\n                setIsTopBarUpdated(false);\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        isTopBarUpdated,\n        currentUserId,\n        settings\n    ]);\n    // Load settings from localStorage on mount (optional, fallback)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            try {\n                const savedSettings = getLocalStorage('adminSettings');\n                if (savedSettings) {\n                    const parsedSettings = JSON.parse(savedSettings);\n                    setSettings(parsedSettings);\n                }\n            } catch (error) {\n                console.warn('Error loading settings from localStorage:', error);\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], []);\n    // Save settings to localStorage when they change (optional)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (initialized.current) {\n                try {\n                    setLocalStorage('adminSettings', JSON.stringify(settings));\n                } catch (error) {\n                    console.warn('Error saving settings to localStorage:', error);\n                }\n            } else {\n                initialized.current = true;\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings\n    ]);\n    // Update settings when they change in the context\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (settings && currentUserId) {\n                console.log('[settings useEffect] currentUserId:', currentUserId); // Debug log\n                const userSettings = settings[currentUserId];\n                if (userSettings) {\n                    setCurrentSettings(userSettings);\n                // Optionally update UI elements if needed\n                }\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings,\n        currentUserId\n    ]);\n    // Listen for settings updates from admin page (captureSettingsUpdate event)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"useAdminSettings.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail && event.detail.type === 'captureSettings') {\n                        const { userId, times, delay } = event.detail;\n                        console.log('[handleSettingsUpdate] userId:', userId, 'currentUserId:', currentUserId); // Debug log\n                        if (userId === currentUserId) {\n                            const newSettings = {\n                                ...currentSettings,\n                                times: times !== undefined ? Number(times) : currentSettings.times,\n                                delay: delay !== undefined ? Number(delay) : currentSettings.delay\n                            };\n                            setCurrentSettings(newSettings);\n                            setSettings({\n                                \"useAdminSettings.useEffect.handleSettingsUpdate\": (prev)=>({\n                                        ...prev,\n                                        [userId]: newSettings\n                                    })\n                            }[\"useAdminSettings.useEffect.handleSettingsUpdate\"]);\n                            updateSettings(newSettings, userId);\n                        }\n                    }\n                }\n            }[\"useAdminSettings.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate)\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId,\n        currentSettings\n    ]);\n    // Update settings for a user with value-based optimization\n    const updateSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAdminSettings.useCallback[updateSettings]\": async (newSettings, userId)=>{\n            if (!userId) return;\n            const now = Date.now();\n            if (now - lastUpdateTime < MIN_UPDATE_INTERVAL) {\n                console.log('[updateSettings] Skipping update - too soon after last update');\n                return;\n            }\n            const updatedSettings = {\n                ...settings[userId],\n                ...newSettings\n            };\n            // Compare with last known settings\n            const lastKnown = lastKnownSettings.current.get(userId);\n            const hasChanged = !isEqual(lastKnown, updatedSettings);\n            if (!hasChanged) {\n                console.log('[updateSettings] Settings unchanged, skipping update');\n                return;\n            }\n            try {\n                isUpdating.current = true;\n                pendingUpdates.current.set(userId, true);\n                const response = await fetch(\"/api/data-center/settings/\".concat(userId), {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                    },\n                    body: JSON.stringify(updatedSettings)\n                });\n                if (!response.ok) {\n                    const errorData = await response.json().catch({\n                        \"useAdminSettings.useCallback[updateSettings]\": ()=>({})\n                    }[\"useAdminSettings.useCallback[updateSettings]\"]);\n                    throw new Error(errorData.detail || 'Failed to save settings');\n                }\n                const result = await response.json();\n                const finalSettings = result.data || updatedSettings;\n                // Update state and caches\n                setSettings({\n                    \"useAdminSettings.useCallback[updateSettings]\": (prev)=>({\n                            ...prev,\n                            [userId]: finalSettings\n                        })\n                }[\"useAdminSettings.useCallback[updateSettings]\"]);\n                setCurrentSettings(finalSettings);\n                settingsCache.current.set(userId, finalSettings);\n                lastSettingsUpdate.current.set(userId, now);\n                lastKnownSettings.current.set(userId, finalSettings);\n                setLastUpdateTime(now);\n                setError(null);\n            } catch (error) {\n                setError(error.message);\n            } finally{\n                isUpdating.current = false;\n                pendingUpdates.current.delete(userId);\n            }\n        }\n    }[\"useAdminSettings.useCallback[updateSettings]\"], [\n        settings,\n        lastUpdateTime\n    ]);\n    // Upload and update image for a user\n    const updateImage = async (userId, base64Image)=>{\n        console.log('[updateImage] userId:', userId); // Debug log\n        if (!userId || !base64Image) return;\n        try {\n            const response = await fetch(\"/api/data-center/image?user_id=\".concat(userId), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                },\n                body: JSON.stringify({\n                    image: base64Image\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json().catch(()=>({}));\n                throw new Error(errorData.detail || 'Failed to upload image');\n            }\n            // Optionally, fetch settings again to get updated image info\n            await fetchSettingsForUser(userId);\n            setError(null);\n            return true;\n        } catch (error) {\n            setError(error.message);\n            return false;\n        }\n    };\n    return {\n        settings,\n        currentSettings,\n        currentUserId,\n        error,\n        updateSettings: fetchSettingsForUser\n    };\n};\n_s(useAdminSettings, \"HR1aFfgBiUAZ7ZTKtNm9Y6L9tLc=\");\n// Add default export component\nfunction AdminSettings() {\n    return null; // This is a utility file, so we don't need to render anything\n}\n_c = AdminSettings;\nvar _c;\n$RefreshReg$(_c, \"AdminSettings\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/displayResponse.js":
/*!******************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/displayResponse.js ***!
  \******************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst DisplayResponse = (param)=>{\n    let { width, height, distance, isVisible = true } = param;\n    _s();\n    // Animation state for visibility transitions\n    const [animationState, setAnimationState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(isVisible ? 'visible' : 'hidden');\n    // Update animation state when visibility changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DisplayResponse.useEffect\": ()=>{\n            setAnimationState(isVisible ? 'visible' : 'hidden');\n        }\n    }[\"DisplayResponse.useEffect\"], [\n        isVisible\n    ]);\n    // Format values with units and handle missing values\n    const formattedWidth = width || '---';\n    const formattedHeight = height || '---';\n    const formattedDistance = distance || '---';\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"metrics-display \".concat(animationState),\n        style: {\n            position: 'absolute',\n            right: '20px',\n            top: '80px',\n            backgroundColor: 'rgba(0, 102, 204, 0.8)',\n            color: 'white',\n            padding: '10px 15px',\n            borderRadius: '8px',\n            fontSize: '14px',\n            fontFamily: 'monospace',\n            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\n            transition: 'all 0.3s ease',\n            opacity: animationState === 'visible' ? 1 : 0,\n            transform: animationState === 'visible' ? 'translateX(0)' : 'translateX(50px)',\n            pointerEvents: animationState === 'visible' ? 'auto' : 'none',\n            zIndex: 100\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"metrics-header\",\n                style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: '8px',\n                    borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\n                    paddingBottom: '5px'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        style: {\n                            fontWeight: 'bold'\n                        },\n                        children: \"Display Metrics\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 51,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"metrics-indicator\",\n                        style: {\n                            width: '10px',\n                            height: '10px',\n                            borderRadius: '50%',\n                            backgroundColor: '#00ff00',\n                            boxShadow: '0 0 5px rgba(0, 255, 0, 0.8)'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 52,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                lineNumber: 40,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"metrics-content\",\n                style: {\n                    lineHeight: '1.5'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Width:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 69,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedWidth\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 70,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" pixels\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 71,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 68,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Height:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 74,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedHeight\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 75,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" pixels\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 76,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 73,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Distance:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 79,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedDistance\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 80,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" cm\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 81,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 78,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n        lineNumber: 18,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DisplayResponse, \"mi6lEmDyIHWSMf9dWknMjCAipTM=\");\n_c = DisplayResponse;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DisplayResponse);\nvar _c;\n$RefreshReg$(_c, \"DisplayResponse\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3BhZ2VzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvY29tcG9uZW50cy1ndWkvZGlzcGxheVJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUQ7QUFFbkQsTUFBTUcsa0JBQWtCO1FBQUMsRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsWUFBWSxJQUFJLEVBQUU7O0lBQ3BFLDZDQUE2QztJQUM3QyxNQUFNLENBQUNDLGdCQUFnQkMsa0JBQWtCLEdBQUdSLCtDQUFRQSxDQUFDTSxZQUFZLFlBQVk7SUFFN0UsaURBQWlEO0lBQ2pETCxnREFBU0E7cUNBQUM7WUFDUk8sa0JBQWtCRixZQUFZLFlBQVk7UUFDNUM7b0NBQUc7UUFBQ0E7S0FBVTtJQUVkLHFEQUFxRDtJQUNyRCxNQUFNRyxpQkFBaUJOLFNBQVM7SUFDaEMsTUFBTU8sa0JBQWtCTixVQUFVO0lBQ2xDLE1BQU1PLG9CQUFvQk4sWUFBWTtJQUV0QyxxQkFDRSw4REFBQ087UUFDQ0MsV0FBVyxtQkFBa0MsT0FBZk47UUFDOUJPLE9BQU87WUFDTEMsVUFBVTtZQUNWQyxPQUFPO1lBQ1BDLEtBQUs7WUFDTEMsaUJBQWlCO1lBQ2pCQyxPQUFPO1lBQ1BDLFNBQVM7WUFDVEMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLFlBQVk7WUFDWkMsV0FBVztZQUNYQyxZQUFZO1lBQ1pDLFNBQVNuQixtQkFBbUIsWUFBWSxJQUFJO1lBQzVDb0IsV0FBV3BCLG1CQUFtQixZQUMxQixrQkFDQTtZQUNKcUIsZUFBZXJCLG1CQUFtQixZQUFZLFNBQVM7WUFDdkRzQixRQUFRO1FBQ1Y7OzBCQUVBLDhEQUFDakI7Z0JBQ0NDLFdBQVU7Z0JBQ1ZDLE9BQU87b0JBQ0xnQixTQUFTO29CQUNUQyxnQkFBZ0I7b0JBQ2hCQyxZQUFZO29CQUNaQyxjQUFjO29CQUNkQyxjQUFjO29CQUNkQyxlQUFlO2dCQUNqQjs7a0NBRUEsOERBQUNDO3dCQUFLdEIsT0FBTzs0QkFBRXVCLFlBQVk7d0JBQU87a0NBQUc7Ozs7OztrQ0FDckMsOERBQUN6Qjt3QkFDQ0MsV0FBVTt3QkFDVkMsT0FBTzs0QkFDTFgsT0FBTzs0QkFDUEMsUUFBUTs0QkFDUmlCLGNBQWM7NEJBQ2RILGlCQUFpQjs0QkFDakJNLFdBQVc7d0JBQ2I7Ozs7Ozs7Ozs7OzswQkFJSiw4REFBQ1o7Z0JBQ0NDLFdBQVU7Z0JBQ1ZDLE9BQU87b0JBQUV3QixZQUFZO2dCQUFNOztrQ0FFM0IsOERBQUNDOzswQ0FDQyw4REFBQ0g7Z0NBQUt0QixPQUFPO29DQUFFZ0IsU0FBUztvQ0FBZ0IzQixPQUFPO2dDQUFPOzBDQUFHOzs7Ozs7MENBQ3pELDhEQUFDaUM7Z0NBQUt0QixPQUFPO29DQUFFdUIsWUFBWTtnQ0FBTzswQ0FBSTVCOzs7Ozs7MENBQ3RDLDhEQUFDMkI7Z0NBQUt0QixPQUFPO29DQUFFWSxTQUFTO29DQUFLSixVQUFVO2dDQUFPOzBDQUFHOzs7Ozs7Ozs7Ozs7a0NBRW5ELDhEQUFDaUI7OzBDQUNDLDhEQUFDSDtnQ0FBS3RCLE9BQU87b0NBQUVnQixTQUFTO29DQUFnQjNCLE9BQU87Z0NBQU87MENBQUc7Ozs7OzswQ0FDekQsOERBQUNpQztnQ0FBS3RCLE9BQU87b0NBQUV1QixZQUFZO2dDQUFPOzBDQUFJM0I7Ozs7OzswQ0FDdEMsOERBQUMwQjtnQ0FBS3RCLE9BQU87b0NBQUVZLFNBQVM7b0NBQUtKLFVBQVU7Z0NBQU87MENBQUc7Ozs7Ozs7Ozs7OztrQ0FFbkQsOERBQUNpQjs7MENBQ0MsOERBQUNIO2dDQUFLdEIsT0FBTztvQ0FBRWdCLFNBQVM7b0NBQWdCM0IsT0FBTztnQ0FBTzswQ0FBRzs7Ozs7OzBDQUN6RCw4REFBQ2lDO2dDQUFLdEIsT0FBTztvQ0FBRXVCLFlBQVk7Z0NBQU87MENBQUkxQjs7Ozs7OzBDQUN0Qyw4REFBQ3lCO2dDQUFLdEIsT0FBTztvQ0FBRVksU0FBUztvQ0FBS0osVUFBVTtnQ0FBTzswQ0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSzNEO0dBbkZNcEI7S0FBQUE7QUFxRk4saUVBQWVBLGVBQWVBLEVBQUMiLCJzb3VyY2VzIjpbIi9hcHAvcGFnZXMvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZC9jb21wb25lbnRzLWd1aS9kaXNwbGF5UmVzcG9uc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IERpc3BsYXlSZXNwb25zZSA9ICh7IHdpZHRoLCBoZWlnaHQsIGRpc3RhbmNlLCBpc1Zpc2libGUgPSB0cnVlIH0pID0+IHtcbiAgLy8gQW5pbWF0aW9uIHN0YXRlIGZvciB2aXNpYmlsaXR5IHRyYW5zaXRpb25zXG4gIGNvbnN0IFthbmltYXRpb25TdGF0ZSwgc2V0QW5pbWF0aW9uU3RhdGVdID0gdXNlU3RhdGUoaXNWaXNpYmxlID8gJ3Zpc2libGUnIDogJ2hpZGRlbicpO1xuICBcbiAgLy8gVXBkYXRlIGFuaW1hdGlvbiBzdGF0ZSB3aGVuIHZpc2liaWxpdHkgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEFuaW1hdGlvblN0YXRlKGlzVmlzaWJsZSA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nKTtcbiAgfSwgW2lzVmlzaWJsZV0pO1xuICBcbiAgLy8gRm9ybWF0IHZhbHVlcyB3aXRoIHVuaXRzIGFuZCBoYW5kbGUgbWlzc2luZyB2YWx1ZXNcbiAgY29uc3QgZm9ybWF0dGVkV2lkdGggPSB3aWR0aCB8fCAnLS0tJztcbiAgY29uc3QgZm9ybWF0dGVkSGVpZ2h0ID0gaGVpZ2h0IHx8ICctLS0nO1xuICBjb25zdCBmb3JtYXR0ZWREaXN0YW5jZSA9IGRpc3RhbmNlIHx8ICctLS0nO1xuICBcbiAgcmV0dXJuIChcbiAgICA8ZGl2IFxuICAgICAgY2xhc3NOYW1lPXtgbWV0cmljcy1kaXNwbGF5ICR7YW5pbWF0aW9uU3RhdGV9YH1cbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICByaWdodDogJzIwcHgnLFxuICAgICAgICB0b3A6ICc4MHB4JyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLCAxMDIsIDIwNCwgMC44KScsXG4gICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICBwYWRkaW5nOiAnMTBweCAxNXB4JyxcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcbiAgICAgICAgZm9udFNpemU6ICcxNHB4JyxcbiAgICAgICAgZm9udEZhbWlseTogJ21vbm9zcGFjZScsXG4gICAgICAgIGJveFNoYWRvdzogJzAgMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjMpJyxcbiAgICAgICAgdHJhbnNpdGlvbjogJ2FsbCAwLjNzIGVhc2UnLFxuICAgICAgICBvcGFjaXR5OiBhbmltYXRpb25TdGF0ZSA9PT0gJ3Zpc2libGUnID8gMSA6IDAsXG4gICAgICAgIHRyYW5zZm9ybTogYW5pbWF0aW9uU3RhdGUgPT09ICd2aXNpYmxlJyBcbiAgICAgICAgICA/ICd0cmFuc2xhdGVYKDApJyBcbiAgICAgICAgICA6ICd0cmFuc2xhdGVYKDUwcHgpJyxcbiAgICAgICAgcG9pbnRlckV2ZW50czogYW5pbWF0aW9uU3RhdGUgPT09ICd2aXNpYmxlJyA/ICdhdXRvJyA6ICdub25lJyxcbiAgICAgICAgekluZGV4OiAxMDBcbiAgICAgIH19XG4gICAgPlxuICAgICAgPGRpdiBcbiAgICAgICAgY2xhc3NOYW1lPVwibWV0cmljcy1oZWFkZXJcIlxuICAgICAgICBzdHlsZT17e1xuICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgIG1hcmdpbkJvdHRvbTogJzhweCcsXG4gICAgICAgICAgYm9yZGVyQm90dG9tOiAnMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKScsXG4gICAgICAgICAgcGFkZGluZ0JvdHRvbTogJzVweCdcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPHNwYW4gc3R5bGU9e3sgZm9udFdlaWdodDogJ2JvbGQnIH19PkRpc3BsYXkgTWV0cmljczwvc3Bhbj5cbiAgICAgICAgPGRpdiBcbiAgICAgICAgICBjbGFzc05hbWU9XCJtZXRyaWNzLWluZGljYXRvclwiXG4gICAgICAgICAgc3R5bGU9e3sgXG4gICAgICAgICAgICB3aWR0aDogJzEwcHgnLCBcbiAgICAgICAgICAgIGhlaWdodDogJzEwcHgnLCBcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzUwJScsIFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzAwZmYwMCcsXG4gICAgICAgICAgICBib3hTaGFkb3c6ICcwIDAgNXB4IHJnYmEoMCwgMjU1LCAwLCAwLjgpJ1xuICAgICAgICAgIH19IFxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICBcbiAgICAgIDxkaXYgXG4gICAgICAgIGNsYXNzTmFtZT1cIm1ldHJpY3MtY29udGVudFwiXG4gICAgICAgIHN0eWxlPXt7IGxpbmVIZWlnaHQ6ICcxLjUnIH19XG4gICAgICA+XG4gICAgICAgIDxwPlxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLCB3aWR0aDogJzgwcHgnIH19PldpZHRoOjwvc3Bhbj4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZm9udFdlaWdodDogJ2JvbGQnIH19Pntmb3JtYXR0ZWRXaWR0aH08L3NwYW4+IFxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IG9wYWNpdHk6IDAuOCwgZm9udFNpemU6ICcxMnB4JyB9fT4gcGl4ZWxzPC9zcGFuPlxuICAgICAgICA8L3A+XG4gICAgICAgIDxwPlxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLCB3aWR0aDogJzgwcHgnIH19PkhlaWdodDo8L3NwYW4+IFxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGZvbnRXZWlnaHQ6ICdib2xkJyB9fT57Zm9ybWF0dGVkSGVpZ2h0fTwvc3Bhbj4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgb3BhY2l0eTogMC44LCBmb250U2l6ZTogJzEycHgnIH19PiBwaXhlbHM8L3NwYW4+XG4gICAgICAgIDwvcD5cbiAgICAgICAgPHA+XG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycsIHdpZHRoOiAnODBweCcgfX0+RGlzdGFuY2U6PC9zcGFuPiBcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcgfX0+e2Zvcm1hdHRlZERpc3RhbmNlfTwvc3Bhbj4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgb3BhY2l0eTogMC44LCBmb250U2l6ZTogJzEycHgnIH19PiBjbTwvc3Bhbj5cbiAgICAgICAgPC9wPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBEaXNwbGF5UmVzcG9uc2U7Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJEaXNwbGF5UmVzcG9uc2UiLCJ3aWR0aCIsImhlaWdodCIsImRpc3RhbmNlIiwiaXNWaXNpYmxlIiwiYW5pbWF0aW9uU3RhdGUiLCJzZXRBbmltYXRpb25TdGF0ZSIsImZvcm1hdHRlZFdpZHRoIiwiZm9ybWF0dGVkSGVpZ2h0IiwiZm9ybWF0dGVkRGlzdGFuY2UiLCJkaXYiLCJjbGFzc05hbWUiLCJzdHlsZSIsInBvc2l0aW9uIiwicmlnaHQiLCJ0b3AiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvciIsInBhZGRpbmciLCJib3JkZXJSYWRpdXMiLCJmb250U2l6ZSIsImZvbnRGYW1pbHkiLCJib3hTaGFkb3ciLCJ0cmFuc2l0aW9uIiwib3BhY2l0eSIsInRyYW5zZm9ybSIsInBvaW50ZXJFdmVudHMiLCJ6SW5kZXgiLCJkaXNwbGF5IiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwibWFyZ2luQm90dG9tIiwiYm9yZGVyQm90dG9tIiwicGFkZGluZ0JvdHRvbSIsInNwYW4iLCJmb250V2VpZ2h0IiwibGluZUhlaWdodCIsInAiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/displayResponse.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/topBar.js":
/*!*********************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/topBar.js ***!
  \*********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(pages-dir-browser)/./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"(pages-dir-browser)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _adminSettings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./adminSettings */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/adminSettings.js\");\n/* harmony import */ var _utils_consentManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utils/consentManager */ \"(pages-dir-browser)/./utils/consentManager.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n// Improved debounce function\nconst debounce = (func, wait)=>{\n    let timeout;\n    let lastArgs;\n    let lastThis;\n    return function executedFunction() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        lastArgs = args;\n        lastThis = this;\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(()=>{\n            timeout = null;\n            func.apply(lastThis, lastArgs);\n        }, wait);\n    };\n};\nconst TopBar = (param)=>{\n    let { onButtonClick, onCameraAccess, outputText, onOutputChange, onToggleTopBar, onToggleMetrics, canvasRef, isTopBarShown = true, isCanvasVisible = true } = param;\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const [canvasStatus, setCanvasStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(isCanvasVisible);\n    const { settings, updateSettings } = (0,_adminSettings__WEBPACK_IMPORTED_MODULE_4__.useAdminSettings)();\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [currentSettings, setCurrentSettings] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        times_set_random: 1,\n        delay_set_random: 3\n    });\n    const isUpdatingRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);\n    // Memoized function to fetch settings\n    const fetchSettings = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"TopBar.useCallback[fetchSettings]\": async (userId)=>{\n            if (!userId || isUpdatingRef.current) return;\n            try {\n                isUpdatingRef.current = true;\n                const response = await fetch(\"/api/data-center/settings/\".concat(userId), {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                    }\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch settings');\n                }\n                const userSettings = await response.json();\n                if (userSettings && (userSettings.times_set_random || userSettings.delay_set_random)) {\n                    setCurrentSettings(userSettings);\n                    if (updateSettings) {\n                        await updateSettings(userSettings, userId);\n                    }\n                }\n            } catch (error) {\n                console.error('TopBar - Error fetching settings:', error);\n            } finally{\n                isUpdatingRef.current = false;\n            }\n        }\n    }[\"TopBar.useCallback[fetchSettings]\"], [\n        updateSettings\n    ]);\n    const ensureCanvasAvailable = ()=>{\n        if (false) {}\n        // Check for existing canvas\n        let canvas = document.querySelector('#tracking-canvas');\n        if (!canvas) {\n            // Create canvas if it doesn't exist\n            canvas = document.createElement('canvas');\n            canvas.className = 'tracking-canvas';\n            canvas.id = 'tracking-canvas';\n            canvas.width = 800;\n            canvas.height = 400;\n            canvas.style.cssText = \"\\n        position: relative;\\n        width: 100%;\\n        height: 400px;\\n        background-color: white;\\n        border: 1px solid #ccc;\\n        display: block;\\n      \";\n            // Initialize with white background\n            const ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Append to appropriate container\n            const container = document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n            container.appendChild(canvas);\n        }\n        // Store global reference\n        window.whiteScreenCanvas = canvas;\n        return canvas;\n    };\n    // Debounced save settings function\n    const debouncedSaveSettings = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(debounce({\n        \"TopBar.useCallback[debouncedSaveSettings]\": async (userId, newSettings)=>{\n            if (!userId || isUpdatingRef.current) return;\n            try {\n                isUpdatingRef.current = true;\n                const response = await fetch(\"/api/data-center/settings/\".concat(userId), {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                    },\n                    body: JSON.stringify(newSettings)\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to save settings to backend');\n                }\n                const latestSettings = await response.json();\n                setCurrentSettings(latestSettings);\n                if (updateSettings) {\n                    await updateSettings(latestSettings, userId);\n                }\n            } catch (error) {\n                console.error('TopBar - Error saving settings:', error);\n            } finally{\n                isUpdatingRef.current = false;\n            }\n        }\n    }[\"TopBar.useCallback[debouncedSaveSettings]\"], 500), [\n        updateSettings\n    ]);\n    // Initialize user ID and fetch initial settings\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const initializeUserId = {\n                \"TopBar.useEffect.initializeUserId\": async ()=>{\n                    const userId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_5__.getOrCreateUserId)();\n                    if (userId) {\n                        setCurrentUserId(userId);\n                        await fetchSettings(userId);\n                        setIsLoading(false);\n                    }\n                }\n            }[\"TopBar.useEffect.initializeUserId\"];\n            initializeUserId();\n        }\n    }[\"TopBar.useEffect\"], [\n        fetchSettings\n    ]);\n    // Update canvas status when prop changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            setCanvasStatus(isCanvasVisible);\n        }\n    }[\"TopBar.useEffect\"], [\n        isCanvasVisible\n    ]);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"TopBar.useEffect.handleUserIdChange\": async (event)=>{\n                    var _event_detail;\n                    if ((_event_detail = event.detail) === null || _event_detail === void 0 ? void 0 : _event_detail.userId) {\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        await fetchSettings(newUserId);\n                    }\n                }\n            }[\"TopBar.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"TopBar.useEffect\": ()=>window.removeEventListener('userIdChange', handleUserIdChange)\n            })[\"TopBar.useEffect\"];\n        }\n    }[\"TopBar.useEffect\"], [\n        fetchSettings\n    ]);\n    // Listen for settings updates from admin page\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"TopBar.useEffect.handleSettingsUpdate\": (event)=>{\n                    var _event_detail;\n                    if (((_event_detail = event.detail) === null || _event_detail === void 0 ? void 0 : _event_detail.type) === 'captureSettings') {\n                        const { userId, times_set_random, delay_set_random } = event.detail;\n                        // Only update if values have actually changed\n                        if (times_set_random !== currentSettings.times_set_random || delay_set_random !== currentSettings.delay_set_random) {\n                            const newSettings = {\n                                times_set_random: Number(times_set_random) || currentSettings.times_set_random,\n                                delay_set_random: Number(delay_set_random) || currentSettings.delay_set_random\n                            };\n                            debouncedSaveSettings(userId, newSettings);\n                        }\n                    }\n                }\n            }[\"TopBar.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"TopBar.useEffect\": ()=>window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate)\n            })[\"TopBar.useEffect\"];\n        }\n    }[\"TopBar.useEffect\"], [\n        currentSettings,\n        debouncedSaveSettings\n    ]);\n    const handleButtonClick = (actionType)=>{\n        // Ensure canvas is available before triggering actions that need it\n        if ([\n            'setRandom',\n            'calibrate',\n            'randomDot',\n            'clearAll'\n        ].includes(actionType)) {\n            const canvas = ensureCanvasAvailable();\n            if (!canvas) {\n                console.warn(\"Canvas not available for action: \".concat(actionType));\n            }\n        }\n        if (onButtonClick) {\n            onButtonClick(actionType);\n        }\n    };\n    const handleToggleTopBar = ()=>{\n        onToggleTopBar(!isTopBarShown);\n    };\n    const handleToggleMetrics = ()=>{\n        onToggleMetrics();\n    };\n    const handleGoBack = ()=>{\n        router.push('/');\n    };\n    const statusMessage = \"TopBar \".concat(isTopBarShown ? 'shown' : 'hidden', \", Canvas: \").concat(canvasStatus ? 'Visible' : 'Hidden');\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-8fd840df60237147\" + \" \" + \"topbar\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-left\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"logo\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"logo-text\",\n                            children: \"Logo\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 236,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 235,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"controls-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"control-group\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-label\",\n                                        children: \"Time(s):\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 241,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-input\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"control-input-field\",\n                                            children: currentSettings.times_set_random\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 243,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 242,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, \"times-\".concat(currentSettings.times_set_random, \"-\").concat(Date.now()), true, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 240,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"control-group\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-label\",\n                                        children: \"Delay(s):\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 248,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-input\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"control-input-field\",\n                                            children: currentSettings.delay_set_random\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 250,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 249,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, \"delay-\".concat(currentSettings.delay_set_random, \"-\").concat(Date.now()), true, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 247,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 239,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 234,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-middle\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-groups\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"button-group\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: handleGoBack,\n                                            title: \"Go back to home page\",\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn back-button\",\n                                            children: \"← Back\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 260,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('setRandom'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Set Random\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 268,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('calibrate'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Set Calibrate\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 274,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 259,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        marginRight: '80px'\n                                    },\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('randomDot'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Random Dot\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 283,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('clearAll'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Clear All\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 289,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 282,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 258,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-divider\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 298,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"button-group\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('headPose'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Draw Head pose\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 302,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('boundingBox'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Show Bounding Box\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 308,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 301,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('preview'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Show Preview\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 317,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('mask'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"\\uD83D\\uDE0A Show Mask\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 323,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('parameters'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Parameters\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 329,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 316,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 300,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                    lineNumber: 257,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 256,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-right\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"notes-container\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            title: \"Processing Output\",\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"output-display\",\n                            children: [\n                                statusMessage,\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {\n                                    className: \"jsx-8fd840df60237147\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 347,\n                                    columnNumber: 13\n                                }, undefined),\n                                outputText || \"Processing output will appear here...\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 342,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 341,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-buttons\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleToggleTopBar,\n                                title: \"Toggle TopBar\",\n                                style: {\n                                    padding: '5px 10px',\n                                    backgroundColor: '#0066cc',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    fontSize: '16px',\n                                    cursor: 'pointer',\n                                    marginRight: '5px'\n                                },\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"icon-btn menu-btn\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"icon-text\",\n                                    children: \"≡\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 368,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 353,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleToggleMetrics,\n                                title: \"Toggle Metrics\",\n                                style: {\n                                    padding: '5px 10px',\n                                    backgroundColor: '#ff9900',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    fontSize: '16px',\n                                    cursor: 'pointer'\n                                },\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"icon-btn alert-btn\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"icon-text\",\n                                    children: \"!\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 385,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 371,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 352,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 340,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"8fd840df60237147\",\n                children: \".active-toggle.jsx-8fd840df60237147{-webkit-transform:scale(1.2);-moz-transform:scale(1.2);-ms-transform:scale(1.2);-o-transform:scale(1.2);transform:scale(1.2);-webkit-transition:all.3s ease;-moz-transition:all.3s ease;-o-transition:all.3s ease;transition:all.3s ease}.icon-btn.jsx-8fd840df60237147{-webkit-transition:all.2s ease;-moz-transition:all.2s ease;-o-transition:all.2s ease;transition:all.2s ease}.icon-btn.jsx-8fd840df60237147:hover{opacity:.8}\"\n            }, void 0, false, void 0, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n        lineNumber: 233,\n        columnNumber: 5\n    }, undefined);\n};\n_s(TopBar, \"tCJa33HYRX7crgMOXGrSbYyzpIg=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter,\n        _adminSettings__WEBPACK_IMPORTED_MODULE_4__.useAdminSettings\n    ];\n});\n_c = TopBar;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TopBar);\nvar _c;\n$RefreshReg$(_c, \"TopBar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/topBar.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./pages/collected-dataset-customized/index.js":
/*!*****************************************************!*\
  !*** ./pages/collected-dataset-customized/index.js ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CollectedDatasetPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"(pages-dir-browser)/./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-browser)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_gui_topBar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components-gui/topBar */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/topBar.js\");\n/* harmony import */ var _components_gui_displayResponse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components-gui/displayResponse */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/displayResponse.js\");\n/* harmony import */ var _components_gui_actionButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components-gui/actionButton */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/actionButton.js\");\n/* harmony import */ var _components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/collected-dataset-customized/Action/countSave */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx\");\n/* harmony import */ var _components_collected_dataset_customized_Action_CalibratePoints_jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/collected-dataset-customized/Action/CalibratePoints.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\");\n/* harmony import */ var _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/consent/ConsentContext */ \"(pages-dir-browser)/./components/consent/ConsentContext.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/router */ \"(pages-dir-browser)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_10__);\n// Modified index.js - Fixing canvas reference issues\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n// Dynamically load the video processor component (not the hook directly)\nconst VideoProcessorComponent = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-browser_pages_collected-dataset-customized_components-gui_VideoProcessorComponent_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components-gui/VideoProcessorComponent */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/VideoProcessorComponent.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"pages/collected-dataset-customized/index.js -> \" + \"./components-gui/VideoProcessorComponent\"\n        ]\n    },\n    ssr: false\n});\n_c = VideoProcessorComponent;\n// Dynamically import the camera component with SSR disabled\nconst DynamicCameraAccess = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-browser_pages_collected-dataset-customized_components-gui_cameraAccess_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components-gui/cameraAccess */ \"(pages-dir-browser)/./pages/collected-dataset-customized/components-gui/cameraAccess.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"pages/collected-dataset-customized/index.js -> \" + \"./components-gui/cameraAccess\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                width: '480px',\n                height: '360px',\n                backgroundColor: '#f0f8ff',\n                border: '2px solid #0066cc',\n                borderRadius: '8px',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                textAlign: 'center',\n                zIndex: 999\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        fontSize: '48px',\n                        marginBottom: '15px'\n                    },\n                    children: \"\\uD83D\\uDCF7\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 42,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    style: {\n                        fontSize: '16px',\n                        fontWeight: 'bold',\n                        color: '#0066cc'\n                    },\n                    children: \"Loading camera...\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 43,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n            lineNumber: 25,\n            columnNumber: 7\n        }, undefined)\n});\n_c1 = DynamicCameraAccess;\nfunction CollectedDatasetPage() {\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_10__.useRouter)();\n    const { userId: consentUserId } = (0,_components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_9__.useConsent)();\n    const [userData, setUserData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isHydrated, setIsHydrated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [backendStatus, setBackendStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('checking');\n    const [showTopBar, setShowTopBar] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [showWarning, setShowWarning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [warningMessage, setWarningMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [statusMessage, setStatusMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [outputText, setOutputText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [showMetrics, setShowMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [showPermissionPopup, setShowPermissionPopup] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [cameraPermissionGranted, setCameraPermissionGranted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showCamera, setShowCamera] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showCameraPlaceholder, setShowCameraPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showHeadPose, setShowHeadPose] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBoundingBox, setShowBoundingBox] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showMask, setShowMask] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showParameters, setShowParameters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [windowSize, setWindowSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 0,\n        height: 0,\n        percentage: 100\n    });\n    const [metrics, setMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: '---',\n        height: '---',\n        distance: '---'\n    });\n    const [captureCounter, setCaptureCounter] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [captureFolder, setCaptureFolder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('default');\n    const [showSettings, setShowSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Refs\n    const previewAreaRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const actionButtonGroupRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Set hydrated state after mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            setIsHydrated(true);\n        }\n    }[\"CollectedDatasetPage.useEffect\"], []);\n    // Load user data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const loadUserData = {\n                \"CollectedDatasetPage.useEffect.loadUserData\": async ()=>{\n                    if (!router.isReady) return;\n                    try {\n                        if (router.query.userData) {\n                            const parsedData = JSON.parse(router.query.userData);\n                            setUserData(parsedData);\n                            return;\n                        }\n                        if (router.query.userId) {\n                            const response = await fetch(\"/api/user-preferences/\".concat(router.query.userId), {\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json',\n                                    'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                                }\n                            });\n                            if (!response.ok) {\n                                throw new Error('Failed to fetch user data');\n                            }\n                            const data = await response.json();\n                            setUserData(data);\n                        }\n                    } catch (err) {\n                        console.error('Error loading user data:', err);\n                        setError(err.message);\n                    } finally{\n                        setIsLoading(false);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.loadUserData\"];\n            loadUserData();\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        router.isReady,\n        router.query\n    ]);\n    // Check backend connection\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const checkBackendConnection = {\n                \"CollectedDatasetPage.useEffect.checkBackendConnection\": async ()=>{\n                    try {\n                        const response = await fetch('/api/check-backend-connection');\n                        const data = await response.json();\n                        setBackendStatus(data.connected ? 'connected' : 'disconnected');\n                    } catch (error) {\n                        console.error('Error checking backend connection:', error);\n                        setBackendStatus('disconnected');\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.checkBackendConnection\"];\n            if (isHydrated) {\n                checkBackendConnection();\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Update window size\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const updateDimensions = {\n                \"CollectedDatasetPage.useEffect.updateDimensions\": ()=>{\n                    if (previewAreaRef.current) {\n                        const width = previewAreaRef.current.offsetWidth;\n                        const height = previewAreaRef.current.offsetHeight;\n                        const screenPercentage = window.innerWidth / window.screen.width * 100;\n                        setMetrics({\n                            \"CollectedDatasetPage.useEffect.updateDimensions\": (prev)=>({\n                                    ...prev,\n                                    width,\n                                    height\n                                })\n                        }[\"CollectedDatasetPage.useEffect.updateDimensions\"]);\n                        setWindowSize({\n                            width: window.innerWidth,\n                            height: window.innerHeight,\n                            percentage: Math.round(screenPercentage)\n                        });\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.updateDimensions\"];\n            if (isHydrated) {\n                updateDimensions();\n                window.addEventListener('resize', updateDimensions);\n                return ({\n                    \"CollectedDatasetPage.useEffect\": ()=>window.removeEventListener('resize', updateDimensions)\n                })[\"CollectedDatasetPage.useEffect\"];\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Initialize settings based on user data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (userData && consentUserId) {\n                console.log('Initializing settings for user:', consentUserId, userData);\n                // Initialize user-specific settings\n                if (userData.preferences) {\n                    const { preferences } = userData;\n                    // Update camera settings if available\n                    if (preferences.cameraSettings) {\n                        const { showHeadPose, showBoundingBox, showMask, showParameters } = preferences.cameraSettings;\n                        setShowHeadPose(showHeadPose || false);\n                        setShowBoundingBox(showBoundingBox || false);\n                        setShowMask(showMask || false);\n                        setShowParameters(showParameters || false);\n                    }\n                    // Update other settings as needed\n                    if (preferences.metrics) {\n                        setShowMetrics(preferences.metrics.show || true);\n                    }\n                    if (preferences.topBar) {\n                        setShowTopBar(preferences.topBar.show || true);\n                    }\n                }\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        userData,\n        consentUserId\n    ]);\n    // Improved get canvas function that tries multiple methods\n    const getMainCanvas = ()=>{\n        // Use the new canvas manager if available\n        if ( true && window.canvasManager) {\n            return window.canvasManager.getCanvas() || window.canvasManager.createCanvas();\n        }\n        // Method 1: Check if we have a direct reference\n        if (canvasRef.current) {\n            console.log(\"Using direct canvasRef.current reference\");\n            return canvasRef.current;\n        }\n        // Method 2: Try to get global reference\n        if ( true && window.whiteScreenCanvas) {\n            console.log(\"Using global whiteScreenCanvas reference\");\n            canvasRef.current = window.whiteScreenCanvas; // Update our ref\n            return window.whiteScreenCanvas;\n        }\n        // Method 3: Try to find via DOM\n        if (typeof document !== 'undefined') {\n            const canvasElement = document.querySelector('.tracking-canvas');\n            if (canvasElement) {\n                console.log(\"Found canvas via DOM selector\");\n                canvasRef.current = canvasElement; // Update our ref\n                if (true) {\n                    window.whiteScreenCanvas = canvasElement; // Update global ref too\n                }\n                return canvasElement;\n            }\n        }\n        console.warn(\"No canvas found via any method\");\n        return null;\n    };\n    // Check if we're on the client or server\n    const isClient = \"object\" !== 'undefined';\n    // Add effect to initialize canvas and make it globally available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return;\n            // Initialize canvas manager globally\n            if (true) {\n                // Create a simple canvas manager for index.js\n                window.canvasManager = {\n                    getCanvas: ({\n                        \"CollectedDatasetPage.useEffect\": ()=>{\n                            return canvasRef.current || document.querySelector('#tracking-canvas');\n                        }\n                    })[\"CollectedDatasetPage.useEffect\"],\n                    createCanvas: ({\n                        \"CollectedDatasetPage.useEffect\": function() {\n                            let container = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n                            let canvas = document.querySelector('#tracking-canvas');\n                            if (!canvas) {\n                                canvas = document.createElement('canvas');\n                                canvas.className = 'tracking-canvas';\n                                canvas.id = 'tracking-canvas';\n                            }\n                            const targetContainer = container || document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n                            // Set responsive dimensions\n                            const rect = targetContainer.getBoundingClientRect();\n                            canvas.width = rect.width || targetContainer.clientWidth || 800;\n                            canvas.height = rect.height || targetContainer.clientHeight || 600;\n                            // Set CSS for responsive behavior\n                            canvas.style.cssText = \"\\n            width: 100%;\\n            height: 100%;\\n            display: block;\\n            background-color: white;\\n            border: none;\\n          \";\n                            // Initialize with white background\n                            const ctx = canvas.getContext('2d');\n                            ctx.fillStyle = 'white';\n                            ctx.fillRect(0, 0, canvas.width, canvas.height);\n                            // Add to container if not already there\n                            if (!canvas.parentNode) {\n                                targetContainer.appendChild(canvas);\n                            }\n                            // Store references\n                            canvasRef.current = canvas;\n                            window.whiteScreenCanvas = canvas;\n                            console.log(\"Canvas created/updated: \".concat(canvas.width, \"x\").concat(canvas.height));\n                            return canvas;\n                        }\n                    })[\"CollectedDatasetPage.useEffect\"],\n                    enterFullscreen: ({\n                        \"CollectedDatasetPage.useEffect\": ()=>{\n                            const canvas = window.canvasManager.getCanvas();\n                            if (!canvas) return;\n                            // Save original state\n                            canvas._originalState = {\n                                parent: canvas.parentElement,\n                                position: canvas.style.position,\n                                top: canvas.style.top,\n                                left: canvas.style.left,\n                                width: canvas.style.width,\n                                height: canvas.style.height,\n                                zIndex: canvas.style.zIndex\n                            };\n                            // Move to body and make fullscreen\n                            document.body.appendChild(canvas);\n                            canvas.style.cssText = \"\\n            position: fixed;\\n            top: 0;\\n            left: 0;\\n            width: 100vw;\\n            height: 100vh;\\n            z-index: 99999;\\n            background-color: white;\\n            border: none;\\n            display: block;\\n            opacity: 1;\\n            pointer-events: auto;\\n            margin: 0;\\n            padding: 0;\\n            box-sizing: border-box;\\n          \";\n                            canvas.width = window.innerWidth;\n                            canvas.height = window.innerHeight;\n                            const ctx = canvas.getContext('2d');\n                            ctx.fillStyle = 'white';\n                            ctx.fillRect(0, 0, canvas.width, canvas.height);\n                            console.log('Canvas entered fullscreen mode');\n                        }\n                    })[\"CollectedDatasetPage.useEffect\"],\n                    exitFullscreen: ({\n                        \"CollectedDatasetPage.useEffect\": ()=>{\n                            const canvas = window.canvasManager.getCanvas();\n                            if (!canvas || !canvas._originalState) return;\n                            // Find appropriate container\n                            const container = document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n                            // Move canvas back to container\n                            container.appendChild(canvas);\n                            // Restore original styles\n                            canvas.style.position = 'relative';\n                            canvas.style.top = '';\n                            canvas.style.left = '';\n                            canvas.style.width = '100%';\n                            canvas.style.height = '100%';\n                            canvas.style.zIndex = '';\n                            canvas.style.backgroundColor = 'white';\n                            // Update size to match container\n                            const rect = container.getBoundingClientRect();\n                            canvas.width = rect.width || container.clientWidth || 800;\n                            canvas.height = rect.height || container.clientHeight || 600;\n                            const ctx = canvas.getContext('2d');\n                            ctx.fillStyle = 'white';\n                            ctx.fillRect(0, 0, canvas.width, canvas.height);\n                            delete canvas._originalState;\n                            console.log('Canvas exited fullscreen mode');\n                        }\n                    })[\"CollectedDatasetPage.useEffect\"],\n                    clear: ({\n                        \"CollectedDatasetPage.useEffect\": ()=>{\n                            const canvas = window.canvasManager.getCanvas();\n                            if (!canvas) return;\n                            const ctx = canvas.getContext('2d');\n                            ctx.clearRect(0, 0, canvas.width, canvas.height);\n                            ctx.fillStyle = 'white';\n                            ctx.fillRect(0, 0, canvas.width, canvas.height);\n                        }\n                    })[\"CollectedDatasetPage.useEffect\"]\n                };\n            }\n            // Debug info to verify canvas size and availability\n            const canvas = canvasRef.current;\n            if (canvas) {\n                console.log(\"Index.js: Canvas initialized\", {\n                    width: canvas.width,\n                    height: canvas.height\n                });\n                // Make canvas EXPLICITLY available globally\n                window.whiteScreenCanvas = canvas;\n                // Also store canvas dimensions\n                window.canvasDimensions = {\n                    width: canvas.width,\n                    height: canvas.height\n                };\n            } else {\n                console.warn(\"Canvas reference is not available during initialization\");\n            }\n            // Expose canvas initialization function globally\n            window.initializeCanvas = ({\n                \"CollectedDatasetPage.useEffect\": (canvas, parent)=>{\n                    if (!canvas || !parent) {\n                        console.warn('[initializeCanvas] Canvas or parent is null', {\n                            canvas,\n                            parent\n                        });\n                        return false;\n                    }\n                    try {\n                        // Set canvas dimensions to match parent\n                        canvas.width = parent.clientWidth || 800;\n                        canvas.height = parent.clientHeight || 600;\n                        // Clear canvas and set white background\n                        const ctx = canvas.getContext('2d');\n                        ctx.clearRect(0, 0, canvas.width, canvas.height);\n                        ctx.fillStyle = 'white';\n                        ctx.fillRect(0, 0, canvas.width, canvas.height);\n                        console.log(\"Canvas initialized with dimensions: \".concat(canvas.width, \"x\").concat(canvas.height));\n                        // Update global reference\n                        window.whiteScreenCanvas = canvas;\n                        window.canvasDimensions = {\n                            width: canvas.width,\n                            height: canvas.height\n                        };\n                        return true;\n                    } catch (error) {\n                        console.error('[initializeCanvas] Error initializing canvas:', error);\n                        return false;\n                    }\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n            // Check canvas visibility and force initialization after a brief delay\n            setTimeout({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    const canvas = getMainCanvas();\n                    if (canvas) {\n                        const rect = canvas.getBoundingClientRect();\n                        console.log(\"Canvas initial visibility check:\", {\n                            dimensions: \"\".concat(canvas.width, \"x\").concat(canvas.height),\n                            rectSize: \"\".concat(rect.width, \"x\").concat(rect.height),\n                            isVisible: rect.width > 0 && rect.height > 0\n                        });\n                        // Force initialization if needed\n                        adjustCanvasDimensions();\n                    } else {\n                        console.warn(\"Canvas not found during visibility check\");\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect\"], 500);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    delete window.whiteScreenCanvas;\n                    delete window.canvasDimensions;\n                    delete window.initializeCanvas;\n                    delete window.canvasManager;\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Improved canvas dimensions adjustment\n    const adjustCanvasDimensions = ()=>{\n        if (!isClient || !isHydrated || !previewAreaRef.current) return;\n        const canvas = getMainCanvas();\n        if (!canvas) {\n            console.warn(\"No canvas found to adjust dimensions\");\n            return;\n        }\n        const container = previewAreaRef.current;\n        // Get the size of the preview area\n        const rect = container.getBoundingClientRect();\n        // Calculate proper height based on top bar visibility\n        const topBarHeight = showTopBar ? 120 : 0; // Adjust this value based on your top bar's actual height\n        console.log(\"Adjusting canvas dimensions\", {\n            containerWidth: rect.width,\n            containerHeight: rect.height,\n            topBarVisible: showTopBar,\n            calculatedHeight: rect.height\n        });\n        // Set canvas dimensions to match container size with top bar adjustment\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n        // Clear the canvas\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // Fill with white background\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        console.log(\"Canvas dimensions adjusted: \".concat(canvas.width, \"x\").concat(canvas.height));\n        // Update global reference with current dimensions\n        window.whiteScreenCanvas = canvas;\n        window.canvasDimensions = {\n            width: canvas.width,\n            height: canvas.height\n        };\n    };\n    // Create a capture folder on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!captureFolder && isClient && isHydrated) {\n                const timestamp = new Date().toISOString().replace(/[:\\.]/g, '-');\n                setCaptureFolder(\"session_\".concat(timestamp));\n                console.log(\"Created capture folder: session_\".concat(timestamp));\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        captureFolder,\n        isClient,\n        isHydrated\n    ]);\n    // Check backend connection on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return; // Skip on server or before hydration\n            const checkBackendConnection = {\n                \"CollectedDatasetPage.useEffect.checkBackendConnection\": async ()=>{\n                    try {\n                        const response = await fetch('/api/check-backend-connection');\n                        const data = await response.json();\n                        setBackendStatus(data.connected ? 'connected' : 'disconnected');\n                        console.log(\"Backend connection: \".concat(data.connected ? 'OK' : 'Failed'));\n                        // Show status in output text\n                        setOutputText(\"Backend \".concat(data.connected ? 'connected' : 'disconnected - using mock mode'));\n                    } catch (error) {\n                        console.error('Error checking backend connection:', error);\n                        setBackendStatus('disconnected');\n                        setOutputText('Backend disconnected - using mock mode');\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.checkBackendConnection\"];\n            checkBackendConnection();\n            // Welcome message after backend check\n            setTimeout({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    setOutputText('Camera system ready. Click \"Show Preview\" to start camera.');\n                }\n            }[\"CollectedDatasetPage.useEffect\"], 2000);\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Add styles to document head for button highlighting\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return;\n            // Create a style element\n            const style = document.createElement('style');\n            style.textContent = \"\\n      @keyframes pulse {\\n        0% { box-shadow: 0 0 0 0 rgba(0, 102, 204, 0.7); }\\n        70% { box-shadow: 0 0 0 10px rgba(0, 102, 204, 0); }\\n        100% { box-shadow: 0 0 0 0 rgba(0, 102, 204, 0); }\\n      }\\n      \\n      @keyframes fadeIn {\\n        from { opacity: 0; transform: translateY(-10px); }\\n        to { opacity: 1; transform: translateY(0); }\\n      }\\n      \\n      .btn-highlight {\\n        animation: pulse 1.5s infinite;\\n        background-color: #0099ff !important;\\n        color: white !important;\\n        transform: scale(1.05);\\n        transition: all 0.3s ease;\\n      }\\n      \\n      .warning-banner {\\n        animation: fadeIn 0.3s ease-in-out;\\n      }\\n    \";\n            document.head.appendChild(style);\n            // Clean up\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    document.head.removeChild(style);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Make toggleTopBar function available globally\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return;\n            // Make toggleTopBar available to other components\n            window.toggleTopBar = ({\n                \"CollectedDatasetPage.useEffect\": (show)=>{\n                    setShowTopBar(show);\n                    // Also hide metrics when hiding the top bar\n                    if (!show) {\n                        setShowMetrics(false);\n                    }\n                    // Adjust canvas dimensions after toggling\n                    setTimeout(adjustCanvasDimensions, 100);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    // Clean up\n                    delete window.toggleTopBar;\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Toggle camera function\n    const toggleCamera = (shouldEnable)=>{\n        if (!isClient || !isHydrated) return;\n        if (shouldEnable) {\n            setShowCamera(true);\n            setShowCameraPlaceholder(false);\n            setOutputText('Camera preview started');\n        } else {\n            setShowCamera(false);\n            setShowCameraPlaceholder(false);\n            setOutputText('Camera preview stopped');\n        }\n    };\n    // Handler for action button clicks\n    const handleActionButtonClick = (actionType, params)=>{\n        if (!isClient || !isHydrated) return;\n        // Special case for toggling the top bar\n        if (actionType === 'toggleTopBar') {\n            // const newTopBarState = value !== undefined ? !!value : !showTopBar;\n            let newTopBarState;\n            if (typeof params === 'boolean') {\n                newTopBarState = params;\n            } else if (params && typeof params.value !== 'undefined') {\n                newTopBarState = !!params.value;\n            } else {\n                newTopBarState = !showTopBar;\n            }\n            setShowTopBar(newTopBarState);\n            // Also hide metrics when hiding the top bar\n            if (!newTopBarState) {\n                setShowMetrics(false);\n            }\n            setOutputText(\"TopBar \".concat(newTopBarState ? 'shown' : 'hidden').concat(!newTopBarState ? ', Metrics hidden' : ''));\n            // Adjust canvas dimensions after toggling\n            setTimeout(adjustCanvasDimensions, 100);\n            return;\n        }\n        const canvas = getMainCanvas();\n        setShowWarning(false);\n        // Clear any existing warnings\n        const safeParams = params || {};\n        // Use safeParams instead of controlValues\n        const randomTimes = safeParams.randomTimes || 1;\n        const delaySeconds = safeParams.delaySeconds || 3;\n        switch(actionType){\n            case 'preview':\n                // Toggle camera state\n                if (showCamera) {\n                    toggleCamera(false);\n                } else if (cameraPermissionGranted) {\n                    toggleCamera(true);\n                } else {\n                    // Otherwise show permission popup\n                    setShowPermissionPopup(true);\n                    setOutputText('Opening camera preview');\n                    setShowCameraPlaceholder(true);\n                }\n                break;\n            case 'setRandom':\n                setOutputText('Starting random sequence...');\n                setShowTopBar(false);\n                if (showCamera) {\n                    toggleCamera(false);\n                }\n                // Use the imported module approach - similar to calibrate\n                if (actionButtonGroupRef.current && actionButtonGroupRef.current.handleSetRandom) {\n                    // Use the reference method if available\n                    console.log('Using ActionButtonGroup ref method for Set Random');\n                    actionButtonGroupRef.current.handleSetRandom();\n                } else if ( true && window.actionButtonFunctions && typeof window.actionButtonFunctions.handleSetRandom === 'function') {\n                    // Fallback to global method\n                    console.log('Using global bridge method for Set Random');\n                    window.actionButtonFunctions.handleSetRandom();\n                } else {\n                    // Make sure we have a canvas to work with\n                    const canvas = getMainCanvas();\n                    if (!canvas) {\n                        console.error(\"Canvas not found for random sequence\");\n                        setOutputText(\"Error: Canvas not available for random sequence\");\n                        setShowTopBar(true);\n                        return;\n                    }\n                    // Get control values from the TopBar\n                    const timeInput = document.querySelector('.control-input-field');\n                    const delayInput = document.querySelectorAll('.control-input-field')[1];\n                    // Default values if inputs can't be found\n                    let times = 1;\n                    let delay = 3;\n                    // Parse input values if available\n                    if (timeInput) {\n                        const parsedTime = parseInt(timeInput.value, 10);\n                        if (!isNaN(parsedTime) && parsedTime > 0) {\n                            times = parsedTime;\n                        }\n                    }\n                    if (delayInput) {\n                        const parsedDelay = parseInt(delayInput.value, 10);\n                        if (!isNaN(parsedDelay) && parsedDelay > 0) {\n                            delay = parsedDelay;\n                        }\n                    }\n                    // Load all required modules first, then proceed with execution\n                    Promise.all([\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/countSave */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx\")),\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\"))\n                    ]).then(async (param)=>{\n                        let [countSaveModule, savefileModule] = param;\n                        // Destructure the imported modules\n                        const { getRandomPosition, drawRedDot, runCountdown, showCapturePreview } = countSaveModule;\n                        const { captureImagesAtPoint } = savefileModule;\n                        try {\n                            // Process all captures sequentially\n                            let successCount = 0;\n                            let currentCapture = 1;\n                            while(currentCapture <= times){\n                                // Update status for current capture\n                                setOutputText(\"Capture \".concat(currentCapture, \" of \").concat(times));\n                                // Clear canvas before each capture\n                                const ctx = canvas.getContext('2d');\n                                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                                ctx.fillStyle = 'white';\n                                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                                // Generate random position for this capture\n                                const position = getRandomPosition(canvas, 20);\n                                // Draw the dot\n                                drawRedDot(ctx, position.x, position.y);\n                                // Create a redrawInterval to ensure dot stays visible\n                                let redrawInterval = setInterval(()=>{\n                                    drawRedDot(ctx, position.x, position.y, 12, false);\n                                }, 200);\n                                // Run countdown and wait for it to complete\n                                await new Promise((resolve)=>{\n                                    runCountdown(position, canvas, (status)=>{\n                                        // Update UI based on status\n                                        if (status.processStatus) {\n                                            setOutputText(\"Capture \".concat(currentCapture, \"/\").concat(times, \": \").concat(status.processStatus));\n                                        }\n                                    }, resolve // This will be called when countdown completes\n                                    );\n                                });\n                                // Clear redrawInterval after countdown\n                                clearInterval(redrawInterval);\n                                // Wait briefly after countdown\n                                await new Promise((resolve)=>setTimeout(resolve, 500));\n                                // Capture images at this point\n                                try {\n                                    const captureResult = await captureImagesAtPoint({\n                                        point: position,\n                                        captureCount: captureCounter,\n                                        canvasRef: {\n                                            current: canvas\n                                        },\n                                        setCaptureCount: setCaptureCounter,\n                                        showCapturePreview\n                                    });\n                                    if (captureResult && (captureResult.screenImage || captureResult.success)) {\n                                        successCount++;\n                                    }\n                                    // Increment counter\n                                    setCaptureCounter((prev)=>prev + 1);\n                                } catch (error) {\n                                    console.error(\"Error capturing point \".concat(currentCapture, \":\"), error);\n                                }\n                                // Wait between captures for the specified delay time\n                                if (currentCapture < times) {\n                                    setOutputText(\"Waiting \".concat(delay, \"s before next capture...\"));\n                                    await new Promise((resolve)=>setTimeout(resolve, delay * 1000));\n                                }\n                                // Move to next capture\n                                currentCapture++;\n                            }\n                            // Sequence complete\n                            setOutputText(\"Random capture sequence completed: \".concat(successCount, \"/\").concat(times, \" captures successful\"));\n                        } catch (error) {\n                            console.error(\"Random sequence error:\", error);\n                            setOutputText(\"Random sequence error: \".concat(error.message));\n                        } finally{\n                            // Show TopBar again\n                            setTimeout(()=>setShowTopBar(true), 2000);\n                        }\n                    }).catch((error)=>{\n                        console.error(\"Failed to import required modules:\", error);\n                        setOutputText(\"Error: \".concat(error.message));\n                        setShowTopBar(true);\n                    });\n                }\n                break;\n            case 'randomDot':\n                setOutputText('Random dot action triggered');\n                setShowTopBar(false);\n                if (showCamera) {\n                    toggleCamera(false);\n                }\n                console.log('Attempting to access Random Dot functionality');\n                // Use the random dot functionality from actionButton.js by delegating to ActionButtonGroup\n                // This assumes you have a ref to the ActionButtonGroup component\n                if (actionButtonGroupRef.current && actionButtonGroupRef.current.handleRandomDot) {\n                    console.log('Using ref method');\n                    actionButtonGroupRef.current.handleRandomDot();\n                } else if ( true && window.actionButtonFunctions && typeof window.actionButtonFunctions.handleRandomDot === 'function') {\n                    console.log('Using global bridge method');\n                    window.actionButtonFunctions.handleRandomDot();\n                } else {\n                    // Fallback implementation\n                    const canvas = getMainCanvas();\n                    if (!canvas) {\n                        console.error(\"Canvas not found for random dot action\");\n                        setOutputText(\"Error: Canvas not available for random dot\");\n                        setShowTopBar(true); // Show TopBar again if there's an error\n                        break;\n                    }\n                    const parent = previewAreaRef.current;\n                    if (!parent) {\n                        console.error(\"Parent not found for canvas\");\n                        setOutputText(\"Error: Canvas parent not available\");\n                        setShowTopBar(true);\n                        break;\n                    }\n                    // Initialize canvas explicitly\n                    canvas.width = parent.clientWidth || 800;\n                    canvas.height = parent.clientHeight || 600;\n                    const ctx = canvas.getContext('2d');\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.fillStyle = 'white';\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    console.log(\"Canvas ready for random dot: \".concat(canvas.width, \"x\").concat(canvas.height));\n                    // Update global reference\n                    window.whiteScreenCanvas = canvas;\n                    // Generate random position\n                    const position = (0,_components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__.getRandomPosition)(canvas, 20);\n                    // Draw the dot using the imported function\n                    const dot = (0,_components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__.drawRedDot)(ctx, position.x, position.y, 8, false);\n                    console.log(\"Random dot drawn at: \".concat(position.x, \", \").concat(position.y));\n                    // Start a countdown for capture\n                    (0,_components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__.runCountdown)(position, canvas, (status)=>{\n                        // Update UI based on status\n                        if (status.processStatus) {\n                            setOutputText(status.processStatus);\n                        }\n                    }, ()=>{\n                        // Enable camera before capture\n                        // triggerCameraAccess(true);\n                        // Wait briefly for camera to initialize\n                        setTimeout(()=>{\n                            // Use the directly imported captureImagesAtPoint from the Helper/savefile.js\n                            Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\")).then((param)=>{\n                                let { captureImagesAtPoint } = param;\n                                captureImagesAtPoint({\n                                    point: position,\n                                    captureCount: captureCounter,\n                                    canvasRef: {\n                                        current: canvas\n                                    },\n                                    setCaptureCount: setCaptureCounter,\n                                    showCapturePreview: _components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__.showCapturePreview\n                                }).then(()=>{\n                                    setCaptureCounter((prev)=>prev + 1);\n                                    // Show TopBar again after capture\n                                    setTimeout(()=>{\n                                        setShowTopBar(true);\n                                    }, 2200);\n                                }).catch((err)=>{\n                                    console.error(\"Error capturing images:\", err);\n                                    setOutputText(\"Error: \".concat(err.message));\n                                    setShowTopBar(true);\n                                });\n                            }).catch((err)=>{\n                                console.error(\"Error importing savefile module:\", err);\n                                setOutputText(\"Error: \".concat(err.message));\n                                setShowTopBar(true);\n                            });\n                        }, 500);\n                    });\n                }\n                break;\n            case 'headPose':\n                const newHeadPoseState = !showHeadPose;\n                setShowHeadPose(newHeadPoseState);\n                setOutputText(\"Head pose visualization \".concat(newHeadPoseState ? 'enabled' : 'disabled'));\n                if (newHeadPoseState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newHeadPoseState && !showBoundingBox && !showMask && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showHeadPose: newHeadPoseState\n                    });\n                }\n                break;\n            case 'boundingBox':\n                const newBoundingBoxState = !showBoundingBox;\n                setShowBoundingBox(newBoundingBoxState);\n                setOutputText(\"Bounding box \".concat(newBoundingBoxState ? 'shown' : 'hidden'));\n                if (newBoundingBoxState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newBoundingBoxState && !showHeadPose && !showMask && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showBoundingBox: newBoundingBoxState\n                    });\n                }\n                break;\n            case 'mask':\n                const newMaskState = !showMask;\n                setShowMask(newMaskState);\n                setOutputText(\"Mask \".concat(newMaskState ? 'shown' : 'hidden'));\n                if (newMaskState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newMaskState && !showHeadPose && !showBoundingBox && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showMask: newMaskState\n                    });\n                }\n                break;\n            case 'parameters':\n                const newParametersState = !showParameters;\n                setShowParameters(newParametersState);\n                setOutputText(\"Parameters \".concat(newParametersState ? 'shown' : 'hidden'));\n                if (newParametersState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newParametersState && !showHeadPose && !showBoundingBox && !showMask) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showParameters: newParametersState\n                    });\n                }\n                break;\n            // Fixed calibrate case handler in index.js\n            case 'calibrate':\n                setOutputText('Starting calibration sequence...');\n                setShowTopBar(false);\n                if (showCamera) {\n                    toggleCamera(false);\n                }\n                if (actionButtonGroupRef.current && actionButtonGroupRef.current.handleSetCalibrate) {\n                    // Use the reference method if available\n                    console.log('Using ActionButtonGroup ref method for calibration');\n                    actionButtonGroupRef.current.handleSetCalibrate();\n                } else if ( true && window.actionButtonFunctions && typeof window.actionButtonFunctions.handleSetCalibrate === 'function') {\n                    // Fallback to global method\n                    console.log('Using global bridge method for calibration');\n                    window.actionButtonFunctions.handleSetCalibrate();\n                } else {\n                    // Make sure we have a canvas to work with\n                    const canvas = getMainCanvas();\n                    if (!canvas) {\n                        console.error(\"Canvas not found for calibration\");\n                        setOutputText(\"Error: Canvas not available for calibration\");\n                        setShowTopBar(true);\n                        return;\n                    }\n                    // Load all required modules first, then proceed with execution\n                    Promise.all([\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/CalibratePoints.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\")),\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/countSave.jsx */ \"(pages-dir-browser)/./components/collected-dataset-customized/Action/countSave.jsx\")),\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-browser)/./components/collected-dataset-customized/Helper/savefile.js\"))\n                    ]).then(async (param)=>{\n                        let [calibratePointsModule, countSaveModule, savefileModule] = param;\n                        // Destructure the imported modules\n                        const { generateCalibrationPoints } = calibratePointsModule;\n                        const { drawRedDot, runCountdown, showCapturePreview } = countSaveModule;\n                        const { captureImagesAtPoint } = savefileModule;\n                        try {\n                            // Generate calibration points\n                            const points = generateCalibrationPoints(canvas.width, canvas.height);\n                            if (!points || points.length === 0) {\n                                throw new Error(\"Failed to generate calibration points\");\n                            }\n                            // Create status indicator\n                            const statusIndicator = document.createElement('div');\n                            statusIndicator.className = 'calibrate-status-indicator';\n                            statusIndicator.style.cssText = \"\\n                position: fixed;\\n                top: 10px;\\n                right: 10px;\\n                background-color: rgba(0, 102, 204, 0.9);\\n                color: white;\\n                font-size: 14px;\\n                font-weight: bold;\\n                padding: '8px 12px';\\n                border-radius: 6px;\\n                z-index: 9999;\\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\\n              \";\n                            statusIndicator.textContent = 'Calibration: Initializing...';\n                            document.body.appendChild(statusIndicator);\n                            // Access webcam before starting calibration if available\n                            if (typeof triggerCameraAccess === 'function') {\n                                triggerCameraAccess(true);\n                                await new Promise((resolve)=>setTimeout(resolve, 500));\n                            }\n                            // Process points sequentially\n                            let successCount = 0;\n                            for(let i = 0; i < points.length; i++){\n                                const point = points[i];\n                                statusIndicator.textContent = \"Calibration: Point \".concat(i + 1, \"/\").concat(points.length);\n                                setOutputText(\"Processing calibration point \".concat(i + 1, \"/\").concat(points.length));\n                                // Clear the canvas before drawing new point\n                                const ctx = canvas.getContext('2d');\n                                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                                ctx.fillStyle = 'white';\n                                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                                // Draw the dot\n                                drawRedDot(ctx, point.x, point.y);\n                                // Run countdown\n                                await new Promise((resolve)=>{\n                                    runCountdown(point, canvas, (status)=>{\n                                        if (status.processStatus) {\n                                            setOutputText(status.processStatus);\n                                        }\n                                    }, resolve // This will be called when countdown completes\n                                    );\n                                });\n                                // Capture images at this point\n                                try {\n                                    const captureResult = await captureImagesAtPoint({\n                                        point: point,\n                                        captureCount: captureCounter,\n                                        canvasRef: {\n                                            current: canvas\n                                        },\n                                        setCaptureCount: setCaptureCounter,\n                                        showCapturePreview: showCapturePreview\n                                    });\n                                    if (captureResult && (captureResult.screenImage || captureResult.success)) {\n                                        successCount++;\n                                    }\n                                    // Increment counter\n                                    setCaptureCounter((prev)=>prev + 1);\n                                } catch (error) {\n                                    console.error(\"Error capturing point \".concat(i + 1, \":\"), error);\n                                }\n                                // Wait between points\n                                await new Promise((resolve)=>setTimeout(resolve, 1200));\n                            }\n                            // Calibration complete\n                            statusIndicator.textContent = \"Calibration complete: \".concat(successCount, \"/\").concat(points.length, \" points\");\n                            setOutputText(\"Calibration completed: \".concat(successCount, \"/\").concat(points.length, \" points captured\"));\n                            // Remove the status indicator after a delay\n                            setTimeout(()=>{\n                                if (statusIndicator.parentNode) {\n                                    statusIndicator.parentNode.removeChild(statusIndicator);\n                                }\n                            }, 3000);\n                        } catch (error) {\n                            console.error(\"Calibration error:\", error);\n                            setOutputText(\"Calibration error: \".concat(error.message));\n                        } finally{\n                            // Show TopBar again\n                            setTimeout(()=>setShowTopBar(true), 2000);\n                        }\n                    }).catch((error)=>{\n                        console.error(\"Failed to import required modules:\", error);\n                        setOutputText(\"Calibration error: \".concat(error.message));\n                        setShowTopBar(true);\n                    });\n                }\n                break;\n            case 'clearAll':\n                // Clear canvas\n                // const canvas = getMainCanvas();\n                if (canvas) {\n                    const ctx = canvas.getContext('2d');\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.fillStyle = 'white';\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    setOutputText('Canvas cleared');\n                }\n                break;\n            default:\n                setOutputText(\"Action triggered: \".concat(actionType));\n        }\n    };\n    const handlePermissionAccepted = ()=>{\n        if (!isClient || !isHydrated) return;\n        setShowPermissionPopup(false);\n        setCameraPermissionGranted(true);\n        toggleCamera(true);\n    };\n    const handlePermissionDenied = ()=>{\n        if (!isClient || !isHydrated) return;\n        setShowPermissionPopup(false);\n        setShowCameraPlaceholder(false);\n        setOutputText('Camera permission denied');\n    };\n    const handleCameraClose = ()=>{\n        if (!isClient || !isHydrated) return;\n        toggleCamera(false);\n    };\n    const handleCameraReady = (dimensions)=>{\n        if (!isClient || !isHydrated) return;\n        setMetrics({\n            width: dimensions.width,\n            height: dimensions.height,\n            distance: dimensions.distance || '---'\n        });\n        setOutputText(\"Camera ready: \".concat(dimensions.width, \"x\").concat(dimensions.height));\n    };\n    // Toggle top bar function\n    const toggleTopBar = (show)=>{\n        const newTopBarState = show !== undefined ? show : !showTopBar;\n        setShowTopBar(newTopBarState);\n        // Also hide metrics when hiding the top bar\n        if (!newTopBarState) {\n            setShowMetrics(false);\n        }\n        setOutputText(\"TopBar \".concat(newTopBarState ? 'shown' : 'hidden').concat(!newTopBarState ? ', Metrics hidden' : ''));\n        // Wait for state update and DOM changes, then adjust canvas\n        setTimeout(adjustCanvasDimensions, 100);\n    };\n    // Toggle metrics function\n    const toggleMetrics = ()=>{\n        if (showTopBar) {\n            setShowMetrics((prev)=>!prev);\n            setOutputText(\"Metrics \".concat(!showMetrics ? 'shown' : 'hidden'));\n        } else {\n            // If topBar is hidden, we can't show metrics\n            setOutputText('Cannot show metrics when TopBar is hidden');\n        }\n    };\n    // Function to trigger camera access\n    const triggerCameraAccess = (forceEnable)=>{\n        if (forceEnable) {\n            // Wait a bit for VideoProcessor to be available\n            const waitForVideoProcessor = ()=>{\n                return new Promise((resolve)=>{\n                    const checkProcessor = ()=>{\n                        if (window.videoProcessor && typeof window.videoProcessor.startVideoProcessing === 'function') {\n                            resolve(true);\n                        } else {\n                            setTimeout(checkProcessor, 100);\n                        }\n                    };\n                    checkProcessor();\n                });\n            };\n            // Try to enable camera directly\n            waitForVideoProcessor().then((processorAvailable)=>{\n                if (processorAvailable) {\n                    setShowCamera(true);\n                    setShowCameraPlaceholder(false);\n                    setCameraPermissionGranted(true);\n                    // Start video processing with current options\n                    try {\n                        window.videoProcessor.startVideoProcessing({\n                            showHeadPose,\n                            showBoundingBox,\n                            showMask,\n                            showParameters,\n                            showProcessedImage: true\n                        });\n                        console.log('Video processing started successfully');\n                        return true;\n                    } catch (error) {\n                        console.error('Error starting video processing:', error);\n                        setShowCamera(false);\n                        setShowCameraPlaceholder(false);\n                        setCameraPermissionGranted(false);\n                        return false;\n                    }\n                } else {\n                    console.warn('VideoProcessor not available after waiting');\n                    // Fallback to showing camera permission popup\n                    setShowPermissionPopup(true);\n                    return false;\n                }\n            }).catch((error)=>{\n                console.error('Error waiting for VideoProcessor:', error);\n                setShowPermissionPopup(true);\n                return false;\n            });\n            // Return true immediately to indicate we're trying\n            return true;\n        }\n        // Just toggle current state if not forcing\n        if (cameraPermissionGranted) {\n            toggleCamera(!showCamera);\n            return true;\n        } else {\n            setShowPermissionPopup(true);\n            return false;\n        }\n    };\n    // Dynamic class to reflect current window size\n    const getSizeClass = ()=>{\n        const { percentage } = windowSize;\n        if (percentage < 35) return 'window-size-tiny';\n        if (percentage < 50) return 'window-size-small';\n        if (percentage < 70) return 'window-size-medium';\n        return 'window-size-large';\n    };\n    // Add this function to handle settings visibility\n    const handleSettingsVisibility = (isVisible)=>{\n        setShowSettings(isVisible);\n    };\n    // Add this effect to listen for settings visibility changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const handleSettingsMessage = {\n                \"CollectedDatasetPage.useEffect.handleSettingsMessage\": (event)=>{\n                    if (event.data.type === 'SHOW_SETTINGS') {\n                        setShowSettings(event.data.show);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleSettingsMessage\"];\n            window.addEventListener('message', handleSettingsMessage);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('message', handleSettingsMessage);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], []);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"CollectedDatasetPage.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        setCurrentUserId(event.detail.userId);\n                        // Dispatch event to update settings for the new user\n                        const event = new CustomEvent('captureSettingsUpdate', {\n                            detail: {\n                                type: 'captureSettings',\n                                userId: event.detail.userId\n                            }\n                        });\n                        window.dispatchEvent(event);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], []);\n    // Initialize settings when component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (consentUserId) {\n                // Set the current user ID\n                setCurrentUserId(consentUserId);\n                // Dispatch event to update settings for this user\n                const event = new CustomEvent('captureSettingsUpdate', {\n                    detail: {\n                        type: 'captureSettings',\n                        userId: consentUserId\n                    }\n                });\n                window.dispatchEvent(event);\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId\n    ]);\n    // Load settings from backend when component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const loadSettings = {\n                \"CollectedDatasetPage.useEffect.loadSettings\": async ()=>{\n                    if (!consentUserId) return;\n                    try {\n                        const response = await fetch(\"/api/data-center/settings/\".concat(consentUserId));\n                        if (!response.ok) {\n                            throw new Error('Failed to load settings');\n                        }\n                        const loadedSettings = await response.json();\n                        // Wait for the component to be mounted and ref to be initialized\n                        const waitForRef = {\n                            \"CollectedDatasetPage.useEffect.loadSettings.waitForRef\": function() {\n                                let retries = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 5;\n                                if (actionButtonGroupRef.current && typeof actionButtonGroupRef.current.updateSettings === 'function') {\n                                    // Update the settings for this user\n                                    actionButtonGroupRef.current.updateSettings(loadedSettings);\n                                    // Dispatch event to update UI\n                                    const event = new CustomEvent('captureSettingsUpdate', {\n                                        detail: {\n                                            type: 'captureSettings',\n                                            userId: consentUserId,\n                                            times: loadedSettings.times,\n                                            delay: loadedSettings.delay\n                                        }\n                                    });\n                                    window.dispatchEvent(event);\n                                } else if (retries > 0) {\n                                    setTimeout({\n                                        \"CollectedDatasetPage.useEffect.loadSettings.waitForRef\": ()=>waitForRef(retries - 1)\n                                    }[\"CollectedDatasetPage.useEffect.loadSettings.waitForRef\"], 500);\n                                } else {\n                                    console.warn('ActionButtonGroup ref not initialized after retries');\n                                }\n                            }\n                        }[\"CollectedDatasetPage.useEffect.loadSettings.waitForRef\"];\n                        waitForRef();\n                    } catch (error) {\n                        console.error('Error loading settings:', error);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.loadSettings\"];\n            // Add a small delay to ensure components are mounted\n            setTimeout(loadSettings, 1000);\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId\n    ]);\n    // Add polling for real-time updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const fetchUpdates = {\n                \"CollectedDatasetPage.useEffect.fetchUpdates\": async ()=>{\n                    if (!consentUserId) return;\n                    try {\n                        const response = await fetch(\"/api/data-center/settings/\".concat(consentUserId));\n                        if (!response.ok) throw new Error('Failed to fetch settings');\n                        const settings = await response.json();\n                        if (actionButtonGroupRef.current && actionButtonGroupRef.current.updateSettings) {\n                            actionButtonGroupRef.current.updateSettings(settings);\n                        }\n                    // You can add image fetching logic here if needed\n                    } catch (error) {\n                        console.error('Error fetching updates:', error);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.fetchUpdates\"];\n            // Initial fetch\n            fetchUpdates();\n            // Set up polling interval\n            const interval = setInterval(fetchUpdates, 3000);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    clearInterval(interval);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId\n    ]);\n    // Add event listeners for settings and image updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"CollectedDatasetPage.useEffect.handleSettingsUpdate\": (event)=>{\n                    var _event_detail, _event_detail1;\n                    if (((_event_detail = event.detail) === null || _event_detail === void 0 ? void 0 : _event_detail.type) === 'captureSettings' && ((_event_detail1 = event.detail) === null || _event_detail1 === void 0 ? void 0 : _event_detail1.userId) === consentUserId) {\n                        const { times, delay } = event.detail;\n                        if (actionButtonGroupRef.current && actionButtonGroupRef.current.updateSettings) {\n                            actionButtonGroupRef.current.updateSettings({\n                                times,\n                                delay\n                            });\n                        }\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleSettingsUpdate\"];\n            const handleImageUpdate = {\n                \"CollectedDatasetPage.useEffect.handleImageUpdate\": (event)=>{\n                    var _event_detail, _event_detail1;\n                    if (((_event_detail = event.detail) === null || _event_detail === void 0 ? void 0 : _event_detail.type) === 'image' && ((_event_detail1 = event.detail) === null || _event_detail1 === void 0 ? void 0 : _event_detail1.userId) === consentUserId) {\n                        const { image } = event.detail;\n                    // Update image in the UI if needed\n                    // You can add your image update logic here\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleImageUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            window.addEventListener('imageUpdate', handleImageUpdate);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate);\n                    window.removeEventListener('imageUpdate', handleImageUpdate);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId\n    ]);\n    // Load settings for a specific user\n    const loadSettings = async (userId)=>{\n        try {\n            console.log('Loading settings for user:', userId);\n            const response = await fetch(\"/api/data-center/settings/\".concat(userId));\n            if (!response.ok) throw new Error('Failed to fetch settings');\n            const userSettings = await response.json();\n            console.log('Fetched settings:', userSettings);\n            // Dispatch settings update event\n            const event = new CustomEvent('captureSettingsUpdate', {\n                detail: {\n                    type: 'captureSettings',\n                    userId,\n                    ...userSettings\n                }\n            });\n            window.dispatchEvent(event);\n        } catch (error) {\n            console.error('Error loading settings:', error);\n        }\n    };\n    // Handle user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (consentUserId && consentUserId !== currentUserId) {\n                console.log('User ID changed in index.js:', consentUserId);\n                setCurrentUserId(consentUserId);\n                // Dispatch event to notify other components\n                const event = new CustomEvent('userIdChange', {\n                    detail: {\n                        userId: consentUserId\n                    }\n                });\n                window.dispatchEvent(event);\n                // Load settings for the new user\n                loadSettings(consentUserId);\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId,\n        currentUserId\n    ]);\n    // Listen for settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"CollectedDatasetPage.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail && event.detail.type === 'captureSettings') {\n                        const { userId, times, delay } = event.detail;\n                        if (userId === currentUserId) {\n                            // Update the settings for this user\n                            if (actionButtonGroupRef.current && actionButtonGroupRef.current.updateSettings) {\n                                actionButtonGroupRef.current.updateSettings({\n                                    times: times || 1,\n                                    delay: delay || 3\n                                });\n                            }\n                        }\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        currentUserId\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"main-container \".concat(getSizeClass()),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Camera Dataset Collection\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1553,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1554,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1552,\n                columnNumber: 7\n            }, this),\n            isHydrated && backendStatus === 'disconnected' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    padding: '6px 0',\n                    backgroundColor: '#ffe0b2',\n                    color: '#e65100',\n                    textAlign: 'center',\n                    fontSize: '14px',\n                    fontWeight: 'bold',\n                    zIndex: 1100\n                },\n                children: \"⚠️ Backend disconnected. Hurry up, Make ONLINE please and Using mock mode\"\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1559,\n                columnNumber: 9\n            }, this),\n            isHydrated && showWarning && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"warning-banner\",\n                style: {\n                    position: 'fixed',\n                    top: showTopBar ? backendStatus === 'disconnected' ? '32px' : '60px' : '0',\n                    left: '0',\n                    width: '100%',\n                    backgroundColor: '#ffeb3b',\n                    color: '#333',\n                    padding: '10px',\n                    textAlign: 'center',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n                    zIndex: 1010,\n                    animation: 'fadeIn 0.3s ease-in-out'\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                    children: [\n                        \"⚠️ \",\n                        warningMessage\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 1591,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1578,\n                columnNumber: 9\n            }, this),\n            isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"loading-container\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Loading user settings...\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 1597,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1596,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    isHydrated && isClient && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VideoProcessorComponent, {}, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1603,\n                        columnNumber: 9\n                    }, this),\n                    showTopBar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_topBar__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        onButtonClick: handleActionButtonClick,\n                        onCameraAccess: ()=>setShowPermissionPopup(true),\n                        outputText: statusMessage || outputText,\n                        onOutputChange: (text)=>setOutputText(text),\n                        onToggleTopBar: toggleTopBar,\n                        onToggleMetrics: toggleMetrics,\n                        canvasRef: canvasRef\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1608,\n                        columnNumber: 13\n                    }, this),\n                    !showTopBar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"restore-button-container\",\n                        style: {\n                            position: 'fixed',\n                            top: '10px',\n                            right: '10px',\n                            zIndex: 1000\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"restore-btn\",\n                            onClick: ()=>toggleTopBar(true),\n                            title: \"Show TopBar and Metrics\",\n                            style: {\n                                padding: '5px 10px',\n                                background: '#0066cc',\n                                color: 'white',\n                                border: 'none',\n                                borderRadius: '4px',\n                                fontSize: '16px',\n                                cursor: 'pointer'\n                            },\n                            children: \"≡\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                            lineNumber: 1627,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1621,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: previewAreaRef,\n                        className: \"camera-preview-area\",\n                        style: {\n                            height: showTopBar ? 'calc(100vh - 120px)' : '100vh',\n                            marginTop: backendStatus === 'disconnected' ? '32px' : '0',\n                            position: 'relative',\n                            backgroundColor: '#f5f5f5',\n                            overflow: 'hidden'\n                        },\n                        children: [\n                            !showCamera ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"camera-preview-message\",\n                                        style: {\n                                            padding: '20px',\n                                            textAlign: 'center',\n                                            position: showTopBar ? 'relative' : 'absolute',\n                                            width: '100%',\n                                            zIndex: 5\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                children: \"Camera preview will appear here\"\n                                            }, void 0, false, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1686,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"camera-size-indicator\",\n                                                children: [\n                                                    \"Current window: \",\n                                                    windowSize.percentage,\n                                                    \"% of screen width\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1687,\n                                                columnNumber: 19\n                                            }, this),\n                                            isHydrated && showCameraPlaceholder && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"camera-placeholder-square\",\n                                                style: {\n                                                    width: '180px',\n                                                    height: '135px',\n                                                    margin: '20px auto',\n                                                    border: '2px dashed #666',\n                                                    borderRadius: '4px',\n                                                    backgroundColor: '#f5f5f5',\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent: 'center'\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    style: {\n                                                        fontSize: '1.5rem'\n                                                    },\n                                                    children: \"\\uD83D\\uDCF7\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1705,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1691,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                        lineNumber: 1679,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"canvas-container\",\n                                        style: {\n                                            position: 'absolute',\n                                            top: 0,\n                                            left: 0,\n                                            width: '100%',\n                                            height: '100%',\n                                            backgroundColor: 'white',\n                                            overflow: 'hidden',\n                                            border: 'none',\n                                            zIndex: 10,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center'\n                                        },\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                                            ref: canvasRef,\n                                            className: \"tracking-canvas\",\n                                            style: {\n                                                width: '100%',\n                                                height: '100%',\n                                                display: 'block',\n                                                maxWidth: '100%',\n                                                maxHeight: '100%',\n                                                objectFit: 'contain'\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1728,\n                                            columnNumber: 19\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                        lineNumber: 1711,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true) : null,\n                            isHydrated && showMetrics && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_displayResponse__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                width: metrics.width,\n                                height: metrics.height,\n                                distance: metrics.distance,\n                                isVisible: showMetrics\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1746,\n                                columnNumber: 15\n                            }, this),\n                            isHydrated && isClient && showCamera && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicCameraAccess, {\n                                isShowing: showCamera,\n                                onClose: handleCameraClose,\n                                onCameraReady: handleCameraReady,\n                                showHeadPose: showHeadPose,\n                                showBoundingBox: showBoundingBox,\n                                showMask: showMask,\n                                showParameters: showParameters,\n                                videoRef: videoRef\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1756,\n                                columnNumber: 15\n                            }, this),\n                            isHydrated && isClient && showPermissionPopup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"camera-permission-popup\",\n                                style: {\n                                    position: 'fixed',\n                                    top: 0,\n                                    left: 0,\n                                    width: '100%',\n                                    height: '100%',\n                                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    zIndex: 2000\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"camera-permission-dialog\",\n                                    style: {\n                                        width: '400px',\n                                        backgroundColor: 'white',\n                                        borderRadius: '8px',\n                                        padding: '20px',\n                                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"camera-permission-title\",\n                                            style: {\n                                                margin: '0 0 15px',\n                                                fontSize: '18px',\n                                                fontWeight: 'bold'\n                                            },\n                                            children: \"Camera Access Required\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1789,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"camera-permission-message\",\n                                            style: {\n                                                margin: '0 0 20px',\n                                                fontSize: '14px',\n                                                lineHeight: '1.4'\n                                            },\n                                            children: 'This application needs access to your camera to function properly. When prompted by your browser, please click \"Allow\" to grant camera access.'\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1794,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"camera-permission-buttons\",\n                                            style: {\n                                                display: 'flex',\n                                                justifyContent: 'flex-end',\n                                                gap: '10px'\n                                            },\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: handlePermissionDenied,\n                                                    className: \"camera-btn\",\n                                                    style: {\n                                                        padding: '8px 16px',\n                                                        backgroundColor: '#f0f0f0',\n                                                        border: 'none',\n                                                        borderRadius: '4px',\n                                                        cursor: 'pointer'\n                                                    },\n                                                    children: \"Cancel\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1807,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: handlePermissionAccepted,\n                                                    className: \"camera-btn\",\n                                                    style: {\n                                                        padding: '8px 16px',\n                                                        backgroundColor: '#0066cc',\n                                                        color: 'white',\n                                                        border: 'none',\n                                                        borderRadius: '4px',\n                                                        cursor: 'pointer'\n                                                    },\n                                                    children: \"Continue\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1820,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1802,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                    lineNumber: 1782,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1770,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1647,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n        lineNumber: 1551,\n        columnNumber: 5\n    }, this);\n}\n_s(CollectedDatasetPage, \"dPRoW5+9h6WED+2wlVkeXYK1P7Y=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_10__.useRouter,\n        _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_9__.useConsent\n    ];\n});\n_c2 = CollectedDatasetPage;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"VideoProcessorComponent\");\n$RefreshReg$(_c1, \"DynamicCameraAccess\");\n$RefreshReg$(_c2, \"CollectedDatasetPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3BhZ2VzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxxREFBcUQ7OztBQUNNO0FBQzlCO0FBQ007QUFDVTtBQUNrQjtBQUNHO0FBQ3FHO0FBQ2xEO0FBQ2hEO0FBQzdCO0FBRXhDLHlFQUF5RTtBQUN6RSxNQUFNaUIsMEJBQTBCWixtREFBT0EsQ0FDckMsSUFBTSxrVkFBa0Q7Ozs7OztJQUN0RGEsS0FBSzs7S0FGSEQ7QUFLTiw0REFBNEQ7QUFDNUQsTUFBTUUsc0JBQXNCZCxtREFBT0EsQ0FDakMsSUFBTSxpVEFBdUM7Ozs7OztJQUUzQ2EsS0FBSztJQUNMRSxTQUFTLGtCQUNQLDhEQUFDQztZQUFJQyxPQUFPO2dCQUNWQyxVQUFVO2dCQUNWQyxLQUFLO2dCQUNMQyxNQUFNO2dCQUNOQyxXQUFXO2dCQUNYQyxPQUFPO2dCQUNQQyxRQUFRO2dCQUNSQyxpQkFBaUI7Z0JBQ2pCQyxRQUFRO2dCQUNSQyxjQUFjO2dCQUNkQyxTQUFTO2dCQUNUQyxlQUFlO2dCQUNmQyxnQkFBZ0I7Z0JBQ2hCQyxZQUFZO2dCQUNaQyxXQUFXO2dCQUNYQyxRQUFRO1lBQ1Y7OzhCQUNFLDhEQUFDaEI7b0JBQUlDLE9BQU87d0JBQUVnQixVQUFVO3dCQUFRQyxjQUFjO29CQUFPOzhCQUFHOzs7Ozs7OEJBQ3hELDhEQUFDQztvQkFBRWxCLE9BQU87d0JBQUVnQixVQUFVO3dCQUFRRyxZQUFZO3dCQUFRQyxPQUFPO29CQUFVOzhCQUFHOzs7Ozs7Ozs7Ozs7O01BdkJ4RXZCO0FBK0JTLFNBQVN3Qjs7SUFDdEIsTUFBTUMsU0FBUzVCLHVEQUFTQTtJQUN4QixNQUFNLEVBQUU2QixRQUFRQyxhQUFhLEVBQUUsR0FBRy9CLDhFQUFVQTtJQUM1QyxNQUFNLENBQUNnQyxVQUFVQyxZQUFZLEdBQUcvQywrQ0FBUUEsQ0FBQztJQUN6QyxNQUFNLENBQUNnRCxXQUFXQyxhQUFhLEdBQUdqRCwrQ0FBUUEsQ0FBQztJQUMzQyxNQUFNLENBQUNrRCxPQUFPQyxTQUFTLEdBQUduRCwrQ0FBUUEsQ0FBQztJQUNuQyxNQUFNLENBQUNvRCxZQUFZQyxjQUFjLEdBQUdyRCwrQ0FBUUEsQ0FBQztJQUM3QyxNQUFNLENBQUNzRCxlQUFlQyxpQkFBaUIsR0FBR3ZELCtDQUFRQSxDQUFDO0lBQ25ELE1BQU0sQ0FBQ3dELFlBQVlDLGNBQWMsR0FBR3pELCtDQUFRQSxDQUFDO0lBQzdDLE1BQU0sQ0FBQzBELGFBQWFDLGVBQWUsR0FBRzNELCtDQUFRQSxDQUFDO0lBQy9DLE1BQU0sQ0FBQzRELGdCQUFnQkMsa0JBQWtCLEdBQUc3RCwrQ0FBUUEsQ0FBQztJQUNyRCxNQUFNLENBQUM4RCxlQUFlQyxpQkFBaUIsR0FBRy9ELCtDQUFRQSxDQUFDO0lBQ25ELE1BQU0sQ0FBQ2dFLFlBQVlDLGNBQWMsR0FBR2pFLCtDQUFRQSxDQUFDO0lBQzdDLE1BQU0sQ0FBQ2tFLGFBQWFDLGVBQWUsR0FBR25FLCtDQUFRQSxDQUFDO0lBQy9DLE1BQU0sQ0FBQ29FLHFCQUFxQkMsdUJBQXVCLEdBQUdyRSwrQ0FBUUEsQ0FBQztJQUMvRCxNQUFNLENBQUNzRSx5QkFBeUJDLDJCQUEyQixHQUFHdkUsK0NBQVFBLENBQUM7SUFDdkUsTUFBTSxDQUFDd0UsWUFBWUMsY0FBYyxHQUFHekUsK0NBQVFBLENBQUM7SUFDN0MsTUFBTSxDQUFDMEUsdUJBQXVCQyx5QkFBeUIsR0FBRzNFLCtDQUFRQSxDQUFDO0lBQ25FLE1BQU0sQ0FBQzRFLGNBQWNDLGdCQUFnQixHQUFHN0UsK0NBQVFBLENBQUM7SUFDakQsTUFBTSxDQUFDOEUsaUJBQWlCQyxtQkFBbUIsR0FBRy9FLCtDQUFRQSxDQUFDO0lBQ3ZELE1BQU0sQ0FBQ2dGLFVBQVVDLFlBQVksR0FBR2pGLCtDQUFRQSxDQUFDO0lBQ3pDLE1BQU0sQ0FBQ2tGLGdCQUFnQkMsa0JBQWtCLEdBQUduRiwrQ0FBUUEsQ0FBQztJQUNyRCxNQUFNLENBQUNvRixZQUFZQyxjQUFjLEdBQUdyRiwrQ0FBUUEsQ0FBQztRQUFFMEIsT0FBTztRQUFHQyxRQUFRO1FBQUcyRCxZQUFZO0lBQUk7SUFDcEYsTUFBTSxDQUFDQyxTQUFTQyxXQUFXLEdBQUd4RiwrQ0FBUUEsQ0FBQztRQUFFMEIsT0FBTztRQUFPQyxRQUFRO1FBQU84RCxVQUFVO0lBQU07SUFDdEYsTUFBTSxDQUFDQyxnQkFBZ0JDLGtCQUFrQixHQUFHM0YsK0NBQVFBLENBQUM7SUFDckQsTUFBTSxDQUFDNEYsZUFBZUMsaUJBQWlCLEdBQUc3RiwrQ0FBUUEsQ0FBQztJQUNuRCxNQUFNLENBQUM4RixlQUFlQyxpQkFBaUIsR0FBRy9GLCtDQUFRQSxDQUFDO0lBQ25ELE1BQU0sQ0FBQ2dHLGNBQWNDLGdCQUFnQixHQUFHakcsK0NBQVFBLENBQUM7SUFFakQsT0FBTztJQUNQLE1BQU1rRyxpQkFBaUJoRyw2Q0FBTUEsQ0FBQztJQUM5QixNQUFNaUcsWUFBWWpHLDZDQUFNQSxDQUFDO0lBQ3pCLE1BQU1rRyxXQUFXbEcsNkNBQU1BLENBQUM7SUFDeEIsTUFBTW1HLHVCQUF1Qm5HLDZDQUFNQSxDQUFDO0lBRXBDLGlDQUFpQztJQUNqQ0QsZ0RBQVNBOzBDQUFDO1lBQ1JvRCxjQUFjO1FBQ2hCO3lDQUFHLEVBQUU7SUFFTCxpQkFBaUI7SUFDakJwRCxnREFBU0E7MENBQUM7WUFDUixNQUFNcUc7K0RBQWU7b0JBQ25CLElBQUksQ0FBQzNELE9BQU80RCxPQUFPLEVBQUU7b0JBRXJCLElBQUk7d0JBQ0YsSUFBSTVELE9BQU82RCxLQUFLLENBQUMxRCxRQUFRLEVBQUU7NEJBQ3pCLE1BQU0yRCxhQUFhQyxLQUFLQyxLQUFLLENBQUNoRSxPQUFPNkQsS0FBSyxDQUFDMUQsUUFBUTs0QkFDbkRDLFlBQVkwRDs0QkFDWjt3QkFDRjt3QkFFQSxJQUFJOUQsT0FBTzZELEtBQUssQ0FBQzVELE1BQU0sRUFBRTs0QkFDdkIsTUFBTWdFLFdBQVcsTUFBTUMsTUFBTSx5QkFBNkMsT0FBcEJsRSxPQUFPNkQsS0FBSyxDQUFDNUQsTUFBTSxHQUFJO2dDQUMzRWtFLFNBQVM7b0NBQ1AsVUFBVTtvQ0FDVixnQkFBZ0I7b0NBQ2hCLGFBQWFDLHNDQUErQixJQUFJLENBQXNDO2dDQUN4Rjs0QkFDRjs0QkFDQSxJQUFJLENBQUNILFNBQVNNLEVBQUUsRUFBRTtnQ0FDaEIsTUFBTSxJQUFJQyxNQUFNOzRCQUNsQjs0QkFDQSxNQUFNQyxPQUFPLE1BQU1SLFNBQVNTLElBQUk7NEJBQ2hDdEUsWUFBWXFFO3dCQUNkO29CQUNGLEVBQUUsT0FBT0UsS0FBSzt3QkFDWkMsUUFBUXJFLEtBQUssQ0FBQyw0QkFBNEJvRTt3QkFDMUNuRSxTQUFTbUUsSUFBSUUsT0FBTztvQkFDdEIsU0FBVTt3QkFDUnZFLGFBQWE7b0JBQ2Y7Z0JBQ0Y7O1lBRUFxRDtRQUNGO3lDQUFHO1FBQUMzRCxPQUFPNEQsT0FBTztRQUFFNUQsT0FBTzZELEtBQUs7S0FBQztJQUVqQywyQkFBMkI7SUFDM0J2RyxnREFBU0E7MENBQUM7WUFDUixNQUFNd0g7eUVBQXlCO29CQUM3QixJQUFJO3dCQUNGLE1BQU1iLFdBQVcsTUFBTUMsTUFBTTt3QkFDN0IsTUFBTU8sT0FBTyxNQUFNUixTQUFTUyxJQUFJO3dCQUNoQzlELGlCQUFpQjZELEtBQUtNLFNBQVMsR0FBRyxjQUFjO29CQUNsRCxFQUFFLE9BQU94RSxPQUFPO3dCQUNkcUUsUUFBUXJFLEtBQUssQ0FBQyxzQ0FBc0NBO3dCQUNwREssaUJBQWlCO29CQUNuQjtnQkFDRjs7WUFFQSxJQUFJSCxZQUFZO2dCQUNkcUU7WUFDRjtRQUNGO3lDQUFHO1FBQUNyRTtLQUFXO0lBRWYscUJBQXFCO0lBQ3JCbkQsZ0RBQVNBOzBDQUFDO1lBQ1IsTUFBTTBIO21FQUFtQjtvQkFDdkIsSUFBSXpCLGVBQWUwQixPQUFPLEVBQUU7d0JBQzFCLE1BQU1sRyxRQUFRd0UsZUFBZTBCLE9BQU8sQ0FBQ0MsV0FBVzt3QkFDaEQsTUFBTWxHLFNBQVN1RSxlQUFlMEIsT0FBTyxDQUFDRSxZQUFZO3dCQUNsRCxNQUFNQyxtQkFBbUIsT0FBUUUsVUFBVSxHQUFHRCxPQUFPRSxNQUFNLENBQUN4RyxLQUFLLEdBQUk7d0JBRXJFOEQ7K0VBQVcyQyxDQUFBQSxPQUFTO29DQUFFLEdBQUdBLElBQUk7b0NBQUV6RztvQ0FBT0M7Z0NBQU87O3dCQUM3QzBELGNBQWM7NEJBQ1ozRCxPQUFPc0csT0FBT0MsVUFBVTs0QkFDeEJ0RyxRQUFRcUcsT0FBT0ksV0FBVzs0QkFDMUI5QyxZQUFZK0MsS0FBS0MsS0FBSyxDQUFDUDt3QkFDekI7b0JBQ0Y7Z0JBQ0Y7O1lBRUEsSUFBSTNFLFlBQVk7Z0JBQ2R1RTtnQkFDQUssT0FBT08sZ0JBQWdCLENBQUMsVUFBVVo7Z0JBQ2xDO3NEQUFPLElBQU1LLE9BQU9RLG1CQUFtQixDQUFDLFVBQVViOztZQUNwRDtRQUNGO3lDQUFHO1FBQUN2RTtLQUFXO0lBRWYseUNBQXlDO0lBQ3pDbkQsZ0RBQVNBOzBDQUFDO1lBQ1IsSUFBSTZDLFlBQVlELGVBQWU7Z0JBQzdCMEUsUUFBUWtCLEdBQUcsQ0FBQyxtQ0FBbUM1RixlQUFlQztnQkFFOUQsb0NBQW9DO2dCQUNwQyxJQUFJQSxTQUFTNEYsV0FBVyxFQUFFO29CQUN4QixNQUFNLEVBQUVBLFdBQVcsRUFBRSxHQUFHNUY7b0JBRXhCLHNDQUFzQztvQkFDdEMsSUFBSTRGLFlBQVlDLGNBQWMsRUFBRTt3QkFDOUIsTUFBTSxFQUFFL0QsWUFBWSxFQUFFRSxlQUFlLEVBQUVFLFFBQVEsRUFBRUUsY0FBYyxFQUFFLEdBQUd3RCxZQUFZQyxjQUFjO3dCQUM5RjlELGdCQUFnQkQsZ0JBQWdCO3dCQUNoQ0csbUJBQW1CRCxtQkFBbUI7d0JBQ3RDRyxZQUFZRCxZQUFZO3dCQUN4Qkcsa0JBQWtCRCxrQkFBa0I7b0JBQ3RDO29CQUVBLGtDQUFrQztvQkFDbEMsSUFBSXdELFlBQVluRCxPQUFPLEVBQUU7d0JBQ3ZCcEIsZUFBZXVFLFlBQVluRCxPQUFPLENBQUNxRCxJQUFJLElBQUk7b0JBQzdDO29CQUVBLElBQUlGLFlBQVlHLE1BQU0sRUFBRTt3QkFDdEJwRixjQUFjaUYsWUFBWUcsTUFBTSxDQUFDRCxJQUFJLElBQUk7b0JBQzNDO2dCQUNGO1lBQ0Y7UUFDRjt5Q0FBRztRQUFDOUY7UUFBVUQ7S0FBYztJQUU1QiwyREFBMkQ7SUFDM0QsTUFBTWlHLGdCQUFnQjtRQUNwQiwwQ0FBMEM7UUFDMUMsSUFBSSxLQUE2QixJQUFJZCxPQUFPZSxhQUFhLEVBQUU7WUFDekQsT0FBT2YsT0FBT2UsYUFBYSxDQUFDQyxTQUFTLE1BQU1oQixPQUFPZSxhQUFhLENBQUNFLFlBQVk7UUFDOUU7UUFFQSxnREFBZ0Q7UUFDaEQsSUFBSTlDLFVBQVV5QixPQUFPLEVBQUU7WUFDckJMLFFBQVFrQixHQUFHLENBQUM7WUFDWixPQUFPdEMsVUFBVXlCLE9BQU87UUFDMUI7UUFFQSx3Q0FBd0M7UUFDeEMsSUFBSSxLQUE2QixJQUFJSSxPQUFPa0IsaUJBQWlCLEVBQUU7WUFDN0QzQixRQUFRa0IsR0FBRyxDQUFDO1lBQ1p0QyxVQUFVeUIsT0FBTyxHQUFHSSxPQUFPa0IsaUJBQWlCLEVBQUUsaUJBQWlCO1lBQy9ELE9BQU9sQixPQUFPa0IsaUJBQWlCO1FBQ2pDO1FBRUEsZ0NBQWdDO1FBQ2hDLElBQUksT0FBT0MsYUFBYSxhQUFhO1lBQ25DLE1BQU1DLGdCQUFnQkQsU0FBU0UsYUFBYSxDQUFDO1lBQzdDLElBQUlELGVBQWU7Z0JBQ2pCN0IsUUFBUWtCLEdBQUcsQ0FBQztnQkFDWnRDLFVBQVV5QixPQUFPLEdBQUd3QixlQUFlLGlCQUFpQjtnQkFDcEQsSUFBSSxJQUE2QixFQUFFO29CQUNqQ3BCLE9BQU9rQixpQkFBaUIsR0FBR0UsZUFBZSx3QkFBd0I7Z0JBQ3BFO2dCQUNBLE9BQU9BO1lBQ1Q7UUFDRjtRQUVBN0IsUUFBUStCLElBQUksQ0FBQztRQUNiLE9BQU87SUFDVDtJQUVBLHlDQUF5QztJQUN6QyxNQUFNQyxXQUFXLGFBQWtCO0lBRW5DLGlFQUFpRTtJQUNqRXRKLGdEQUFTQTswQ0FBQztZQUNSLElBQUksQ0FBQ3NKLFlBQVksQ0FBQ25HLFlBQVk7WUFFOUIscUNBQXFDO1lBQ3JDLElBQUksSUFBNkIsRUFBRTtnQkFDakMsOENBQThDO2dCQUM5QzRFLE9BQU9lLGFBQWEsR0FBRztvQkFDckJDLFNBQVM7MERBQUU7NEJBQ1QsT0FBTzdDLFVBQVV5QixPQUFPLElBQUl1QixTQUFTRSxhQUFhLENBQUM7d0JBQ3JEOztvQkFDQUosWUFBWTswREFBRTtnQ0FBQ08sNkVBQVk7NEJBQ3pCLElBQUlDLFNBQVNOLFNBQVNFLGFBQWEsQ0FBQzs0QkFFcEMsSUFBSSxDQUFDSSxRQUFRO2dDQUNYQSxTQUFTTixTQUFTTyxhQUFhLENBQUM7Z0NBQ2hDRCxPQUFPRSxTQUFTLEdBQUc7Z0NBQ25CRixPQUFPRyxFQUFFLEdBQUc7NEJBQ2Q7NEJBRUEsTUFBTUMsa0JBQWtCTCxhQUNETCxTQUFTRSxhQUFhLENBQUMsd0JBQ3ZCRixTQUFTRSxhQUFhLENBQUMsb0JBQ3ZCRixTQUFTVyxJQUFJOzRCQUVwQyw0QkFBNEI7NEJBQzVCLE1BQU1DLE9BQU9GLGdCQUFnQkcscUJBQXFCOzRCQUNsRFAsT0FBTy9ILEtBQUssR0FBR3FJLEtBQUtySSxLQUFLLElBQUltSSxnQkFBZ0JJLFdBQVcsSUFBSTs0QkFDNURSLE9BQU85SCxNQUFNLEdBQUdvSSxLQUFLcEksTUFBTSxJQUFJa0ksZ0JBQWdCSyxZQUFZLElBQUk7NEJBRS9ELGtDQUFrQzs0QkFDbENULE9BQU9wSSxLQUFLLENBQUM4SSxPQUFPLEdBQUk7NEJBUXhCLG1DQUFtQzs0QkFDbkMsTUFBTUMsTUFBTVgsT0FBT1ksVUFBVSxDQUFDOzRCQUM5QkQsSUFBSUUsU0FBUyxHQUFHOzRCQUNoQkYsSUFBSUcsUUFBUSxDQUFDLEdBQUcsR0FBR2QsT0FBTy9ILEtBQUssRUFBRStILE9BQU85SCxNQUFNOzRCQUU5Qyx3Q0FBd0M7NEJBQ3hDLElBQUksQ0FBQzhILE9BQU9lLFVBQVUsRUFBRTtnQ0FDdEJYLGdCQUFnQlksV0FBVyxDQUFDaEI7NEJBQzlCOzRCQUVBLG1CQUFtQjs0QkFDbkJ0RCxVQUFVeUIsT0FBTyxHQUFHNkI7NEJBQ3BCekIsT0FBT2tCLGlCQUFpQixHQUFHTzs0QkFFM0JsQyxRQUFRa0IsR0FBRyxDQUFDLDJCQUEyQ2dCLE9BQWhCQSxPQUFPL0gsS0FBSyxFQUFDLEtBQWlCLE9BQWQrSCxPQUFPOUgsTUFBTTs0QkFDcEUsT0FBTzhIO3dCQUNUOztvQkFDQWlCLGVBQWU7MERBQUU7NEJBQ2YsTUFBTWpCLFNBQVN6QixPQUFPZSxhQUFhLENBQUNDLFNBQVM7NEJBQzdDLElBQUksQ0FBQ1MsUUFBUTs0QkFFYixzQkFBc0I7NEJBQ3RCQSxPQUFPa0IsY0FBYyxHQUFHO2dDQUN0QkMsUUFBUW5CLE9BQU9vQixhQUFhO2dDQUM1QnZKLFVBQVVtSSxPQUFPcEksS0FBSyxDQUFDQyxRQUFRO2dDQUMvQkMsS0FBS2tJLE9BQU9wSSxLQUFLLENBQUNFLEdBQUc7Z0NBQ3JCQyxNQUFNaUksT0FBT3BJLEtBQUssQ0FBQ0csSUFBSTtnQ0FDdkJFLE9BQU8rSCxPQUFPcEksS0FBSyxDQUFDSyxLQUFLO2dDQUN6QkMsUUFBUThILE9BQU9wSSxLQUFLLENBQUNNLE1BQU07Z0NBQzNCUyxRQUFRcUgsT0FBT3BJLEtBQUssQ0FBQ2UsTUFBTTs0QkFDN0I7NEJBRUEsbUNBQW1DOzRCQUNuQytHLFNBQVNXLElBQUksQ0FBQ1csV0FBVyxDQUFDaEI7NEJBQzFCQSxPQUFPcEksS0FBSyxDQUFDOEksT0FBTyxHQUFJOzRCQWlCeEJWLE9BQU8vSCxLQUFLLEdBQUdzRyxPQUFPQyxVQUFVOzRCQUNoQ3dCLE9BQU85SCxNQUFNLEdBQUdxRyxPQUFPSSxXQUFXOzRCQUVsQyxNQUFNZ0MsTUFBTVgsT0FBT1ksVUFBVSxDQUFDOzRCQUM5QkQsSUFBSUUsU0FBUyxHQUFHOzRCQUNoQkYsSUFBSUcsUUFBUSxDQUFDLEdBQUcsR0FBR2QsT0FBTy9ILEtBQUssRUFBRStILE9BQU85SCxNQUFNOzRCQUU5QzRGLFFBQVFrQixHQUFHLENBQUM7d0JBQ2Q7O29CQUNBcUMsY0FBYzswREFBRTs0QkFDZCxNQUFNckIsU0FBU3pCLE9BQU9lLGFBQWEsQ0FBQ0MsU0FBUzs0QkFDN0MsSUFBSSxDQUFDUyxVQUFVLENBQUNBLE9BQU9rQixjQUFjLEVBQUU7NEJBRXZDLDZCQUE2Qjs0QkFDN0IsTUFBTW5CLFlBQVlMLFNBQVNFLGFBQWEsQ0FBQyx3QkFDdkJGLFNBQVNFLGFBQWEsQ0FBQyxvQkFDdkJGLFNBQVNXLElBQUk7NEJBRS9CLGdDQUFnQzs0QkFDaENOLFVBQVVpQixXQUFXLENBQUNoQjs0QkFFdEIsMEJBQTBCOzRCQUMxQkEsT0FBT3BJLEtBQUssQ0FBQ0MsUUFBUSxHQUFHOzRCQUN4Qm1JLE9BQU9wSSxLQUFLLENBQUNFLEdBQUcsR0FBRzs0QkFDbkJrSSxPQUFPcEksS0FBSyxDQUFDRyxJQUFJLEdBQUc7NEJBQ3BCaUksT0FBT3BJLEtBQUssQ0FBQ0ssS0FBSyxHQUFHOzRCQUNyQitILE9BQU9wSSxLQUFLLENBQUNNLE1BQU0sR0FBRzs0QkFDdEI4SCxPQUFPcEksS0FBSyxDQUFDZSxNQUFNLEdBQUc7NEJBQ3RCcUgsT0FBT3BJLEtBQUssQ0FBQ08sZUFBZSxHQUFHOzRCQUUvQixpQ0FBaUM7NEJBQ2pDLE1BQU1tSSxPQUFPUCxVQUFVUSxxQkFBcUI7NEJBQzVDUCxPQUFPL0gsS0FBSyxHQUFHcUksS0FBS3JJLEtBQUssSUFBSThILFVBQVVTLFdBQVcsSUFBSTs0QkFDdERSLE9BQU85SCxNQUFNLEdBQUdvSSxLQUFLcEksTUFBTSxJQUFJNkgsVUFBVVUsWUFBWSxJQUFJOzRCQUV6RCxNQUFNRSxNQUFNWCxPQUFPWSxVQUFVLENBQUM7NEJBQzlCRCxJQUFJRSxTQUFTLEdBQUc7NEJBQ2hCRixJQUFJRyxRQUFRLENBQUMsR0FBRyxHQUFHZCxPQUFPL0gsS0FBSyxFQUFFK0gsT0FBTzlILE1BQU07NEJBRTlDLE9BQU84SCxPQUFPa0IsY0FBYzs0QkFDNUJwRCxRQUFRa0IsR0FBRyxDQUFDO3dCQUNkOztvQkFDQXNDLEtBQUs7MERBQUU7NEJBQ0wsTUFBTXRCLFNBQVN6QixPQUFPZSxhQUFhLENBQUNDLFNBQVM7NEJBQzdDLElBQUksQ0FBQ1MsUUFBUTs0QkFFYixNQUFNVyxNQUFNWCxPQUFPWSxVQUFVLENBQUM7NEJBQzlCRCxJQUFJWSxTQUFTLENBQUMsR0FBRyxHQUFHdkIsT0FBTy9ILEtBQUssRUFBRStILE9BQU85SCxNQUFNOzRCQUMvQ3lJLElBQUlFLFNBQVMsR0FBRzs0QkFDaEJGLElBQUlHLFFBQVEsQ0FBQyxHQUFHLEdBQUdkLE9BQU8vSCxLQUFLLEVBQUUrSCxPQUFPOUgsTUFBTTt3QkFDaEQ7O2dCQUNGO1lBQ0Y7WUFFQSxvREFBb0Q7WUFDcEQsTUFBTThILFNBQVN0RCxVQUFVeUIsT0FBTztZQUNoQyxJQUFJNkIsUUFBUTtnQkFDVmxDLFFBQVFrQixHQUFHLENBQUMsZ0NBQWdDO29CQUMxQy9HLE9BQU8rSCxPQUFPL0gsS0FBSztvQkFDbkJDLFFBQVE4SCxPQUFPOUgsTUFBTTtnQkFDdkI7Z0JBRUEsNENBQTRDO2dCQUM1Q3FHLE9BQU9rQixpQkFBaUIsR0FBR087Z0JBRTNCLCtCQUErQjtnQkFDL0J6QixPQUFPaUQsZ0JBQWdCLEdBQUc7b0JBQ3hCdkosT0FBTytILE9BQU8vSCxLQUFLO29CQUNuQkMsUUFBUThILE9BQU85SCxNQUFNO2dCQUN2QjtZQUNGLE9BQU87Z0JBQ0w0RixRQUFRK0IsSUFBSSxDQUFDO1lBQ2Y7WUFFQSxpREFBaUQ7WUFDakR0QixPQUFPa0QsZ0JBQWdCO2tEQUFHLENBQUN6QixRQUFRbUI7b0JBQ2pDLElBQUksQ0FBQ25CLFVBQVUsQ0FBQ21CLFFBQVE7d0JBQ3RCckQsUUFBUStCLElBQUksQ0FBQywrQ0FBK0M7NEJBQUVHOzRCQUFRbUI7d0JBQU87d0JBQzdFLE9BQU87b0JBQ1Q7b0JBRUEsSUFBSTt3QkFDRix3Q0FBd0M7d0JBQ3hDbkIsT0FBTy9ILEtBQUssR0FBR2tKLE9BQU9YLFdBQVcsSUFBSTt3QkFDckNSLE9BQU85SCxNQUFNLEdBQUdpSixPQUFPVixZQUFZLElBQUk7d0JBRXZDLHdDQUF3Qzt3QkFDeEMsTUFBTUUsTUFBTVgsT0FBT1ksVUFBVSxDQUFDO3dCQUM5QkQsSUFBSVksU0FBUyxDQUFDLEdBQUcsR0FBR3ZCLE9BQU8vSCxLQUFLLEVBQUUrSCxPQUFPOUgsTUFBTTt3QkFDL0N5SSxJQUFJRSxTQUFTLEdBQUc7d0JBQ2hCRixJQUFJRyxRQUFRLENBQUMsR0FBRyxHQUFHZCxPQUFPL0gsS0FBSyxFQUFFK0gsT0FBTzlILE1BQU07d0JBRTlDNEYsUUFBUWtCLEdBQUcsQ0FBQyx1Q0FBdURnQixPQUFoQkEsT0FBTy9ILEtBQUssRUFBQyxLQUFpQixPQUFkK0gsT0FBTzlILE1BQU07d0JBRWhGLDBCQUEwQjt3QkFDMUJxRyxPQUFPa0IsaUJBQWlCLEdBQUdPO3dCQUMzQnpCLE9BQU9pRCxnQkFBZ0IsR0FBRzs0QkFDeEJ2SixPQUFPK0gsT0FBTy9ILEtBQUs7NEJBQ25CQyxRQUFROEgsT0FBTzlILE1BQU07d0JBQ3ZCO3dCQUVBLE9BQU87b0JBQ1QsRUFBRSxPQUFPdUIsT0FBTzt3QkFDZHFFLFFBQVFyRSxLQUFLLENBQUMsaURBQWlEQTt3QkFDL0QsT0FBTztvQkFDVDtnQkFDRjs7WUFFQSx1RUFBdUU7WUFDdkVpSTtrREFBVztvQkFDVCxNQUFNMUIsU0FBU1g7b0JBQ2YsSUFBSVcsUUFBUTt3QkFDVixNQUFNTSxPQUFPTixPQUFPTyxxQkFBcUI7d0JBQ3pDekMsUUFBUWtCLEdBQUcsQ0FBQyxvQ0FBb0M7NEJBQzlDMkMsWUFBWSxHQUFtQjNCLE9BQWhCQSxPQUFPL0gsS0FBSyxFQUFDLEtBQWlCLE9BQWQrSCxPQUFPOUgsTUFBTTs0QkFDNUMwSixVQUFVLEdBQWlCdEIsT0FBZEEsS0FBS3JJLEtBQUssRUFBQyxLQUFlLE9BQVpxSSxLQUFLcEksTUFBTTs0QkFDdEMySixXQUFZdkIsS0FBS3JJLEtBQUssR0FBRyxLQUFLcUksS0FBS3BJLE1BQU0sR0FBRzt3QkFDOUM7d0JBRUEsaUNBQWlDO3dCQUNqQzRKO29CQUNGLE9BQU87d0JBQ0xoRSxRQUFRK0IsSUFBSSxDQUFDO29CQUNmO2dCQUNGO2lEQUFHO1lBRUg7a0RBQU87b0JBQ0wsT0FBT3RCLE9BQU9rQixpQkFBaUI7b0JBQy9CLE9BQU9sQixPQUFPaUQsZ0JBQWdCO29CQUM5QixPQUFPakQsT0FBT2tELGdCQUFnQjtvQkFDOUIsT0FBT2xELE9BQU9lLGFBQWE7Z0JBQzdCOztRQUNGO3lDQUFHO1FBQUMzRjtLQUFXO0lBRWYsd0NBQXdDO0lBQ3hDLE1BQU1tSSx5QkFBeUI7UUFDN0IsSUFBSSxDQUFDaEMsWUFBWSxDQUFDbkcsY0FBYyxDQUFDOEMsZUFBZTBCLE9BQU8sRUFBRTtRQUV6RCxNQUFNNkIsU0FBU1g7UUFDZixJQUFJLENBQUNXLFFBQVE7WUFDWGxDLFFBQVErQixJQUFJLENBQUM7WUFDYjtRQUNGO1FBRUEsTUFBTUUsWUFBWXRELGVBQWUwQixPQUFPO1FBRXhDLG1DQUFtQztRQUNuQyxNQUFNbUMsT0FBT1AsVUFBVVEscUJBQXFCO1FBRTVDLHNEQUFzRDtRQUN0RCxNQUFNd0IsZUFBZWhJLGFBQWEsTUFBTSxHQUFHLDBEQUEwRDtRQUVyRytELFFBQVFrQixHQUFHLENBQUMsK0JBQStCO1lBQ3pDZ0QsZ0JBQWdCMUIsS0FBS3JJLEtBQUs7WUFDMUJnSyxpQkFBaUIzQixLQUFLcEksTUFBTTtZQUM1QmdLLGVBQWVuSTtZQUNmb0ksa0JBQWtCN0IsS0FBS3BJLE1BQU07UUFDL0I7UUFFQSx3RUFBd0U7UUFDeEU4SCxPQUFPL0gsS0FBSyxHQUFHcUksS0FBS3JJLEtBQUs7UUFDekIrSCxPQUFPOUgsTUFBTSxHQUFHb0ksS0FBS3BJLE1BQU07UUFFM0IsbUJBQW1CO1FBQ25CLE1BQU15SSxNQUFNWCxPQUFPWSxVQUFVLENBQUM7UUFDOUJELElBQUlZLFNBQVMsQ0FBQyxHQUFHLEdBQUd2QixPQUFPL0gsS0FBSyxFQUFFK0gsT0FBTzlILE1BQU07UUFFL0MsNkJBQTZCO1FBQzdCeUksSUFBSUUsU0FBUyxHQUFHO1FBQ2hCRixJQUFJRyxRQUFRLENBQUMsR0FBRyxHQUFHZCxPQUFPL0gsS0FBSyxFQUFFK0gsT0FBTzlILE1BQU07UUFFOUM0RixRQUFRa0IsR0FBRyxDQUFDLCtCQUErQ2dCLE9BQWhCQSxPQUFPL0gsS0FBSyxFQUFDLEtBQWlCLE9BQWQrSCxPQUFPOUgsTUFBTTtRQUV4RSxrREFBa0Q7UUFDbERxRyxPQUFPa0IsaUJBQWlCLEdBQUdPO1FBQzNCekIsT0FBT2lELGdCQUFnQixHQUFHO1lBQ3hCdkosT0FBTytILE9BQU8vSCxLQUFLO1lBQ25CQyxRQUFROEgsT0FBTzlILE1BQU07UUFDdkI7SUFDRjtJQUVBLDZDQUE2QztJQUM3QzFCLGdEQUFTQTswQ0FBQztZQUNSLElBQUksQ0FBQzJGLGlCQUFpQjJELFlBQVluRyxZQUFZO2dCQUM1QyxNQUFNeUksWUFBWSxJQUFJQyxPQUFPQyxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxVQUFVO2dCQUM3RG5HLGlCQUFpQixXQUFxQixPQUFWZ0c7Z0JBQzVCdEUsUUFBUWtCLEdBQUcsQ0FBQyxtQ0FBNkMsT0FBVm9EO1lBQ2pEO1FBQ0Y7eUNBQUc7UUFBQ2pHO1FBQWUyRDtRQUFVbkc7S0FBVztJQUV4QyxvQ0FBb0M7SUFDcENuRCxnREFBU0E7MENBQUM7WUFDUixJQUFJLENBQUNzSixZQUFZLENBQUNuRyxZQUFZLFFBQVEscUNBQXFDO1lBRTNFLE1BQU1xRTt5RUFBeUI7b0JBQzdCLElBQUk7d0JBQ0YsTUFBTWIsV0FBVyxNQUFNQyxNQUFNO3dCQUM3QixNQUFNTyxPQUFPLE1BQU1SLFNBQVNTLElBQUk7d0JBQ2hDOUQsaUJBQWlCNkQsS0FBS00sU0FBUyxHQUFHLGNBQWM7d0JBQ2hESCxRQUFRa0IsR0FBRyxDQUFDLHVCQUF3RCxPQUFqQ3JCLEtBQUtNLFNBQVMsR0FBRyxPQUFPO3dCQUUzRCw2QkFBNkI7d0JBQzdCekQsY0FBYyxXQUEyRSxPQUFoRW1ELEtBQUtNLFNBQVMsR0FBRyxjQUFjO29CQUMxRCxFQUFFLE9BQU94RSxPQUFPO3dCQUNkcUUsUUFBUXJFLEtBQUssQ0FBQyxzQ0FBc0NBO3dCQUNwREssaUJBQWlCO3dCQUNqQlUsY0FBYztvQkFDaEI7Z0JBQ0Y7O1lBRUF3RDtZQUVBLHNDQUFzQztZQUN0QzBEO2tEQUFXO29CQUNUbEgsY0FBYztnQkFDaEI7aURBQUc7UUFDTDt5Q0FBRztRQUFDYjtLQUFXO0lBRWYsc0RBQXNEO0lBQ3REbkQsZ0RBQVNBOzBDQUFDO1lBQ1IsSUFBSSxDQUFDc0osWUFBWSxDQUFDbkcsWUFBWTtZQUU5Qix5QkFBeUI7WUFDekIsTUFBTS9CLFFBQVE4SCxTQUFTTyxhQUFhLENBQUM7WUFDckNySSxNQUFNNEssV0FBVyxHQUFJO1lBd0JyQjlDLFNBQVMrQyxJQUFJLENBQUN6QixXQUFXLENBQUNwSjtZQUUxQixXQUFXO1lBQ1g7a0RBQU87b0JBQ0w4SCxTQUFTK0MsSUFBSSxDQUFDQyxXQUFXLENBQUM5SztnQkFDNUI7O1FBQ0Y7eUNBQUc7UUFBQytCO0tBQVc7SUFFZixnREFBZ0Q7SUFDaERuRCxnREFBU0E7MENBQUM7WUFDUixJQUFJLENBQUNzSixZQUFZLENBQUNuRyxZQUFZO1lBRTlCLGtEQUFrRDtZQUNsRDRFLE9BQU9vRSxZQUFZO2tEQUFHLENBQUN4RDtvQkFDckJuRixjQUFjbUY7b0JBRWQsNENBQTRDO29CQUM1QyxJQUFJLENBQUNBLE1BQU07d0JBQ1R6RSxlQUFlO29CQUNqQjtvQkFFQSwwQ0FBMEM7b0JBQzFDZ0gsV0FBV0ksd0JBQXdCO2dCQUNyQzs7WUFFQTtrREFBTztvQkFDTCxXQUFXO29CQUNYLE9BQU92RCxPQUFPb0UsWUFBWTtnQkFDNUI7O1FBQ0Y7eUNBQUc7UUFBQ2hKO0tBQVc7SUFFZix5QkFBeUI7SUFDekIsTUFBTWlKLGVBQWUsQ0FBQ0M7UUFDcEIsSUFBSSxDQUFDL0MsWUFBWSxDQUFDbkcsWUFBWTtRQUU5QixJQUFJa0osY0FBYztZQUNoQjdILGNBQWM7WUFDZEUseUJBQXlCO1lBQ3pCVixjQUFjO1FBQ2hCLE9BQU87WUFDTFEsY0FBYztZQUNkRSx5QkFBeUI7WUFDekJWLGNBQWM7UUFDaEI7SUFDRjtJQUVBLG1DQUFtQztJQUNuQyxNQUFNc0ksMEJBQTBCLENBQUNDLFlBQVlDO1FBQzNDLElBQUksQ0FBQ2xELFlBQVksQ0FBQ25HLFlBQVk7UUFFOUIsd0NBQXdDO1FBQ3hDLElBQUlvSixlQUFlLGdCQUFnQjtZQUNqQyxzRUFBc0U7WUFDdEUsSUFBSUU7WUFFSixJQUFJLE9BQU9ELFdBQVcsV0FBVztnQkFDL0JDLGlCQUFpQkQ7WUFDbkIsT0FBTyxJQUFJQSxVQUFVLE9BQU9BLE9BQU9FLEtBQUssS0FBSyxhQUFhO2dCQUN4REQsaUJBQWlCLENBQUMsQ0FBQ0QsT0FBT0UsS0FBSztZQUNqQyxPQUFPO2dCQUNMRCxpQkFBaUIsQ0FBQ2xKO1lBQ3BCO1lBQ0FDLGNBQWNpSjtZQUVkLDRDQUE0QztZQUM1QyxJQUFJLENBQUNBLGdCQUFnQjtnQkFDbkJ2SSxlQUFlO1lBQ2pCO1lBRUFGLGNBQWMsVUFBZ0QsT0FBdEN5SSxpQkFBaUIsVUFBVSxVQUFxRCxPQUExQyxDQUFDQSxpQkFBaUIscUJBQXFCO1lBRXJHLDBDQUEwQztZQUMxQ3ZCLFdBQVdJLHdCQUF3QjtZQUNuQztRQUNGO1FBQ0EsTUFBTTlCLFNBQVNYO1FBQ2ZuRixlQUFlO1FBRWYsOEJBQThCO1FBQzlCLE1BQU1pSixhQUFhSCxVQUFVLENBQUM7UUFFOUIsMENBQTBDO1FBQzFDLE1BQU1JLGNBQWNELFdBQVdDLFdBQVcsSUFBSTtRQUM5QyxNQUFNQyxlQUFlRixXQUFXRSxZQUFZLElBQUk7UUFFaEQsT0FBUU47WUFDTixLQUFLO2dCQUNILHNCQUFzQjtnQkFDdEIsSUFBSWhJLFlBQVk7b0JBQ2Q2SCxhQUFhO2dCQUNmLE9BQU8sSUFBSS9ILHlCQUF5QjtvQkFDbEMrSCxhQUFhO2dCQUNmLE9BQU87b0JBQ0wsa0NBQWtDO29CQUNsQ2hJLHVCQUF1QjtvQkFDdkJKLGNBQWM7b0JBQ2RVLHlCQUF5QjtnQkFDM0I7Z0JBQ0E7WUFFRixLQUFLO2dCQUNIVixjQUFjO2dCQUNkUixjQUFjO2dCQUNkLElBQUllLFlBQVk7b0JBQ2Q2SCxhQUFhO2dCQUNmO2dCQUNBLDBEQUEwRDtnQkFDMUQsSUFBSWhHLHFCQUFxQnVCLE9BQU8sSUFBSXZCLHFCQUFxQnVCLE9BQU8sQ0FBQ21GLGVBQWUsRUFBRTtvQkFDaEYsd0NBQXdDO29CQUN4Q3hGLFFBQVFrQixHQUFHLENBQUM7b0JBQ1pwQyxxQkFBcUJ1QixPQUFPLENBQUNtRixlQUFlO2dCQUM5QyxPQUNLLElBQUksS0FBNkIsSUFBSS9FLE9BQU9nRixxQkFBcUIsSUFDcEUsT0FBT2hGLE9BQU9nRixxQkFBcUIsQ0FBQ0QsZUFBZSxLQUFLLFlBQVk7b0JBQ3BFLDRCQUE0QjtvQkFDNUJ4RixRQUFRa0IsR0FBRyxDQUFDO29CQUNaVCxPQUFPZ0YscUJBQXFCLENBQUNELGVBQWU7Z0JBQzlDLE9BQ0s7b0JBQ0gsMENBQTBDO29CQUMxQyxNQUFNdEQsU0FBU1g7b0JBQ2YsSUFBSSxDQUFDVyxRQUFRO3dCQUNYbEMsUUFBUXJFLEtBQUssQ0FBQzt3QkFDZGUsY0FBYzt3QkFDZFIsY0FBYzt3QkFDZDtvQkFDRjtvQkFFQSxxQ0FBcUM7b0JBQ3JDLE1BQU13SixZQUFZOUQsU0FBU0UsYUFBYSxDQUFDO29CQUN6QyxNQUFNNkQsYUFBYS9ELFNBQVNnRSxnQkFBZ0IsQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFO29CQUV2RSwwQ0FBMEM7b0JBQzFDLElBQUlDLFFBQVE7b0JBQ1osSUFBSUMsUUFBUTtvQkFFWixrQ0FBa0M7b0JBQ2xDLElBQUlKLFdBQVc7d0JBQ2IsTUFBTUssYUFBYUMsU0FBU04sVUFBVU4sS0FBSyxFQUFFO3dCQUM3QyxJQUFJLENBQUNhLE1BQU1GLGVBQWVBLGFBQWEsR0FBRzs0QkFDeENGLFFBQVFFO3dCQUNWO29CQUNGO29CQUVBLElBQUlKLFlBQVk7d0JBQ2QsTUFBTU8sY0FBY0YsU0FBU0wsV0FBV1AsS0FBSyxFQUFFO3dCQUMvQyxJQUFJLENBQUNhLE1BQU1DLGdCQUFnQkEsY0FBYyxHQUFHOzRCQUMxQ0osUUFBUUk7d0JBQ1Y7b0JBQ0Y7b0JBRUEsK0RBQStEO29CQUMvREMsUUFBUUMsR0FBRyxDQUFDO3dCQUNWLGdQQUF3RTt3QkFDeEUsNk9BQXVFO3FCQUN4RSxFQUFFQyxJQUFJLENBQUM7NEJBQU8sQ0FDYkMsaUJBQ0FDLGVBQ0Q7d0JBQ0MsbUNBQW1DO3dCQUNuQyxNQUFNLEVBQUVuTixpQkFBaUIsRUFBRUQsVUFBVSxFQUFFRSxZQUFZLEVBQUVKLGtCQUFrQixFQUFFLEdBQUdxTjt3QkFDNUUsTUFBTSxFQUFFcE4sb0JBQW9CLEVBQUUsR0FBR3FOO3dCQUVqQyxJQUFJOzRCQUNGLG9DQUFvQzs0QkFDcEMsSUFBSUMsZUFBZTs0QkFDbkIsSUFBSUMsaUJBQWlCOzRCQUVyQixNQUFPQSxrQkFBa0JaLE1BQU87Z0NBQzlCLG9DQUFvQztnQ0FDcENuSixjQUFjLFdBQWdDbUosT0FBckJZLGdCQUFlLFFBQVksT0FBTlo7Z0NBRTlDLG1DQUFtQztnQ0FDbkMsTUFBTWhELE1BQU1YLE9BQU9ZLFVBQVUsQ0FBQztnQ0FDOUJELElBQUlZLFNBQVMsQ0FBQyxHQUFHLEdBQUd2QixPQUFPL0gsS0FBSyxFQUFFK0gsT0FBTzlILE1BQU07Z0NBQy9DeUksSUFBSUUsU0FBUyxHQUFHO2dDQUNoQkYsSUFBSUcsUUFBUSxDQUFDLEdBQUcsR0FBR2QsT0FBTy9ILEtBQUssRUFBRStILE9BQU85SCxNQUFNO2dDQUU5Qyw0Q0FBNEM7Z0NBQzVDLE1BQU1MLFdBQVdYLGtCQUFrQjhJLFFBQVE7Z0NBRTNDLGVBQWU7Z0NBQ2YvSSxXQUFXMEosS0FBSzlJLFNBQVMyTSxDQUFDLEVBQUUzTSxTQUFTNE0sQ0FBQztnQ0FFdEMsc0RBQXNEO2dDQUN0RCxJQUFJQyxpQkFBaUJDLFlBQVk7b0NBQy9CMU4sV0FBVzBKLEtBQUs5SSxTQUFTMk0sQ0FBQyxFQUFFM00sU0FBUzRNLENBQUMsRUFBRSxJQUFJO2dDQUM5QyxHQUFHO2dDQUVILDRDQUE0QztnQ0FDNUMsTUFBTSxJQUFJUixRQUFRVyxDQUFBQTtvQ0FDaEJ6TixhQUNFVSxVQUNBbUksUUFDQSxDQUFDNkU7d0NBQ0MsNEJBQTRCO3dDQUM1QixJQUFJQSxPQUFPQyxhQUFhLEVBQUU7NENBQ3hCdEssY0FBYyxXQUE2Qm1KLE9BQWxCWSxnQkFBZSxLQUFhTSxPQUFWbEIsT0FBTSxNQUF5QixPQUFyQmtCLE9BQU9DLGFBQWE7d0NBQzNFO29DQUNGLEdBQ0FGLFFBQVEsK0NBQStDOztnQ0FFM0Q7Z0NBRUEsdUNBQXVDO2dDQUN2Q0csY0FBY0w7Z0NBRWQsK0JBQStCO2dDQUMvQixNQUFNLElBQUlULFFBQVFXLENBQUFBLFVBQVdsRCxXQUFXa0QsU0FBUztnQ0FFakQsK0JBQStCO2dDQUMvQixJQUFJO29DQUNGLE1BQU1JLGdCQUFnQixNQUFNaE8scUJBQXFCO3dDQUMvQ2lPLE9BQU9wTjt3Q0FDUHFOLGNBQWNqSjt3Q0FDZFMsV0FBVzs0Q0FBRXlCLFNBQVM2Qjt3Q0FBTzt3Q0FDN0JtRixpQkFBaUJqSjt3Q0FDakJuRjtvQ0FDRjtvQ0FFQSxJQUFJaU8saUJBQWtCQSxDQUFBQSxjQUFjSSxXQUFXLElBQUlKLGNBQWNLLE9BQU8sR0FBRzt3Q0FDekVmO29DQUNGO29DQUVBLG9CQUFvQjtvQ0FDcEJwSSxrQkFBa0J3QyxDQUFBQSxPQUFRQSxPQUFPO2dDQUNuQyxFQUFFLE9BQU9qRixPQUFPO29DQUNkcUUsUUFBUXJFLEtBQUssQ0FBQyx5QkFBd0MsT0FBZjhLLGdCQUFlLE1BQUk5SztnQ0FDNUQ7Z0NBRUEscURBQXFEO2dDQUNyRCxJQUFJOEssaUJBQWlCWixPQUFPO29DQUMxQm5KLGNBQWMsV0FBaUIsT0FBTm9KLE9BQU07b0NBQy9CLE1BQU0sSUFBSUssUUFBUVcsQ0FBQUEsVUFBV2xELFdBQVdrRCxTQUFTaEIsUUFBUTtnQ0FDM0Q7Z0NBRUEsdUJBQXVCO2dDQUN2Qlc7NEJBQ0Y7NEJBRUEsb0JBQW9COzRCQUNwQi9KLGNBQWMsc0NBQXNEbUosT0FBaEJXLGNBQWEsS0FBUyxPQUFOWCxPQUFNO3dCQUU1RSxFQUFFLE9BQU9sSyxPQUFPOzRCQUNkcUUsUUFBUXJFLEtBQUssQ0FBQywwQkFBMEJBOzRCQUN4Q2UsY0FBYywwQkFBd0MsT0FBZGYsTUFBTXNFLE9BQU87d0JBQ3ZELFNBQVU7NEJBQ1Isb0JBQW9COzRCQUNwQjJELFdBQVcsSUFBTTFILGNBQWMsT0FBTzt3QkFDeEM7b0JBQ0YsR0FBR3NMLEtBQUssQ0FBQzdMLENBQUFBO3dCQUNQcUUsUUFBUXJFLEtBQUssQ0FBQyxzQ0FBc0NBO3dCQUNwRGUsY0FBYyxVQUF3QixPQUFkZixNQUFNc0UsT0FBTzt3QkFDckMvRCxjQUFjO29CQUNoQjtnQkFDRjtnQkFDQTtZQUVGLEtBQUs7Z0JBQ0hRLGNBQWM7Z0JBQ2RSLGNBQWM7Z0JBQ2QsSUFBSWUsWUFBWTtvQkFDZDZILGFBQWE7Z0JBQ2Y7Z0JBQ0E5RSxRQUFRa0IsR0FBRyxDQUFDO2dCQUVaLDJGQUEyRjtnQkFDM0YsaUVBQWlFO2dCQUNqRSxJQUFJcEMscUJBQXFCdUIsT0FBTyxJQUFJdkIscUJBQXFCdUIsT0FBTyxDQUFDb0gsZUFBZSxFQUFFO29CQUNoRnpILFFBQVFrQixHQUFHLENBQUM7b0JBQ1pwQyxxQkFBcUJ1QixPQUFPLENBQUNvSCxlQUFlO2dCQUM5QyxPQUFPLElBQUksS0FBNkIsSUFBSWhILE9BQU9nRixxQkFBcUIsSUFDdEUsT0FBT2hGLE9BQU9nRixxQkFBcUIsQ0FBQ2dDLGVBQWUsS0FBSyxZQUFZO29CQUNwRXpILFFBQVFrQixHQUFHLENBQUM7b0JBQ1pULE9BQU9nRixxQkFBcUIsQ0FBQ2dDLGVBQWU7Z0JBQzlDLE9BQU87b0JBQ0wsMEJBQTBCO29CQUMxQixNQUFNdkYsU0FBU1g7b0JBQ2YsSUFBSSxDQUFDVyxRQUFRO3dCQUNYbEMsUUFBUXJFLEtBQUssQ0FBQzt3QkFDZGUsY0FBYzt3QkFDZFIsY0FBYyxPQUFPLHdDQUF3Qzt3QkFDN0Q7b0JBQ0Y7b0JBRUEsTUFBTW1ILFNBQVMxRSxlQUFlMEIsT0FBTztvQkFDckMsSUFBSSxDQUFDZ0QsUUFBUTt3QkFDWHJELFFBQVFyRSxLQUFLLENBQUM7d0JBQ2RlLGNBQWM7d0JBQ2RSLGNBQWM7d0JBQ2Q7b0JBQ0Y7b0JBRUEsK0JBQStCO29CQUMvQmdHLE9BQU8vSCxLQUFLLEdBQUdrSixPQUFPWCxXQUFXLElBQUk7b0JBQ3JDUixPQUFPOUgsTUFBTSxHQUFHaUosT0FBT1YsWUFBWSxJQUFJO29CQUN2QyxNQUFNRSxNQUFNWCxPQUFPWSxVQUFVLENBQUM7b0JBQzlCRCxJQUFJWSxTQUFTLENBQUMsR0FBRyxHQUFHdkIsT0FBTy9ILEtBQUssRUFBRStILE9BQU85SCxNQUFNO29CQUMvQ3lJLElBQUlFLFNBQVMsR0FBRztvQkFDaEJGLElBQUlHLFFBQVEsQ0FBQyxHQUFHLEdBQUdkLE9BQU8vSCxLQUFLLEVBQUUrSCxPQUFPOUgsTUFBTTtvQkFFOUM0RixRQUFRa0IsR0FBRyxDQUFDLGdDQUFnRGdCLE9BQWhCQSxPQUFPL0gsS0FBSyxFQUFDLEtBQWlCLE9BQWQrSCxPQUFPOUgsTUFBTTtvQkFFekUsMEJBQTBCO29CQUMxQnFHLE9BQU9rQixpQkFBaUIsR0FBR087b0JBRTNCLDJCQUEyQjtvQkFDM0IsTUFBTW5JLFdBQVdYLDRHQUFpQkEsQ0FBQzhJLFFBQVE7b0JBRTNDLDJDQUEyQztvQkFDM0MsTUFBTXdGLE1BQU12TyxxR0FBVUEsQ0FBQzBKLEtBQUs5SSxTQUFTMk0sQ0FBQyxFQUFFM00sU0FBUzRNLENBQUMsRUFBRSxHQUFHO29CQUN2RDNHLFFBQVFrQixHQUFHLENBQUMsd0JBQXVDbkgsT0FBZkEsU0FBUzJNLENBQUMsRUFBQyxNQUFlLE9BQVgzTSxTQUFTNE0sQ0FBQztvQkFFN0QsZ0NBQWdDO29CQUNoQ3ROLHVHQUFZQSxDQUNWVSxVQUNBbUksUUFDQSxDQUFDNkU7d0JBQ0MsNEJBQTRCO3dCQUM1QixJQUFJQSxPQUFPQyxhQUFhLEVBQUU7NEJBQ3hCdEssY0FBY3FLLE9BQU9DLGFBQWE7d0JBQ3BDO29CQUNGLEdBQ0E7d0JBQ0UsK0JBQStCO3dCQUMvQiw2QkFBNkI7d0JBRTdCLHdDQUF3Qzt3QkFDeENwRCxXQUFXOzRCQUNULDZFQUE2RTs0QkFDN0UsNk9BQXVFLENBQUN5QyxJQUFJLENBQUM7b0NBQUMsRUFBRW5OLG9CQUFvQixFQUFFO2dDQUNwR0EscUJBQXFCO29DQUNuQmlPLE9BQU9wTjtvQ0FDUHFOLGNBQWNqSjtvQ0FDZFMsV0FBVzt3Q0FBRXlCLFNBQVM2QjtvQ0FBTztvQ0FDN0JtRixpQkFBaUJqSjtvQ0FDakJuRixrQkFBa0JBLDJHQUFBQTtnQ0FDcEIsR0FBR29OLElBQUksQ0FBQztvQ0FDTmpJLGtCQUFrQndDLENBQUFBLE9BQVFBLE9BQU87b0NBRWpDLGtDQUFrQztvQ0FDbENnRCxXQUFXO3dDQUNUMUgsY0FBYztvQ0FDaEIsR0FBRztnQ0FDTCxHQUFHc0wsS0FBSyxDQUFDekgsQ0FBQUE7b0NBQ1BDLFFBQVFyRSxLQUFLLENBQUMsMkJBQTJCb0U7b0NBQ3pDckQsY0FBYyxVQUFzQixPQUFacUQsSUFBSUUsT0FBTztvQ0FDbkMvRCxjQUFjO2dDQUNoQjs0QkFDRixHQUFHc0wsS0FBSyxDQUFDekgsQ0FBQUE7Z0NBQ1BDLFFBQVFyRSxLQUFLLENBQUMsb0NBQW9Db0U7Z0NBQ2xEckQsY0FBYyxVQUFzQixPQUFacUQsSUFBSUUsT0FBTztnQ0FDbkMvRCxjQUFjOzRCQUNoQjt3QkFDRixHQUFHO29CQUNMO2dCQUVKO2dCQUNBO1lBQ0YsS0FBSztnQkFDSCxNQUFNeUwsbUJBQW1CLENBQUN0SztnQkFDMUJDLGdCQUFnQnFLO2dCQUNoQmpMLGNBQWMsMkJBQXFFLE9BQTFDaUwsbUJBQW1CLFlBQVk7Z0JBQ3hFLElBQUlBLG9CQUFvQixDQUFDMUssWUFBWTtvQkFDbkNHLHlCQUF5QjtnQkFDM0IsT0FBTyxJQUFJLENBQUN1SyxvQkFBb0IsQ0FBQ3BLLG1CQUFtQixDQUFDRSxZQUFZLENBQUNFLGdCQUFnQjtvQkFDaEZQLHlCQUF5QjtnQkFDM0I7Z0JBRUEsK0NBQStDO2dCQUMvQyxJQUFJSCxjQUFjd0QsT0FBT21ILGNBQWMsRUFBRTtvQkFDdkNuSCxPQUFPbUgsY0FBYyxDQUFDQyxhQUFhLENBQUM7d0JBQ2xDLEdBQUdwSCxPQUFPbUgsY0FBYyxDQUFDRSxPQUFPO3dCQUNoQ3pLLGNBQWNzSztvQkFDaEI7Z0JBQ0Y7Z0JBQ0E7WUFFRixLQUFLO2dCQUNILE1BQU1JLHNCQUFzQixDQUFDeEs7Z0JBQzdCQyxtQkFBbUJ1SztnQkFDbkJyTCxjQUFjLGdCQUF5RCxPQUF6Q3FMLHNCQUFzQixVQUFVO2dCQUM5RCxJQUFJQSx1QkFBdUIsQ0FBQzlLLFlBQVk7b0JBQ3RDRyx5QkFBeUI7Z0JBQzNCLE9BQU8sSUFBSSxDQUFDMkssdUJBQXVCLENBQUMxSyxnQkFBZ0IsQ0FBQ0ksWUFBWSxDQUFDRSxnQkFBZ0I7b0JBQ2hGUCx5QkFBeUI7Z0JBQzNCO2dCQUVBLCtDQUErQztnQkFDL0MsSUFBSUgsY0FBY3dELE9BQU9tSCxjQUFjLEVBQUU7b0JBQ3ZDbkgsT0FBT21ILGNBQWMsQ0FBQ0MsYUFBYSxDQUFDO3dCQUNsQyxHQUFHcEgsT0FBT21ILGNBQWMsQ0FBQ0UsT0FBTzt3QkFDaEN2SyxpQkFBaUJ3SztvQkFDbkI7Z0JBQ0Y7Z0JBQ0E7WUFFRixLQUFLO2dCQUNILE1BQU1DLGVBQWUsQ0FBQ3ZLO2dCQUN0QkMsWUFBWXNLO2dCQUNadEwsY0FBYyxRQUEwQyxPQUFsQ3NMLGVBQWUsVUFBVTtnQkFDL0MsSUFBSUEsZ0JBQWdCLENBQUMvSyxZQUFZO29CQUMvQkcseUJBQXlCO2dCQUMzQixPQUFPLElBQUksQ0FBQzRLLGdCQUFnQixDQUFDM0ssZ0JBQWdCLENBQUNFLG1CQUFtQixDQUFDSSxnQkFBZ0I7b0JBQ2hGUCx5QkFBeUI7Z0JBQzNCO2dCQUVBLCtDQUErQztnQkFDL0MsSUFBSUgsY0FBY3dELE9BQU9tSCxjQUFjLEVBQUU7b0JBQ3ZDbkgsT0FBT21ILGNBQWMsQ0FBQ0MsYUFBYSxDQUFDO3dCQUNsQyxHQUFHcEgsT0FBT21ILGNBQWMsQ0FBQ0UsT0FBTzt3QkFDaENySyxVQUFVdUs7b0JBQ1o7Z0JBQ0Y7Z0JBQ0E7WUFFRixLQUFLO2dCQUNILE1BQU1DLHFCQUFxQixDQUFDdEs7Z0JBQzVCQyxrQkFBa0JxSztnQkFDbEJ2TCxjQUFjLGNBQXNELE9BQXhDdUwscUJBQXFCLFVBQVU7Z0JBQzNELElBQUlBLHNCQUFzQixDQUFDaEwsWUFBWTtvQkFDckNHLHlCQUF5QjtnQkFDM0IsT0FBTyxJQUFJLENBQUM2SyxzQkFBc0IsQ0FBQzVLLGdCQUFnQixDQUFDRSxtQkFBbUIsQ0FBQ0UsVUFBVTtvQkFDaEZMLHlCQUF5QjtnQkFDM0I7Z0JBRUEsK0NBQStDO2dCQUMvQyxJQUFJSCxjQUFjd0QsT0FBT21ILGNBQWMsRUFBRTtvQkFDdkNuSCxPQUFPbUgsY0FBYyxDQUFDQyxhQUFhLENBQUM7d0JBQ2xDLEdBQUdwSCxPQUFPbUgsY0FBYyxDQUFDRSxPQUFPO3dCQUNoQ25LLGdCQUFnQnNLO29CQUNsQjtnQkFDRjtnQkFDQTtZQUVGLDJDQUEyQztZQUMzQyxLQUFLO2dCQUNIdkwsY0FBYztnQkFDZFIsY0FBYztnQkFDZCxJQUFJZSxZQUFZO29CQUNkNkgsYUFBYTtnQkFDZjtnQkFDQSxJQUFJaEcscUJBQXFCdUIsT0FBTyxJQUFJdkIscUJBQXFCdUIsT0FBTyxDQUFDNkgsa0JBQWtCLEVBQUU7b0JBQ25GLHdDQUF3QztvQkFDeENsSSxRQUFRa0IsR0FBRyxDQUFDO29CQUNacEMscUJBQXFCdUIsT0FBTyxDQUFDNkgsa0JBQWtCO2dCQUNqRCxPQUNLLElBQUksS0FBNkIsSUFBSXpILE9BQU9nRixxQkFBcUIsSUFDcEUsT0FBT2hGLE9BQU9nRixxQkFBcUIsQ0FBQ3lDLGtCQUFrQixLQUFLLFlBQVk7b0JBQ3ZFLDRCQUE0QjtvQkFDNUJsSSxRQUFRa0IsR0FBRyxDQUFDO29CQUNaVCxPQUFPZ0YscUJBQXFCLENBQUN5QyxrQkFBa0I7Z0JBQ2pELE9BQ0s7b0JBQ0gsMENBQTBDO29CQUMxQyxNQUFNaEcsU0FBU1g7b0JBQ2YsSUFBSSxDQUFDVyxRQUFRO3dCQUNYbEMsUUFBUXJFLEtBQUssQ0FBQzt3QkFDZGUsY0FBYzt3QkFDZFIsY0FBYzt3QkFDZDtvQkFDRjtvQkFFQSwrREFBK0Q7b0JBQy9EaUssUUFBUUMsR0FBRyxDQUFDO3dCQUNWLGdRQUFrRjt3QkFDbEYsb1BBQTRFO3dCQUM1RSw2T0FBdUU7cUJBQ3hFLEVBQUVDLElBQUksQ0FBQzs0QkFBTyxDQUNiOEIsdUJBQ0E3QixpQkFDQUMsZUFDRDt3QkFDQyxtQ0FBbUM7d0JBQ25DLE1BQU0sRUFBRWpOLHlCQUF5QixFQUFFLEdBQUc2Tzt3QkFDdEMsTUFBTSxFQUFFaFAsVUFBVSxFQUFFRSxZQUFZLEVBQUVKLGtCQUFrQixFQUFFLEdBQUdxTjt3QkFDekQsTUFBTSxFQUFFcE4sb0JBQW9CLEVBQUUsR0FBR3FOO3dCQUVqQyxJQUFJOzRCQUNGLDhCQUE4Qjs0QkFDOUIsTUFBTTZCLFNBQVM5TywwQkFBMEI0SSxPQUFPL0gsS0FBSyxFQUFFK0gsT0FBTzlILE1BQU07NEJBRXBFLElBQUksQ0FBQ2dPLFVBQVVBLE9BQU9DLE1BQU0sS0FBSyxHQUFHO2dDQUNsQyxNQUFNLElBQUl6SSxNQUFNOzRCQUNsQjs0QkFFQSwwQkFBMEI7NEJBQzFCLE1BQU0wSSxrQkFBa0IxRyxTQUFTTyxhQUFhLENBQUM7NEJBQy9DbUcsZ0JBQWdCbEcsU0FBUyxHQUFHOzRCQUM1QmtHLGdCQUFnQnhPLEtBQUssQ0FBQzhJLE9BQU8sR0FBSTs0QkFhakMwRixnQkFBZ0I1RCxXQUFXLEdBQUc7NEJBQzlCOUMsU0FBU1csSUFBSSxDQUFDVyxXQUFXLENBQUNvRjs0QkFFMUIseURBQXlEOzRCQUN6RCxJQUFJLE9BQU9DLHdCQUF3QixZQUFZO2dDQUM3Q0Esb0JBQW9CO2dDQUNwQixNQUFNLElBQUlwQyxRQUFRVyxDQUFBQSxVQUFXbEQsV0FBV2tELFNBQVM7NEJBQ25EOzRCQUVBLDhCQUE4Qjs0QkFDOUIsSUFBSU4sZUFBZTs0QkFFbkIsSUFBSyxJQUFJZ0MsSUFBSSxHQUFHQSxJQUFJSixPQUFPQyxNQUFNLEVBQUVHLElBQUs7Z0NBQ3RDLE1BQU1yQixRQUFRaUIsTUFBTSxDQUFDSSxFQUFFO2dDQUV2QkYsZ0JBQWdCNUQsV0FBVyxHQUFHLHNCQUErQjBELE9BQVRJLElBQUksR0FBRSxLQUFpQixPQUFkSixPQUFPQyxNQUFNO2dDQUMxRTNMLGNBQWMsZ0NBQXlDMEwsT0FBVEksSUFBSSxHQUFFLEtBQWlCLE9BQWRKLE9BQU9DLE1BQU07Z0NBRXBFLDRDQUE0QztnQ0FDNUMsTUFBTXhGLE1BQU1YLE9BQU9ZLFVBQVUsQ0FBQztnQ0FDOUJELElBQUlZLFNBQVMsQ0FBQyxHQUFHLEdBQUd2QixPQUFPL0gsS0FBSyxFQUFFK0gsT0FBTzlILE1BQU07Z0NBQy9DeUksSUFBSUUsU0FBUyxHQUFHO2dDQUNoQkYsSUFBSUcsUUFBUSxDQUFDLEdBQUcsR0FBR2QsT0FBTy9ILEtBQUssRUFBRStILE9BQU85SCxNQUFNO2dDQUU5QyxlQUFlO2dDQUNmakIsV0FBVzBKLEtBQUtzRSxNQUFNVCxDQUFDLEVBQUVTLE1BQU1SLENBQUM7Z0NBRWhDLGdCQUFnQjtnQ0FDaEIsTUFBTSxJQUFJUixRQUFRVyxDQUFBQTtvQ0FDaEJ6TixhQUNFOE4sT0FDQWpGLFFBQ0EsQ0FBQzZFO3dDQUNDLElBQUlBLE9BQU9DLGFBQWEsRUFBRTs0Q0FDeEJ0SyxjQUFjcUssT0FBT0MsYUFBYTt3Q0FDcEM7b0NBQ0YsR0FDQUYsUUFBUSwrQ0FBK0M7O2dDQUUzRDtnQ0FFQSwrQkFBK0I7Z0NBQy9CLElBQUk7b0NBQ0YsTUFBTUksZ0JBQWdCLE1BQU1oTyxxQkFBcUI7d0NBQy9DaU8sT0FBT0E7d0NBQ1BDLGNBQWNqSjt3Q0FDZFMsV0FBVzs0Q0FBRXlCLFNBQVM2Qjt3Q0FBTzt3Q0FDN0JtRixpQkFBaUJqSjt3Q0FDakJuRixvQkFBb0JBO29DQUN0QjtvQ0FFQSxJQUFJaU8saUJBQWtCQSxDQUFBQSxjQUFjSSxXQUFXLElBQUlKLGNBQWNLLE9BQU8sR0FBRzt3Q0FDekVmO29DQUNGO29DQUVBLG9CQUFvQjtvQ0FDcEJwSSxrQkFBa0J3QyxDQUFBQSxPQUFRQSxPQUFPO2dDQUNuQyxFQUFFLE9BQU9qRixPQUFPO29DQUNkcUUsUUFBUXJFLEtBQUssQ0FBQyx5QkFBNkIsT0FBSjZNLElBQUUsR0FBRSxNQUFJN007Z0NBQ2pEO2dDQUVBLHNCQUFzQjtnQ0FDdEIsTUFBTSxJQUFJd0ssUUFBUVcsQ0FBQUEsVUFBV2xELFdBQVdrRCxTQUFTOzRCQUNuRDs0QkFFQSx1QkFBdUI7NEJBQ3ZCd0IsZ0JBQWdCNUQsV0FBVyxHQUFHLHlCQUF5QzBELE9BQWhCNUIsY0FBYSxLQUFpQixPQUFkNEIsT0FBT0MsTUFBTSxFQUFDOzRCQUNyRjNMLGNBQWMsMEJBQTBDMEwsT0FBaEI1QixjQUFhLEtBQWlCLE9BQWQ0QixPQUFPQyxNQUFNLEVBQUM7NEJBRXRFLDRDQUE0Qzs0QkFDNUN6RSxXQUFXO2dDQUNULElBQUkwRSxnQkFBZ0JyRixVQUFVLEVBQUU7b0NBQzlCcUYsZ0JBQWdCckYsVUFBVSxDQUFDMkIsV0FBVyxDQUFDMEQ7Z0NBQ3pDOzRCQUNGLEdBQUc7d0JBQ0wsRUFBRSxPQUFPM00sT0FBTzs0QkFDZHFFLFFBQVFyRSxLQUFLLENBQUMsc0JBQXNCQTs0QkFDcENlLGNBQWMsc0JBQW9DLE9BQWRmLE1BQU1zRSxPQUFPO3dCQUNuRCxTQUFVOzRCQUNSLG9CQUFvQjs0QkFDcEIyRCxXQUFXLElBQU0xSCxjQUFjLE9BQU87d0JBQ3hDO29CQUNGLEdBQUdzTCxLQUFLLENBQUM3TCxDQUFBQTt3QkFDUHFFLFFBQVFyRSxLQUFLLENBQUMsc0NBQXNDQTt3QkFDcERlLGNBQWMsc0JBQW9DLE9BQWRmLE1BQU1zRSxPQUFPO3dCQUNqRC9ELGNBQWM7b0JBQ2hCO2dCQUNGO2dCQUNBO1lBRUYsS0FBSztnQkFDSCxlQUFlO2dCQUNmLGtDQUFrQztnQkFDbEMsSUFBSWdHLFFBQVE7b0JBQ1YsTUFBTVcsTUFBTVgsT0FBT1ksVUFBVSxDQUFDO29CQUM5QkQsSUFBSVksU0FBUyxDQUFDLEdBQUcsR0FBR3ZCLE9BQU8vSCxLQUFLLEVBQUUrSCxPQUFPOUgsTUFBTTtvQkFDL0N5SSxJQUFJRSxTQUFTLEdBQUc7b0JBQ2hCRixJQUFJRyxRQUFRLENBQUMsR0FBRyxHQUFHZCxPQUFPL0gsS0FBSyxFQUFFK0gsT0FBTzlILE1BQU07b0JBQzlDc0MsY0FBYztnQkFDaEI7Z0JBQ0E7WUFFRjtnQkFDRUEsY0FBYyxxQkFBZ0MsT0FBWHVJO1FBQ3ZDO0lBQ0Y7SUFFQSxNQUFNd0QsMkJBQTJCO1FBQy9CLElBQUksQ0FBQ3pHLFlBQVksQ0FBQ25HLFlBQVk7UUFFOUJpQix1QkFBdUI7UUFDdkJFLDJCQUEyQjtRQUMzQjhILGFBQWE7SUFDZjtJQUVBLE1BQU00RCx5QkFBeUI7UUFDN0IsSUFBSSxDQUFDMUcsWUFBWSxDQUFDbkcsWUFBWTtRQUU5QmlCLHVCQUF1QjtRQUN2Qk0seUJBQXlCO1FBQ3pCVixjQUFjO0lBQ2hCO0lBRUEsTUFBTWlNLG9CQUFvQjtRQUN4QixJQUFJLENBQUMzRyxZQUFZLENBQUNuRyxZQUFZO1FBRTlCaUosYUFBYTtJQUNmO0lBRUEsTUFBTThELG9CQUFvQixDQUFDL0U7UUFDekIsSUFBSSxDQUFDN0IsWUFBWSxDQUFDbkcsWUFBWTtRQUU5Qm9DLFdBQVc7WUFDVDlELE9BQU8wSixXQUFXMUosS0FBSztZQUN2QkMsUUFBUXlKLFdBQVd6SixNQUFNO1lBQ3pCOEQsVUFBVTJGLFdBQVczRixRQUFRLElBQUk7UUFDbkM7UUFDQXhCLGNBQWMsaUJBQXFDbUgsT0FBcEJBLFdBQVcxSixLQUFLLEVBQUMsS0FBcUIsT0FBbEIwSixXQUFXekosTUFBTTtJQUN0RTtJQUVBLDBCQUEwQjtJQUMxQixNQUFNeUssZUFBZSxDQUFDeEQ7UUFDcEIsTUFBTThELGlCQUFpQjlELFNBQVN3SCxZQUFZeEgsT0FBTyxDQUFDcEY7UUFDcERDLGNBQWNpSjtRQUVkLDRDQUE0QztRQUM1QyxJQUFJLENBQUNBLGdCQUFnQjtZQUNuQnZJLGVBQWU7UUFDakI7UUFFQUYsY0FBYyxVQUFnRCxPQUF0Q3lJLGlCQUFpQixVQUFVLFVBQXFELE9BQTFDLENBQUNBLGlCQUFpQixxQkFBcUI7UUFFckcsNERBQTREO1FBQzVEdkIsV0FBV0ksd0JBQXdCO0lBQ3JDO0lBRUEsMEJBQTBCO0lBQzFCLE1BQU04RSxnQkFBZ0I7UUFDcEIsSUFBSTdNLFlBQVk7WUFDZFcsZUFBZWdFLENBQUFBLE9BQVEsQ0FBQ0E7WUFDeEJsRSxjQUFjLFdBQTZDLE9BQWxDLENBQUNDLGNBQWMsVUFBVTtRQUNwRCxPQUFPO1lBQ0wsNkNBQTZDO1lBQzdDRCxjQUFjO1FBQ2hCO0lBQ0Y7SUFFQSxvQ0FBb0M7SUFDcEMsTUFBTTZMLHNCQUFzQixDQUFDUTtRQUMzQixJQUFJQSxhQUFhO1lBQ2YsZ0RBQWdEO1lBQ2hELE1BQU1DLHdCQUF3QjtnQkFDNUIsT0FBTyxJQUFJN0MsUUFBUSxDQUFDVztvQkFDbEIsTUFBTW1DLGlCQUFpQjt3QkFDckIsSUFBSXhJLE9BQU9tSCxjQUFjLElBQUksT0FBT25ILE9BQU9tSCxjQUFjLENBQUNzQixvQkFBb0IsS0FBSyxZQUFZOzRCQUM3RnBDLFFBQVE7d0JBQ1YsT0FBTzs0QkFDTGxELFdBQVdxRixnQkFBZ0I7d0JBQzdCO29CQUNGO29CQUNBQTtnQkFDRjtZQUNGO1lBRUEsZ0NBQWdDO1lBQ2hDRCx3QkFBd0IzQyxJQUFJLENBQUMsQ0FBQzhDO2dCQUM1QixJQUFJQSxvQkFBb0I7b0JBQ3RCak0sY0FBYztvQkFDZEUseUJBQXlCO29CQUN6QkosMkJBQTJCO29CQUUzQiw4Q0FBOEM7b0JBQzlDLElBQUk7d0JBQ0Z5RCxPQUFPbUgsY0FBYyxDQUFDc0Isb0JBQW9CLENBQUM7NEJBQ3pDN0w7NEJBQ0FFOzRCQUNBRTs0QkFDQUU7NEJBQ0F5TCxvQkFBb0I7d0JBQ3RCO3dCQUNBcEosUUFBUWtCLEdBQUcsQ0FBQzt3QkFDWixPQUFPO29CQUNULEVBQUUsT0FBT3ZGLE9BQU87d0JBQ2RxRSxRQUFRckUsS0FBSyxDQUFDLG9DQUFvQ0E7d0JBQ2xEdUIsY0FBYzt3QkFDZEUseUJBQXlCO3dCQUN6QkosMkJBQTJCO3dCQUMzQixPQUFPO29CQUNUO2dCQUNGLE9BQU87b0JBQ0xnRCxRQUFRK0IsSUFBSSxDQUFDO29CQUNiLDhDQUE4QztvQkFDOUNqRix1QkFBdUI7b0JBQ3ZCLE9BQU87Z0JBQ1Q7WUFDRixHQUFHMEssS0FBSyxDQUFDLENBQUM3TDtnQkFDUnFFLFFBQVFyRSxLQUFLLENBQUMscUNBQXFDQTtnQkFDbkRtQix1QkFBdUI7Z0JBQ3ZCLE9BQU87WUFDVDtZQUVBLG1EQUFtRDtZQUNuRCxPQUFPO1FBQ1Q7UUFFQSwyQ0FBMkM7UUFDM0MsSUFBSUMseUJBQXlCO1lBQzNCK0gsYUFBYSxDQUFDN0g7WUFDZCxPQUFPO1FBQ1QsT0FBTztZQUNMSCx1QkFBdUI7WUFDdkIsT0FBTztRQUNUO0lBQ0Y7SUFFQSwrQ0FBK0M7SUFDL0MsTUFBTXVNLGVBQWU7UUFDbkIsTUFBTSxFQUFFdEwsVUFBVSxFQUFFLEdBQUdGO1FBQ3ZCLElBQUlFLGFBQWEsSUFBSSxPQUFPO1FBQzVCLElBQUlBLGFBQWEsSUFBSSxPQUFPO1FBQzVCLElBQUlBLGFBQWEsSUFBSSxPQUFPO1FBQzVCLE9BQU87SUFDVDtJQUVBLGtEQUFrRDtJQUNsRCxNQUFNdUwsMkJBQTJCLENBQUN2RjtRQUNoQ3JGLGdCQUFnQnFGO0lBQ2xCO0lBRUEsNERBQTREO0lBQzVEckwsZ0RBQVNBOzBDQUFDO1lBQ1IsTUFBTTZRO3dFQUF3QixDQUFDQztvQkFDN0IsSUFBSUEsTUFBTTNKLElBQUksQ0FBQzRKLElBQUksS0FBSyxpQkFBaUI7d0JBQ3ZDL0ssZ0JBQWdCOEssTUFBTTNKLElBQUksQ0FBQ3dCLElBQUk7b0JBQ2pDO2dCQUNGOztZQUVBWixPQUFPTyxnQkFBZ0IsQ0FBQyxXQUFXdUk7WUFDbkM7a0RBQU87b0JBQ0w5SSxPQUFPUSxtQkFBbUIsQ0FBQyxXQUFXc0k7Z0JBQ3hDOztRQUNGO3lDQUFHLEVBQUU7SUFFTCw2QkFBNkI7SUFDN0I3USxnREFBU0E7MENBQUM7WUFDUixNQUFNZ1I7cUVBQXFCLENBQUNGO29CQUMxQixJQUFJQSxNQUFNRyxNQUFNLElBQUlILE1BQU1HLE1BQU0sQ0FBQ0YsSUFBSSxLQUFLLGdCQUFnQjt3QkFDeERqTCxpQkFBaUJnTCxNQUFNRyxNQUFNLENBQUN0TyxNQUFNO3dCQUNwQyxxREFBcUQ7d0JBQ3JELE1BQU1tTyxRQUFRLElBQUlJLFlBQVkseUJBQXlCOzRCQUNyREQsUUFBUTtnQ0FDTkYsTUFBTTtnQ0FDTnBPLFFBQVFtTyxNQUFNRyxNQUFNLENBQUN0TyxNQUFNOzRCQUM3Qjt3QkFDRjt3QkFDQW9GLE9BQU9vSixhQUFhLENBQUNMO29CQUN2QjtnQkFDRjs7WUFFQS9JLE9BQU9PLGdCQUFnQixDQUFDLGdCQUFnQjBJO1lBQ3hDO2tEQUFPO29CQUNMakosT0FBT1EsbUJBQW1CLENBQUMsZ0JBQWdCeUk7Z0JBQzdDOztRQUNGO3lDQUFHLEVBQUU7SUFFTCw0Q0FBNEM7SUFDNUNoUixnREFBU0E7MENBQUM7WUFDUixJQUFJNEMsZUFBZTtnQkFDakIsMEJBQTBCO2dCQUMxQmtELGlCQUFpQmxEO2dCQUVqQixrREFBa0Q7Z0JBQ2xELE1BQU1rTyxRQUFRLElBQUlJLFlBQVkseUJBQXlCO29CQUNyREQsUUFBUTt3QkFDTkYsTUFBTTt3QkFDTnBPLFFBQVFDO29CQUNWO2dCQUNGO2dCQUNBbUYsT0FBT29KLGFBQWEsQ0FBQ0w7WUFDdkI7UUFDRjt5Q0FBRztRQUFDbE87S0FBYztJQUVsQixtREFBbUQ7SUFDbkQ1QyxnREFBU0E7MENBQUM7WUFDUixNQUFNb1I7K0RBQWU7b0JBQ25CLElBQUksQ0FBQ3hPLGVBQWU7b0JBRXBCLElBQUk7d0JBQ0YsTUFBTStELFdBQVcsTUFBTUMsTUFBTSw2QkFBMkMsT0FBZGhFO3dCQUMxRCxJQUFJLENBQUMrRCxTQUFTTSxFQUFFLEVBQUU7NEJBQ2hCLE1BQU0sSUFBSUMsTUFBTTt3QkFDbEI7d0JBQ0EsTUFBTW1LLGlCQUFpQixNQUFNMUssU0FBU1MsSUFBSTt3QkFFMUMsaUVBQWlFO3dCQUNqRSxNQUFNa0s7c0ZBQWE7b0NBQUNDLDJFQUFVO2dDQUM1QixJQUFJbkwscUJBQXFCdUIsT0FBTyxJQUFJLE9BQU92QixxQkFBcUJ1QixPQUFPLENBQUM2SixjQUFjLEtBQUssWUFBWTtvQ0FDckcsb0NBQW9DO29DQUNwQ3BMLHFCQUFxQnVCLE9BQU8sQ0FBQzZKLGNBQWMsQ0FBQ0g7b0NBRTVDLDhCQUE4QjtvQ0FDOUIsTUFBTVAsUUFBUSxJQUFJSSxZQUFZLHlCQUF5Qjt3Q0FDckRELFFBQVE7NENBQ05GLE1BQU07NENBQ05wTyxRQUFRQzs0Q0FDUnVLLE9BQU9rRSxlQUFlbEUsS0FBSzs0Q0FDM0JDLE9BQU9pRSxlQUFlakUsS0FBSzt3Q0FDN0I7b0NBQ0Y7b0NBQ0FyRixPQUFPb0osYUFBYSxDQUFDTDtnQ0FDdkIsT0FBTyxJQUFJUyxVQUFVLEdBQUc7b0NBQ3RCckc7a0dBQVcsSUFBTW9HLFdBQVdDLFVBQVU7aUdBQUk7Z0NBQzVDLE9BQU87b0NBQ0xqSyxRQUFRK0IsSUFBSSxDQUFDO2dDQUNmOzRCQUNGOzt3QkFFQWlJO29CQUNGLEVBQUUsT0FBT3JPLE9BQU87d0JBQ2RxRSxRQUFRckUsS0FBSyxDQUFDLDJCQUEyQkE7b0JBQzNDO2dCQUNGOztZQUVBLHFEQUFxRDtZQUNyRGlJLFdBQVdrRyxjQUFjO1FBQzNCO3lDQUFHO1FBQUN4TztLQUFjO0lBRWxCLG9DQUFvQztJQUNwQzVDLGdEQUFTQTswQ0FBQztZQUNSLE1BQU15UjsrREFBZTtvQkFDbkIsSUFBSSxDQUFDN08sZUFBZTtvQkFFcEIsSUFBSTt3QkFDRixNQUFNK0QsV0FBVyxNQUFNQyxNQUFNLDZCQUEyQyxPQUFkaEU7d0JBQzFELElBQUksQ0FBQytELFNBQVNNLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU07d0JBRWxDLE1BQU13SyxXQUFXLE1BQU0vSyxTQUFTUyxJQUFJO3dCQUNwQyxJQUFJaEIscUJBQXFCdUIsT0FBTyxJQUFJdkIscUJBQXFCdUIsT0FBTyxDQUFDNkosY0FBYyxFQUFFOzRCQUMvRXBMLHFCQUFxQnVCLE9BQU8sQ0FBQzZKLGNBQWMsQ0FBQ0U7d0JBQzlDO29CQUVBLGtEQUFrRDtvQkFDcEQsRUFBRSxPQUFPek8sT0FBTzt3QkFDZHFFLFFBQVFyRSxLQUFLLENBQUMsMkJBQTJCQTtvQkFDM0M7Z0JBQ0Y7O1lBRUEsZ0JBQWdCO1lBQ2hCd087WUFFQSwwQkFBMEI7WUFDMUIsTUFBTUUsV0FBV3hELFlBQVlzRCxjQUFjO1lBRTNDO2tEQUFPO29CQUNMbEQsY0FBY29EO2dCQUNoQjs7UUFDRjt5Q0FBRztRQUFDL087S0FBYztJQUVsQixxREFBcUQ7SUFDckQ1QyxnREFBU0E7MENBQUM7WUFDUixNQUFNNFI7dUVBQXVCLENBQUNkO3dCQUN4QkEsZUFBNENBO29CQUFoRCxJQUFJQSxFQUFBQSxnQkFBQUEsTUFBTUcsTUFBTSxjQUFaSCxvQ0FBQUEsY0FBY0MsSUFBSSxNQUFLLHFCQUFxQkQsRUFBQUEsaUJBQUFBLE1BQU1HLE1BQU0sY0FBWkgscUNBQUFBLGVBQWNuTyxNQUFNLE1BQUtDLGVBQWU7d0JBQ3RGLE1BQU0sRUFBRXVLLEtBQUssRUFBRUMsS0FBSyxFQUFFLEdBQUcwRCxNQUFNRyxNQUFNO3dCQUNyQyxJQUFJN0sscUJBQXFCdUIsT0FBTyxJQUFJdkIscUJBQXFCdUIsT0FBTyxDQUFDNkosY0FBYyxFQUFFOzRCQUMvRXBMLHFCQUFxQnVCLE9BQU8sQ0FBQzZKLGNBQWMsQ0FBQztnQ0FBRXJFO2dDQUFPQzs0QkFBTTt3QkFDN0Q7b0JBQ0Y7Z0JBQ0Y7O1lBRUEsTUFBTXlFO29FQUFvQixDQUFDZjt3QkFDckJBLGVBQWtDQTtvQkFBdEMsSUFBSUEsRUFBQUEsZ0JBQUFBLE1BQU1HLE1BQU0sY0FBWkgsb0NBQUFBLGNBQWNDLElBQUksTUFBSyxXQUFXRCxFQUFBQSxpQkFBQUEsTUFBTUcsTUFBTSxjQUFaSCxxQ0FBQUEsZUFBY25PLE1BQU0sTUFBS0MsZUFBZTt3QkFDNUUsTUFBTSxFQUFFa1AsS0FBSyxFQUFFLEdBQUdoQixNQUFNRyxNQUFNO29CQUM5QixtQ0FBbUM7b0JBQ25DLDJDQUEyQztvQkFDN0M7Z0JBQ0Y7O1lBRUFsSixPQUFPTyxnQkFBZ0IsQ0FBQyx5QkFBeUJzSjtZQUNqRDdKLE9BQU9PLGdCQUFnQixDQUFDLGVBQWV1SjtZQUV2QztrREFBTztvQkFDTDlKLE9BQU9RLG1CQUFtQixDQUFDLHlCQUF5QnFKO29CQUNwRDdKLE9BQU9RLG1CQUFtQixDQUFDLGVBQWVzSjtnQkFDNUM7O1FBQ0Y7eUNBQUc7UUFBQ2pQO0tBQWM7SUFFbEIsb0NBQW9DO0lBQ3BDLE1BQU13TyxlQUFlLE9BQU96TztRQUMxQixJQUFJO1lBQ0YyRSxRQUFRa0IsR0FBRyxDQUFDLDhCQUE4QjdGO1lBQzFDLE1BQU1nRSxXQUFXLE1BQU1DLE1BQU0sNkJBQW9DLE9BQVBqRTtZQUMxRCxJQUFJLENBQUNnRSxTQUFTTSxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNO1lBRWxDLE1BQU02SyxlQUFlLE1BQU1wTCxTQUFTUyxJQUFJO1lBQ3hDRSxRQUFRa0IsR0FBRyxDQUFDLHFCQUFxQnVKO1lBRWpDLGlDQUFpQztZQUNqQyxNQUFNakIsUUFBUSxJQUFJSSxZQUFZLHlCQUF5QjtnQkFDckRELFFBQVE7b0JBQ05GLE1BQU07b0JBQ05wTztvQkFDQSxHQUFHb1AsWUFBWTtnQkFDakI7WUFDRjtZQUNBaEssT0FBT29KLGFBQWEsQ0FBQ0w7UUFDdkIsRUFBRSxPQUFPN04sT0FBTztZQUNkcUUsUUFBUXJFLEtBQUssQ0FBQywyQkFBMkJBO1FBQzNDO0lBQ0Y7SUFFQSx5QkFBeUI7SUFDekJqRCxnREFBU0E7MENBQUM7WUFDUixJQUFJNEMsaUJBQWlCQSxrQkFBa0JpRCxlQUFlO2dCQUNwRHlCLFFBQVFrQixHQUFHLENBQUMsZ0NBQWdDNUY7Z0JBQzVDa0QsaUJBQWlCbEQ7Z0JBRWpCLDRDQUE0QztnQkFDNUMsTUFBTWtPLFFBQVEsSUFBSUksWUFBWSxnQkFBZ0I7b0JBQzVDRCxRQUFRO3dCQUFFdE8sUUFBUUM7b0JBQWM7Z0JBQ2xDO2dCQUNBbUYsT0FBT29KLGFBQWEsQ0FBQ0w7Z0JBRXJCLGlDQUFpQztnQkFDakNNLGFBQWF4TztZQUNmO1FBQ0Y7eUNBQUc7UUFBQ0E7UUFBZWlEO0tBQWM7SUFFakMsOEJBQThCO0lBQzlCN0YsZ0RBQVNBOzBDQUFDO1lBQ1IsTUFBTTRSO3VFQUF1QixDQUFDZDtvQkFDNUIsSUFBSUEsTUFBTUcsTUFBTSxJQUFJSCxNQUFNRyxNQUFNLENBQUNGLElBQUksS0FBSyxtQkFBbUI7d0JBQzNELE1BQU0sRUFBRXBPLE1BQU0sRUFBRXdLLEtBQUssRUFBRUMsS0FBSyxFQUFFLEdBQUcwRCxNQUFNRyxNQUFNO3dCQUM3QyxJQUFJdE8sV0FBV2tELGVBQWU7NEJBQzVCLG9DQUFvQzs0QkFDcEMsSUFBSU8scUJBQXFCdUIsT0FBTyxJQUFJdkIscUJBQXFCdUIsT0FBTyxDQUFDNkosY0FBYyxFQUFFO2dDQUMvRXBMLHFCQUFxQnVCLE9BQU8sQ0FBQzZKLGNBQWMsQ0FBQztvQ0FDMUNyRSxPQUFPQSxTQUFTO29DQUNoQkMsT0FBT0EsU0FBUztnQ0FDbEI7NEJBQ0Y7d0JBQ0Y7b0JBQ0Y7Z0JBQ0Y7O1lBRUFyRixPQUFPTyxnQkFBZ0IsQ0FBQyx5QkFBeUJzSjtZQUNqRDtrREFBTztvQkFDTDdKLE9BQU9RLG1CQUFtQixDQUFDLHlCQUF5QnFKO2dCQUN0RDs7UUFDRjt5Q0FBRztRQUFDL0w7S0FBYztJQUVsQixxQkFDRSw4REFBQzFFO1FBQUl1SSxXQUFXLGtCQUFpQyxPQUFmaUg7OzBCQUNoQyw4REFBQ3pRLGtEQUFJQTs7a0NBQ0gsOERBQUM4UjtrQ0FBTTs7Ozs7O2tDQUNQLDhEQUFDQzt3QkFBS0MsTUFBSzt3QkFBV0MsU0FBUTs7Ozs7Ozs7Ozs7O1lBSS9CaFAsY0FBY0Usa0JBQWtCLGdDQUMvQiw4REFBQ2xDO2dCQUFJQyxPQUFPO29CQUNWQyxVQUFVO29CQUNWQyxLQUFLO29CQUNMQyxNQUFNO29CQUNORSxPQUFPO29CQUNQMlEsU0FBUztvQkFDVHpRLGlCQUFpQjtvQkFDakJhLE9BQU87b0JBQ1BOLFdBQVc7b0JBQ1hFLFVBQVU7b0JBQ1ZHLFlBQVk7b0JBQ1pKLFFBQVE7Z0JBQ1Y7MEJBQUc7Ozs7OztZQU1KZ0IsY0FBY00sNkJBQ2IsOERBQUN0QztnQkFBSXVJLFdBQVU7Z0JBQWlCdEksT0FBTztvQkFDckNDLFVBQVU7b0JBQ1ZDLEtBQUtpQyxhQUFjRixrQkFBa0IsaUJBQWlCLFNBQVMsU0FBVTtvQkFDekU5QixNQUFNO29CQUNORSxPQUFPO29CQUNQRSxpQkFBaUI7b0JBQ2pCYSxPQUFPO29CQUNQNFAsU0FBUztvQkFDVGxRLFdBQVc7b0JBQ1htUSxXQUFXO29CQUNYbFEsUUFBUTtvQkFDUm1RLFdBQVc7Z0JBQ2I7MEJBQ0UsNEVBQUNDOzt3QkFBTzt3QkFBSTVPOzs7Ozs7Ozs7Ozs7WUFJZlosMEJBQ0MsOERBQUM1QjtnQkFBSXVJLFdBQVU7MEJBQ2IsNEVBQUNwSDs4QkFBRTs7Ozs7Ozs7OztxQ0FHTDs7b0JBRURhLGNBQWNtRywwQkFDYiw4REFBQ3ZJOzs7OztvQkFJRXdDLDRCQUNDLDhEQUFDbkQsOERBQU1BO3dCQUNMb1MsZUFBZWxHO3dCQUNmbUcsZ0JBQWdCLElBQU1yTyx1QkFBdUI7d0JBQzdDTCxZQUFZRixpQkFBaUJFO3dCQUM3QjJPLGdCQUFnQixDQUFDQyxPQUFTM08sY0FBYzJPO3dCQUN4Q0MsZ0JBQWdCekc7d0JBQ2hCMEcsaUJBQWlCekM7d0JBQ2pCbEssV0FBV0E7Ozs7OztvQkFLZCxDQUFDM0MsNEJBQ0EsOERBQUNwQzt3QkFBSXVJLFdBQVU7d0JBQTJCdEksT0FBTzs0QkFDL0NDLFVBQVU7NEJBQ1ZDLEtBQUs7NEJBQ0x3UixPQUFPOzRCQUNQM1EsUUFBUTt3QkFDVjtrQ0FDRSw0RUFBQzRROzRCQUNDckosV0FBVTs0QkFDVnNKLFNBQVMsSUFBTTdHLGFBQWE7NEJBQzVCNkYsT0FBTTs0QkFDTjVRLE9BQU87Z0NBQ0xnUixTQUFTO2dDQUNUYSxZQUFZO2dDQUNaelEsT0FBTztnQ0FDUFosUUFBUTtnQ0FDUkMsY0FBYztnQ0FDZE8sVUFBVTtnQ0FDVjhRLFFBQVE7NEJBQ1Y7c0NBQ0Q7Ozs7Ozs7Ozs7O2tDQU9MLDhEQUFDL1I7d0JBQ0NnUyxLQUFLbE47d0JBQ0x5RCxXQUFVO3dCQUNWdEksT0FBTzs0QkFDTE0sUUFBUTZCLGFBQWEsd0JBQXdCOzRCQUM3QzZQLFdBQVcvUCxrQkFBa0IsaUJBQWlCLFNBQVM7NEJBQ3ZEaEMsVUFBVTs0QkFDVk0saUJBQWlCOzRCQUNqQjBSLFVBQVU7d0JBQ1o7OzRCQXFCQyxDQUFDOU8sMkJBQ0E7O2tEQUNFLDhEQUFDcEQ7d0NBQUl1SSxXQUFVO3dDQUF5QnRJLE9BQU87NENBQzdDZ1IsU0FBUzs0Q0FDVGxRLFdBQVc7NENBQ1hiLFVBQVVrQyxhQUFhLGFBQWE7NENBQ3BDOUIsT0FBTzs0Q0FDUFUsUUFBUTt3Q0FDVjs7MERBQ0UsOERBQUNHOzBEQUFFOzs7Ozs7MERBQ0gsOERBQUNBO2dEQUFFb0gsV0FBVTs7b0RBQXdCO29EQUFpQnZFLFdBQVdFLFVBQVU7b0RBQUM7Ozs7Ozs7NENBRzNFbEMsY0FBY3NCLHVDQUNiLDhEQUFDdEQ7Z0RBQ0N1SSxXQUFVO2dEQUNWdEksT0FBTztvREFDTEssT0FBTztvREFDUEMsUUFBUTtvREFDUjRSLFFBQVE7b0RBQ1IxUixRQUFRO29EQUNSQyxjQUFjO29EQUNkRixpQkFBaUI7b0RBQ2pCRyxTQUFTO29EQUNURyxZQUFZO29EQUNaRCxnQkFBZ0I7Z0RBQ2xCOzBEQUVBLDRFQUFDYjtvREFBSUMsT0FBTzt3REFBRWdCLFVBQVU7b0RBQVM7OERBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7O2tEQU0xQyw4REFBQ2pCO3dDQUNDdUksV0FBVTt3Q0FDVnRJLE9BQU87NENBQ0xDLFVBQVU7NENBQ1ZDLEtBQUs7NENBQ0xDLE1BQU07NENBQ05FLE9BQU87NENBQ1BDLFFBQVE7NENBQ1JDLGlCQUFpQjs0Q0FDakIwUixVQUFVOzRDQUNWelIsUUFBUTs0Q0FDUk8sUUFBUTs0Q0FDUkwsU0FBUzs0Q0FDVEcsWUFBWTs0Q0FDWkQsZ0JBQWdCO3dDQUNsQjtrREFFQSw0RUFBQ3dIOzRDQUNDMkosS0FBS2pOOzRDQUNMd0QsV0FBVTs0Q0FDVnRJLE9BQU87Z0RBQ0xLLE9BQU87Z0RBQ1BDLFFBQVE7Z0RBQ1JJLFNBQVM7Z0RBQ1R5UixVQUFVO2dEQUNWQyxXQUFXO2dEQUNYQyxXQUFXOzRDQUNiOzs7Ozs7Ozs7Ozs7K0NBSUo7NEJBR0h0USxjQUFjYyw2QkFDYiw4REFBQzVELHVFQUFlQTtnQ0FDZG9CLE9BQU82RCxRQUFRN0QsS0FBSztnQ0FDcEJDLFFBQVE0RCxRQUFRNUQsTUFBTTtnQ0FDdEI4RCxVQUFVRixRQUFRRSxRQUFRO2dDQUMxQjZGLFdBQVdwSDs7Ozs7OzRCQUtkZCxjQUFjbUcsWUFBWS9FLDRCQUN6Qiw4REFBQ3REO2dDQUNDeVMsV0FBV25QO2dDQUNYb1AsU0FBUzFEO2dDQUNUMkQsZUFBZTFEO2dDQUNmdkwsY0FBY0E7Z0NBQ2RFLGlCQUFpQkE7Z0NBQ2pCRSxVQUFVQTtnQ0FDVkUsZ0JBQWdCQTtnQ0FDaEJrQixVQUFVQTs7Ozs7OzRCQUtiaEQsY0FBY21HLFlBQVluRixxQ0FDekIsOERBQUNoRDtnQ0FBSXVJLFdBQVU7Z0NBQTBCdEksT0FBTztvQ0FDOUNDLFVBQVU7b0NBQ1ZDLEtBQUs7b0NBQ0xDLE1BQU07b0NBQ05FLE9BQU87b0NBQ1BDLFFBQVE7b0NBQ1JDLGlCQUFpQjtvQ0FDakJHLFNBQVM7b0NBQ1RFLGdCQUFnQjtvQ0FDaEJDLFlBQVk7b0NBQ1pFLFFBQVE7Z0NBQ1Y7MENBQ0UsNEVBQUNoQjtvQ0FBSXVJLFdBQVU7b0NBQTJCdEksT0FBTzt3Q0FDL0NLLE9BQU87d0NBQ1BFLGlCQUFpQjt3Q0FDakJFLGNBQWM7d0NBQ2R1USxTQUFTO3dDQUNUQyxXQUFXO29DQUNiOztzREFDRSw4REFBQ3dCOzRDQUFHbkssV0FBVTs0Q0FBMEJ0SSxPQUFPO2dEQUM3Q2tTLFFBQVE7Z0RBQ1JsUixVQUFVO2dEQUNWRyxZQUFZOzRDQUNkO3NEQUFHOzs7Ozs7c0RBQ0gsOERBQUNEOzRDQUFFb0gsV0FBVTs0Q0FBNEJ0SSxPQUFPO2dEQUM5Q2tTLFFBQVE7Z0RBQ1JsUixVQUFVO2dEQUNWMFIsWUFBWTs0Q0FDZDtzREFBRzs7Ozs7O3NEQUlILDhEQUFDM1M7NENBQUl1SSxXQUFVOzRDQUE0QnRJLE9BQU87Z0RBQ2hEVSxTQUFTO2dEQUNURSxnQkFBZ0I7Z0RBQ2hCK1IsS0FBSzs0Q0FDUDs7OERBQ0UsOERBQUNoQjtvREFDQ0MsU0FBU2hEO29EQUNUdEcsV0FBVTtvREFDVnRJLE9BQU87d0RBQ0xnUixTQUFTO3dEQUNUelEsaUJBQWlCO3dEQUNqQkMsUUFBUTt3REFDUkMsY0FBYzt3REFDZHFSLFFBQVE7b0RBQ1Y7OERBQ0Q7Ozs7Ozs4REFHRCw4REFBQ0g7b0RBQ0NDLFNBQVNqRDtvREFDVHJHLFdBQVU7b0RBQ1Z0SSxPQUFPO3dEQUNMZ1IsU0FBUzt3REFDVHpRLGlCQUFpQjt3REFDakJhLE9BQU87d0RBQ1BaLFFBQVE7d0RBQ1JDLGNBQWM7d0RBQ2RxUixRQUFRO29EQUNWOzhEQUNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBWXJCO0dBaHdEd0J6UTs7UUFDUDNCLG1EQUFTQTtRQUNVRCwwRUFBVUE7OztNQUZ0QjRCIiwic291cmNlcyI6WyIvYXBwL3BhZ2VzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTW9kaWZpZWQgaW5kZXguanMgLSBGaXhpbmcgY2FudmFzIHJlZmVyZW5jZSBpc3N1ZXNcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IGR5bmFtaWMgZnJvbSAnbmV4dC9keW5hbWljJztcbmltcG9ydCBUb3BCYXIgZnJvbSAnLi9jb21wb25lbnRzLWd1aS90b3BCYXInO1xuaW1wb3J0IERpc3BsYXlSZXNwb25zZSBmcm9tICcuL2NvbXBvbmVudHMtZ3VpL2Rpc3BsYXlSZXNwb25zZSc7XG5pbXBvcnQgeyBBY3Rpb25CdXR0b25Hcm91cCB9IGZyb20gJy4vY29tcG9uZW50cy1ndWkvYWN0aW9uQnV0dG9uJztcbmltcG9ydCB7IHNob3dDYXB0dXJlUHJldmlldywgY2FwdHVyZUltYWdlc0F0UG9pbnQsIGRyYXdSZWREb3QsIGdldFJhbmRvbVBvc2l0aW9uLCBydW5Db3VudGRvd24gfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvQWN0aW9uL2NvdW50U2F2ZSc7XG5pbXBvcnQgeyBnZW5lcmF0ZUNhbGlicmF0aW9uUG9pbnRzIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkL0FjdGlvbi9DYWxpYnJhdGVQb2ludHMuanN4JztcbmltcG9ydCB7IHVzZUNvbnNlbnQgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbnNlbnQvQ29uc2VudENvbnRleHQnO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuXG4vLyBEeW5hbWljYWxseSBsb2FkIHRoZSB2aWRlbyBwcm9jZXNzb3IgY29tcG9uZW50IChub3QgdGhlIGhvb2sgZGlyZWN0bHkpXG5jb25zdCBWaWRlb1Byb2Nlc3NvckNvbXBvbmVudCA9IGR5bmFtaWMoXG4gICgpID0+IGltcG9ydCgnLi9jb21wb25lbnRzLWd1aS9WaWRlb1Byb2Nlc3NvckNvbXBvbmVudCcpLFxuICB7IHNzcjogZmFsc2UgfVxuKTtcblxuLy8gRHluYW1pY2FsbHkgaW1wb3J0IHRoZSBjYW1lcmEgY29tcG9uZW50IHdpdGggU1NSIGRpc2FibGVkXG5jb25zdCBEeW5hbWljQ2FtZXJhQWNjZXNzID0gZHluYW1pYyhcbiAgKCkgPT4gaW1wb3J0KCcuL2NvbXBvbmVudHMtZ3VpL2NhbWVyYUFjY2VzcycpLFxuICB7IFxuICAgIHNzcjogZmFsc2UsXG4gICAgbG9hZGluZzogKCkgPT4gKFxuICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgdG9wOiAnNTAlJyxcbiAgICAgICAgbGVmdDogJzUwJScsXG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgtNTAlLCAtNTAlKScsXG4gICAgICAgIHdpZHRoOiAnNDgwcHgnLFxuICAgICAgICBoZWlnaHQ6ICczNjBweCcsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmMGY4ZmYnLFxuICAgICAgICBib3JkZXI6ICcycHggc29saWQgIzAwNjZjYycsXG4gICAgICAgIGJvcmRlclJhZGl1czogJzhweCcsXG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgIHpJbmRleDogOTk5XG4gICAgICB9fT5cbiAgICAgICAgPGRpdiBzdHlsZT17eyBmb250U2l6ZTogJzQ4cHgnLCBtYXJnaW5Cb3R0b206ICcxNXB4JyB9fT7wn5O3PC9kaXY+XG4gICAgICAgIDxwIHN0eWxlPXt7IGZvbnRTaXplOiAnMTZweCcsIGZvbnRXZWlnaHQ6ICdib2xkJywgY29sb3I6ICcjMDA2NmNjJyB9fT5cbiAgICAgICAgICBMb2FkaW5nIGNhbWVyYS4uLlxuICAgICAgICA8L3A+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbik7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvbGxlY3RlZERhdGFzZXRQYWdlKCkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3QgeyB1c2VySWQ6IGNvbnNlbnRVc2VySWQgfSA9IHVzZUNvbnNlbnQoKTtcbiAgY29uc3QgW3VzZXJEYXRhLCBzZXRVc2VyRGF0YV0gPSB1c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBbaXNIeWRyYXRlZCwgc2V0SXNIeWRyYXRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtiYWNrZW5kU3RhdHVzLCBzZXRCYWNrZW5kU3RhdHVzXSA9IHVzZVN0YXRlKCdjaGVja2luZycpO1xuICBjb25zdCBbc2hvd1RvcEJhciwgc2V0U2hvd1RvcEJhcl0gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW3Nob3dXYXJuaW5nLCBzZXRTaG93V2FybmluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt3YXJuaW5nTWVzc2FnZSwgc2V0V2FybmluZ01lc3NhZ2VdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbc3RhdHVzTWVzc2FnZSwgc2V0U3RhdHVzTWVzc2FnZV0gPSB1c2VTdGF0ZSgnJyk7XG4gIGNvbnN0IFtvdXRwdXRUZXh0LCBzZXRPdXRwdXRUZXh0XSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW3Nob3dNZXRyaWNzLCBzZXRTaG93TWV0cmljc10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW3Nob3dQZXJtaXNzaW9uUG9wdXAsIHNldFNob3dQZXJtaXNzaW9uUG9wdXBdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbY2FtZXJhUGVybWlzc2lvbkdyYW50ZWQsIHNldENhbWVyYVBlcm1pc3Npb25HcmFudGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Nob3dDYW1lcmEsIHNldFNob3dDYW1lcmFdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd0NhbWVyYVBsYWNlaG9sZGVyLCBzZXRTaG93Q2FtZXJhUGxhY2Vob2xkZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd0hlYWRQb3NlLCBzZXRTaG93SGVhZFBvc2VdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd0JvdW5kaW5nQm94LCBzZXRTaG93Qm91bmRpbmdCb3hdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd01hc2ssIHNldFNob3dNYXNrXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Nob3dQYXJhbWV0ZXJzLCBzZXRTaG93UGFyYW1ldGVyc10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt3aW5kb3dTaXplLCBzZXRXaW5kb3dTaXplXSA9IHVzZVN0YXRlKHsgd2lkdGg6IDAsIGhlaWdodDogMCwgcGVyY2VudGFnZTogMTAwIH0pO1xuICBjb25zdCBbbWV0cmljcywgc2V0TWV0cmljc10gPSB1c2VTdGF0ZSh7IHdpZHRoOiAnLS0tJywgaGVpZ2h0OiAnLS0tJywgZGlzdGFuY2U6ICctLS0nIH0pO1xuICBjb25zdCBbY2FwdHVyZUNvdW50ZXIsIHNldENhcHR1cmVDb3VudGVyXSA9IHVzZVN0YXRlKDEpO1xuICBjb25zdCBbY2FwdHVyZUZvbGRlciwgc2V0Q2FwdHVyZUZvbGRlcl0gPSB1c2VTdGF0ZSgnJyk7XG4gIGNvbnN0IFtjdXJyZW50VXNlcklkLCBzZXRDdXJyZW50VXNlcklkXSA9IHVzZVN0YXRlKCdkZWZhdWx0Jyk7XG4gIGNvbnN0IFtzaG93U2V0dGluZ3MsIHNldFNob3dTZXR0aW5nc10gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgLy8gUmVmc1xuICBjb25zdCBwcmV2aWV3QXJlYVJlZiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgY2FudmFzUmVmID0gdXNlUmVmKG51bGwpO1xuICBjb25zdCB2aWRlb1JlZiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgYWN0aW9uQnV0dG9uR3JvdXBSZWYgPSB1c2VSZWYobnVsbCk7XG5cbiAgLy8gU2V0IGh5ZHJhdGVkIHN0YXRlIGFmdGVyIG1vdW50XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0SXNIeWRyYXRlZCh0cnVlKTtcbiAgfSwgW10pO1xuXG4gIC8vIExvYWQgdXNlciBkYXRhXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgbG9hZFVzZXJEYXRhID0gYXN5bmMgKCkgPT4ge1xuICAgICAgaWYgKCFyb3V0ZXIuaXNSZWFkeSkgcmV0dXJuO1xuICAgICAgXG4gICAgICB0cnkge1xuICAgICAgICBpZiAocm91dGVyLnF1ZXJ5LnVzZXJEYXRhKSB7XG4gICAgICAgICAgY29uc3QgcGFyc2VkRGF0YSA9IEpTT04ucGFyc2Uocm91dGVyLnF1ZXJ5LnVzZXJEYXRhKTtcbiAgICAgICAgICBzZXRVc2VyRGF0YShwYXJzZWREYXRhKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocm91dGVyLnF1ZXJ5LnVzZXJJZCkge1xuICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvdXNlci1wcmVmZXJlbmNlcy8ke3JvdXRlci5xdWVyeS51c2VySWR9YCwge1xuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAnWC1BUEktS2V5JzogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX0tFWSB8fCAnQTFCMkMzRDQtRTVGNi03ODkwLUdISUotS0xNTk9QUVJTVFVWJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIHVzZXIgZGF0YScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgIHNldFVzZXJEYXRhKGRhdGEpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyB1c2VyIGRhdGE6JywgZXJyKTtcbiAgICAgICAgc2V0RXJyb3IoZXJyLm1lc3NhZ2UpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgbG9hZFVzZXJEYXRhKCk7XG4gIH0sIFtyb3V0ZXIuaXNSZWFkeSwgcm91dGVyLnF1ZXJ5XSk7XG5cbiAgLy8gQ2hlY2sgYmFja2VuZCBjb25uZWN0aW9uXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY2hlY2tCYWNrZW5kQ29ubmVjdGlvbiA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvY2hlY2stYmFja2VuZC1jb25uZWN0aW9uJyk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHNldEJhY2tlbmRTdGF0dXMoZGF0YS5jb25uZWN0ZWQgPyAnY29ubmVjdGVkJyA6ICdkaXNjb25uZWN0ZWQnKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNoZWNraW5nIGJhY2tlbmQgY29ubmVjdGlvbjonLCBlcnJvcik7XG4gICAgICAgIHNldEJhY2tlbmRTdGF0dXMoJ2Rpc2Nvbm5lY3RlZCcpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAoaXNIeWRyYXRlZCkge1xuICAgICAgY2hlY2tCYWNrZW5kQ29ubmVjdGlvbigpO1xuICAgIH1cbiAgfSwgW2lzSHlkcmF0ZWRdKTtcblxuICAvLyBVcGRhdGUgd2luZG93IHNpemVcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB1cGRhdGVEaW1lbnNpb25zID0gKCkgPT4ge1xuICAgICAgaWYgKHByZXZpZXdBcmVhUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc3Qgd2lkdGggPSBwcmV2aWV3QXJlYVJlZi5jdXJyZW50Lm9mZnNldFdpZHRoO1xuICAgICAgICBjb25zdCBoZWlnaHQgPSBwcmV2aWV3QXJlYVJlZi5jdXJyZW50Lm9mZnNldEhlaWdodDtcbiAgICAgICAgY29uc3Qgc2NyZWVuUGVyY2VudGFnZSA9ICh3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5zY3JlZW4ud2lkdGgpICogMTAwO1xuICAgICAgICBcbiAgICAgICAgc2V0TWV0cmljcyhwcmV2ID0+ICh7IC4uLnByZXYsIHdpZHRoLCBoZWlnaHQgfSkpO1xuICAgICAgICBzZXRXaW5kb3dTaXplKHtcbiAgICAgICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgICAgICAgcGVyY2VudGFnZTogTWF0aC5yb3VuZChzY3JlZW5QZXJjZW50YWdlKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKGlzSHlkcmF0ZWQpIHtcbiAgICAgIHVwZGF0ZURpbWVuc2lvbnMoKTtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB1cGRhdGVEaW1lbnNpb25zKTtcbiAgICAgIHJldHVybiAoKSA9PiB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdXBkYXRlRGltZW5zaW9ucyk7XG4gICAgfVxuICB9LCBbaXNIeWRyYXRlZF0pO1xuXG4gIC8vIEluaXRpYWxpemUgc2V0dGluZ3MgYmFzZWQgb24gdXNlciBkYXRhXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHVzZXJEYXRhICYmIGNvbnNlbnRVc2VySWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdJbml0aWFsaXppbmcgc2V0dGluZ3MgZm9yIHVzZXI6JywgY29uc2VudFVzZXJJZCwgdXNlckRhdGEpO1xuICAgICAgXG4gICAgICAvLyBJbml0aWFsaXplIHVzZXItc3BlY2lmaWMgc2V0dGluZ3NcbiAgICAgIGlmICh1c2VyRGF0YS5wcmVmZXJlbmNlcykge1xuICAgICAgICBjb25zdCB7IHByZWZlcmVuY2VzIH0gPSB1c2VyRGF0YTtcbiAgICAgICAgXG4gICAgICAgIC8vIFVwZGF0ZSBjYW1lcmEgc2V0dGluZ3MgaWYgYXZhaWxhYmxlXG4gICAgICAgIGlmIChwcmVmZXJlbmNlcy5jYW1lcmFTZXR0aW5ncykge1xuICAgICAgICAgIGNvbnN0IHsgc2hvd0hlYWRQb3NlLCBzaG93Qm91bmRpbmdCb3gsIHNob3dNYXNrLCBzaG93UGFyYW1ldGVycyB9ID0gcHJlZmVyZW5jZXMuY2FtZXJhU2V0dGluZ3M7XG4gICAgICAgICAgc2V0U2hvd0hlYWRQb3NlKHNob3dIZWFkUG9zZSB8fCBmYWxzZSk7XG4gICAgICAgICAgc2V0U2hvd0JvdW5kaW5nQm94KHNob3dCb3VuZGluZ0JveCB8fCBmYWxzZSk7XG4gICAgICAgICAgc2V0U2hvd01hc2soc2hvd01hc2sgfHwgZmFsc2UpO1xuICAgICAgICAgIHNldFNob3dQYXJhbWV0ZXJzKHNob3dQYXJhbWV0ZXJzIHx8IGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gVXBkYXRlIG90aGVyIHNldHRpbmdzIGFzIG5lZWRlZFxuICAgICAgICBpZiAocHJlZmVyZW5jZXMubWV0cmljcykge1xuICAgICAgICAgIHNldFNob3dNZXRyaWNzKHByZWZlcmVuY2VzLm1ldHJpY3Muc2hvdyB8fCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKHByZWZlcmVuY2VzLnRvcEJhcikge1xuICAgICAgICAgIHNldFNob3dUb3BCYXIocHJlZmVyZW5jZXMudG9wQmFyLnNob3cgfHwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIFt1c2VyRGF0YSwgY29uc2VudFVzZXJJZF0pO1xuXG4gIC8vIEltcHJvdmVkIGdldCBjYW52YXMgZnVuY3Rpb24gdGhhdCB0cmllcyBtdWx0aXBsZSBtZXRob2RzXG4gIGNvbnN0IGdldE1haW5DYW52YXMgPSAoKSA9PiB7XG4gICAgLy8gVXNlIHRoZSBuZXcgY2FudmFzIG1hbmFnZXIgaWYgYXZhaWxhYmxlXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5jYW52YXNNYW5hZ2VyKSB7XG4gICAgICByZXR1cm4gd2luZG93LmNhbnZhc01hbmFnZXIuZ2V0Q2FudmFzKCkgfHwgd2luZG93LmNhbnZhc01hbmFnZXIuY3JlYXRlQ2FudmFzKCk7XG4gICAgfVxuICAgIFxuICAgIC8vIE1ldGhvZCAxOiBDaGVjayBpZiB3ZSBoYXZlIGEgZGlyZWN0IHJlZmVyZW5jZVxuICAgIGlmIChjYW52YXNSZWYuY3VycmVudCkge1xuICAgICAgY29uc29sZS5sb2coXCJVc2luZyBkaXJlY3QgY2FudmFzUmVmLmN1cnJlbnQgcmVmZXJlbmNlXCIpO1xuICAgICAgcmV0dXJuIGNhbnZhc1JlZi5jdXJyZW50O1xuICAgIH1cbiAgICBcbiAgICAvLyBNZXRob2QgMjogVHJ5IHRvIGdldCBnbG9iYWwgcmVmZXJlbmNlXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy53aGl0ZVNjcmVlbkNhbnZhcykge1xuICAgICAgY29uc29sZS5sb2coXCJVc2luZyBnbG9iYWwgd2hpdGVTY3JlZW5DYW52YXMgcmVmZXJlbmNlXCIpO1xuICAgICAgY2FudmFzUmVmLmN1cnJlbnQgPSB3aW5kb3cud2hpdGVTY3JlZW5DYW52YXM7IC8vIFVwZGF0ZSBvdXIgcmVmXG4gICAgICByZXR1cm4gd2luZG93LndoaXRlU2NyZWVuQ2FudmFzO1xuICAgIH1cbiAgICBcbiAgICAvLyBNZXRob2QgMzogVHJ5IHRvIGZpbmQgdmlhIERPTVxuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zdCBjYW52YXNFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRyYWNraW5nLWNhbnZhcycpO1xuICAgICAgaWYgKGNhbnZhc0VsZW1lbnQpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJGb3VuZCBjYW52YXMgdmlhIERPTSBzZWxlY3RvclwiKTtcbiAgICAgICAgY2FudmFzUmVmLmN1cnJlbnQgPSBjYW52YXNFbGVtZW50OyAvLyBVcGRhdGUgb3VyIHJlZlxuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICB3aW5kb3cud2hpdGVTY3JlZW5DYW52YXMgPSBjYW52YXNFbGVtZW50OyAvLyBVcGRhdGUgZ2xvYmFsIHJlZiB0b29cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2FudmFzRWxlbWVudDtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgY29uc29sZS53YXJuKFwiTm8gY2FudmFzIGZvdW5kIHZpYSBhbnkgbWV0aG9kXCIpO1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuICBcbiAgLy8gQ2hlY2sgaWYgd2UncmUgb24gdGhlIGNsaWVudCBvciBzZXJ2ZXJcbiAgY29uc3QgaXNDbGllbnQgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcbiAgXG4gIC8vIEFkZCBlZmZlY3QgdG8gaW5pdGlhbGl6ZSBjYW52YXMgYW5kIG1ha2UgaXQgZ2xvYmFsbHkgYXZhaWxhYmxlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFpc0NsaWVudCB8fCAhaXNIeWRyYXRlZCkgcmV0dXJuO1xuICAgIFxuICAgIC8vIEluaXRpYWxpemUgY2FudmFzIG1hbmFnZXIgZ2xvYmFsbHlcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIENyZWF0ZSBhIHNpbXBsZSBjYW52YXMgbWFuYWdlciBmb3IgaW5kZXguanNcbiAgICAgIHdpbmRvdy5jYW52YXNNYW5hZ2VyID0ge1xuICAgICAgICBnZXRDYW52YXM6ICgpID0+IHtcbiAgICAgICAgICByZXR1cm4gY2FudmFzUmVmLmN1cnJlbnQgfHwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RyYWNraW5nLWNhbnZhcycpO1xuICAgICAgICB9LFxuICAgICAgICBjcmVhdGVDYW52YXM6IChjb250YWluZXIgPSBudWxsKSA9PiB7XG4gICAgICAgICAgbGV0IGNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0cmFja2luZy1jYW52YXMnKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoIWNhbnZhcykge1xuICAgICAgICAgICAgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgICAgICBjYW52YXMuY2xhc3NOYW1lID0gJ3RyYWNraW5nLWNhbnZhcyc7XG4gICAgICAgICAgICBjYW52YXMuaWQgPSAndHJhY2tpbmctY2FudmFzJztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCB0YXJnZXRDb250YWluZXIgPSBjb250YWluZXIgfHwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FudmFzLWNvbnRhaW5lcicpIHx8IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tY29udGVudCcpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5O1xuXG4gICAgICAgICAgLy8gU2V0IHJlc3BvbnNpdmUgZGltZW5zaW9uc1xuICAgICAgICAgIGNvbnN0IHJlY3QgPSB0YXJnZXRDb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgY2FudmFzLndpZHRoID0gcmVjdC53aWR0aCB8fCB0YXJnZXRDb250YWluZXIuY2xpZW50V2lkdGggfHwgODAwO1xuICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSByZWN0LmhlaWdodCB8fCB0YXJnZXRDb250YWluZXIuY2xpZW50SGVpZ2h0IHx8IDYwMDtcblxuICAgICAgICAgIC8vIFNldCBDU1MgZm9yIHJlc3BvbnNpdmUgYmVoYXZpb3JcbiAgICAgICAgICBjYW52YXMuc3R5bGUuY3NzVGV4dCA9IGBcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICBgO1xuXG4gICAgICAgICAgLy8gSW5pdGlhbGl6ZSB3aXRoIHdoaXRlIGJhY2tncm91bmRcbiAgICAgICAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJ3doaXRlJztcbiAgICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcblxuICAgICAgICAgIC8vIEFkZCB0byBjb250YWluZXIgaWYgbm90IGFscmVhZHkgdGhlcmVcbiAgICAgICAgICBpZiAoIWNhbnZhcy5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICB0YXJnZXRDb250YWluZXIuYXBwZW5kQ2hpbGQoY2FudmFzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBTdG9yZSByZWZlcmVuY2VzXG4gICAgICAgICAgY2FudmFzUmVmLmN1cnJlbnQgPSBjYW52YXM7XG4gICAgICAgICAgd2luZG93LndoaXRlU2NyZWVuQ2FudmFzID0gY2FudmFzO1xuXG4gICAgICAgICAgY29uc29sZS5sb2coYENhbnZhcyBjcmVhdGVkL3VwZGF0ZWQ6ICR7Y2FudmFzLndpZHRofXgke2NhbnZhcy5oZWlnaHR9YCk7XG4gICAgICAgICAgcmV0dXJuIGNhbnZhcztcbiAgICAgICAgfSxcbiAgICAgICAgZW50ZXJGdWxsc2NyZWVuOiAoKSA9PiB7XG4gICAgICAgICAgY29uc3QgY2FudmFzID0gd2luZG93LmNhbnZhc01hbmFnZXIuZ2V0Q2FudmFzKCk7XG4gICAgICAgICAgaWYgKCFjYW52YXMpIHJldHVybjtcblxuICAgICAgICAgIC8vIFNhdmUgb3JpZ2luYWwgc3RhdGVcbiAgICAgICAgICBjYW52YXMuX29yaWdpbmFsU3RhdGUgPSB7XG4gICAgICAgICAgICBwYXJlbnQ6IGNhbnZhcy5wYXJlbnRFbGVtZW50LFxuICAgICAgICAgICAgcG9zaXRpb246IGNhbnZhcy5zdHlsZS5wb3NpdGlvbixcbiAgICAgICAgICAgIHRvcDogY2FudmFzLnN0eWxlLnRvcCxcbiAgICAgICAgICAgIGxlZnQ6IGNhbnZhcy5zdHlsZS5sZWZ0LFxuICAgICAgICAgICAgd2lkdGg6IGNhbnZhcy5zdHlsZS53aWR0aCxcbiAgICAgICAgICAgIGhlaWdodDogY2FudmFzLnN0eWxlLmhlaWdodCxcbiAgICAgICAgICAgIHpJbmRleDogY2FudmFzLnN0eWxlLnpJbmRleFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICAvLyBNb3ZlIHRvIGJvZHkgYW5kIG1ha2UgZnVsbHNjcmVlblxuICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY2FudmFzKTtcbiAgICAgICAgICBjYW52YXMuc3R5bGUuY3NzVGV4dCA9IGBcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB3aWR0aDogMTAwdnc7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAgICAgei1pbmRleDogOTk5OTk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgYDtcblxuICAgICAgICAgIGNhbnZhcy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5cbiAgICAgICAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJ3doaXRlJztcbiAgICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcblxuICAgICAgICAgIGNvbnNvbGUubG9nKCdDYW52YXMgZW50ZXJlZCBmdWxsc2NyZWVuIG1vZGUnKTtcbiAgICAgICAgfSxcbiAgICAgICAgZXhpdEZ1bGxzY3JlZW46ICgpID0+IHtcbiAgICAgICAgICBjb25zdCBjYW52YXMgPSB3aW5kb3cuY2FudmFzTWFuYWdlci5nZXRDYW52YXMoKTtcbiAgICAgICAgICBpZiAoIWNhbnZhcyB8fCAhY2FudmFzLl9vcmlnaW5hbFN0YXRlKSByZXR1cm47XG5cbiAgICAgICAgICAvLyBGaW5kIGFwcHJvcHJpYXRlIGNvbnRhaW5lclxuICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYW52YXMtY29udGFpbmVyJykgfHwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tY29udGVudCcpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keTtcblxuICAgICAgICAgIC8vIE1vdmUgY2FudmFzIGJhY2sgdG8gY29udGFpbmVyXG4gICAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGNhbnZhcyk7XG5cbiAgICAgICAgICAvLyBSZXN0b3JlIG9yaWdpbmFsIHN0eWxlc1xuICAgICAgICAgIGNhbnZhcy5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG4gICAgICAgICAgY2FudmFzLnN0eWxlLnRvcCA9ICcnO1xuICAgICAgICAgIGNhbnZhcy5zdHlsZS5sZWZ0ID0gJyc7XG4gICAgICAgICAgY2FudmFzLnN0eWxlLndpZHRoID0gJzEwMCUnO1xuICAgICAgICAgIGNhbnZhcy5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XG4gICAgICAgICAgY2FudmFzLnN0eWxlLnpJbmRleCA9ICcnO1xuICAgICAgICAgIGNhbnZhcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnd2hpdGUnO1xuXG4gICAgICAgICAgLy8gVXBkYXRlIHNpemUgdG8gbWF0Y2ggY29udGFpbmVyXG4gICAgICAgICAgY29uc3QgcmVjdCA9IGNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICBjYW52YXMud2lkdGggPSByZWN0LndpZHRoIHx8IGNvbnRhaW5lci5jbGllbnRXaWR0aCB8fCA4MDA7XG4gICAgICAgICAgY2FudmFzLmhlaWdodCA9IHJlY3QuaGVpZ2h0IHx8IGNvbnRhaW5lci5jbGllbnRIZWlnaHQgfHwgNjAwO1xuXG4gICAgICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICd3aGl0ZSc7XG4gICAgICAgICAgY3R4LmZpbGxSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG5cbiAgICAgICAgICBkZWxldGUgY2FudmFzLl9vcmlnaW5hbFN0YXRlO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdDYW52YXMgZXhpdGVkIGZ1bGxzY3JlZW4gbW9kZScpO1xuICAgICAgICB9LFxuICAgICAgICBjbGVhcjogKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IHdpbmRvdy5jYW52YXNNYW5hZ2VyLmdldENhbnZhcygpO1xuICAgICAgICAgIGlmICghY2FudmFzKSByZXR1cm47XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAnd2hpdGUnO1xuICAgICAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICAvLyBEZWJ1ZyBpbmZvIHRvIHZlcmlmeSBjYW52YXMgc2l6ZSBhbmQgYXZhaWxhYmlsaXR5XG4gICAgY29uc3QgY2FudmFzID0gY2FudmFzUmVmLmN1cnJlbnQ7XG4gICAgaWYgKGNhbnZhcykge1xuICAgICAgY29uc29sZS5sb2coXCJJbmRleC5qczogQ2FudmFzIGluaXRpYWxpemVkXCIsIHtcbiAgICAgICAgd2lkdGg6IGNhbnZhcy53aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBjYW52YXMuaGVpZ2h0XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gTWFrZSBjYW52YXMgRVhQTElDSVRMWSBhdmFpbGFibGUgZ2xvYmFsbHlcbiAgICAgIHdpbmRvdy53aGl0ZVNjcmVlbkNhbnZhcyA9IGNhbnZhcztcbiAgICAgIFxuICAgICAgLy8gQWxzbyBzdG9yZSBjYW52YXMgZGltZW5zaW9uc1xuICAgICAgd2luZG93LmNhbnZhc0RpbWVuc2lvbnMgPSB7XG4gICAgICAgIHdpZHRoOiBjYW52YXMud2lkdGgsXG4gICAgICAgIGhlaWdodDogY2FudmFzLmhlaWdodFxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS53YXJuKFwiQ2FudmFzIHJlZmVyZW5jZSBpcyBub3QgYXZhaWxhYmxlIGR1cmluZyBpbml0aWFsaXphdGlvblwiKTtcbiAgICB9XG4gICAgXG4gICAgLy8gRXhwb3NlIGNhbnZhcyBpbml0aWFsaXphdGlvbiBmdW5jdGlvbiBnbG9iYWxseVxuICAgIHdpbmRvdy5pbml0aWFsaXplQ2FudmFzID0gKGNhbnZhcywgcGFyZW50KSA9PiB7XG4gICAgICBpZiAoIWNhbnZhcyB8fCAhcGFyZW50KSB7XG4gICAgICAgIGNvbnNvbGUud2FybignW2luaXRpYWxpemVDYW52YXNdIENhbnZhcyBvciBwYXJlbnQgaXMgbnVsbCcsIHsgY2FudmFzLCBwYXJlbnQgfSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gU2V0IGNhbnZhcyBkaW1lbnNpb25zIHRvIG1hdGNoIHBhcmVudFxuICAgICAgICBjYW52YXMud2lkdGggPSBwYXJlbnQuY2xpZW50V2lkdGggfHwgODAwO1xuICAgICAgICBjYW52YXMuaGVpZ2h0ID0gcGFyZW50LmNsaWVudEhlaWdodCB8fCA2MDA7XG4gICAgICAgIFxuICAgICAgICAvLyBDbGVhciBjYW52YXMgYW5kIHNldCB3aGl0ZSBiYWNrZ3JvdW5kXG4gICAgICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG4gICAgICAgIGN0eC5maWxsU3R5bGUgPSAnd2hpdGUnO1xuICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGBDYW52YXMgaW5pdGlhbGl6ZWQgd2l0aCBkaW1lbnNpb25zOiAke2NhbnZhcy53aWR0aH14JHtjYW52YXMuaGVpZ2h0fWApO1xuICAgICAgICBcbiAgICAgICAgLy8gVXBkYXRlIGdsb2JhbCByZWZlcmVuY2VcbiAgICAgICAgd2luZG93LndoaXRlU2NyZWVuQ2FudmFzID0gY2FudmFzO1xuICAgICAgICB3aW5kb3cuY2FudmFzRGltZW5zaW9ucyA9IHtcbiAgICAgICAgICB3aWR0aDogY2FudmFzLndpZHRoLFxuICAgICAgICAgIGhlaWdodDogY2FudmFzLmhlaWdodFxuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdbaW5pdGlhbGl6ZUNhbnZhc10gRXJyb3IgaW5pdGlhbGl6aW5nIGNhbnZhczonLCBlcnJvcik7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIC8vIENoZWNrIGNhbnZhcyB2aXNpYmlsaXR5IGFuZCBmb3JjZSBpbml0aWFsaXphdGlvbiBhZnRlciBhIGJyaWVmIGRlbGF5XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb25zdCBjYW52YXMgPSBnZXRNYWluQ2FudmFzKCk7XG4gICAgICBpZiAoY2FudmFzKSB7XG4gICAgICAgIGNvbnN0IHJlY3QgPSBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ2FudmFzIGluaXRpYWwgdmlzaWJpbGl0eSBjaGVjazpcIiwge1xuICAgICAgICAgIGRpbWVuc2lvbnM6IGAke2NhbnZhcy53aWR0aH14JHtjYW52YXMuaGVpZ2h0fWAsXG4gICAgICAgICAgcmVjdFNpemU6IGAke3JlY3Qud2lkdGh9eCR7cmVjdC5oZWlnaHR9YCxcbiAgICAgICAgICBpc1Zpc2libGU6IChyZWN0LndpZHRoID4gMCAmJiByZWN0LmhlaWdodCA+IDApXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gRm9yY2UgaW5pdGlhbGl6YXRpb24gaWYgbmVlZGVkXG4gICAgICAgIGFkanVzdENhbnZhc0RpbWVuc2lvbnMoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNhbnZhcyBub3QgZm91bmQgZHVyaW5nIHZpc2liaWxpdHkgY2hlY2tcIik7XG4gICAgICB9XG4gICAgfSwgNTAwKTtcbiAgICBcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZGVsZXRlIHdpbmRvdy53aGl0ZVNjcmVlbkNhbnZhcztcbiAgICAgIGRlbGV0ZSB3aW5kb3cuY2FudmFzRGltZW5zaW9ucztcbiAgICAgIGRlbGV0ZSB3aW5kb3cuaW5pdGlhbGl6ZUNhbnZhcztcbiAgICAgIGRlbGV0ZSB3aW5kb3cuY2FudmFzTWFuYWdlcjtcbiAgICB9O1xuICB9LCBbaXNIeWRyYXRlZF0pO1xuXG4gIC8vIEltcHJvdmVkIGNhbnZhcyBkaW1lbnNpb25zIGFkanVzdG1lbnRcbiAgY29uc3QgYWRqdXN0Q2FudmFzRGltZW5zaW9ucyA9ICgpID0+IHtcbiAgICBpZiAoIWlzQ2xpZW50IHx8ICFpc0h5ZHJhdGVkIHx8ICFwcmV2aWV3QXJlYVJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgXG4gICAgY29uc3QgY2FudmFzID0gZ2V0TWFpbkNhbnZhcygpO1xuICAgIGlmICghY2FudmFzKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJObyBjYW52YXMgZm91bmQgdG8gYWRqdXN0IGRpbWVuc2lvbnNcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGNvbnRhaW5lciA9IHByZXZpZXdBcmVhUmVmLmN1cnJlbnQ7XG4gICAgXG4gICAgLy8gR2V0IHRoZSBzaXplIG9mIHRoZSBwcmV2aWV3IGFyZWFcbiAgICBjb25zdCByZWN0ID0gY29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIFxuICAgIC8vIENhbGN1bGF0ZSBwcm9wZXIgaGVpZ2h0IGJhc2VkIG9uIHRvcCBiYXIgdmlzaWJpbGl0eVxuICAgIGNvbnN0IHRvcEJhckhlaWdodCA9IHNob3dUb3BCYXIgPyAxMjAgOiAwOyAvLyBBZGp1c3QgdGhpcyB2YWx1ZSBiYXNlZCBvbiB5b3VyIHRvcCBiYXIncyBhY3R1YWwgaGVpZ2h0XG4gICAgXG4gICAgY29uc29sZS5sb2coXCJBZGp1c3RpbmcgY2FudmFzIGRpbWVuc2lvbnNcIiwge1xuICAgICAgY29udGFpbmVyV2lkdGg6IHJlY3Qud2lkdGgsXG4gICAgICBjb250YWluZXJIZWlnaHQ6IHJlY3QuaGVpZ2h0LFxuICAgICAgdG9wQmFyVmlzaWJsZTogc2hvd1RvcEJhcixcbiAgICAgIGNhbGN1bGF0ZWRIZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gICAgfSk7XG4gICAgXG4gICAgLy8gU2V0IGNhbnZhcyBkaW1lbnNpb25zIHRvIG1hdGNoIGNvbnRhaW5lciBzaXplIHdpdGggdG9wIGJhciBhZGp1c3RtZW50XG4gICAgY2FudmFzLndpZHRoID0gcmVjdC53aWR0aDtcbiAgICBjYW52YXMuaGVpZ2h0ID0gcmVjdC5oZWlnaHQ7XG4gICAgXG4gICAgLy8gQ2xlYXIgdGhlIGNhbnZhc1xuICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICBcbiAgICAvLyBGaWxsIHdpdGggd2hpdGUgYmFja2dyb3VuZFxuICAgIGN0eC5maWxsU3R5bGUgPSAnd2hpdGUnO1xuICAgIGN0eC5maWxsUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKGBDYW52YXMgZGltZW5zaW9ucyBhZGp1c3RlZDogJHtjYW52YXMud2lkdGh9eCR7Y2FudmFzLmhlaWdodH1gKTtcbiAgICBcbiAgICAvLyBVcGRhdGUgZ2xvYmFsIHJlZmVyZW5jZSB3aXRoIGN1cnJlbnQgZGltZW5zaW9uc1xuICAgIHdpbmRvdy53aGl0ZVNjcmVlbkNhbnZhcyA9IGNhbnZhcztcbiAgICB3aW5kb3cuY2FudmFzRGltZW5zaW9ucyA9IHtcbiAgICAgIHdpZHRoOiBjYW52YXMud2lkdGgsXG4gICAgICBoZWlnaHQ6IGNhbnZhcy5oZWlnaHRcbiAgICB9O1xuICB9O1xuXG4gIC8vIENyZWF0ZSBhIGNhcHR1cmUgZm9sZGVyIG9uIGNvbXBvbmVudCBtb3VudFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghY2FwdHVyZUZvbGRlciAmJiBpc0NsaWVudCAmJiBpc0h5ZHJhdGVkKSB7XG4gICAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkucmVwbGFjZSgvWzpcXC5dL2csICctJyk7XG4gICAgICBzZXRDYXB0dXJlRm9sZGVyKGBzZXNzaW9uXyR7dGltZXN0YW1wfWApO1xuICAgICAgY29uc29sZS5sb2coYENyZWF0ZWQgY2FwdHVyZSBmb2xkZXI6IHNlc3Npb25fJHt0aW1lc3RhbXB9YCk7XG4gICAgfVxuICB9LCBbY2FwdHVyZUZvbGRlciwgaXNDbGllbnQsIGlzSHlkcmF0ZWRdKTtcbiAgXG4gIC8vIENoZWNrIGJhY2tlbmQgY29ubmVjdGlvbiBvbiBtb3VudFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghaXNDbGllbnQgfHwgIWlzSHlkcmF0ZWQpIHJldHVybjsgLy8gU2tpcCBvbiBzZXJ2ZXIgb3IgYmVmb3JlIGh5ZHJhdGlvblxuICAgIFxuICAgIGNvbnN0IGNoZWNrQmFja2VuZENvbm5lY3Rpb24gPSBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2NoZWNrLWJhY2tlbmQtY29ubmVjdGlvbicpO1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBzZXRCYWNrZW5kU3RhdHVzKGRhdGEuY29ubmVjdGVkID8gJ2Nvbm5lY3RlZCcgOiAnZGlzY29ubmVjdGVkJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKGBCYWNrZW5kIGNvbm5lY3Rpb246ICR7ZGF0YS5jb25uZWN0ZWQgPyAnT0snIDogJ0ZhaWxlZCd9YCk7XG4gICAgICAgIFxuICAgICAgICAvLyBTaG93IHN0YXR1cyBpbiBvdXRwdXQgdGV4dFxuICAgICAgICBzZXRPdXRwdXRUZXh0KGBCYWNrZW5kICR7ZGF0YS5jb25uZWN0ZWQgPyAnY29ubmVjdGVkJyA6ICdkaXNjb25uZWN0ZWQgLSB1c2luZyBtb2NrIG1vZGUnfWApO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY2hlY2tpbmcgYmFja2VuZCBjb25uZWN0aW9uOicsIGVycm9yKTtcbiAgICAgICAgc2V0QmFja2VuZFN0YXR1cygnZGlzY29ubmVjdGVkJyk7XG4gICAgICAgIHNldE91dHB1dFRleHQoJ0JhY2tlbmQgZGlzY29ubmVjdGVkIC0gdXNpbmcgbW9jayBtb2RlJyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNoZWNrQmFja2VuZENvbm5lY3Rpb24oKTtcbiAgICBcbiAgICAvLyBXZWxjb21lIG1lc3NhZ2UgYWZ0ZXIgYmFja2VuZCBjaGVja1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgc2V0T3V0cHV0VGV4dCgnQ2FtZXJhIHN5c3RlbSByZWFkeS4gQ2xpY2sgXCJTaG93IFByZXZpZXdcIiB0byBzdGFydCBjYW1lcmEuJyk7XG4gICAgfSwgMjAwMCk7XG4gIH0sIFtpc0h5ZHJhdGVkXSk7XG5cbiAgLy8gQWRkIHN0eWxlcyB0byBkb2N1bWVudCBoZWFkIGZvciBidXR0b24gaGlnaGxpZ2h0aW5nXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFpc0NsaWVudCB8fCAhaXNIeWRyYXRlZCkgcmV0dXJuO1xuICAgIFxuICAgIC8vIENyZWF0ZSBhIHN0eWxlIGVsZW1lbnRcbiAgICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgc3R5bGUudGV4dENvbnRlbnQgPSBgXG4gICAgICBAa2V5ZnJhbWVzIHB1bHNlIHtcbiAgICAgICAgMCUgeyBib3gtc2hhZG93OiAwIDAgMCAwIHJnYmEoMCwgMTAyLCAyMDQsIDAuNyk7IH1cbiAgICAgICAgNzAlIHsgYm94LXNoYWRvdzogMCAwIDAgMTBweCByZ2JhKDAsIDEwMiwgMjA0LCAwKTsgfVxuICAgICAgICAxMDAlIHsgYm94LXNoYWRvdzogMCAwIDAgMCByZ2JhKDAsIDEwMiwgMjA0LCAwKTsgfVxuICAgICAgfVxuICAgICAgXG4gICAgICBAa2V5ZnJhbWVzIGZhZGVJbiB7XG4gICAgICAgIGZyb20geyBvcGFjaXR5OiAwOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwcHgpOyB9XG4gICAgICAgIHRvIHsgb3BhY2l0eTogMTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIC5idG4taGlnaGxpZ2h0IHtcbiAgICAgICAgYW5pbWF0aW9uOiBwdWxzZSAxLjVzIGluZmluaXRlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA5OWZmICFpbXBvcnRhbnQ7XG4gICAgICAgIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgICAgfVxuICAgICAgXG4gICAgICAud2FybmluZy1iYW5uZXIge1xuICAgICAgICBhbmltYXRpb246IGZhZGVJbiAwLjNzIGVhc2UtaW4tb3V0O1xuICAgICAgfVxuICAgIGA7XG4gICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gICAgXG4gICAgLy8gQ2xlYW4gdXBcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZG9jdW1lbnQuaGVhZC5yZW1vdmVDaGlsZChzdHlsZSk7XG4gICAgfTtcbiAgfSwgW2lzSHlkcmF0ZWRdKTtcbiAgXG4gIC8vIE1ha2UgdG9nZ2xlVG9wQmFyIGZ1bmN0aW9uIGF2YWlsYWJsZSBnbG9iYWxseVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghaXNDbGllbnQgfHwgIWlzSHlkcmF0ZWQpIHJldHVybjtcbiAgICBcbiAgICAvLyBNYWtlIHRvZ2dsZVRvcEJhciBhdmFpbGFibGUgdG8gb3RoZXIgY29tcG9uZW50c1xuICAgIHdpbmRvdy50b2dnbGVUb3BCYXIgPSAoc2hvdykgPT4ge1xuICAgICAgc2V0U2hvd1RvcEJhcihzaG93KTtcbiAgICAgIFxuICAgICAgLy8gQWxzbyBoaWRlIG1ldHJpY3Mgd2hlbiBoaWRpbmcgdGhlIHRvcCBiYXJcbiAgICAgIGlmICghc2hvdykge1xuICAgICAgICBzZXRTaG93TWV0cmljcyhmYWxzZSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEFkanVzdCBjYW52YXMgZGltZW5zaW9ucyBhZnRlciB0b2dnbGluZ1xuICAgICAgc2V0VGltZW91dChhZGp1c3RDYW52YXNEaW1lbnNpb25zLCAxMDApO1xuICAgIH07XG4gICAgXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIC8vIENsZWFuIHVwXG4gICAgICBkZWxldGUgd2luZG93LnRvZ2dsZVRvcEJhcjtcbiAgICB9O1xuICB9LCBbaXNIeWRyYXRlZF0pO1xuXG4gIC8vIFRvZ2dsZSBjYW1lcmEgZnVuY3Rpb25cbiAgY29uc3QgdG9nZ2xlQ2FtZXJhID0gKHNob3VsZEVuYWJsZSkgPT4ge1xuICAgIGlmICghaXNDbGllbnQgfHwgIWlzSHlkcmF0ZWQpIHJldHVybjtcbiAgICBcbiAgICBpZiAoc2hvdWxkRW5hYmxlKSB7XG4gICAgICBzZXRTaG93Q2FtZXJhKHRydWUpO1xuICAgICAgc2V0U2hvd0NhbWVyYVBsYWNlaG9sZGVyKGZhbHNlKTtcbiAgICAgIHNldE91dHB1dFRleHQoJ0NhbWVyYSBwcmV2aWV3IHN0YXJ0ZWQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U2hvd0NhbWVyYShmYWxzZSk7XG4gICAgICBzZXRTaG93Q2FtZXJhUGxhY2Vob2xkZXIoZmFsc2UpO1xuICAgICAgc2V0T3V0cHV0VGV4dCgnQ2FtZXJhIHByZXZpZXcgc3RvcHBlZCcpO1xuICAgIH1cbiAgfTtcbiAgXG4gIC8vIEhhbmRsZXIgZm9yIGFjdGlvbiBidXR0b24gY2xpY2tzXG4gIGNvbnN0IGhhbmRsZUFjdGlvbkJ1dHRvbkNsaWNrID0gKGFjdGlvblR5cGUsIHBhcmFtcykgPT4ge1xuICAgIGlmICghaXNDbGllbnQgfHwgIWlzSHlkcmF0ZWQpIHJldHVybjtcbiAgICBcbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIHRvZ2dsaW5nIHRoZSB0b3AgYmFyXG4gICAgaWYgKGFjdGlvblR5cGUgPT09ICd0b2dnbGVUb3BCYXInKSB7XG4gICAgICAvLyBjb25zdCBuZXdUb3BCYXJTdGF0ZSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyAhIXZhbHVlIDogIXNob3dUb3BCYXI7XG4gICAgICBsZXQgbmV3VG9wQmFyU3RhdGU7XG4gICAgXG4gICAgICBpZiAodHlwZW9mIHBhcmFtcyA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIG5ld1RvcEJhclN0YXRlID0gcGFyYW1zO1xuICAgICAgfSBlbHNlIGlmIChwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcy52YWx1ZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgbmV3VG9wQmFyU3RhdGUgPSAhIXBhcmFtcy52YWx1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5ld1RvcEJhclN0YXRlID0gIXNob3dUb3BCYXI7XG4gICAgICB9XG4gICAgICBzZXRTaG93VG9wQmFyKG5ld1RvcEJhclN0YXRlKTtcbiAgICAgIFxuICAgICAgLy8gQWxzbyBoaWRlIG1ldHJpY3Mgd2hlbiBoaWRpbmcgdGhlIHRvcCBiYXJcbiAgICAgIGlmICghbmV3VG9wQmFyU3RhdGUpIHtcbiAgICAgICAgc2V0U2hvd01ldHJpY3MoZmFsc2UpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBzZXRPdXRwdXRUZXh0KGBUb3BCYXIgJHtuZXdUb3BCYXJTdGF0ZSA/ICdzaG93bicgOiAnaGlkZGVuJ30keyFuZXdUb3BCYXJTdGF0ZSA/ICcsIE1ldHJpY3MgaGlkZGVuJyA6ICcnfWApO1xuICAgICAgXG4gICAgICAvLyBBZGp1c3QgY2FudmFzIGRpbWVuc2lvbnMgYWZ0ZXIgdG9nZ2xpbmdcbiAgICAgIHNldFRpbWVvdXQoYWRqdXN0Q2FudmFzRGltZW5zaW9ucywgMTAwKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgY2FudmFzID0gZ2V0TWFpbkNhbnZhcygpO1xuICAgIHNldFNob3dXYXJuaW5nKGZhbHNlKTtcbiAgICBcbiAgICAvLyBDbGVhciBhbnkgZXhpc3Rpbmcgd2FybmluZ3NcbiAgICBjb25zdCBzYWZlUGFyYW1zID0gcGFyYW1zIHx8IHt9O1xuICBcbiAgICAvLyBVc2Ugc2FmZVBhcmFtcyBpbnN0ZWFkIG9mIGNvbnRyb2xWYWx1ZXNcbiAgICBjb25zdCByYW5kb21UaW1lcyA9IHNhZmVQYXJhbXMucmFuZG9tVGltZXMgfHwgMTtcbiAgICBjb25zdCBkZWxheVNlY29uZHMgPSBzYWZlUGFyYW1zLmRlbGF5U2Vjb25kcyB8fCAzO1xuXG4gICAgc3dpdGNoIChhY3Rpb25UeXBlKSB7XG4gICAgICBjYXNlICdwcmV2aWV3JzpcbiAgICAgICAgLy8gVG9nZ2xlIGNhbWVyYSBzdGF0ZVxuICAgICAgICBpZiAoc2hvd0NhbWVyYSkge1xuICAgICAgICAgIHRvZ2dsZUNhbWVyYShmYWxzZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoY2FtZXJhUGVybWlzc2lvbkdyYW50ZWQpIHtcbiAgICAgICAgICB0b2dnbGVDYW1lcmEodHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gT3RoZXJ3aXNlIHNob3cgcGVybWlzc2lvbiBwb3B1cFxuICAgICAgICAgIHNldFNob3dQZXJtaXNzaW9uUG9wdXAodHJ1ZSk7XG4gICAgICAgICAgc2V0T3V0cHV0VGV4dCgnT3BlbmluZyBjYW1lcmEgcHJldmlldycpO1xuICAgICAgICAgIHNldFNob3dDYW1lcmFQbGFjZWhvbGRlcih0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgICAgXG4gICAgICBjYXNlICdzZXRSYW5kb20nOlxuICAgICAgICBzZXRPdXRwdXRUZXh0KCdTdGFydGluZyByYW5kb20gc2VxdWVuY2UuLi4nKTtcbiAgICAgICAgc2V0U2hvd1RvcEJhcihmYWxzZSk7XG4gICAgICAgIGlmIChzaG93Q2FtZXJhKSB7XG4gICAgICAgICAgdG9nZ2xlQ2FtZXJhKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBVc2UgdGhlIGltcG9ydGVkIG1vZHVsZSBhcHByb2FjaCAtIHNpbWlsYXIgdG8gY2FsaWJyYXRlXG4gICAgICAgIGlmIChhY3Rpb25CdXR0b25Hcm91cFJlZi5jdXJyZW50ICYmIGFjdGlvbkJ1dHRvbkdyb3VwUmVmLmN1cnJlbnQuaGFuZGxlU2V0UmFuZG9tKSB7XG4gICAgICAgICAgLy8gVXNlIHRoZSByZWZlcmVuY2UgbWV0aG9kIGlmIGF2YWlsYWJsZVxuICAgICAgICAgIGNvbnNvbGUubG9nKCdVc2luZyBBY3Rpb25CdXR0b25Hcm91cCByZWYgbWV0aG9kIGZvciBTZXQgUmFuZG9tJyk7XG4gICAgICAgICAgYWN0aW9uQnV0dG9uR3JvdXBSZWYuY3VycmVudC5oYW5kbGVTZXRSYW5kb20oKTtcbiAgICAgICAgfSBcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmFjdGlvbkJ1dHRvbkZ1bmN0aW9ucyAmJiBcbiAgICAgICAgICB0eXBlb2Ygd2luZG93LmFjdGlvbkJ1dHRvbkZ1bmN0aW9ucy5oYW5kbGVTZXRSYW5kb20gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAvLyBGYWxsYmFjayB0byBnbG9iYWwgbWV0aG9kXG4gICAgICAgICAgY29uc29sZS5sb2coJ1VzaW5nIGdsb2JhbCBicmlkZ2UgbWV0aG9kIGZvciBTZXQgUmFuZG9tJyk7XG4gICAgICAgICAgd2luZG93LmFjdGlvbkJ1dHRvbkZ1bmN0aW9ucy5oYW5kbGVTZXRSYW5kb20oKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAvLyBNYWtlIHN1cmUgd2UgaGF2ZSBhIGNhbnZhcyB0byB3b3JrIHdpdGhcbiAgICAgICAgICBjb25zdCBjYW52YXMgPSBnZXRNYWluQ2FudmFzKCk7XG4gICAgICAgICAgaWYgKCFjYW52YXMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJDYW52YXMgbm90IGZvdW5kIGZvciByYW5kb20gc2VxdWVuY2VcIik7XG4gICAgICAgICAgICBzZXRPdXRwdXRUZXh0KFwiRXJyb3I6IENhbnZhcyBub3QgYXZhaWxhYmxlIGZvciByYW5kb20gc2VxdWVuY2VcIik7XG4gICAgICAgICAgICBzZXRTaG93VG9wQmFyKHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBHZXQgY29udHJvbCB2YWx1ZXMgZnJvbSB0aGUgVG9wQmFyXG4gICAgICAgICAgY29uc3QgdGltZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRyb2wtaW5wdXQtZmllbGQnKTtcbiAgICAgICAgICBjb25zdCBkZWxheUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbnRyb2wtaW5wdXQtZmllbGQnKVsxXTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBEZWZhdWx0IHZhbHVlcyBpZiBpbnB1dHMgY2FuJ3QgYmUgZm91bmRcbiAgICAgICAgICBsZXQgdGltZXMgPSAxO1xuICAgICAgICAgIGxldCBkZWxheSA9IDM7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gUGFyc2UgaW5wdXQgdmFsdWVzIGlmIGF2YWlsYWJsZVxuICAgICAgICAgIGlmICh0aW1lSW5wdXQpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZFRpbWUgPSBwYXJzZUludCh0aW1lSW5wdXQudmFsdWUsIDEwKTtcbiAgICAgICAgICAgIGlmICghaXNOYU4ocGFyc2VkVGltZSkgJiYgcGFyc2VkVGltZSA+IDApIHtcbiAgICAgICAgICAgICAgdGltZXMgPSBwYXJzZWRUaW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoZGVsYXlJbnB1dCkge1xuICAgICAgICAgICAgY29uc3QgcGFyc2VkRGVsYXkgPSBwYXJzZUludChkZWxheUlucHV0LnZhbHVlLCAxMCk7XG4gICAgICAgICAgICBpZiAoIWlzTmFOKHBhcnNlZERlbGF5KSAmJiBwYXJzZWREZWxheSA+IDApIHtcbiAgICAgICAgICAgICAgZGVsYXkgPSBwYXJzZWREZWxheTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gTG9hZCBhbGwgcmVxdWlyZWQgbW9kdWxlcyBmaXJzdCwgdGhlbiBwcm9jZWVkIHdpdGggZXhlY3V0aW9uXG4gICAgICAgICAgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgaW1wb3J0KCcuLi8uLi9jb21wb25lbnRzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvQWN0aW9uL2NvdW50U2F2ZScpLFxuICAgICAgICAgICAgaW1wb3J0KCcuLi8uLi9jb21wb25lbnRzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvSGVscGVyL3NhdmVmaWxlJylcbiAgICAgICAgICBdKS50aGVuKGFzeW5jIChbXG4gICAgICAgICAgICBjb3VudFNhdmVNb2R1bGUsXG4gICAgICAgICAgICBzYXZlZmlsZU1vZHVsZVxuICAgICAgICAgIF0pID0+IHtcbiAgICAgICAgICAgIC8vIERlc3RydWN0dXJlIHRoZSBpbXBvcnRlZCBtb2R1bGVzXG4gICAgICAgICAgICBjb25zdCB7IGdldFJhbmRvbVBvc2l0aW9uLCBkcmF3UmVkRG90LCBydW5Db3VudGRvd24sIHNob3dDYXB0dXJlUHJldmlldyB9ID0gY291bnRTYXZlTW9kdWxlO1xuICAgICAgICAgICAgY29uc3QgeyBjYXB0dXJlSW1hZ2VzQXRQb2ludCB9ID0gc2F2ZWZpbGVNb2R1bGU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIC8vIFByb2Nlc3MgYWxsIGNhcHR1cmVzIHNlcXVlbnRpYWxseVxuICAgICAgICAgICAgICBsZXQgc3VjY2Vzc0NvdW50ID0gMDtcbiAgICAgICAgICAgICAgbGV0IGN1cnJlbnRDYXB0dXJlID0gMTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIHdoaWxlIChjdXJyZW50Q2FwdHVyZSA8PSB0aW1lcykge1xuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBzdGF0dXMgZm9yIGN1cnJlbnQgY2FwdHVyZVxuICAgICAgICAgICAgICAgIHNldE91dHB1dFRleHQoYENhcHR1cmUgJHtjdXJyZW50Q2FwdHVyZX0gb2YgJHt0aW1lc31gKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBDbGVhciBjYW52YXMgYmVmb3JlIGVhY2ggY2FwdHVyZVxuICAgICAgICAgICAgICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICAgICAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJ3doaXRlJztcbiAgICAgICAgICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBHZW5lcmF0ZSByYW5kb20gcG9zaXRpb24gZm9yIHRoaXMgY2FwdHVyZVxuICAgICAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gZ2V0UmFuZG9tUG9zaXRpb24oY2FudmFzLCAyMCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gRHJhdyB0aGUgZG90XG4gICAgICAgICAgICAgICAgZHJhd1JlZERvdChjdHgsIHBvc2l0aW9uLngsIHBvc2l0aW9uLnkpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBhIHJlZHJhd0ludGVydmFsIHRvIGVuc3VyZSBkb3Qgc3RheXMgdmlzaWJsZVxuICAgICAgICAgICAgICAgIGxldCByZWRyYXdJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgIGRyYXdSZWREb3QoY3R4LCBwb3NpdGlvbi54LCBwb3NpdGlvbi55LCAxMiwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0sIDIwMCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gUnVuIGNvdW50ZG93biBhbmQgd2FpdCBmb3IgaXQgdG8gY29tcGxldGVcbiAgICAgICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgICAgICAgIHJ1bkNvdW50ZG93bihcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgIGNhbnZhcyxcbiAgICAgICAgICAgICAgICAgICAgKHN0YXR1cykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBVSSBiYXNlZCBvbiBzdGF0dXNcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdHVzLnByb2Nlc3NTdGF0dXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldE91dHB1dFRleHQoYENhcHR1cmUgJHtjdXJyZW50Q2FwdHVyZX0vJHt0aW1lc306ICR7c3RhdHVzLnByb2Nlc3NTdGF0dXN9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlIC8vIFRoaXMgd2lsbCBiZSBjYWxsZWQgd2hlbiBjb3VudGRvd24gY29tcGxldGVzXG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIENsZWFyIHJlZHJhd0ludGVydmFsIGFmdGVyIGNvdW50ZG93blxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocmVkcmF3SW50ZXJ2YWwpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIFdhaXQgYnJpZWZseSBhZnRlciBjb3VudGRvd25cbiAgICAgICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNTAwKSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gQ2FwdHVyZSBpbWFnZXMgYXQgdGhpcyBwb2ludFxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBjYXB0dXJlUmVzdWx0ID0gYXdhaXQgY2FwdHVyZUltYWdlc0F0UG9pbnQoe1xuICAgICAgICAgICAgICAgICAgICBwb2ludDogcG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgIGNhcHR1cmVDb3VudDogY2FwdHVyZUNvdW50ZXIsXG4gICAgICAgICAgICAgICAgICAgIGNhbnZhc1JlZjogeyBjdXJyZW50OiBjYW52YXMgfSxcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2FwdHVyZUNvdW50OiBzZXRDYXB0dXJlQ291bnRlcixcbiAgICAgICAgICAgICAgICAgICAgc2hvd0NhcHR1cmVQcmV2aWV3XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgaWYgKGNhcHR1cmVSZXN1bHQgJiYgKGNhcHR1cmVSZXN1bHQuc2NyZWVuSW1hZ2UgfHwgY2FwdHVyZVJlc3VsdC5zdWNjZXNzKSkge1xuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQ291bnQrKztcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgLy8gSW5jcmVtZW50IGNvdW50ZXJcbiAgICAgICAgICAgICAgICAgIHNldENhcHR1cmVDb3VudGVyKHByZXYgPT4gcHJldiArIDEpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBjYXB0dXJpbmcgcG9pbnQgJHtjdXJyZW50Q2FwdHVyZX06YCwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBXYWl0IGJldHdlZW4gY2FwdHVyZXMgZm9yIHRoZSBzcGVjaWZpZWQgZGVsYXkgdGltZVxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Q2FwdHVyZSA8IHRpbWVzKSB7XG4gICAgICAgICAgICAgICAgICBzZXRPdXRwdXRUZXh0KGBXYWl0aW5nICR7ZGVsYXl9cyBiZWZvcmUgbmV4dCBjYXB0dXJlLi4uYCk7XG4gICAgICAgICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgZGVsYXkgKiAxMDAwKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIE1vdmUgdG8gbmV4dCBjYXB0dXJlXG4gICAgICAgICAgICAgICAgY3VycmVudENhcHR1cmUrKztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gU2VxdWVuY2UgY29tcGxldGVcbiAgICAgICAgICAgICAgc2V0T3V0cHV0VGV4dChgUmFuZG9tIGNhcHR1cmUgc2VxdWVuY2UgY29tcGxldGVkOiAke3N1Y2Nlc3NDb3VudH0vJHt0aW1lc30gY2FwdHVyZXMgc3VjY2Vzc2Z1bGApO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJSYW5kb20gc2VxdWVuY2UgZXJyb3I6XCIsIGVycm9yKTtcbiAgICAgICAgICAgICAgc2V0T3V0cHV0VGV4dChgUmFuZG9tIHNlcXVlbmNlIGVycm9yOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAvLyBTaG93IFRvcEJhciBhZ2FpblxuICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHNldFNob3dUb3BCYXIodHJ1ZSksIDIwMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gaW1wb3J0IHJlcXVpcmVkIG1vZHVsZXM6XCIsIGVycm9yKTtcbiAgICAgICAgICAgIHNldE91dHB1dFRleHQoYEVycm9yOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICBzZXRTaG93VG9wQmFyKHRydWUpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdyYW5kb21Eb3QnOlxuICAgICAgICBzZXRPdXRwdXRUZXh0KCdSYW5kb20gZG90IGFjdGlvbiB0cmlnZ2VyZWQnKTtcbiAgICAgICAgc2V0U2hvd1RvcEJhcihmYWxzZSk7XG4gICAgICAgIGlmIChzaG93Q2FtZXJhKSB7XG4gICAgICAgICAgdG9nZ2xlQ2FtZXJhKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZygnQXR0ZW1wdGluZyB0byBhY2Nlc3MgUmFuZG9tIERvdCBmdW5jdGlvbmFsaXR5Jyk7XG4gICAgICAgIFxuICAgICAgICAvLyBVc2UgdGhlIHJhbmRvbSBkb3QgZnVuY3Rpb25hbGl0eSBmcm9tIGFjdGlvbkJ1dHRvbi5qcyBieSBkZWxlZ2F0aW5nIHRvIEFjdGlvbkJ1dHRvbkdyb3VwXG4gICAgICAgIC8vIFRoaXMgYXNzdW1lcyB5b3UgaGF2ZSBhIHJlZiB0byB0aGUgQWN0aW9uQnV0dG9uR3JvdXAgY29tcG9uZW50XG4gICAgICAgIGlmIChhY3Rpb25CdXR0b25Hcm91cFJlZi5jdXJyZW50ICYmIGFjdGlvbkJ1dHRvbkdyb3VwUmVmLmN1cnJlbnQuaGFuZGxlUmFuZG9tRG90KSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1VzaW5nIHJlZiBtZXRob2QnKTtcbiAgICAgICAgICBhY3Rpb25CdXR0b25Hcm91cFJlZi5jdXJyZW50LmhhbmRsZVJhbmRvbURvdCgpO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5hY3Rpb25CdXR0b25GdW5jdGlvbnMgJiYgXG4gICAgICAgICAgdHlwZW9mIHdpbmRvdy5hY3Rpb25CdXR0b25GdW5jdGlvbnMuaGFuZGxlUmFuZG9tRG90ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1VzaW5nIGdsb2JhbCBicmlkZ2UgbWV0aG9kJyk7XG4gICAgICAgICAgd2luZG93LmFjdGlvbkJ1dHRvbkZ1bmN0aW9ucy5oYW5kbGVSYW5kb21Eb3QoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBGYWxsYmFjayBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IGdldE1haW5DYW52YXMoKTtcbiAgICAgICAgICBpZiAoIWNhbnZhcykge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkNhbnZhcyBub3QgZm91bmQgZm9yIHJhbmRvbSBkb3QgYWN0aW9uXCIpO1xuICAgICAgICAgICAgc2V0T3V0cHV0VGV4dChcIkVycm9yOiBDYW52YXMgbm90IGF2YWlsYWJsZSBmb3IgcmFuZG9tIGRvdFwiKTtcbiAgICAgICAgICAgIHNldFNob3dUb3BCYXIodHJ1ZSk7IC8vIFNob3cgVG9wQmFyIGFnYWluIGlmIHRoZXJlJ3MgYW4gZXJyb3JcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBwYXJlbnQgPSBwcmV2aWV3QXJlYVJlZi5jdXJyZW50O1xuICAgICAgICAgIGlmICghcGFyZW50KSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiUGFyZW50IG5vdCBmb3VuZCBmb3IgY2FudmFzXCIpO1xuICAgICAgICAgICAgc2V0T3V0cHV0VGV4dChcIkVycm9yOiBDYW52YXMgcGFyZW50IG5vdCBhdmFpbGFibGVcIik7XG4gICAgICAgICAgICBzZXRTaG93VG9wQmFyKHRydWUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIEluaXRpYWxpemUgY2FudmFzIGV4cGxpY2l0bHlcbiAgICAgICAgICBjYW52YXMud2lkdGggPSBwYXJlbnQuY2xpZW50V2lkdGggfHwgODAwO1xuICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSBwYXJlbnQuY2xpZW50SGVpZ2h0IHx8IDYwMDtcbiAgICAgICAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG4gICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICd3aGl0ZSc7XG4gICAgICAgICAgY3R4LmZpbGxSZWN0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc29sZS5sb2coYENhbnZhcyByZWFkeSBmb3IgcmFuZG9tIGRvdDogJHtjYW52YXMud2lkdGh9eCR7Y2FudmFzLmhlaWdodH1gKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBVcGRhdGUgZ2xvYmFsIHJlZmVyZW5jZVxuICAgICAgICAgIHdpbmRvdy53aGl0ZVNjcmVlbkNhbnZhcyA9IGNhbnZhcztcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBHZW5lcmF0ZSByYW5kb20gcG9zaXRpb25cbiAgICAgICAgICBjb25zdCBwb3NpdGlvbiA9IGdldFJhbmRvbVBvc2l0aW9uKGNhbnZhcywgMjApO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIERyYXcgdGhlIGRvdCB1c2luZyB0aGUgaW1wb3J0ZWQgZnVuY3Rpb25cbiAgICAgICAgICBjb25zdCBkb3QgPSBkcmF3UmVkRG90KGN0eCwgcG9zaXRpb24ueCwgcG9zaXRpb24ueSwgOCwgZmFsc2UpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBSYW5kb20gZG90IGRyYXduIGF0OiAke3Bvc2l0aW9uLnh9LCAke3Bvc2l0aW9uLnl9YCk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gU3RhcnQgYSBjb3VudGRvd24gZm9yIGNhcHR1cmVcbiAgICAgICAgICBydW5Db3VudGRvd24oXG4gICAgICAgICAgICBwb3NpdGlvbixcbiAgICAgICAgICAgIGNhbnZhcyxcbiAgICAgICAgICAgIChzdGF0dXMpID0+IHtcbiAgICAgICAgICAgICAgLy8gVXBkYXRlIFVJIGJhc2VkIG9uIHN0YXR1c1xuICAgICAgICAgICAgICBpZiAoc3RhdHVzLnByb2Nlc3NTdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBzZXRPdXRwdXRUZXh0KHN0YXR1cy5wcm9jZXNzU3RhdHVzKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgLy8gRW5hYmxlIGNhbWVyYSBiZWZvcmUgY2FwdHVyZVxuICAgICAgICAgICAgICAvLyB0cmlnZ2VyQ2FtZXJhQWNjZXNzKHRydWUpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gV2FpdCBicmllZmx5IGZvciBjYW1lcmEgdG8gaW5pdGlhbGl6ZVxuICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBVc2UgdGhlIGRpcmVjdGx5IGltcG9ydGVkIGNhcHR1cmVJbWFnZXNBdFBvaW50IGZyb20gdGhlIEhlbHBlci9zYXZlZmlsZS5qc1xuICAgICAgICAgICAgICAgIGltcG9ydCgnLi4vLi4vY29tcG9uZW50cy9jb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkL0hlbHBlci9zYXZlZmlsZScpLnRoZW4oKHsgY2FwdHVyZUltYWdlc0F0UG9pbnQgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgY2FwdHVyZUltYWdlc0F0UG9pbnQoe1xuICAgICAgICAgICAgICAgICAgICBwb2ludDogcG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgIGNhcHR1cmVDb3VudDogY2FwdHVyZUNvdW50ZXIsXG4gICAgICAgICAgICAgICAgICAgIGNhbnZhc1JlZjogeyBjdXJyZW50OiBjYW52YXMgfSxcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2FwdHVyZUNvdW50OiBzZXRDYXB0dXJlQ291bnRlcixcbiAgICAgICAgICAgICAgICAgICAgc2hvd0NhcHR1cmVQcmV2aWV3XG4gICAgICAgICAgICAgICAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2FwdHVyZUNvdW50ZXIocHJldiA9PiBwcmV2ICsgMSk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAvLyBTaG93IFRvcEJhciBhZ2FpbiBhZnRlciBjYXB0dXJlXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIHNldFNob3dUb3BCYXIodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDIyMDApO1xuICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGNhcHR1cmluZyBpbWFnZXM6XCIsIGVycik7XG4gICAgICAgICAgICAgICAgICAgIHNldE91dHB1dFRleHQoYEVycm9yOiAke2Vyci5tZXNzYWdlfWApO1xuICAgICAgICAgICAgICAgICAgICBzZXRTaG93VG9wQmFyKHRydWUpO1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBpbXBvcnRpbmcgc2F2ZWZpbGUgbW9kdWxlOlwiLCBlcnIpO1xuICAgICAgICAgICAgICAgICAgc2V0T3V0cHV0VGV4dChgRXJyb3I6ICR7ZXJyLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICAgICAgICBzZXRTaG93VG9wQmFyKHRydWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdoZWFkUG9zZSc6XG4gICAgICAgIGNvbnN0IG5ld0hlYWRQb3NlU3RhdGUgPSAhc2hvd0hlYWRQb3NlO1xuICAgICAgICBzZXRTaG93SGVhZFBvc2UobmV3SGVhZFBvc2VTdGF0ZSk7XG4gICAgICAgIHNldE91dHB1dFRleHQoYEhlYWQgcG9zZSB2aXN1YWxpemF0aW9uICR7bmV3SGVhZFBvc2VTdGF0ZSA/ICdlbmFibGVkJyA6ICdkaXNhYmxlZCd9YCk7XG4gICAgICAgIGlmIChuZXdIZWFkUG9zZVN0YXRlICYmICFzaG93Q2FtZXJhKSB7XG4gICAgICAgICAgc2V0U2hvd0NhbWVyYVBsYWNlaG9sZGVyKHRydWUpO1xuICAgICAgICB9IGVsc2UgaWYgKCFuZXdIZWFkUG9zZVN0YXRlICYmICFzaG93Qm91bmRpbmdCb3ggJiYgIXNob3dNYXNrICYmICFzaG93UGFyYW1ldGVycykge1xuICAgICAgICAgIHNldFNob3dDYW1lcmFQbGFjZWhvbGRlcihmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIFVwZGF0ZSBwcm9jZXNzb3Igb3B0aW9ucyBpZiBjYW1lcmEgaXMgYWN0aXZlXG4gICAgICAgIGlmIChzaG93Q2FtZXJhICYmIHdpbmRvdy52aWRlb1Byb2Nlc3Nvcikge1xuICAgICAgICAgIHdpbmRvdy52aWRlb1Byb2Nlc3Nvci51cGRhdGVPcHRpb25zKHtcbiAgICAgICAgICAgIC4uLndpbmRvdy52aWRlb1Byb2Nlc3Nvci5vcHRpb25zLFxuICAgICAgICAgICAgc2hvd0hlYWRQb3NlOiBuZXdIZWFkUG9zZVN0YXRlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnYm91bmRpbmdCb3gnOlxuICAgICAgICBjb25zdCBuZXdCb3VuZGluZ0JveFN0YXRlID0gIXNob3dCb3VuZGluZ0JveDtcbiAgICAgICAgc2V0U2hvd0JvdW5kaW5nQm94KG5ld0JvdW5kaW5nQm94U3RhdGUpO1xuICAgICAgICBzZXRPdXRwdXRUZXh0KGBCb3VuZGluZyBib3ggJHtuZXdCb3VuZGluZ0JveFN0YXRlID8gJ3Nob3duJyA6ICdoaWRkZW4nfWApO1xuICAgICAgICBpZiAobmV3Qm91bmRpbmdCb3hTdGF0ZSAmJiAhc2hvd0NhbWVyYSkge1xuICAgICAgICAgIHNldFNob3dDYW1lcmFQbGFjZWhvbGRlcih0cnVlKTtcbiAgICAgICAgfSBlbHNlIGlmICghbmV3Qm91bmRpbmdCb3hTdGF0ZSAmJiAhc2hvd0hlYWRQb3NlICYmICFzaG93TWFzayAmJiAhc2hvd1BhcmFtZXRlcnMpIHtcbiAgICAgICAgICBzZXRTaG93Q2FtZXJhUGxhY2Vob2xkZXIoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBVcGRhdGUgcHJvY2Vzc29yIG9wdGlvbnMgaWYgY2FtZXJhIGlzIGFjdGl2ZVxuICAgICAgICBpZiAoc2hvd0NhbWVyYSAmJiB3aW5kb3cudmlkZW9Qcm9jZXNzb3IpIHtcbiAgICAgICAgICB3aW5kb3cudmlkZW9Qcm9jZXNzb3IudXBkYXRlT3B0aW9ucyh7XG4gICAgICAgICAgICAuLi53aW5kb3cudmlkZW9Qcm9jZXNzb3Iub3B0aW9ucyxcbiAgICAgICAgICAgIHNob3dCb3VuZGluZ0JveDogbmV3Qm91bmRpbmdCb3hTdGF0ZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgICBcbiAgICAgIGNhc2UgJ21hc2snOlxuICAgICAgICBjb25zdCBuZXdNYXNrU3RhdGUgPSAhc2hvd01hc2s7XG4gICAgICAgIHNldFNob3dNYXNrKG5ld01hc2tTdGF0ZSk7XG4gICAgICAgIHNldE91dHB1dFRleHQoYE1hc2sgJHtuZXdNYXNrU3RhdGUgPyAnc2hvd24nIDogJ2hpZGRlbid9YCk7XG4gICAgICAgIGlmIChuZXdNYXNrU3RhdGUgJiYgIXNob3dDYW1lcmEpIHtcbiAgICAgICAgICBzZXRTaG93Q2FtZXJhUGxhY2Vob2xkZXIodHJ1ZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoIW5ld01hc2tTdGF0ZSAmJiAhc2hvd0hlYWRQb3NlICYmICFzaG93Qm91bmRpbmdCb3ggJiYgIXNob3dQYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgc2V0U2hvd0NhbWVyYVBsYWNlaG9sZGVyKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gVXBkYXRlIHByb2Nlc3NvciBvcHRpb25zIGlmIGNhbWVyYSBpcyBhY3RpdmVcbiAgICAgICAgaWYgKHNob3dDYW1lcmEgJiYgd2luZG93LnZpZGVvUHJvY2Vzc29yKSB7XG4gICAgICAgICAgd2luZG93LnZpZGVvUHJvY2Vzc29yLnVwZGF0ZU9wdGlvbnMoe1xuICAgICAgICAgICAgLi4ud2luZG93LnZpZGVvUHJvY2Vzc29yLm9wdGlvbnMsXG4gICAgICAgICAgICBzaG93TWFzazogbmV3TWFza1N0YXRlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAncGFyYW1ldGVycyc6XG4gICAgICAgIGNvbnN0IG5ld1BhcmFtZXRlcnNTdGF0ZSA9ICFzaG93UGFyYW1ldGVycztcbiAgICAgICAgc2V0U2hvd1BhcmFtZXRlcnMobmV3UGFyYW1ldGVyc1N0YXRlKTtcbiAgICAgICAgc2V0T3V0cHV0VGV4dChgUGFyYW1ldGVycyAke25ld1BhcmFtZXRlcnNTdGF0ZSA/ICdzaG93bicgOiAnaGlkZGVuJ31gKTtcbiAgICAgICAgaWYgKG5ld1BhcmFtZXRlcnNTdGF0ZSAmJiAhc2hvd0NhbWVyYSkge1xuICAgICAgICAgIHNldFNob3dDYW1lcmFQbGFjZWhvbGRlcih0cnVlKTtcbiAgICAgICAgfSBlbHNlIGlmICghbmV3UGFyYW1ldGVyc1N0YXRlICYmICFzaG93SGVhZFBvc2UgJiYgIXNob3dCb3VuZGluZ0JveCAmJiAhc2hvd01hc2spIHtcbiAgICAgICAgICBzZXRTaG93Q2FtZXJhUGxhY2Vob2xkZXIoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBVcGRhdGUgcHJvY2Vzc29yIG9wdGlvbnMgaWYgY2FtZXJhIGlzIGFjdGl2ZVxuICAgICAgICBpZiAoc2hvd0NhbWVyYSAmJiB3aW5kb3cudmlkZW9Qcm9jZXNzb3IpIHtcbiAgICAgICAgICB3aW5kb3cudmlkZW9Qcm9jZXNzb3IudXBkYXRlT3B0aW9ucyh7XG4gICAgICAgICAgICAuLi53aW5kb3cudmlkZW9Qcm9jZXNzb3Iub3B0aW9ucyxcbiAgICAgICAgICAgIHNob3dQYXJhbWV0ZXJzOiBuZXdQYXJhbWV0ZXJzU3RhdGVcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgICAgXG4gICAgICAvLyBGaXhlZCBjYWxpYnJhdGUgY2FzZSBoYW5kbGVyIGluIGluZGV4LmpzXG4gICAgICBjYXNlICdjYWxpYnJhdGUnOlxuICAgICAgICBzZXRPdXRwdXRUZXh0KCdTdGFydGluZyBjYWxpYnJhdGlvbiBzZXF1ZW5jZS4uLicpO1xuICAgICAgICBzZXRTaG93VG9wQmFyKGZhbHNlKTtcbiAgICAgICAgaWYgKHNob3dDYW1lcmEpIHtcbiAgICAgICAgICB0b2dnbGVDYW1lcmEoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhY3Rpb25CdXR0b25Hcm91cFJlZi5jdXJyZW50ICYmIGFjdGlvbkJ1dHRvbkdyb3VwUmVmLmN1cnJlbnQuaGFuZGxlU2V0Q2FsaWJyYXRlKSB7XG4gICAgICAgICAgLy8gVXNlIHRoZSByZWZlcmVuY2UgbWV0aG9kIGlmIGF2YWlsYWJsZVxuICAgICAgICAgIGNvbnNvbGUubG9nKCdVc2luZyBBY3Rpb25CdXR0b25Hcm91cCByZWYgbWV0aG9kIGZvciBjYWxpYnJhdGlvbicpO1xuICAgICAgICAgIGFjdGlvbkJ1dHRvbkdyb3VwUmVmLmN1cnJlbnQuaGFuZGxlU2V0Q2FsaWJyYXRlKCk7XG4gICAgICAgIH0gXG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5hY3Rpb25CdXR0b25GdW5jdGlvbnMgJiYgXG4gICAgICAgICAgdHlwZW9mIHdpbmRvdy5hY3Rpb25CdXR0b25GdW5jdGlvbnMuaGFuZGxlU2V0Q2FsaWJyYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgLy8gRmFsbGJhY2sgdG8gZ2xvYmFsIG1ldGhvZFxuICAgICAgICAgIGNvbnNvbGUubG9nKCdVc2luZyBnbG9iYWwgYnJpZGdlIG1ldGhvZCBmb3IgY2FsaWJyYXRpb24nKTtcbiAgICAgICAgICB3aW5kb3cuYWN0aW9uQnV0dG9uRnVuY3Rpb25zLmhhbmRsZVNldENhbGlicmF0ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIC8vIE1ha2Ugc3VyZSB3ZSBoYXZlIGEgY2FudmFzIHRvIHdvcmsgd2l0aFxuICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IGdldE1haW5DYW52YXMoKTtcbiAgICAgICAgICBpZiAoIWNhbnZhcykge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkNhbnZhcyBub3QgZm91bmQgZm9yIGNhbGlicmF0aW9uXCIpO1xuICAgICAgICAgICAgc2V0T3V0cHV0VGV4dChcIkVycm9yOiBDYW52YXMgbm90IGF2YWlsYWJsZSBmb3IgY2FsaWJyYXRpb25cIik7XG4gICAgICAgICAgICBzZXRTaG93VG9wQmFyKHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBMb2FkIGFsbCByZXF1aXJlZCBtb2R1bGVzIGZpcnN0LCB0aGVuIHByb2NlZWQgd2l0aCBleGVjdXRpb25cbiAgICAgICAgICBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICBpbXBvcnQoJy4uLy4uL2NvbXBvbmVudHMvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZC9BY3Rpb24vQ2FsaWJyYXRlUG9pbnRzLmpzeCcpLFxuICAgICAgICAgICAgaW1wb3J0KCcuLi8uLi9jb21wb25lbnRzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvQWN0aW9uL2NvdW50U2F2ZS5qc3gnKSxcbiAgICAgICAgICAgIGltcG9ydCgnLi4vLi4vY29tcG9uZW50cy9jb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkL0hlbHBlci9zYXZlZmlsZScpXG4gICAgICAgICAgXSkudGhlbihhc3luYyAoW1xuICAgICAgICAgICAgY2FsaWJyYXRlUG9pbnRzTW9kdWxlLFxuICAgICAgICAgICAgY291bnRTYXZlTW9kdWxlLFxuICAgICAgICAgICAgc2F2ZWZpbGVNb2R1bGVcbiAgICAgICAgICBdKSA9PiB7XG4gICAgICAgICAgICAvLyBEZXN0cnVjdHVyZSB0aGUgaW1wb3J0ZWQgbW9kdWxlc1xuICAgICAgICAgICAgY29uc3QgeyBnZW5lcmF0ZUNhbGlicmF0aW9uUG9pbnRzIH0gPSBjYWxpYnJhdGVQb2ludHNNb2R1bGU7XG4gICAgICAgICAgICBjb25zdCB7IGRyYXdSZWREb3QsIHJ1bkNvdW50ZG93biwgc2hvd0NhcHR1cmVQcmV2aWV3IH0gPSBjb3VudFNhdmVNb2R1bGU7XG4gICAgICAgICAgICBjb25zdCB7IGNhcHR1cmVJbWFnZXNBdFBvaW50IH0gPSBzYXZlZmlsZU1vZHVsZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgLy8gR2VuZXJhdGUgY2FsaWJyYXRpb24gcG9pbnRzXG4gICAgICAgICAgICAgIGNvbnN0IHBvaW50cyA9IGdlbmVyYXRlQ2FsaWJyYXRpb25Qb2ludHMoY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIGlmICghcG9pbnRzIHx8IHBvaW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZ2VuZXJhdGUgY2FsaWJyYXRpb24gcG9pbnRzXCIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvLyBDcmVhdGUgc3RhdHVzIGluZGljYXRvclxuICAgICAgICAgICAgICBjb25zdCBzdGF0dXNJbmRpY2F0b3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgc3RhdHVzSW5kaWNhdG9yLmNsYXNzTmFtZSA9ICdjYWxpYnJhdGUtc3RhdHVzLWluZGljYXRvcic7XG4gICAgICAgICAgICAgIHN0YXR1c0luZGljYXRvci5zdHlsZS5jc3NUZXh0ID0gYFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgICB0b3A6IDEwcHg7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAxMDIsIDIwNCwgMC45KTtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6ICc4cHggMTJweCc7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICAgICAgICAgIHotaW5kZXg6IDk5OTk7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICAgICAgICAgICAgYDtcbiAgICAgICAgICAgICAgc3RhdHVzSW5kaWNhdG9yLnRleHRDb250ZW50ID0gJ0NhbGlicmF0aW9uOiBJbml0aWFsaXppbmcuLi4nO1xuICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHN0YXR1c0luZGljYXRvcik7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvLyBBY2Nlc3Mgd2ViY2FtIGJlZm9yZSBzdGFydGluZyBjYWxpYnJhdGlvbiBpZiBhdmFpbGFibGVcbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0cmlnZ2VyQ2FtZXJhQWNjZXNzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgdHJpZ2dlckNhbWVyYUFjY2Vzcyh0cnVlKTtcbiAgICAgICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNTAwKSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIFByb2Nlc3MgcG9pbnRzIHNlcXVlbnRpYWxseVxuICAgICAgICAgICAgICBsZXQgc3VjY2Vzc0NvdW50ID0gMDtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcG9pbnQgPSBwb2ludHNbaV07XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgc3RhdHVzSW5kaWNhdG9yLnRleHRDb250ZW50ID0gYENhbGlicmF0aW9uOiBQb2ludCAke2kgKyAxfS8ke3BvaW50cy5sZW5ndGh9YDtcbiAgICAgICAgICAgICAgICBzZXRPdXRwdXRUZXh0KGBQcm9jZXNzaW5nIGNhbGlicmF0aW9uIHBvaW50ICR7aSArIDF9LyR7cG9pbnRzLmxlbmd0aH1gKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBDbGVhciB0aGUgY2FudmFzIGJlZm9yZSBkcmF3aW5nIG5ldyBwb2ludFxuICAgICAgICAgICAgICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICAgICAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJ3doaXRlJztcbiAgICAgICAgICAgICAgICBjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBEcmF3IHRoZSBkb3RcbiAgICAgICAgICAgICAgICBkcmF3UmVkRG90KGN0eCwgcG9pbnQueCwgcG9pbnQueSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gUnVuIGNvdW50ZG93blxuICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgICAgICAgICAgcnVuQ291bnRkb3duKFxuICAgICAgICAgICAgICAgICAgICBwb2ludCxcbiAgICAgICAgICAgICAgICAgICAgY2FudmFzLFxuICAgICAgICAgICAgICAgICAgICAoc3RhdHVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cy5wcm9jZXNzU3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRPdXRwdXRUZXh0KHN0YXR1cy5wcm9jZXNzU3RhdHVzKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUgLy8gVGhpcyB3aWxsIGJlIGNhbGxlZCB3aGVuIGNvdW50ZG93biBjb21wbGV0ZXNcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gQ2FwdHVyZSBpbWFnZXMgYXQgdGhpcyBwb2ludFxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBjYXB0dXJlUmVzdWx0ID0gYXdhaXQgY2FwdHVyZUltYWdlc0F0UG9pbnQoe1xuICAgICAgICAgICAgICAgICAgICBwb2ludDogcG9pbnQsXG4gICAgICAgICAgICAgICAgICAgIGNhcHR1cmVDb3VudDogY2FwdHVyZUNvdW50ZXIsXG4gICAgICAgICAgICAgICAgICAgIGNhbnZhc1JlZjogeyBjdXJyZW50OiBjYW52YXMgfSxcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2FwdHVyZUNvdW50OiBzZXRDYXB0dXJlQ291bnRlcixcbiAgICAgICAgICAgICAgICAgICAgc2hvd0NhcHR1cmVQcmV2aWV3OiBzaG93Q2FwdHVyZVByZXZpZXdcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBpZiAoY2FwdHVyZVJlc3VsdCAmJiAoY2FwdHVyZVJlc3VsdC5zY3JlZW5JbWFnZSB8fCBjYXB0dXJlUmVzdWx0LnN1Y2Nlc3MpKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NDb3VudCsrO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAvLyBJbmNyZW1lbnQgY291bnRlclxuICAgICAgICAgICAgICAgICAgc2V0Q2FwdHVyZUNvdW50ZXIocHJldiA9PiBwcmV2ICsgMSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIGNhcHR1cmluZyBwb2ludCAke2krMX06YCwgZXJyb3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBXYWl0IGJldHdlZW4gcG9pbnRzXG4gICAgICAgICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEyMDApKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gQ2FsaWJyYXRpb24gY29tcGxldGVcbiAgICAgICAgICAgICAgc3RhdHVzSW5kaWNhdG9yLnRleHRDb250ZW50ID0gYENhbGlicmF0aW9uIGNvbXBsZXRlOiAke3N1Y2Nlc3NDb3VudH0vJHtwb2ludHMubGVuZ3RofSBwb2ludHNgO1xuICAgICAgICAgICAgICBzZXRPdXRwdXRUZXh0KGBDYWxpYnJhdGlvbiBjb21wbGV0ZWQ6ICR7c3VjY2Vzc0NvdW50fS8ke3BvaW50cy5sZW5ndGh9IHBvaW50cyBjYXB0dXJlZGApO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBzdGF0dXMgaW5kaWNhdG9yIGFmdGVyIGEgZGVsYXlcbiAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXR1c0luZGljYXRvci5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICBzdGF0dXNJbmRpY2F0b3IucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdGF0dXNJbmRpY2F0b3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSwgMzAwMCk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQ2FsaWJyYXRpb24gZXJyb3I6XCIsIGVycm9yKTtcbiAgICAgICAgICAgICAgc2V0T3V0cHV0VGV4dChgQ2FsaWJyYXRpb24gZXJyb3I6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgIC8vIFNob3cgVG9wQmFyIGFnYWluXG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0U2hvd1RvcEJhcih0cnVlKSwgMjAwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBpbXBvcnQgcmVxdWlyZWQgbW9kdWxlczpcIiwgZXJyb3IpO1xuICAgICAgICAgICAgc2V0T3V0cHV0VGV4dChgQ2FsaWJyYXRpb24gZXJyb3I6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgICAgIHNldFNob3dUb3BCYXIodHJ1ZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgY2FzZSAnY2xlYXJBbGwnOlxuICAgICAgICAvLyBDbGVhciBjYW52YXNcbiAgICAgICAgLy8gY29uc3QgY2FudmFzID0gZ2V0TWFpbkNhbnZhcygpO1xuICAgICAgICBpZiAoY2FudmFzKSB7XG4gICAgICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAnd2hpdGUnO1xuICAgICAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgICAgICAgIHNldE91dHB1dFRleHQoJ0NhbnZhcyBjbGVhcmVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgc2V0T3V0cHV0VGV4dChgQWN0aW9uIHRyaWdnZXJlZDogJHthY3Rpb25UeXBlfWApO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVQZXJtaXNzaW9uQWNjZXB0ZWQgPSAoKSA9PiB7XG4gICAgaWYgKCFpc0NsaWVudCB8fCAhaXNIeWRyYXRlZCkgcmV0dXJuO1xuICAgIFxuICAgIHNldFNob3dQZXJtaXNzaW9uUG9wdXAoZmFsc2UpO1xuICAgIHNldENhbWVyYVBlcm1pc3Npb25HcmFudGVkKHRydWUpO1xuICAgIHRvZ2dsZUNhbWVyYSh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVQZXJtaXNzaW9uRGVuaWVkID0gKCkgPT4ge1xuICAgIGlmICghaXNDbGllbnQgfHwgIWlzSHlkcmF0ZWQpIHJldHVybjtcbiAgICBcbiAgICBzZXRTaG93UGVybWlzc2lvblBvcHVwKGZhbHNlKTtcbiAgICBzZXRTaG93Q2FtZXJhUGxhY2Vob2xkZXIoZmFsc2UpO1xuICAgIHNldE91dHB1dFRleHQoJ0NhbWVyYSBwZXJtaXNzaW9uIGRlbmllZCcpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUNhbWVyYUNsb3NlID0gKCkgPT4ge1xuICAgIGlmICghaXNDbGllbnQgfHwgIWlzSHlkcmF0ZWQpIHJldHVybjtcbiAgICBcbiAgICB0b2dnbGVDYW1lcmEoZmFsc2UpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUNhbWVyYVJlYWR5ID0gKGRpbWVuc2lvbnMpID0+IHtcbiAgICBpZiAoIWlzQ2xpZW50IHx8ICFpc0h5ZHJhdGVkKSByZXR1cm47XG4gICAgXG4gICAgc2V0TWV0cmljcyh7XG4gICAgICB3aWR0aDogZGltZW5zaW9ucy53aWR0aCxcbiAgICAgIGhlaWdodDogZGltZW5zaW9ucy5oZWlnaHQsXG4gICAgICBkaXN0YW5jZTogZGltZW5zaW9ucy5kaXN0YW5jZSB8fCAnLS0tJ1xuICAgIH0pO1xuICAgIHNldE91dHB1dFRleHQoYENhbWVyYSByZWFkeTogJHtkaW1lbnNpb25zLndpZHRofXgke2RpbWVuc2lvbnMuaGVpZ2h0fWApO1xuICB9O1xuXG4gIC8vIFRvZ2dsZSB0b3AgYmFyIGZ1bmN0aW9uXG4gIGNvbnN0IHRvZ2dsZVRvcEJhciA9IChzaG93KSA9PiB7XG4gICAgY29uc3QgbmV3VG9wQmFyU3RhdGUgPSBzaG93ICE9PSB1bmRlZmluZWQgPyBzaG93IDogIXNob3dUb3BCYXI7XG4gICAgc2V0U2hvd1RvcEJhcihuZXdUb3BCYXJTdGF0ZSk7XG4gICAgXG4gICAgLy8gQWxzbyBoaWRlIG1ldHJpY3Mgd2hlbiBoaWRpbmcgdGhlIHRvcCBiYXJcbiAgICBpZiAoIW5ld1RvcEJhclN0YXRlKSB7XG4gICAgICBzZXRTaG93TWV0cmljcyhmYWxzZSk7XG4gICAgfVxuICAgIFxuICAgIHNldE91dHB1dFRleHQoYFRvcEJhciAke25ld1RvcEJhclN0YXRlID8gJ3Nob3duJyA6ICdoaWRkZW4nfSR7IW5ld1RvcEJhclN0YXRlID8gJywgTWV0cmljcyBoaWRkZW4nIDogJyd9YCk7XG4gICAgXG4gICAgLy8gV2FpdCBmb3Igc3RhdGUgdXBkYXRlIGFuZCBET00gY2hhbmdlcywgdGhlbiBhZGp1c3QgY2FudmFzXG4gICAgc2V0VGltZW91dChhZGp1c3RDYW52YXNEaW1lbnNpb25zLCAxMDApO1xuICB9O1xuXG4gIC8vIFRvZ2dsZSBtZXRyaWNzIGZ1bmN0aW9uXG4gIGNvbnN0IHRvZ2dsZU1ldHJpY3MgPSAoKSA9PiB7XG4gICAgaWYgKHNob3dUb3BCYXIpIHtcbiAgICAgIHNldFNob3dNZXRyaWNzKHByZXYgPT4gIXByZXYpO1xuICAgICAgc2V0T3V0cHV0VGV4dChgTWV0cmljcyAkeyFzaG93TWV0cmljcyA/ICdzaG93bicgOiAnaGlkZGVuJ31gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gSWYgdG9wQmFyIGlzIGhpZGRlbiwgd2UgY2FuJ3Qgc2hvdyBtZXRyaWNzXG4gICAgICBzZXRPdXRwdXRUZXh0KCdDYW5ub3Qgc2hvdyBtZXRyaWNzIHdoZW4gVG9wQmFyIGlzIGhpZGRlbicpO1xuICAgIH1cbiAgfTtcblxuICAvLyBGdW5jdGlvbiB0byB0cmlnZ2VyIGNhbWVyYSBhY2Nlc3NcbiAgY29uc3QgdHJpZ2dlckNhbWVyYUFjY2VzcyA9IChmb3JjZUVuYWJsZSkgPT4ge1xuICAgIGlmIChmb3JjZUVuYWJsZSkge1xuICAgICAgLy8gV2FpdCBhIGJpdCBmb3IgVmlkZW9Qcm9jZXNzb3IgdG8gYmUgYXZhaWxhYmxlXG4gICAgICBjb25zdCB3YWl0Rm9yVmlkZW9Qcm9jZXNzb3IgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGNoZWNrUHJvY2Vzc29yID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHdpbmRvdy52aWRlb1Byb2Nlc3NvciAmJiB0eXBlb2Ygd2luZG93LnZpZGVvUHJvY2Vzc29yLnN0YXJ0VmlkZW9Qcm9jZXNzaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBzZXRUaW1lb3V0KGNoZWNrUHJvY2Vzc29yLCAxMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgICAgY2hlY2tQcm9jZXNzb3IoKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICAvLyBUcnkgdG8gZW5hYmxlIGNhbWVyYSBkaXJlY3RseVxuICAgICAgd2FpdEZvclZpZGVvUHJvY2Vzc29yKCkudGhlbigocHJvY2Vzc29yQXZhaWxhYmxlKSA9PiB7XG4gICAgICAgIGlmIChwcm9jZXNzb3JBdmFpbGFibGUpIHtcbiAgICAgICAgICBzZXRTaG93Q2FtZXJhKHRydWUpO1xuICAgICAgICAgIHNldFNob3dDYW1lcmFQbGFjZWhvbGRlcihmYWxzZSk7XG4gICAgICAgICAgc2V0Q2FtZXJhUGVybWlzc2lvbkdyYW50ZWQodHJ1ZSk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gU3RhcnQgdmlkZW8gcHJvY2Vzc2luZyB3aXRoIGN1cnJlbnQgb3B0aW9uc1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICB3aW5kb3cudmlkZW9Qcm9jZXNzb3Iuc3RhcnRWaWRlb1Byb2Nlc3Npbmcoe1xuICAgICAgICAgICAgICBzaG93SGVhZFBvc2UsXG4gICAgICAgICAgICAgIHNob3dCb3VuZGluZ0JveCxcbiAgICAgICAgICAgICAgc2hvd01hc2ssXG4gICAgICAgICAgICAgIHNob3dQYXJhbWV0ZXJzLFxuICAgICAgICAgICAgICBzaG93UHJvY2Vzc2VkSW1hZ2U6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1ZpZGVvIHByb2Nlc3Npbmcgc3RhcnRlZCBzdWNjZXNzZnVsbHknKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzdGFydGluZyB2aWRlbyBwcm9jZXNzaW5nOicsIGVycm9yKTtcbiAgICAgICAgICAgIHNldFNob3dDYW1lcmEoZmFsc2UpO1xuICAgICAgICAgICAgc2V0U2hvd0NhbWVyYVBsYWNlaG9sZGVyKGZhbHNlKTtcbiAgICAgICAgICAgIHNldENhbWVyYVBlcm1pc3Npb25HcmFudGVkKGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKCdWaWRlb1Byb2Nlc3NvciBub3QgYXZhaWxhYmxlIGFmdGVyIHdhaXRpbmcnKTtcbiAgICAgICAgICAvLyBGYWxsYmFjayB0byBzaG93aW5nIGNhbWVyYSBwZXJtaXNzaW9uIHBvcHVwXG4gICAgICAgICAgc2V0U2hvd1Blcm1pc3Npb25Qb3B1cCh0cnVlKTtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB3YWl0aW5nIGZvciBWaWRlb1Byb2Nlc3NvcjonLCBlcnJvcik7XG4gICAgICAgIHNldFNob3dQZXJtaXNzaW9uUG9wdXAodHJ1ZSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICAvLyBSZXR1cm4gdHJ1ZSBpbW1lZGlhdGVseSB0byBpbmRpY2F0ZSB3ZSdyZSB0cnlpbmdcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBcbiAgICAvLyBKdXN0IHRvZ2dsZSBjdXJyZW50IHN0YXRlIGlmIG5vdCBmb3JjaW5nXG4gICAgaWYgKGNhbWVyYVBlcm1pc3Npb25HcmFudGVkKSB7XG4gICAgICB0b2dnbGVDYW1lcmEoIXNob3dDYW1lcmEpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFNob3dQZXJtaXNzaW9uUG9wdXAodHJ1ZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9O1xuXG4gIC8vIER5bmFtaWMgY2xhc3MgdG8gcmVmbGVjdCBjdXJyZW50IHdpbmRvdyBzaXplXG4gIGNvbnN0IGdldFNpemVDbGFzcyA9ICgpID0+IHtcbiAgICBjb25zdCB7IHBlcmNlbnRhZ2UgfSA9IHdpbmRvd1NpemU7XG4gICAgaWYgKHBlcmNlbnRhZ2UgPCAzNSkgcmV0dXJuICd3aW5kb3ctc2l6ZS10aW55JztcbiAgICBpZiAocGVyY2VudGFnZSA8IDUwKSByZXR1cm4gJ3dpbmRvdy1zaXplLXNtYWxsJztcbiAgICBpZiAocGVyY2VudGFnZSA8IDcwKSByZXR1cm4gJ3dpbmRvdy1zaXplLW1lZGl1bSc7XG4gICAgcmV0dXJuICd3aW5kb3ctc2l6ZS1sYXJnZSc7XG4gIH07XG5cbiAgLy8gQWRkIHRoaXMgZnVuY3Rpb24gdG8gaGFuZGxlIHNldHRpbmdzIHZpc2liaWxpdHlcbiAgY29uc3QgaGFuZGxlU2V0dGluZ3NWaXNpYmlsaXR5ID0gKGlzVmlzaWJsZSkgPT4ge1xuICAgIHNldFNob3dTZXR0aW5ncyhpc1Zpc2libGUpO1xuICB9O1xuXG4gIC8vIEFkZCB0aGlzIGVmZmVjdCB0byBsaXN0ZW4gZm9yIHNldHRpbmdzIHZpc2liaWxpdHkgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZVNldHRpbmdzTWVzc2FnZSA9IChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LmRhdGEudHlwZSA9PT0gJ1NIT1dfU0VUVElOR1MnKSB7XG4gICAgICAgIHNldFNob3dTZXR0aW5ncyhldmVudC5kYXRhLnNob3cpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGhhbmRsZVNldHRpbmdzTWVzc2FnZSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgaGFuZGxlU2V0dGluZ3NNZXNzYWdlKTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgLy8gTGlzdGVuIGZvciB1c2VyIElEIGNoYW5nZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVVc2VySWRDaGFuZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5kZXRhaWwgJiYgZXZlbnQuZGV0YWlsLnR5cGUgPT09ICd1c2VySWRDaGFuZ2UnKSB7XG4gICAgICAgIHNldEN1cnJlbnRVc2VySWQoZXZlbnQuZGV0YWlsLnVzZXJJZCk7XG4gICAgICAgIC8vIERpc3BhdGNoIGV2ZW50IHRvIHVwZGF0ZSBzZXR0aW5ncyBmb3IgdGhlIG5ldyB1c2VyXG4gICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdjYXB0dXJlU2V0dGluZ3NVcGRhdGUnLCB7XG4gICAgICAgICAgZGV0YWlsOiB7XG4gICAgICAgICAgICB0eXBlOiAnY2FwdHVyZVNldHRpbmdzJyxcbiAgICAgICAgICAgIHVzZXJJZDogZXZlbnQuZGV0YWlsLnVzZXJJZFxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3VzZXJJZENoYW5nZScsIGhhbmRsZVVzZXJJZENoYW5nZSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd1c2VySWRDaGFuZ2UnLCBoYW5kbGVVc2VySWRDaGFuZ2UpO1xuICAgIH07XG4gIH0sIFtdKTtcblxuICAvLyBJbml0aWFsaXplIHNldHRpbmdzIHdoZW4gY29tcG9uZW50IG1vdW50c1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChjb25zZW50VXNlcklkKSB7XG4gICAgICAvLyBTZXQgdGhlIGN1cnJlbnQgdXNlciBJRFxuICAgICAgc2V0Q3VycmVudFVzZXJJZChjb25zZW50VXNlcklkKTtcbiAgICAgIFxuICAgICAgLy8gRGlzcGF0Y2ggZXZlbnQgdG8gdXBkYXRlIHNldHRpbmdzIGZvciB0aGlzIHVzZXJcbiAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdjYXB0dXJlU2V0dGluZ3NVcGRhdGUnLCB7XG4gICAgICAgIGRldGFpbDoge1xuICAgICAgICAgIHR5cGU6ICdjYXB0dXJlU2V0dGluZ3MnLFxuICAgICAgICAgIHVzZXJJZDogY29uc2VudFVzZXJJZFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICB9XG4gIH0sIFtjb25zZW50VXNlcklkXSk7XG5cbiAgLy8gTG9hZCBzZXR0aW5ncyBmcm9tIGJhY2tlbmQgd2hlbiBjb21wb25lbnQgbW91bnRzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgbG9hZFNldHRpbmdzID0gYXN5bmMgKCkgPT4ge1xuICAgICAgaWYgKCFjb25zZW50VXNlcklkKSByZXR1cm47XG4gICAgICBcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvZGF0YS1jZW50ZXIvc2V0dGluZ3MvJHtjb25zZW50VXNlcklkfWApO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gbG9hZCBzZXR0aW5ncycpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxvYWRlZFNldHRpbmdzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBcbiAgICAgICAgLy8gV2FpdCBmb3IgdGhlIGNvbXBvbmVudCB0byBiZSBtb3VudGVkIGFuZCByZWYgdG8gYmUgaW5pdGlhbGl6ZWRcbiAgICAgICAgY29uc3Qgd2FpdEZvclJlZiA9IChyZXRyaWVzID0gNSkgPT4ge1xuICAgICAgICAgIGlmIChhY3Rpb25CdXR0b25Hcm91cFJlZi5jdXJyZW50ICYmIHR5cGVvZiBhY3Rpb25CdXR0b25Hcm91cFJlZi5jdXJyZW50LnVwZGF0ZVNldHRpbmdzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAvLyBVcGRhdGUgdGhlIHNldHRpbmdzIGZvciB0aGlzIHVzZXJcbiAgICAgICAgICAgIGFjdGlvbkJ1dHRvbkdyb3VwUmVmLmN1cnJlbnQudXBkYXRlU2V0dGluZ3MobG9hZGVkU2V0dGluZ3MpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBEaXNwYXRjaCBldmVudCB0byB1cGRhdGUgVUlcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdjYXB0dXJlU2V0dGluZ3NVcGRhdGUnLCB7XG4gICAgICAgICAgICAgIGRldGFpbDoge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdjYXB0dXJlU2V0dGluZ3MnLFxuICAgICAgICAgICAgICAgIHVzZXJJZDogY29uc2VudFVzZXJJZCxcbiAgICAgICAgICAgICAgICB0aW1lczogbG9hZGVkU2V0dGluZ3MudGltZXMsXG4gICAgICAgICAgICAgICAgZGVsYXk6IGxvYWRlZFNldHRpbmdzLmRlbGF5XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgICAgICAgIH0gZWxzZSBpZiAocmV0cmllcyA+IDApIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gd2FpdEZvclJlZihyZXRyaWVzIC0gMSksIDUwMCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignQWN0aW9uQnV0dG9uR3JvdXAgcmVmIG5vdCBpbml0aWFsaXplZCBhZnRlciByZXRyaWVzJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgd2FpdEZvclJlZigpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBzZXR0aW5nczonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8vIEFkZCBhIHNtYWxsIGRlbGF5IHRvIGVuc3VyZSBjb21wb25lbnRzIGFyZSBtb3VudGVkXG4gICAgc2V0VGltZW91dChsb2FkU2V0dGluZ3MsIDEwMDApO1xuICB9LCBbY29uc2VudFVzZXJJZF0pO1xuXG4gIC8vIEFkZCBwb2xsaW5nIGZvciByZWFsLXRpbWUgdXBkYXRlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGZldGNoVXBkYXRlcyA9IGFzeW5jICgpID0+IHtcbiAgICAgIGlmICghY29uc2VudFVzZXJJZCkgcmV0dXJuO1xuICAgICAgXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL2RhdGEtY2VudGVyL3NldHRpbmdzLyR7Y29uc2VudFVzZXJJZH1gKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggc2V0dGluZ3MnKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHNldHRpbmdzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBpZiAoYWN0aW9uQnV0dG9uR3JvdXBSZWYuY3VycmVudCAmJiBhY3Rpb25CdXR0b25Hcm91cFJlZi5jdXJyZW50LnVwZGF0ZVNldHRpbmdzKSB7XG4gICAgICAgICAgYWN0aW9uQnV0dG9uR3JvdXBSZWYuY3VycmVudC51cGRhdGVTZXR0aW5ncyhzZXR0aW5ncyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBZb3UgY2FuIGFkZCBpbWFnZSBmZXRjaGluZyBsb2dpYyBoZXJlIGlmIG5lZWRlZFxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdXBkYXRlczonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8vIEluaXRpYWwgZmV0Y2hcbiAgICBmZXRjaFVwZGF0ZXMoKTtcblxuICAgIC8vIFNldCB1cCBwb2xsaW5nIGludGVydmFsXG4gICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmZXRjaFVwZGF0ZXMsIDMwMDApO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICAgIH07XG4gIH0sIFtjb25zZW50VXNlcklkXSk7XG5cbiAgLy8gQWRkIGV2ZW50IGxpc3RlbmVycyBmb3Igc2V0dGluZ3MgYW5kIGltYWdlIHVwZGF0ZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVTZXR0aW5nc1VwZGF0ZSA9IChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LmRldGFpbD8udHlwZSA9PT0gJ2NhcHR1cmVTZXR0aW5ncycgJiYgZXZlbnQuZGV0YWlsPy51c2VySWQgPT09IGNvbnNlbnRVc2VySWQpIHtcbiAgICAgICAgY29uc3QgeyB0aW1lcywgZGVsYXkgfSA9IGV2ZW50LmRldGFpbDtcbiAgICAgICAgaWYgKGFjdGlvbkJ1dHRvbkdyb3VwUmVmLmN1cnJlbnQgJiYgYWN0aW9uQnV0dG9uR3JvdXBSZWYuY3VycmVudC51cGRhdGVTZXR0aW5ncykge1xuICAgICAgICAgIGFjdGlvbkJ1dHRvbkdyb3VwUmVmLmN1cnJlbnQudXBkYXRlU2V0dGluZ3MoeyB0aW1lcywgZGVsYXkgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgaGFuZGxlSW1hZ2VVcGRhdGUgPSAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5kZXRhaWw/LnR5cGUgPT09ICdpbWFnZScgJiYgZXZlbnQuZGV0YWlsPy51c2VySWQgPT09IGNvbnNlbnRVc2VySWQpIHtcbiAgICAgICAgY29uc3QgeyBpbWFnZSB9ID0gZXZlbnQuZGV0YWlsO1xuICAgICAgICAvLyBVcGRhdGUgaW1hZ2UgaW4gdGhlIFVJIGlmIG5lZWRlZFxuICAgICAgICAvLyBZb3UgY2FuIGFkZCB5b3VyIGltYWdlIHVwZGF0ZSBsb2dpYyBoZXJlXG4gICAgICB9XG4gICAgfTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdjYXB0dXJlU2V0dGluZ3NVcGRhdGUnLCBoYW5kbGVTZXR0aW5nc1VwZGF0ZSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2ltYWdlVXBkYXRlJywgaGFuZGxlSW1hZ2VVcGRhdGUpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdjYXB0dXJlU2V0dGluZ3NVcGRhdGUnLCBoYW5kbGVTZXR0aW5nc1VwZGF0ZSk7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignaW1hZ2VVcGRhdGUnLCBoYW5kbGVJbWFnZVVwZGF0ZSk7XG4gICAgfTtcbiAgfSwgW2NvbnNlbnRVc2VySWRdKTtcblxuICAvLyBMb2FkIHNldHRpbmdzIGZvciBhIHNwZWNpZmljIHVzZXJcbiAgY29uc3QgbG9hZFNldHRpbmdzID0gYXN5bmMgKHVzZXJJZCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygnTG9hZGluZyBzZXR0aW5ncyBmb3IgdXNlcjonLCB1c2VySWQpO1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9kYXRhLWNlbnRlci9zZXR0aW5ncy8ke3VzZXJJZH1gKTtcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIHNldHRpbmdzJyk7XG4gICAgICBcbiAgICAgIGNvbnN0IHVzZXJTZXR0aW5ncyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIGNvbnNvbGUubG9nKCdGZXRjaGVkIHNldHRpbmdzOicsIHVzZXJTZXR0aW5ncyk7XG4gICAgICBcbiAgICAgIC8vIERpc3BhdGNoIHNldHRpbmdzIHVwZGF0ZSBldmVudFxuICAgICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ2NhcHR1cmVTZXR0aW5nc1VwZGF0ZScsIHtcbiAgICAgICAgZGV0YWlsOiB7XG4gICAgICAgICAgdHlwZTogJ2NhcHR1cmVTZXR0aW5ncycsXG4gICAgICAgICAgdXNlcklkLFxuICAgICAgICAgIC4uLnVzZXJTZXR0aW5nc1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBzZXR0aW5nczonLCBlcnJvcik7XG4gICAgfVxuICB9O1xuXG4gIC8vIEhhbmRsZSB1c2VyIElEIGNoYW5nZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoY29uc2VudFVzZXJJZCAmJiBjb25zZW50VXNlcklkICE9PSBjdXJyZW50VXNlcklkKSB7XG4gICAgICBjb25zb2xlLmxvZygnVXNlciBJRCBjaGFuZ2VkIGluIGluZGV4LmpzOicsIGNvbnNlbnRVc2VySWQpO1xuICAgICAgc2V0Q3VycmVudFVzZXJJZChjb25zZW50VXNlcklkKTtcbiAgICAgIFxuICAgICAgLy8gRGlzcGF0Y2ggZXZlbnQgdG8gbm90aWZ5IG90aGVyIGNvbXBvbmVudHNcbiAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCd1c2VySWRDaGFuZ2UnLCB7XG4gICAgICAgIGRldGFpbDogeyB1c2VySWQ6IGNvbnNlbnRVc2VySWQgfVxuICAgICAgfSk7XG4gICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgICBcbiAgICAgIC8vIExvYWQgc2V0dGluZ3MgZm9yIHRoZSBuZXcgdXNlclxuICAgICAgbG9hZFNldHRpbmdzKGNvbnNlbnRVc2VySWQpO1xuICAgIH1cbiAgfSwgW2NvbnNlbnRVc2VySWQsIGN1cnJlbnRVc2VySWRdKTtcblxuICAvLyBMaXN0ZW4gZm9yIHNldHRpbmdzIHVwZGF0ZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVTZXR0aW5nc1VwZGF0ZSA9IChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LmRldGFpbCAmJiBldmVudC5kZXRhaWwudHlwZSA9PT0gJ2NhcHR1cmVTZXR0aW5ncycpIHtcbiAgICAgICAgY29uc3QgeyB1c2VySWQsIHRpbWVzLCBkZWxheSB9ID0gZXZlbnQuZGV0YWlsO1xuICAgICAgICBpZiAodXNlcklkID09PSBjdXJyZW50VXNlcklkKSB7XG4gICAgICAgICAgLy8gVXBkYXRlIHRoZSBzZXR0aW5ncyBmb3IgdGhpcyB1c2VyXG4gICAgICAgICAgaWYgKGFjdGlvbkJ1dHRvbkdyb3VwUmVmLmN1cnJlbnQgJiYgYWN0aW9uQnV0dG9uR3JvdXBSZWYuY3VycmVudC51cGRhdGVTZXR0aW5ncykge1xuICAgICAgICAgICAgYWN0aW9uQnV0dG9uR3JvdXBSZWYuY3VycmVudC51cGRhdGVTZXR0aW5ncyh7XG4gICAgICAgICAgICAgIHRpbWVzOiB0aW1lcyB8fCAxLFxuICAgICAgICAgICAgICBkZWxheTogZGVsYXkgfHwgM1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdjYXB0dXJlU2V0dGluZ3NVcGRhdGUnLCBoYW5kbGVTZXR0aW5nc1VwZGF0ZSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdjYXB0dXJlU2V0dGluZ3NVcGRhdGUnLCBoYW5kbGVTZXR0aW5nc1VwZGF0ZSk7XG4gICAgfTtcbiAgfSwgW2N1cnJlbnRVc2VySWRdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtgbWFpbi1jb250YWluZXIgJHtnZXRTaXplQ2xhc3MoKX1gfT5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+Q2FtZXJhIERhdGFzZXQgQ29sbGVjdGlvbjwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MVwiIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICBcbiAgICAgIHsvKiBCYWNrZW5kIGNvbm5lY3Rpb24gc3RhdHVzIGJhbm5lciAqL31cbiAgICAgIHtpc0h5ZHJhdGVkICYmIGJhY2tlbmRTdGF0dXMgPT09ICdkaXNjb25uZWN0ZWQnICYmIChcbiAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgcGFkZGluZzogJzZweCAwJyxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZmZlMGIyJyxcbiAgICAgICAgICBjb2xvcjogJyNlNjUxMDAnLFxuICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgICAgZm9udFNpemU6ICcxNHB4JyxcbiAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgICAgICAgekluZGV4OiAxMTAwXG4gICAgICAgIH19PlxuICAgICAgICAgIOKaoO+4jyBCYWNrZW5kIGRpc2Nvbm5lY3RlZC4gSHVycnkgdXAsIE1ha2UgT05MSU5FIHBsZWFzZSBhbmQgVXNpbmcgbW9jayBtb2RlXG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICAgIFxuICAgICAgey8qIFdhcm5pbmcgbWVzc2FnZSBiYW5uZXIgKi99XG4gICAgICB7aXNIeWRyYXRlZCAmJiBzaG93V2FybmluZyAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwid2FybmluZy1iYW5uZXJcIiBzdHlsZT17e1xuICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgIHRvcDogc2hvd1RvcEJhciA/IChiYWNrZW5kU3RhdHVzID09PSAnZGlzY29ubmVjdGVkJyA/ICczMnB4JyA6ICc2MHB4JykgOiAnMCcsXG4gICAgICAgICAgbGVmdDogJzAnLFxuICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2ZmZWIzYicsXG4gICAgICAgICAgY29sb3I6ICcjMzMzJyxcbiAgICAgICAgICBwYWRkaW5nOiAnMTBweCcsXG4gICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICBib3hTaGFkb3c6ICcwIDJweCA0cHggcmdiYSgwLDAsMCwwLjIpJyxcbiAgICAgICAgICB6SW5kZXg6IDEwMTAsXG4gICAgICAgICAgYW5pbWF0aW9uOiAnZmFkZUluIDAuM3MgZWFzZS1pbi1vdXQnXG4gICAgICAgIH19PlxuICAgICAgICAgIDxzdHJvbmc+4pqg77iPIHt3YXJuaW5nTWVzc2FnZX08L3N0cm9uZz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuXG4gICAgICB7aXNMb2FkaW5nID8gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvYWRpbmctY29udGFpbmVyXCI+XG4gICAgICAgICAgPHA+TG9hZGluZyB1c2VyIHNldHRpbmdzLi4uPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICkgOiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgICAgICAgey8qIExvYWQgdGhlIHZpZGVvIHByb2Nlc3NvciBjb21wb25lbnQgKi99XG4gICAgICB7aXNIeWRyYXRlZCAmJiBpc0NsaWVudCAmJiAoXG4gICAgICAgIDxWaWRlb1Byb2Nlc3NvckNvbXBvbmVudCAvPlxuICAgICAgKX1cbiAgICAgICAgICBcbiAgICAgICAgICB7LyogVG9wQmFyIGNvbXBvbmVudCB3aXRoIG9uQnV0dG9uQ2xpY2sgaGFuZGxlciAtIGNvbmRpdGlvbmFsbHkgcmVuZGVyZWQgKi99XG4gICAgICAgICAge3Nob3dUb3BCYXIgJiYgKFxuICAgICAgICAgICAgPFRvcEJhciBcbiAgICAgICAgICAgICAgb25CdXR0b25DbGljaz17aGFuZGxlQWN0aW9uQnV0dG9uQ2xpY2t9XG4gICAgICAgICAgICAgIG9uQ2FtZXJhQWNjZXNzPXsoKSA9PiBzZXRTaG93UGVybWlzc2lvblBvcHVwKHRydWUpfVxuICAgICAgICAgICAgICBvdXRwdXRUZXh0PXtzdGF0dXNNZXNzYWdlIHx8IG91dHB1dFRleHR9XG4gICAgICAgICAgICAgIG9uT3V0cHV0Q2hhbmdlPXsodGV4dCkgPT4gc2V0T3V0cHV0VGV4dCh0ZXh0KX1cbiAgICAgICAgICAgICAgb25Ub2dnbGVUb3BCYXI9e3RvZ2dsZVRvcEJhcn1cbiAgICAgICAgICAgICAgb25Ub2dnbGVNZXRyaWNzPXt0b2dnbGVNZXRyaWNzfVxuICAgICAgICAgICAgICBjYW52YXNSZWY9e2NhbnZhc1JlZn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICBcbiAgICAgICAgICB7LyogU2hvdyByZXN0b3JlIGJ1dHRvbiB3aGVuIFRvcEJhciBpcyBoaWRkZW4gLSBwb3NpdGlvbmVkIGF0IHRvcCByaWdodCAqL31cbiAgICAgICAgICB7IXNob3dUb3BCYXIgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZXN0b3JlLWJ1dHRvbi1jb250YWluZXJcIiBzdHlsZT17e1xuICAgICAgICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgICAgICAgICAgdG9wOiAnMTBweCcsXG4gICAgICAgICAgICAgIHJpZ2h0OiAnMTBweCcsXG4gICAgICAgICAgICAgIHpJbmRleDogMTAwMFxuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicmVzdG9yZS1idG5cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRvZ2dsZVRvcEJhcih0cnVlKX1cbiAgICAgICAgICAgICAgICB0aXRsZT1cIlNob3cgVG9wQmFyIGFuZCBNZXRyaWNzXCJcbiAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgcGFkZGluZzogJzVweCAxMHB4JyxcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICcjMDA2NmNjJyxcbiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgICAgICAgICAgYm9yZGVyOiAnbm9uZScsXG4gICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxuICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICcxNnB4JyxcbiAgICAgICAgICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIOKJoVxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG5cbiAgICAgICAgICB7LyogTWFpbiBwcmV2aWV3IGFyZWEgKi99XG4gICAgICAgICAgPGRpdiBcbiAgICAgICAgICAgIHJlZj17cHJldmlld0FyZWFSZWZ9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJjYW1lcmEtcHJldmlldy1hcmVhXCJcbiAgICAgICAgICAgIHN0eWxlPXt7IFxuICAgICAgICAgICAgICBoZWlnaHQ6IHNob3dUb3BCYXIgPyAnY2FsYygxMDB2aCAtIDEyMHB4KScgOiAnMTAwdmgnLFxuICAgICAgICAgICAgICBtYXJnaW5Ub3A6IGJhY2tlbmRTdGF0dXMgPT09ICdkaXNjb25uZWN0ZWQnID8gJzMycHgnIDogJzAnLFxuICAgICAgICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2Y1ZjVmNScsXG4gICAgICAgICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJ1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7LyogQWN0aW9uIGJ1dHRvbnMgZm9yIGNhbWVyYSBjb250cm9sIC0gbW92ZWQgb3V0c2lkZSBjb25kaXRpb25hbCByZW5kZXJpbmcgKi99XG4gICAgICAgICAgICB7LyogPGRpdiBjbGFzc05hbWU9XCJjYW1lcmEtYWN0aW9uLWJ1dHRvbnMtY29udGFpbmVyXCIgc3R5bGU9e3sgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgICBib3R0b206ICcyMHB4JyxcbiAgICAgICAgICAgICAgbGVmdDogJzUwJScsXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTUwJSknLFxuICAgICAgICAgICAgICB6SW5kZXg6IDEwLFxuICAgICAgICAgICAgICBtYXhXaWR0aDogJzYwMHB4JyxcbiAgICAgICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICAgICAgcGFkZGluZzogJzAgMjBweCdcbiAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICA8QWN0aW9uQnV0dG9uR3JvdXBcbiAgICAgICAgICAgICAgICByZWY9e2FjdGlvbkJ1dHRvbkdyb3VwUmVmfVxuICAgICAgICAgICAgICAgIHRyaWdnZXJDYW1lcmFBY2Nlc3M9e3RyaWdnZXJDYW1lcmFBY2Nlc3N9XG4gICAgICAgICAgICAgICAgaXNDb21wYWN0TW9kZT17d2luZG93U2l6ZS53aWR0aCA8IDc2OH1cbiAgICAgICAgICAgICAgICBvbkFjdGlvbkNsaWNrPXtoYW5kbGVBY3Rpb25CdXR0b25DbGlja31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PiAqL31cblxuICAgICAgICAgICAgeyFzaG93Q2FtZXJhID8gKFxuICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FtZXJhLXByZXZpZXctbWVzc2FnZVwiIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICBwYWRkaW5nOiAnMjBweCcsXG4gICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHNob3dUb3BCYXIgPyAncmVsYXRpdmUnIDogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICAgICAgICB6SW5kZXg6IDVcbiAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgIDxwPkNhbWVyYSBwcmV2aWV3IHdpbGwgYXBwZWFyIGhlcmU8L3A+XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJjYW1lcmEtc2l6ZS1pbmRpY2F0b3JcIj5DdXJyZW50IHdpbmRvdzoge3dpbmRvd1NpemUucGVyY2VudGFnZX0lIG9mIHNjcmVlbiB3aWR0aDwvcD5cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgey8qIENhbWVyYSBwbGFjZWhvbGRlciBzcXVhcmUgLSBzbWFsbCB2ZXJzaW9uICovfVxuICAgICAgICAgICAgICAgICAge2lzSHlkcmF0ZWQgJiYgc2hvd0NhbWVyYVBsYWNlaG9sZGVyICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYW1lcmEtcGxhY2Vob2xkZXItc3F1YXJlXCJcbiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICcxODBweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICcxMzVweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46ICcyMHB4IGF1dG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAnMnB4IGRhc2hlZCAjNjY2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzRweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZjVmNWY1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInXG4gICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFNpemU6ICcxLjVyZW0nIH19PvCfk7c8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHsvKiBDYW52YXMgZm9yIGV5ZSB0cmFja2luZyBkb3RzIC0gRmxleGlibGUgY29udGFpbmVyICovfVxuICAgICAgICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYW52YXMtY29udGFpbmVyXCIgXG4gICAgICAgICAgICAgICAgICBzdHlsZT17eyBcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsIFxuICAgICAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsIFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgICAgICAgICAgICAgICAgICB6SW5kZXg6IDEwLFxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcidcbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPGNhbnZhcyBcbiAgICAgICAgICAgICAgICAgICAgcmVmPXtjYW52YXNSZWZ9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRyYWNraW5nLWNhbnZhc1wiXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IFxuICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsIFxuICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgICAgICAgICAgICAgICAgICAgbWF4V2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICAgICAgICBtYXhIZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICAgICAgICBvYmplY3RGaXQ6ICdjb250YWluJ1xuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgey8qIE1ldHJpY3MgaW5mbyAtIGNvbmRpdGlvbmFsbHkgcmVuZGVyZWQgKi99XG4gICAgICAgICAgICB7aXNIeWRyYXRlZCAmJiBzaG93TWV0cmljcyAmJiAoXG4gICAgICAgICAgICAgIDxEaXNwbGF5UmVzcG9uc2UgXG4gICAgICAgICAgICAgICAgd2lkdGg9e21ldHJpY3Mud2lkdGh9IFxuICAgICAgICAgICAgICAgIGhlaWdodD17bWV0cmljcy5oZWlnaHR9IFxuICAgICAgICAgICAgICAgIGRpc3RhbmNlPXttZXRyaWNzLmRpc3RhbmNlfVxuICAgICAgICAgICAgICAgIGlzVmlzaWJsZT17c2hvd01ldHJpY3N9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICB7LyogQ2FtZXJhIGNvbXBvbmVudCAtIHVzaW5nIGNsaWVudC1vbmx5IHZlcnNpb24gKi99XG4gICAgICAgICAgICB7aXNIeWRyYXRlZCAmJiBpc0NsaWVudCAmJiBzaG93Q2FtZXJhICYmIChcbiAgICAgICAgICAgICAgPER5bmFtaWNDYW1lcmFBY2Nlc3NcbiAgICAgICAgICAgICAgICBpc1Nob3dpbmc9e3Nob3dDYW1lcmF9IFxuICAgICAgICAgICAgICAgIG9uQ2xvc2U9e2hhbmRsZUNhbWVyYUNsb3NlfVxuICAgICAgICAgICAgICAgIG9uQ2FtZXJhUmVhZHk9e2hhbmRsZUNhbWVyYVJlYWR5fVxuICAgICAgICAgICAgICAgIHNob3dIZWFkUG9zZT17c2hvd0hlYWRQb3NlfVxuICAgICAgICAgICAgICAgIHNob3dCb3VuZGluZ0JveD17c2hvd0JvdW5kaW5nQm94fVxuICAgICAgICAgICAgICAgIHNob3dNYXNrPXtzaG93TWFza31cbiAgICAgICAgICAgICAgICBzaG93UGFyYW1ldGVycz17c2hvd1BhcmFtZXRlcnN9XG4gICAgICAgICAgICAgICAgdmlkZW9SZWY9e3ZpZGVvUmVmfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgey8qIENhbWVyYSBwZXJtaXNzaW9uIHBvcHVwICovfVxuICAgICAgICAgICAge2lzSHlkcmF0ZWQgJiYgaXNDbGllbnQgJiYgc2hvd1Blcm1pc3Npb25Qb3B1cCAmJiAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FtZXJhLXBlcm1pc3Npb24tcG9wdXBcIiBzdHlsZT17e1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjUpJyxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgIHpJbmRleDogMjAwMFxuICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhbWVyYS1wZXJtaXNzaW9uLWRpYWxvZ1wiIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICB3aWR0aDogJzQwMHB4JyxcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcbiAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzhweCcsXG4gICAgICAgICAgICAgICAgICBwYWRkaW5nOiAnMjBweCcsXG4gICAgICAgICAgICAgICAgICBib3hTaGFkb3c6ICcwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpJ1xuICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImNhbWVyYS1wZXJtaXNzaW9uLXRpdGxlXCIgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAnMCAwIDE1cHgnLFxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzE4cHgnLFxuICAgICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCdcbiAgICAgICAgICAgICAgICAgIH19PkNhbWVyYSBBY2Nlc3MgUmVxdWlyZWQ8L2gzPlxuICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiY2FtZXJhLXBlcm1pc3Npb24tbWVzc2FnZVwiIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogJzAgMCAyMHB4JyxcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICcxNHB4JyxcbiAgICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDogJzEuNCdcbiAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICBUaGlzIGFwcGxpY2F0aW9uIG5lZWRzIGFjY2VzcyB0byB5b3VyIGNhbWVyYSB0byBmdW5jdGlvbiBwcm9wZXJseS4gXG4gICAgICAgICAgICAgICAgICAgIFdoZW4gcHJvbXB0ZWQgYnkgeW91ciBicm93c2VyLCBwbGVhc2UgY2xpY2sgXCJBbGxvd1wiIHRvIGdyYW50IGNhbWVyYSBhY2Nlc3MuXG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhbWVyYS1wZXJtaXNzaW9uLWJ1dHRvbnNcIiBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnLFxuICAgICAgICAgICAgICAgICAgICBnYXA6ICcxMHB4J1xuICAgICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlUGVybWlzc2lvbkRlbmllZH1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYW1lcmEtYnRuXCJcbiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJzhweCAxNnB4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmMGYwZjAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAnbm9uZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcidcbiAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVBlcm1pc3Npb25BY2NlcHRlZH1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjYW1lcmEtYnRuXCJcbiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJzhweCAxNnB4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMwMDY2Y2MnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzRweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJ1xuICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICBDb250aW51ZVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn0iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVJlZiIsIkhlYWQiLCJkeW5hbWljIiwiVG9wQmFyIiwiRGlzcGxheVJlc3BvbnNlIiwiQWN0aW9uQnV0dG9uR3JvdXAiLCJzaG93Q2FwdHVyZVByZXZpZXciLCJjYXB0dXJlSW1hZ2VzQXRQb2ludCIsImRyYXdSZWREb3QiLCJnZXRSYW5kb21Qb3NpdGlvbiIsInJ1bkNvdW50ZG93biIsImdlbmVyYXRlQ2FsaWJyYXRpb25Qb2ludHMiLCJ1c2VDb25zZW50IiwidXNlUm91dGVyIiwiVmlkZW9Qcm9jZXNzb3JDb21wb25lbnQiLCJzc3IiLCJEeW5hbWljQ2FtZXJhQWNjZXNzIiwibG9hZGluZyIsImRpdiIsInN0eWxlIiwicG9zaXRpb24iLCJ0b3AiLCJsZWZ0IiwidHJhbnNmb3JtIiwid2lkdGgiLCJoZWlnaHQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXIiLCJib3JkZXJSYWRpdXMiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsInRleHRBbGlnbiIsInpJbmRleCIsImZvbnRTaXplIiwibWFyZ2luQm90dG9tIiwicCIsImZvbnRXZWlnaHQiLCJjb2xvciIsIkNvbGxlY3RlZERhdGFzZXRQYWdlIiwicm91dGVyIiwidXNlcklkIiwiY29uc2VudFVzZXJJZCIsInVzZXJEYXRhIiwic2V0VXNlckRhdGEiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiaXNIeWRyYXRlZCIsInNldElzSHlkcmF0ZWQiLCJiYWNrZW5kU3RhdHVzIiwic2V0QmFja2VuZFN0YXR1cyIsInNob3dUb3BCYXIiLCJzZXRTaG93VG9wQmFyIiwic2hvd1dhcm5pbmciLCJzZXRTaG93V2FybmluZyIsIndhcm5pbmdNZXNzYWdlIiwic2V0V2FybmluZ01lc3NhZ2UiLCJzdGF0dXNNZXNzYWdlIiwic2V0U3RhdHVzTWVzc2FnZSIsIm91dHB1dFRleHQiLCJzZXRPdXRwdXRUZXh0Iiwic2hvd01ldHJpY3MiLCJzZXRTaG93TWV0cmljcyIsInNob3dQZXJtaXNzaW9uUG9wdXAiLCJzZXRTaG93UGVybWlzc2lvblBvcHVwIiwiY2FtZXJhUGVybWlzc2lvbkdyYW50ZWQiLCJzZXRDYW1lcmFQZXJtaXNzaW9uR3JhbnRlZCIsInNob3dDYW1lcmEiLCJzZXRTaG93Q2FtZXJhIiwic2hvd0NhbWVyYVBsYWNlaG9sZGVyIiwic2V0U2hvd0NhbWVyYVBsYWNlaG9sZGVyIiwic2hvd0hlYWRQb3NlIiwic2V0U2hvd0hlYWRQb3NlIiwic2hvd0JvdW5kaW5nQm94Iiwic2V0U2hvd0JvdW5kaW5nQm94Iiwic2hvd01hc2siLCJzZXRTaG93TWFzayIsInNob3dQYXJhbWV0ZXJzIiwic2V0U2hvd1BhcmFtZXRlcnMiLCJ3aW5kb3dTaXplIiwic2V0V2luZG93U2l6ZSIsInBlcmNlbnRhZ2UiLCJtZXRyaWNzIiwic2V0TWV0cmljcyIsImRpc3RhbmNlIiwiY2FwdHVyZUNvdW50ZXIiLCJzZXRDYXB0dXJlQ291bnRlciIsImNhcHR1cmVGb2xkZXIiLCJzZXRDYXB0dXJlRm9sZGVyIiwiY3VycmVudFVzZXJJZCIsInNldEN1cnJlbnRVc2VySWQiLCJzaG93U2V0dGluZ3MiLCJzZXRTaG93U2V0dGluZ3MiLCJwcmV2aWV3QXJlYVJlZiIsImNhbnZhc1JlZiIsInZpZGVvUmVmIiwiYWN0aW9uQnV0dG9uR3JvdXBSZWYiLCJsb2FkVXNlckRhdGEiLCJpc1JlYWR5IiwicXVlcnkiLCJwYXJzZWREYXRhIiwiSlNPTiIsInBhcnNlIiwicmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX0tFWSIsIm9rIiwiRXJyb3IiLCJkYXRhIiwianNvbiIsImVyciIsImNvbnNvbGUiLCJtZXNzYWdlIiwiY2hlY2tCYWNrZW5kQ29ubmVjdGlvbiIsImNvbm5lY3RlZCIsInVwZGF0ZURpbWVuc2lvbnMiLCJjdXJyZW50Iiwib2Zmc2V0V2lkdGgiLCJvZmZzZXRIZWlnaHQiLCJzY3JlZW5QZXJjZW50YWdlIiwid2luZG93IiwiaW5uZXJXaWR0aCIsInNjcmVlbiIsInByZXYiLCJpbm5lckhlaWdodCIsIk1hdGgiLCJyb3VuZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibG9nIiwicHJlZmVyZW5jZXMiLCJjYW1lcmFTZXR0aW5ncyIsInNob3ciLCJ0b3BCYXIiLCJnZXRNYWluQ2FudmFzIiwiY2FudmFzTWFuYWdlciIsImdldENhbnZhcyIsImNyZWF0ZUNhbnZhcyIsIndoaXRlU2NyZWVuQ2FudmFzIiwiZG9jdW1lbnQiLCJjYW52YXNFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsIndhcm4iLCJpc0NsaWVudCIsImNvbnRhaW5lciIsImNhbnZhcyIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJpZCIsInRhcmdldENvbnRhaW5lciIsImJvZHkiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY2xpZW50V2lkdGgiLCJjbGllbnRIZWlnaHQiLCJjc3NUZXh0IiwiY3R4IiwiZ2V0Q29udGV4dCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwicGFyZW50Tm9kZSIsImFwcGVuZENoaWxkIiwiZW50ZXJGdWxsc2NyZWVuIiwiX29yaWdpbmFsU3RhdGUiLCJwYXJlbnQiLCJwYXJlbnRFbGVtZW50IiwiZXhpdEZ1bGxzY3JlZW4iLCJjbGVhciIsImNsZWFyUmVjdCIsImNhbnZhc0RpbWVuc2lvbnMiLCJpbml0aWFsaXplQ2FudmFzIiwic2V0VGltZW91dCIsImRpbWVuc2lvbnMiLCJyZWN0U2l6ZSIsImlzVmlzaWJsZSIsImFkanVzdENhbnZhc0RpbWVuc2lvbnMiLCJ0b3BCYXJIZWlnaHQiLCJjb250YWluZXJXaWR0aCIsImNvbnRhaW5lckhlaWdodCIsInRvcEJhclZpc2libGUiLCJjYWxjdWxhdGVkSGVpZ2h0IiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwicmVwbGFjZSIsInRleHRDb250ZW50IiwiaGVhZCIsInJlbW92ZUNoaWxkIiwidG9nZ2xlVG9wQmFyIiwidG9nZ2xlQ2FtZXJhIiwic2hvdWxkRW5hYmxlIiwiaGFuZGxlQWN0aW9uQnV0dG9uQ2xpY2siLCJhY3Rpb25UeXBlIiwicGFyYW1zIiwibmV3VG9wQmFyU3RhdGUiLCJ2YWx1ZSIsInNhZmVQYXJhbXMiLCJyYW5kb21UaW1lcyIsImRlbGF5U2Vjb25kcyIsImhhbmRsZVNldFJhbmRvbSIsImFjdGlvbkJ1dHRvbkZ1bmN0aW9ucyIsInRpbWVJbnB1dCIsImRlbGF5SW5wdXQiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGltZXMiLCJkZWxheSIsInBhcnNlZFRpbWUiLCJwYXJzZUludCIsImlzTmFOIiwicGFyc2VkRGVsYXkiLCJQcm9taXNlIiwiYWxsIiwidGhlbiIsImNvdW50U2F2ZU1vZHVsZSIsInNhdmVmaWxlTW9kdWxlIiwic3VjY2Vzc0NvdW50IiwiY3VycmVudENhcHR1cmUiLCJ4IiwieSIsInJlZHJhd0ludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJyZXNvbHZlIiwic3RhdHVzIiwicHJvY2Vzc1N0YXR1cyIsImNsZWFySW50ZXJ2YWwiLCJjYXB0dXJlUmVzdWx0IiwicG9pbnQiLCJjYXB0dXJlQ291bnQiLCJzZXRDYXB0dXJlQ291bnQiLCJzY3JlZW5JbWFnZSIsInN1Y2Nlc3MiLCJjYXRjaCIsImhhbmRsZVJhbmRvbURvdCIsImRvdCIsIm5ld0hlYWRQb3NlU3RhdGUiLCJ2aWRlb1Byb2Nlc3NvciIsInVwZGF0ZU9wdGlvbnMiLCJvcHRpb25zIiwibmV3Qm91bmRpbmdCb3hTdGF0ZSIsIm5ld01hc2tTdGF0ZSIsIm5ld1BhcmFtZXRlcnNTdGF0ZSIsImhhbmRsZVNldENhbGlicmF0ZSIsImNhbGlicmF0ZVBvaW50c01vZHVsZSIsInBvaW50cyIsImxlbmd0aCIsInN0YXR1c0luZGljYXRvciIsInRyaWdnZXJDYW1lcmFBY2Nlc3MiLCJpIiwiaGFuZGxlUGVybWlzc2lvbkFjY2VwdGVkIiwiaGFuZGxlUGVybWlzc2lvbkRlbmllZCIsImhhbmRsZUNhbWVyYUNsb3NlIiwiaGFuZGxlQ2FtZXJhUmVhZHkiLCJ1bmRlZmluZWQiLCJ0b2dnbGVNZXRyaWNzIiwiZm9yY2VFbmFibGUiLCJ3YWl0Rm9yVmlkZW9Qcm9jZXNzb3IiLCJjaGVja1Byb2Nlc3NvciIsInN0YXJ0VmlkZW9Qcm9jZXNzaW5nIiwicHJvY2Vzc29yQXZhaWxhYmxlIiwic2hvd1Byb2Nlc3NlZEltYWdlIiwiZ2V0U2l6ZUNsYXNzIiwiaGFuZGxlU2V0dGluZ3NWaXNpYmlsaXR5IiwiaGFuZGxlU2V0dGluZ3NNZXNzYWdlIiwiZXZlbnQiLCJ0eXBlIiwiaGFuZGxlVXNlcklkQ2hhbmdlIiwiZGV0YWlsIiwiQ3VzdG9tRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwibG9hZFNldHRpbmdzIiwibG9hZGVkU2V0dGluZ3MiLCJ3YWl0Rm9yUmVmIiwicmV0cmllcyIsInVwZGF0ZVNldHRpbmdzIiwiZmV0Y2hVcGRhdGVzIiwic2V0dGluZ3MiLCJpbnRlcnZhbCIsImhhbmRsZVNldHRpbmdzVXBkYXRlIiwiaGFuZGxlSW1hZ2VVcGRhdGUiLCJpbWFnZSIsInVzZXJTZXR0aW5ncyIsInRpdGxlIiwibWV0YSIsIm5hbWUiLCJjb250ZW50IiwicGFkZGluZyIsImJveFNoYWRvdyIsImFuaW1hdGlvbiIsInN0cm9uZyIsIm9uQnV0dG9uQ2xpY2siLCJvbkNhbWVyYUFjY2VzcyIsIm9uT3V0cHV0Q2hhbmdlIiwidGV4dCIsIm9uVG9nZ2xlVG9wQmFyIiwib25Ub2dnbGVNZXRyaWNzIiwicmlnaHQiLCJidXR0b24iLCJvbkNsaWNrIiwiYmFja2dyb3VuZCIsImN1cnNvciIsInJlZiIsIm1hcmdpblRvcCIsIm92ZXJmbG93IiwibWFyZ2luIiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJvYmplY3RGaXQiLCJpc1Nob3dpbmciLCJvbkNsb3NlIiwib25DYW1lcmFSZWFkeSIsImgzIiwibGluZUhlaWdodCIsImdhcCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./pages/collected-dataset-customized/index.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["pages/_app","main"], () => (__webpack_exec__("(pages-dir-browser)/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fapp%2Fpages%2Fcollected-dataset-customized%2Findex.js&page=%2Fcollected-dataset-customized!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);