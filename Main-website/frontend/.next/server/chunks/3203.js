"use strict";exports.id=3203,exports.ids=[3203],exports.modules={3203:(a,b,c)=>{c.d(b,{Wo:()=>h,dE:()=>g});let d=async(a,b=800,c=600,d=.85)=>new Promise((e,f)=>{try{let g=new Image;g.onload=()=>{let a=g.width,f=g.height;a>b&&(f=Math.round(b/a*f),a=b),f>c&&(a=Math.round(c/f*a),f=c);let h=document.createElement("canvas");h.width=a,h.height=f,h.getContext("2d").drawImage(g,0,0,a,f);let i=h.toDataURL("image/jpeg",d);e(i)},g.onerror=a=>f(a),g.src=a}catch(a){f(a)}}),e=async(a,b,c,e="eye_tracking_captures",f=null)=>{try{let g=await fetch("/api/save-capture",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({imageData:a,filename:b,type:c,folder:e,captureGroup:f})});if(!g.ok){if(console.error(`Server returned ${g.status} for ${c}`),413===g.status&&"parameters"!==c){for(let{width:g,height:h,quality:i}of(console.warn("Image too large for server (413 error), will resize and retry"),[{width:1920,height:1080,quality:.9},{width:1280,height:720,quality:.85},{width:800,height:600,quality:.8},{width:640,height:480,quality:.75}])){let j=await d(a,g,h,i);try{let a=await fetch("/api/save-capture",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({imageData:j,filename:b,type:c,folder:e,captureGroup:f})});if(a.ok)return console.log(`Successfully saved resized ${c} at ${g}x${h}, quality ${i}`),await a.json()}catch(a){console.error(`Error during retry for ${c}:`,a)}}return{success:!1,error:"Failed to save image even after resizing"}}return{success:!1,error:`Server returned ${g.status}`}}return await g.json()}catch(a){return console.error(`Error saving ${c}:`,a),{success:!1,error:a.message}}},f=async(a,b,c="eye_tracking_captures",d=null)=>{try{let f=new Blob([a],{type:"text/csv"}),g=new FileReader,h=await new Promise(a=>{g.onloadend=()=>a(g.result),g.readAsDataURL(f)});return await e(h,b,"parameters",c,d)}catch(a){return console.error("Error saving CSV:",a),null}},g=async()=>{try{let a=(await navigator.mediaDevices.getUserMedia({video:!0})).getVideoTracks()[0],b=a.getCapabilities?.();console.log("Camera capabilities:",b);let c=a.getSettings();if(console.log("Current camera settings:",c),a.stop(),b&&b.width&&b.height){let a=b.width.max,c=b.height.max;return{video:{width:{exact:a},height:{exact:c},frameRate:{ideal:30}}}}}catch(a){console.log("Could not get camera capabilities:",a)}for(let a of[{width:{exact:4096},height:{exact:2160}},{width:{exact:3840},height:{exact:2160}},{width:{exact:2560},height:{exact:1440}},{width:{exact:1920},height:{exact:1080}},{width:{exact:1280},height:{exact:720}},{width:{exact:640},height:{exact:480}},{}])try{let b={video:{...a,facingMode:"user",frameRate:{ideal:30}}},c=await navigator.mediaDevices.getUserMedia(b),d=c.getVideoTracks()[0].getSettings();return console.log("Supported resolution:",d.width,"x",d.height),c.getTracks().forEach(a=>a.stop()),b}catch(b){console.log(`Resolution not supported: ${JSON.stringify(a)}`)}return{video:{width:{exact:1280},height:{exact:720},frameRate:{ideal:30}}}},h=async({point:a,captureCount:b=1,canvasRef:c,setCaptureCount:h,showCapturePreview:i})=>{try{let b="eye_tracking_captures",j=`capture-${Date.now()}`;console.log(`Generated capture group ID: ${j}`),console.log("Starting capture with group ID:",j);let k=c.current,l=null,m=null,n=null,o=0,p=0;k&&(l=k.toDataURL("image/png"));let q=null,r=window.videoElement||document.querySelector("video");if(r)try{let a=null;if(r.srcObject){let b=r.srcObject.getVideoTracks()[0];b&&(a=b.getSettings(),console.log("Video track settings:",a))}if(a&&a.width&&a.height?(o=a.width,p=a.height,console.log(`Using track settings dimensions: ${o}x${p}`)):(o=r.videoWidth||0,p=r.videoHeight||0,console.log(`Using video element dimensions: ${o}x${p}`)),o===p&&o>100&&(console.warn("Suspicious square aspect ratio detected, double-checking dimensions"),r.srcObject)){let a=r.srcObject.getVideoTracks()[0];if(a){let b=a.getConstraints();console.log("Video constraints:",b),b.width&&b.height&&("number"==typeof b.width.exact?o=b.width.exact:"number"==typeof b.width.ideal&&(o=b.width.ideal),"number"==typeof b.height.exact?p=b.height.exact:"number"==typeof b.height.ideal&&(p=b.height.ideal),console.log(`Updated dimensions from constraints: ${o}x${p}`))}}(o<=0||p<=0)&&(console.warn("Invalid webcam dimensions, using defaults"),o=640,p=480);let b=document.createElement("canvas");b.width=o,b.height=p,b.getContext("2d").drawImage(r,0,0,o,p),m=b.toDataURL("image/jpeg",.95),q=await d(m,640,480,.85),console.log(`Webcam capture complete at resolution: ${o}x${p}`)}catch(a){console.error("Error capturing from existing video element:",a),o=r.videoWidth||640,p=r.videoHeight||480}else try{let a=await g();console.log("Using camera constraints:",a);let b=await navigator.mediaDevices.getUserMedia(a),c=b.getVideoTracks()[0],e=c.getSettings();console.log("Actual camera settings:",e);let f=document.createElement("video");if(f.srcObject=b,f.muted=!0,f.playsInline=!0,f.autoplay=!0,document.body.appendChild(f),await new Promise(a=>{f.onloadedmetadata=()=>{f.play(),a()},setTimeout(a,1e3)}),await new Promise(a=>setTimeout(a,500)),e&&e.width&&e.height?(o=e.width,p=e.height,console.log(`Using track settings for resolution: ${o}x${p}`)):(o=f.videoWidth||0,p=f.videoHeight||0,console.log(`Using video element for resolution: ${o}x${p}`)),(o<=0||p<=0)&&(console.warn("Invalid webcam dimensions, trying to get from constraints"),a.video&&"object"==typeof a.video&&(a.video.width&&a.video.width.exact&&(o=a.video.width.exact),a.video.height&&a.video.height.exact&&(p=a.video.height.exact)),(o<=0||p<=0)&&(console.warn("Still invalid dimensions, using defaults"),o=640,p=480)),o===p&&o>100){console.warn("Square aspect ratio detected, may be incorrect");let a=c.getCapabilities?.();if(a&&a.width&&a.height&&a.width.max&&a.height.max){let b=a.width.max/a.height.max;.1>Math.abs(b-1.33)?(p=Math.round(o/1.33),console.log(`Corrected to 4:3 aspect ratio: ${o}x${p}`)):.1>Math.abs(b-1.78)&&(p=Math.round(o/1.78),console.log(`Corrected to 16:9 aspect ratio: ${o}x${p}`))}}let h=document.createElement("canvas");h.width=o,h.height=p,h.getContext("2d").drawImage(f,0,0,o,p),m=h.toDataURL("image/jpeg",.95),q=await d(m,640,480,.85),console.log(`High-resolution webcam capture complete: ${o}x${p}`),b.getTracks().forEach(a=>a.stop()),f.remove()}catch(a){console.warn("High-resolution webcam capture failed:",a);try{let a=await navigator.mediaDevices.getUserMedia({video:!0}),b=a.getVideoTracks()[0].getSettings(),c=document.createElement("video");c.srcObject=a,c.muted=!0,c.playsInline=!0,document.body.appendChild(c),await c.play(),await new Promise(a=>setTimeout(a,300)),b&&b.width&&b.height?(o=b.width,p=b.height):(o=c.videoWidth||0,p=c.videoHeight||0),(o<=0||p<=0)&&(o=640,p=480);let e=document.createElement("canvas");e.width=o,e.height=p,e.getContext("2d").drawImage(c,0,0,o,p),m=e.toDataURL("image/jpeg",.9),q=await d(m,640,480,.8),console.log(`Basic webcam resolution captured: ${o}x${p}`),a.getTracks().forEach(a=>a.stop()),c.remove()}catch(a){console.error("All webcam capture methods failed:",a),o=640,p=480}}let s=`name,value
dot_x,${a.x}
dot_y,${a.y}
canvas_width,${k?.width||0}
canvas_height,${k?.height||0}
window_width,${window.innerWidth}
window_height,${window.innerHeight}
webcam_resolution_width,${o}
webcam_resolution_height,${p}
timestamp,${new Date().toISOString()}
group_id,${j}`,t=await f(s,"parameter_001.csv",b,j);t&&t.success&&(n=t.number,console.log(`Server assigned capture number: ${n} for group: ${j}`));l&&await e(l,"screen_001.jpg","screen",b,j);return m&&await e(m,"webcam_001.jpg","webcam",b,j),i&&"function"==typeof i&&i(l,q||m,a),h&&"function"==typeof h&&h(a=>a+1),{screenImage:l,webcamImage:m,success:!0,point:a,captureNumber:n,groupId:j,webcamWidth:o,webcamHeight:p}}catch(a){return console.error("captureImagesAtPoint failed:",a),{success:!1,error:a.message,screenImage:null,webcamImage:null,webcamWidth:0,webcamHeight:0}}}}};