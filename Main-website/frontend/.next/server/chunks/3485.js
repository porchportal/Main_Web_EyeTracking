"use strict";exports.id=3485,exports.ids=[3485],exports.modules={3485:(a,b,c)=>{c.d(b,{default:()=>h}),c(2015);var d=c(6352),e=c(3453),f=c(3203);class g{constructor(a){this.handleSetCalibrate=async()=>{"function"==typeof this.toggleTopBar&&this.toggleTopBar(!1),"function"==typeof this.setIsCapturing&&this.setIsCapturing(!0),"function"==typeof this.setProcessStatus&&this.setProcessStatus("Starting calibration sequence..."),this.onStatusUpdate&&this.onStatusUpdate({processStatus:"Starting calibration sequence...",isCapturing:!0}),setTimeout(async()=>{try{let a=await this.waitForCanvas();if(!a)throw Error("Canvas not available");this.originalCanvasDimensions={width:a.width,height:a.height},this.enterFullscreen(),this.ensureCanvasFullscreen(a)||(console.warn("Canvas not properly positioned for fullscreen, attempting to fix..."),setTimeout(()=>{this.ensureCanvasFullscreen(a)},100)),this.testCoordinateTransformation(a);let b=(0,d.nL)(this.originalCanvasDimensions.width,this.originalCanvasDimensions.height);if(!b||0===b.length)throw Error("Failed to generate calibration points");let c=document.createElement("div");c.className="calibrate-status-indicator",c.style.cssText=`
          position: fixed;
          top: 20px;
          right: 20px;
          background-color: rgba(0, 102, 204, 0.9);
          color: white;
          font-size: 16px;
          font-weight: bold;
          padding: 10px 15px;
          border-radius: 8px;
          z-index: 10000;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        `,c.textContent="Calibration: Initializing...",document.body.appendChild(c);let g=0;for(let d=0;d<b.length;d++){let h=b[d],i=this.transformCoordinates(a,h);c.textContent=`Calibration: Point ${d+1}/${b.length}`,this.setProcessStatus(`Processing calibration point ${d+1}/${b.length}`),this.clearCanvas(),this.drawDot(h.x,h.y,12);let j=setInterval(()=>{this.drawDot(h.x,h.y,12)},200);document.querySelectorAll(".dot-countdown, .calibrate-countdown").forEach(a=>{a.parentNode&&a.parentNode.removeChild(a)});let k=document.createElement("div");k.className="dot-countdown",k.style.cssText=`
            position: fixed;
            left: ${i.x}px;
            top: ${i.y}px;
            transform: translate(-50%, -50%);
            color: red;
            font-size: 24px;
            font-weight: bold;
            text-shadow: 0 0 10px white, 0 0 20px white;
            z-index: 10000;
            background-color: rgba(255, 255, 255, 0.9);
            border: 2px solid red;
            border-radius: 50%;
            width: 48px;
            height: 48px;
            display: flex;
            justify-content: center;
            align-items: center;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.4);
          `,document.body.appendChild(k),console.log(`Point ${d+1} positioning:`,{originalPoint:h,transformedPoint:i,countdownPosition:{left:i.x,top:i.y},canvasInfo:{width:a.width,height:a.height,rect:a.getBoundingClientRect()}});try{for(let a=3;a>0;a--)k.textContent=a,this.setProcessStatus(`Point ${d+1}/${b.length}: Countdown ${a}`),this.drawDot(h.x,h.y,12),await new Promise(a=>setTimeout(a,800)),this.drawDot(h.x,h.y,12);k.textContent="âœ“",this.drawDot(h.x,h.y,12),k.parentNode&&k.parentNode.removeChild(k),this.drawDot(h.x,h.y,12),console.log(`Capturing calibration point ${d+1}/${b.length} at (${h.x}, ${h.y})`);let c=await (0,f.Wo)({point:h,captureCount:this.captureCounter,canvasRef:{current:a},setCaptureCount:this.setCaptureCounter,showCapturePreview:e.Wj});c&&(c.screenImage||c.success)&&g++,await new Promise(a=>setTimeout(a,500)),this.clearCanvas(),await new Promise(a=>setTimeout(a,1200))}catch(a){console.error(`Error processing calibration point ${d+1}:`,a)}finally{k.parentNode&&k.parentNode.removeChild(k),clearInterval(j)}}c&&(c.textContent=`Calibration complete: ${g}/${b.length} points`),this.setProcessStatus(`Calibration completed: ${g}/${b.length} points captured`),setTimeout(()=>{c.parentNode&&c.parentNode.removeChild(c)},3e3)}catch(a){console.error("Calibration error:",a),this.setProcessStatus(`Calibration error: ${a.message}`)}finally{this.exitFullscreen(),this.restoreHiddenElements(),"function"==typeof this.setIsCapturing&&this.setIsCapturing(!1),setTimeout(()=>{"function"==typeof this.toggleTopBar&&this.toggleTopBar(!0)},1e3)}},200)},this.canvasRef=a.canvasRef,this.toggleTopBar=a.toggleTopBar,this.setIsCapturing=a.setIsCapturing,this.setProcessStatus=a.setProcessStatus,this.setCurrentDot=a.setCurrentDot,this.triggerCameraAccess=a.triggerCameraAccess,this.onStatusUpdate=a.onStatusUpdate,this.saveImageToServer=a.saveImageToServer,this.setCaptureCounter=a.setCaptureCounter,this.captureCounter=a.captureCounter,this.canvasManager=null,this.canvasUtils=null,this.originalCanvasDimensions=null}getCanvas(){return this.canvasUtils&&"function"==typeof this.canvasUtils.getCanvas?this.canvasUtils.getCanvas():this.canvasManager&&"function"==typeof this.canvasManager.getCanvas?this.canvasManager.getCanvas()||this.canvasManager.createCanvas():this.canvasRef?.current||document.querySelector("#tracking-canvas")}transformCoordinates(a,b){if(!a||!b)return b;let c=this.canvasManager?.isInFullscreen()||this.canvasUtils?.isFullscreen?.()||"fixed"===a.style.position&&"100vw"===a.style.width;if(console.log("Transform coordinates check:",{canvasPosition:a.style.position,canvasWidth:a.style.width,canvasHeight:a.style.height,isFullscreen:c,originalPoint:b,canvasRect:a.getBoundingClientRect()}),c){let c=a.getBoundingClientRect(),d=0===c.left&&0===c.top&&c.width===window.innerWidth&&c.height===window.innerHeight;console.log("Canvas positioning check:",{canvasRect:c,windowSize:{width:window.innerWidth,height:window.innerHeight},isProperlyPositioned:d});let e=c.width/a.width,f=c.height/a.height,g={x:b.x*e+c.left,y:b.y*f+c.top,label:b.label};return console.log("Coordinate transformation:",{original:b,transformed:g,canvasRect:c,scale:{x:e,y:f},canvasDimensions:{width:a.width,height:a.height}}),g}return b}enterFullscreen(){if(this.canvasUtils&&"function"==typeof this.canvasUtils.enterFullscreen)return this.canvasUtils.enterFullscreen();if(this.canvasManager&&"function"==typeof this.canvasManager.enterFullscreen)return this.canvasManager.enterFullscreen(),this.canvasManager.getCanvas();let a=this.getCanvas();if(a){this.originalCanvasDimensions={width:a.width,height:a.height},a.parentNode&&a.parentNode.removeChild(a),document.body.appendChild(a),a.style.cssText=`
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        width: 100vw !important;
        height: 100vh !important;
        z-index: 99999 !important;
        background-color: yellow !important;
        border: none !important;
        display: block !important;
        opacity: 1 !important;
        pointer-events: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        box-sizing: border-box !important;
        transform: none !important;
      `,a.width=window.innerWidth,a.height=window.innerHeight;let b=a.getContext("2d");b.fillStyle="yellow",b.fillRect(0,0,a.width,a.height),a.offsetHeight,console.log("Canvas fullscreen setup:",{width:a.width,height:a.height,style:a.style.cssText,rect:a.getBoundingClientRect()})}return a}exitFullscreen(){if(this.canvasUtils&&"function"==typeof this.canvasUtils.exitFullscreen)return this.canvasUtils.exitFullscreen();if(this.canvasManager&&"function"==typeof this.canvasManager.exitFullscreen)return this.canvasManager.exitFullscreen(),this.canvasManager.getCanvas();let a=this.getCanvas();return a&&((document.querySelector(".canvas-container")||document.querySelector(".main-content")||document.body).appendChild(a),a.style.position="relative",a.style.top="",a.style.left="",a.style.width="100%",a.style.height="100%",a.style.zIndex="",a.style.backgroundColor="yellow",this.originalCanvasDimensions&&(a.width=this.originalCanvasDimensions.width,a.height=this.originalCanvasDimensions.height,this.originalCanvasDimensions=null)),a}restoreHiddenElements(){document.querySelectorAll('[data-hidden-by-canvas="true"]').forEach(a=>{a.style.display="",a.removeAttribute("data-hidden-by-canvas")})}clearCanvas(){if(this.canvasUtils&&"function"==typeof this.canvasUtils.clear)return void this.canvasUtils.clear();if(this.canvasManager&&"function"==typeof this.canvasManager.clear)return void this.canvasManager.clear();let a=this.getCanvas();if(a){let b=a.getContext("2d");b.clearRect(0,0,a.width,a.height),b.fillStyle="yellow",b.fillRect(0,0,a.width,a.height)}}drawDot(a,b,c=12){if(this.canvasUtils&&"function"==typeof this.canvasUtils.drawDot)return this.canvasUtils.drawDot(a,b,c);let d=this.getCanvas();if(d){let f=d.getContext("2d");return(0,e.Pt)(f,a,b,c,!1),!0}return!1}async waitForCanvas(a=20,b=100){for(let c=0;c<a;c++){let a=this.getCanvas();if(a&&a.width>0&&a.height>0)return a;await new Promise(a=>setTimeout(a,b))}throw Error("Canvas not ready after multiple attempts")}testCoordinateTransformation(a){console.log("Testing coordinate transformation...");let b={x:100,y:100,label:"Test"},c=this.transformCoordinates(a,b);return console.log("Test transformation result:",{original:b,transformed:c,canvasInfo:{width:a.width,height:a.height,style:{position:a.style.position,width:a.style.width,height:a.style.height},rect:a.getBoundingClientRect()}}),c}ensureCanvasFullscreen(a){if(!a)return!1;this.removeConflictingElements(),a.parentNode!==document.body&&(a.parentNode&&a.parentNode.removeChild(a),document.body.appendChild(a)),a.style.cssText=`
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
      width: 100vw !important;
      height: 100vh !important;
      z-index: 99999 !important;
      background-color: white !important;
      border: none !important;
      display: block !important;
      opacity: 1 !important;
      pointer-events: auto !important;
      margin: 0 !important;
      padding: 0 !important;
      box-sizing: border-box !important;
      transform: none !important;
    `,a.width=window.innerWidth,a.height=window.innerHeight;let b=a.getContext("2d");b.fillStyle="white",b.fillRect(0,0,a.width,a.height),a.offsetHeight;let c=a.getBoundingClientRect(),d=0===c.left&&0===c.top&&c.width===window.innerWidth&&c.height===window.innerHeight;return console.log("Canvas fullscreen verification:",{rect:c,windowSize:{width:window.innerWidth,height:window.innerHeight},isProperlyPositioned:d,canvasDimensions:{width:a.width,height:a.height}}),d}removeConflictingElements(){[".topbar",".canvas-container",".main-content",".metrics-panel",".display-metrics","nav","header",".button-groups",".control-buttons"].forEach(a=>{document.querySelectorAll(a).forEach(a=>{"none"!==a.style.display&&(a.style.display="none",a.setAttribute("data-hidden-by-canvas","true"))})}),document.querySelectorAll(".dot-countdown, .calibrate-countdown").forEach(a=>{a.parentNode&&a.parentNode.removeChild(a)})}}let h=g}};