/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/collected-dataset-customized";
exports.ids = ["pages/collected-dataset-customized"];
exports.modules = {

/***/ "(pages-dir-node)/./components/UserProfileSidebar.js":
/*!******************************************!*\
  !*** ./components/UserProfileSidebar.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UserProfileSidebar)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/UserProfile.module.css */ \"(pages-dir-node)/./styles/UserProfile.module.css\");\n/* harmony import */ var _styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _consent_ConsentContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./consent/ConsentContext */ \"(pages-dir-node)/./components/consent/ConsentContext.js\");\n/* harmony import */ var _utils_stateManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/stateManager */ \"(pages-dir-node)/./utils/stateManager.js\");\n/* harmony import */ var _utils_consentManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/consentManager */ \"(pages-dir-node)/./utils/consentManager.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_4__, _utils_consentManager__WEBPACK_IMPORTED_MODULE_6__]);\n([_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_4__, _utils_consentManager__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n// import { getUserProfile, updateUserProfile } from '../utils/consentManager';\n\n\n\nfunction UserProfileSidebar() {\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [profile, setProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        username: '',\n        sex: '',\n        age: '',\n        image_background: '',\n        preferences: {}\n    });\n    // const [statusMessage, setStatusMessageLocal] = useState('');\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [localUserId, setLocalUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Get consent and backend status\n    const { userId, consentStatus } = (0,_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_4__.useConsent)();\n    const { isConnected, authValid } = (0,_utils_stateManager__WEBPACK_IMPORTED_MODULE_5__.useBackendConnection)();\n    // Update local user ID when consent status changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserProfileSidebar.useEffect\": ()=>{\n            if (consentStatus) {\n                const newUserId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_6__.getOrCreateUserId)();\n                setLocalUserId(newUserId);\n            }\n        }\n    }[\"UserProfileSidebar.useEffect\"], [\n        consentStatus\n    ]);\n    // Load profile data when component mounts or consent changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserProfileSidebar.useEffect\": ()=>{\n            const loadProfile = {\n                \"UserProfileSidebar.useEffect.loadProfile\": async ()=>{\n                    const currentUserId = localUserId || userId;\n                    if (!currentUserId) {\n                        setIsLoading(false);\n                        return;\n                    }\n                    try {\n                        setIsLoading(true);\n                        const response = await fetch(`/api/user-preferences/${currentUserId}`, {\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json',\n                                'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                            }\n                        });\n                        if (!response.ok) {\n                            throw new Error('Failed to load profile');\n                        }\n                        const data = await response.json();\n                        console.log('Loaded profile data:', data);\n                        if (data.data) {\n                            setProfile({\n                                \"UserProfileSidebar.useEffect.loadProfile\": (prev)=>({\n                                        ...prev,\n                                        username: data.data.username || '',\n                                        sex: data.data.sex || '',\n                                        age: data.data.age || '',\n                                        image_background: data.data.image_background || ''\n                                    })\n                            }[\"UserProfileSidebar.useEffect.loadProfile\"]);\n                        }\n                    } catch (error) {\n                        console.error('Error loading profile:', error);\n                    } finally{\n                        setIsLoading(false);\n                    }\n                }\n            }[\"UserProfileSidebar.useEffect.loadProfile\"];\n            loadProfile();\n        }\n    }[\"UserProfileSidebar.useEffect\"], [\n        userId,\n        localUserId,\n        consentStatus\n    ]);\n    // Reset sidebar state when route changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserProfileSidebar.useEffect\": ()=>{\n            setIsOpen(false);\n        }\n    }[\"UserProfileSidebar.useEffect\"], [\n        router.pathname\n    ]);\n    const handleInputChange = (e)=>{\n        const { name, value } = e.target;\n        setProfile((prev)=>({\n                ...prev,\n                [name]: value\n            }));\n    };\n    const handleSave = async ()=>{\n        try {\n            if (!localUserId) {\n                console.error('No user ID available');\n                return;\n            }\n            // Check if username is \"admin\"\n            if (profile.username === \"admin\") {\n                // Redirect to admin login page\n                router.push('/admin-login');\n                return;\n            }\n            // Prepare profile data\n            const profileData = {\n                username: profile.username || null,\n                sex: profile.sex || null,\n                age: profile.age || null\n            };\n            // Save to backend\n            const response = await fetch(`/api/user-preferences/${localUserId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    // 'X-API-Key': process.env.NEXT_PUBLIC_API_KEY || 'A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV',\n                    'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                },\n                body: JSON.stringify(profileData)\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.detail || 'Failed to save profile');\n            }\n            const result = await response.json();\n            console.log('Profile saved successfully:', result);\n            // Update local state\n            setProfile((prev)=>({\n                    ...prev,\n                    ...profileData\n                }));\n            // Dispatch admin update event\n            if (false) {}\n            // Show success message\n            alert('Profile saved successfully!');\n        } catch (error) {\n            console.error('Error saving profile:', error);\n            alert(error.message || 'Failed to save profile. Please try again.');\n        }\n    };\n    // const updateStatusMessage = (message) => {\n    //   if (setStatusMessage) {\n    //     setStatusMessage(message);\n    //   }\n    //   setStatusMessageLocal(message);\n    // };\n    // Don't render anything if consent is not accepted\n    if (!consentStatus) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: 'fixed',\n            bottom: '20px',\n            right: '20px',\n            zIndex: 100\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().toggleButton),\n                onClick: ()=>setIsOpen(!isOpen),\n                style: {\n                    zIndex: 100,\n                    position: 'fixed',\n                    bottom: '20px',\n                    right: '20px',\n                    backgroundColor: '#0d6efd',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '50%',\n                    width: '40px',\n                    height: '40px',\n                    fontSize: '20px',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyItems: 'center',\n                    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)'\n                },\n                children: isOpen ? '×' : '☰'\n            }, void 0, false, {\n                fileName: \"/app/components/UserProfileSidebar.js\",\n                lineNumber: 176,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: `${(_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().sidebar)} ${isOpen ? (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().open) : ''}`,\n                style: {\n                    zIndex: 49,\n                    position: 'fixed',\n                    top: 0,\n                    right: isOpen ? '0' : '-400px',\n                    width: '400px',\n                    height: '100vh',\n                    background: 'white',\n                    boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.1)',\n                    transition: 'right 0.3s ease',\n                    overflowY: 'auto'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().profileHeader),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                children: \"User Profile\"\n                            }, void 0, false, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 217,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().closeButton),\n                                onClick: ()=>setIsOpen(false),\n                                children: \"\\xd7\"\n                            }, void 0, false, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 218,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/components/UserProfileSidebar.js\",\n                        lineNumber: 216,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusSection),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusItem),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusLabel),\n                                        children: \"User ID:\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 229,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusValue),\n                                        children: localUserId || userId || 'Not set'\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 230,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 228,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusItem),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusLabel),\n                                        children: \"Consent Status:\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 233,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: `${(_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusValue)} ${consentStatus ? (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusActive) : (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusInactive)}`,\n                                        children: consentStatus === null ? 'Not set' : consentStatus ? 'Accepted' : 'Declined'\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 234,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 232,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusItem),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusLabel),\n                                        children: \"Backend Status:\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 239,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: `${(_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusValue)} ${isConnected ? (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusActive) : (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusInactive)}`,\n                                        children: isConnected ? 'Connected' : 'Disconnected'\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 240,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 238,\n                                columnNumber: 11\n                            }, this),\n                            isConnected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusItem),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusLabel),\n                                        children: \"Authentication:\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 246,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: `${(_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusValue)} ${authValid ? (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusActive) : (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().statusInactive)}`,\n                                        children: authValid ? 'Valid' : 'Invalid'\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 247,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 245,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/components/UserProfileSidebar.js\",\n                        lineNumber: 227,\n                        columnNumber: 9\n                    }, this),\n                    isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().loadingContainer),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: \"Loading profile data...\"\n                        }, void 0, false, {\n                            fileName: \"/app/components/UserProfileSidebar.js\",\n                            lineNumber: 256,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/app/components/UserProfileSidebar.js\",\n                        lineNumber: 255,\n                        columnNumber: 11\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().profileForm),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().formGroup),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"username\",\n                                        children: \"Username\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 261,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"text\",\n                                        id: \"username\",\n                                        name: \"username\",\n                                        value: profile.username,\n                                        onChange: handleInputChange,\n                                        placeholder: \"Enter username\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 262,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 260,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().formGroup),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"sex\",\n                                        children: \"Sex\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 273,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                        id: \"sex\",\n                                        name: \"sex\",\n                                        value: profile.sex,\n                                        onChange: handleInputChange,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: \"\",\n                                                children: \"Select\"\n                                            }, void 0, false, {\n                                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                                lineNumber: 280,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: \"male\",\n                                                children: \"Male\"\n                                            }, void 0, false, {\n                                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                                lineNumber: 281,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: \"female\",\n                                                children: \"Female\"\n                                            }, void 0, false, {\n                                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                                lineNumber: 282,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: \"other\",\n                                                children: \"Other\"\n                                            }, void 0, false, {\n                                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                                lineNumber: 283,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 274,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 272,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().formGroup),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"age\",\n                                        children: \"Age\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 288,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"number\",\n                                        id: \"age\",\n                                        name: \"age\",\n                                        value: profile.age,\n                                        onChange: handleInputChange,\n                                        min: \"1\",\n                                        max: \"120\",\n                                        placeholder: \"Enter age\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 289,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 287,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().formGroup),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        htmlFor: \"image_background\",\n                                        children: \"Background Image URL\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 302,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"text\",\n                                        id: \"image_background\",\n                                        name: \"image_background\",\n                                        value: profile.image_background,\n                                        onChange: handleInputChange,\n                                        placeholder: \"Enter image URL\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/components/UserProfileSidebar.js\",\n                                        lineNumber: 303,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 301,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: (_styles_UserProfile_module_css__WEBPACK_IMPORTED_MODULE_3___default().saveButton),\n                                onClick: handleSave,\n                                disabled: isLoading,\n                                children: isLoading ? 'Saving...' : 'Save Profile'\n                            }, void 0, false, {\n                                fileName: \"/app/components/UserProfileSidebar.js\",\n                                lineNumber: 313,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/components/UserProfileSidebar.js\",\n                        lineNumber: 259,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/components/UserProfileSidebar.js\",\n                lineNumber: 201,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/components/UserProfileSidebar.js\",\n        lineNumber: 175,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/UserProfileSidebar.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/collected-dataset-customized/Action/CalibratePoints.jsx":
/*!****************************************************************************!*\
  !*** ./components/collected-dataset-customized/Action/CalibratePoints.jsx ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearCalibrationPoints: () => (/* binding */ clearCalibrationPoints),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   drawCalibrationGrid: () => (/* binding */ drawCalibrationGrid),\n/* harmony export */   drawCalibrationPoint: () => (/* binding */ drawCalibrationPoint),\n/* harmony export */   drawCalibrationPointLegacy: () => (/* binding */ drawCalibrationPointLegacy),\n/* harmony export */   generateCalibrationPoints: () => (/* binding */ generateCalibrationPoints)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// CalibratePoints.jsx\n// Utility for generating and managing calibration points on a canvas\n\n/**\n * Get canvas management utilities from global scope (from actionButton.js)\n * @returns {Object} Canvas utilities object\n */ const getCanvasUtils = ()=>{\n    if (false) {}\n    return {\n        canvasUtils: null,\n        canvasManager: null\n    };\n};\n/**\n * Get or create canvas using the canvas management system from actionButton.js\n * @returns {HTMLCanvasElement} Canvas element\n */ const getCanvas = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    // First try to use canvasUtils from actionButton.js\n    if (canvasUtils && typeof canvasUtils.getCanvas === 'function') {\n        return canvasUtils.getCanvas();\n    }\n    // Fallback to canvasManager\n    if (canvasManager && typeof canvasManager.getCanvas === 'function') {\n        return canvasManager.getCanvas() || canvasManager.createCanvas();\n    }\n    // Fallback to direct query\n    return document.querySelector('#tracking-canvas');\n};\n/**\n * Draw dot using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {boolean} Success status\n */ const drawDotWithCanvasManager = (x, y, radius = 12)=>{\n    const { canvasUtils } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.drawDot === 'function') {\n        return canvasUtils.drawDot(x, y, radius);\n    }\n    // Fallback: manually draw dot\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        drawCalibrationPointLegacy(ctx, x, y, radius);\n        return true;\n    }\n    return false;\n};\n/**\n * Clear canvas using the canvas management system\n */ const clearCanvasWithManager = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.clear === 'function') {\n        canvasUtils.clear();\n        return;\n    }\n    if (canvasManager && typeof canvasManager.clear === 'function') {\n        canvasManager.clear();\n        return;\n    }\n    // Fallback: manually clear canvas\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n};\n/**\n * Generate a grid of calibration points based on canvas dimensions\n * @param {number} width - Canvas width\n * @param {number} height - Canvas height\n * @returns {Array} Array of point objects with x,y coordinates\n */ const generateCalibrationPoints = (width, height)=>{\n    if (!width || !height || width <= 0 || height <= 0) {\n        console.error(\"generateCalibrationPoints: Invalid canvas dimensions\", {\n            width,\n            height\n        });\n        return [];\n    }\n    const conditionalRound = (dimension, percentage)=>Math.round(dimension * percentage);\n    // Outer frame (12% from edges)\n    const xLeftOuter = conditionalRound(width, 0.12);\n    const xRightOuter = width - xLeftOuter;\n    const yTopOuter = conditionalRound(height, 0.12);\n    const yBottomOuter = height - yTopOuter;\n    // Inner frame (26% from edges)\n    const xLeftInner = conditionalRound(width, 0.26);\n    const xRightInner = width - xLeftInner;\n    const yTopInner = conditionalRound(height, 0.26);\n    const yBottomInner = height - yTopInner;\n    const xCenter = Math.floor(width / 2);\n    const yCenter = Math.floor(height / 2);\n    return [\n        // Outer frame (8 points)\n        {\n            x: xLeftOuter,\n            y: yTopOuter,\n            label: \"Outer Top-Left\"\n        },\n        {\n            x: xCenter,\n            y: yTopOuter,\n            label: \"Outer Top-Center\"\n        },\n        {\n            x: xRightOuter,\n            y: yTopOuter,\n            label: \"Outer Top-Right\"\n        },\n        {\n            x: xLeftOuter,\n            y: yCenter,\n            label: \"Outer Middle-Left\"\n        },\n        {\n            x: xRightOuter,\n            y: yCenter,\n            label: \"Outer Middle-Right\"\n        },\n        {\n            x: xLeftOuter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Left\"\n        },\n        {\n            x: xCenter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Center\"\n        },\n        {\n            x: xRightOuter,\n            y: yBottomOuter,\n            label: \"Outer Bottom-Right\"\n        },\n        // Inner frame (8 points)\n        {\n            x: xLeftInner,\n            y: yTopInner,\n            label: \"Inner Top-Left\"\n        },\n        {\n            x: xCenter,\n            y: yTopInner,\n            label: \"Inner Top-Center\"\n        },\n        {\n            x: xRightInner,\n            y: yTopInner,\n            label: \"Inner Top-Right\"\n        },\n        {\n            x: xLeftInner,\n            y: yCenter,\n            label: \"Inner Middle-Left\"\n        },\n        {\n            x: xRightInner,\n            y: yCenter,\n            label: \"Inner Middle-Right\"\n        },\n        {\n            x: xLeftInner,\n            y: yBottomInner,\n            label: \"Inner Bottom-Left\"\n        },\n        {\n            x: xCenter,\n            y: yBottomInner,\n            label: \"Inner Bottom-Center\"\n        },\n        {\n            x: xRightInner,\n            y: yBottomInner,\n            label: \"Inner Bottom-Right\"\n        }\n    ];\n};\n/**\n * Draw a calibration point on a canvas using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {Object} options - Optional settings (color, radius)\n * @returns {Object} Point position object {x, y}\n */ const drawCalibrationPoint = (x, y, options = {})=>{\n    const radius = options.radius || 12; // Use standard radius\n    const success = drawDotWithCanvasManager(x, y, radius);\n    return {\n        x,\n        y,\n        success\n    };\n};\n/**\n * Legacy function for backward compatibility (draws directly on canvas context)\n * @param {CanvasRenderingContext2D} ctx - Canvas 2D context\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {Object} Point position object {x, y}\n */ const drawCalibrationPointLegacy = (ctx, x, y, radius = 12)=>{\n    if (!ctx) return {\n        x,\n        y\n    };\n    const canvas = ctx.canvas;\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    // Draw the dot with a bright red color\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = 'red';\n    ctx.fill();\n    // Add glow effect for better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 3, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    // Add a second larger glow for even better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 6, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    return {\n        x,\n        y\n    };\n};\n/**\n * Draw all calibration points on a canvas (for debugging/visualization)\n * @param {Array} points - Array of point objects\n * @param {number} activeIndex - Index of the currently active point\n */ const drawCalibrationGrid = (points, activeIndex = -1)=>{\n    if (!points || !points.length) return;\n    const canvas = getCanvas();\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    clearCanvasWithManager();\n    points.forEach((point, index)=>{\n        const isActive = index === activeIndex;\n        const radius = isActive ? 12 : 6; // Use standard radius for active, smaller for inactive\n        // Draw the point\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, radius, 0, Math.PI * 2);\n        ctx.fillStyle = isActive ? 'red' : 'rgba(0, 102, 204, 0.7)';\n        ctx.fill();\n        // Add glow effect for active points\n        if (isActive) {\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, radius + 3, 0, Math.PI * 2);\n            ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n            ctx.lineWidth = 3;\n            ctx.stroke();\n        }\n        // Draw point number\n        ctx.fillStyle = 'white';\n        ctx.font = '10px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(`${index + 1}`, point.x, point.y);\n        // Draw label for active point\n        if (isActive && point.label) {\n            ctx.font = '12px Arial';\n            ctx.fillStyle = 'black';\n            ctx.fillText(point.label, point.x, point.y - 25);\n        }\n    });\n    // Draw connecting lines (optional)\n    if (points.length > 1) {\n        ctx.beginPath();\n        ctx.moveTo(points[0].x, points[0].y);\n        for(let i = 1; i < points.length; i++){\n            ctx.lineTo(points[i].x, points[i].y);\n        }\n        ctx.strokeStyle = 'rgba(0, 102, 204, 0.3)';\n        ctx.lineWidth = 1;\n        ctx.stroke();\n    }\n};\n/**\n * Clear all calibration points from canvas\n */ const clearCalibrationPoints = ()=>{\n    clearCanvasWithManager();\n};\n// Default export for React compatibility\nconst CalibratePoints = ()=>null; // This is a utility file, so we don't need to render anything\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CalibratePoints);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/collected-dataset-customized/Action/countSave.jsx":
/*!**********************************************************************!*\
  !*** ./components/collected-dataset-customized/Action/countSave.jsx ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calibrationCapture: () => (/* binding */ calibrationCapture),\n/* harmony export */   captureAndPreviewProcess: () => (/* binding */ captureAndPreviewProcess),\n/* harmony export */   captureImages: () => (/* binding */ captureImages),\n/* harmony export */   createCountdownElement: () => (/* binding */ createCountdownElement),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   drawRedDot: () => (/* binding */ drawRedDot),\n/* harmony export */   getRandomPosition: () => (/* binding */ getRandomPosition),\n/* harmony export */   runCountdown: () => (/* binding */ runCountdown),\n/* harmony export */   showCapturePreview: () => (/* binding */ showCapturePreview)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Helper_savefile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Helper/savefile */ \"(pages-dir-node)/./components/collected-dataset-customized/Helper/savefile.js\");\n// Fixed countSave.jsx - Resolving redrawInterval reference error\n// Shared functionality for countdown and image capture processes\n\n\n/**\n * Get canvas management utilities from global scope (from actionButton.js)\n * @returns {Object} Canvas utilities object\n */ const getCanvasUtils = ()=>{\n    if (false) {}\n    return {\n        canvasUtils: null,\n        canvasManager: null\n    };\n};\n/**\n * Get or create canvas using the canvas management system from actionButton.js\n * @returns {HTMLCanvasElement} Canvas element\n */ const getCanvas = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    // First try to use canvasUtils from actionButton.js\n    if (canvasUtils && typeof canvasUtils.getCanvas === 'function') {\n        return canvasUtils.getCanvas();\n    }\n    // Fallback to canvasManager\n    if (canvasManager && typeof canvasManager.getCanvas === 'function') {\n        return canvasManager.getCanvas() || canvasManager.createCanvas();\n    }\n    // Fallback to direct query\n    return document.querySelector('#tracking-canvas');\n};\n/**\n * Draw dot using the canvas management system\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @returns {boolean} Success status\n */ const drawDotWithCanvasManager = (x, y, radius = 12)=>{\n    const { canvasUtils } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.drawDot === 'function') {\n        return canvasUtils.drawDot(x, y, radius);\n    }\n    // Fallback: manually draw dot\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        drawRedDot(ctx, x, y, radius, false);\n        return true;\n    }\n    return false;\n};\n/**\n * Clear canvas using the canvas management system\n */ const clearCanvasWithManager = ()=>{\n    const { canvasUtils, canvasManager } = getCanvasUtils();\n    if (canvasUtils && typeof canvasUtils.clear === 'function') {\n        canvasUtils.clear();\n        return;\n    }\n    if (canvasManager && typeof canvasManager.clear === 'function') {\n        canvasManager.clear();\n        return;\n    }\n    // Fallback: manually clear canvas\n    const canvas = getCanvas();\n    if (canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n};\n/**\n * Creates and displays a countdown element above a dot position\n * @param {Object} position - {x, y} position of the dot\n * @param {DOMRect} canvasRect - getBoundingClientRect() of the canvas\n * @returns {HTMLElement} - The created countdown element\n */ const createCountdownElement = (position, canvasRect)=>{\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[createCountdownElement] Invalid position:', position);\n        return null;\n    }\n    const existingCountdowns = document.querySelectorAll('.calibrate-countdown, .forced-countdown, .center-countdown-backup');\n    existingCountdowns.forEach((el)=>el.remove());\n    const absoluteX = canvasRect.left + position.x;\n    const absoluteY = canvasRect.top + position.y;\n    const countdownElement = document.createElement('div');\n    countdownElement.className = 'dot-countdown';\n    countdownElement.style.cssText = `\n    position: fixed;\n    left: ${absoluteX}px;\n    top: ${absoluteY - 60}px;\n    transform: translateX(-50%);\n    color: red;\n    font-size: 36px;\n    font-weight: bold;\n    text-shadow: 0 0 10px white, 0 0 20px white;\n    z-index: 9999;\n    background-color: rgba(255, 255, 255, 0.8);\n    border: 2px solid red;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  `;\n    document.body.appendChild(countdownElement);\n    return countdownElement;\n};\n/**\n * Display a preview of the captured images\n * @param {string} screenImage - Data URL of the screen image\n * @param {string} webcamImage - Data URL of the webcam image\n * @param {Object} point - {x, y} position of the dot\n */ const showCapturePreview = (screenImage, webcamImage, point)=>{\n    if (!screenImage && !webcamImage) return;\n    // Remove any existing previews\n    const existingPreviews = document.querySelectorAll('.capture-preview-container');\n    existingPreviews.forEach((preview)=>{\n        if (preview.parentNode) {\n            preview.parentNode.removeChild(preview);\n        }\n    });\n    // Create preview container\n    const previewContainer = document.createElement('div');\n    previewContainer.className = 'capture-preview-container';\n    previewContainer.style.cssText = `\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    gap: 20px;\n    background-color: rgba(0, 0, 0, 0.85);\n    padding: 20px;\n    border-radius: 12px;\n    z-index: 999999;\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.6);\n  `;\n    // Add screen image if available\n    if (screenImage) {\n        const screenPreview = document.createElement('div');\n        screenPreview.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    `;\n        const screenImg = document.createElement('img');\n        screenImg.src = screenImage;\n        screenImg.alt = 'Screen Capture';\n        screenImg.style.cssText = `\n      max-width: 320px;\n      max-height: 240px;\n      border: 3px solid white;\n      border-radius: 8px;\n      background-color: #333;\n    `;\n        const screenLabel = document.createElement('div');\n        screenLabel.textContent = 'Screen Capture';\n        screenLabel.style.cssText = `\n      color: white;\n      font-size: 14px;\n      margin-top: 10px;\n      font-weight: bold;\n    `;\n        screenPreview.appendChild(screenImg);\n        screenPreview.appendChild(screenLabel);\n        previewContainer.appendChild(screenPreview);\n    }\n    // Add webcam image if available\n    if (webcamImage) {\n        const webcamPreview = document.createElement('div');\n        webcamPreview.style.cssText = `\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    `;\n        const webcamImg = document.createElement('img');\n        webcamImg.src = webcamImage;\n        webcamImg.alt = 'Webcam Capture';\n        webcamImg.style.cssText = `\n      max-width: 320px;\n      max-height: 240px;\n      border: 3px solid white;\n      border-radius: 8px;\n      background-color: #333;\n    `;\n        const webcamLabel = document.createElement('div');\n        webcamLabel.textContent = 'Webcam Capture';\n        webcamLabel.style.cssText = `\n      color: white;\n      font-size: 14px;\n      margin-top: 10px;\n      font-weight: bold;\n    `;\n        webcamPreview.appendChild(webcamImg);\n        webcamPreview.appendChild(webcamLabel);\n        previewContainer.appendChild(webcamPreview);\n    }\n    // Add point info\n    if (point) {\n        const pointInfo = document.createElement('div');\n        pointInfo.textContent = point.label ? `${point.label}: x=${Math.round(point.x)}, y=${Math.round(point.y)}` : `Point: x=${Math.round(point.x)}, y=${Math.round(point.y)}`;\n        pointInfo.style.cssText = `\n      color: #ffcc00;\n      font-size: 14px;\n      position: absolute;\n      top: -40px;\n      left: 0;\n      width: 100%;\n      text-align: center;\n    `;\n        previewContainer.appendChild(pointInfo);\n    }\n    // Add timer\n    const timerElement = document.createElement('div');\n    timerElement.textContent = '2.0s';\n    timerElement.style.cssText = `\n    position: absolute;\n    bottom: -25px;\n    right: 20px;\n    color: white;\n    font-size: 12px;\n    background-color: rgba(0, 0, 0, 0.7);\n    padding: 3px 8px;\n    border-radius: 4px;\n  `;\n    previewContainer.appendChild(timerElement);\n    // Add to document\n    document.body.appendChild(previewContainer);\n    // Countdown\n    let timeLeft = 2.0;\n    const interval = setInterval(()=>{\n        timeLeft -= 0.1;\n        if (timeLeft <= 0) {\n            clearInterval(interval);\n            previewContainer.style.opacity = '0';\n            previewContainer.style.transition = 'opacity 0.3s ease';\n            setTimeout(()=>{\n                if (previewContainer.parentNode) {\n                    previewContainer.parentNode.removeChild(previewContainer);\n                }\n            }, 300);\n        } else {\n            timerElement.textContent = `${timeLeft.toFixed(1)}s`;\n        }\n    }, 100);\n    // Safety cleanup\n    setTimeout(()=>{\n        if (previewContainer.parentNode) {\n            previewContainer.parentNode.removeChild(previewContainer);\n        }\n    }, 5000);\n};\n/**\n * Runs a countdown process that displays 3-2-1 above a dot\n * @param {Object} position - {x, y} position of the dot\n * @param {HTMLCanvasElement} canvas - Canvas element with the dot\n * @param {Function} onStatusUpdate - Function to update status messages\n * @param {Function} onComplete - Callback to execute when countdown completes\n */ const runCountdown = async (position, canvas, onStatusUpdate, onComplete)=>{\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[runCountdown] Invalid position:', position);\n        onStatusUpdate?.({\n            processStatus: \"Invalid dot position\",\n            countdownValue: null,\n            isCapturing: false\n        });\n        return;\n    }\n    const canvasRect = canvas.getBoundingClientRect();\n    const countdownElement = createCountdownElement(position, canvasRect);\n    if (!countdownElement) {\n        console.warn('[runCountdown] Countdown element could not be created.');\n        return;\n    }\n    // Use canvas management system to draw dot\n    drawDotWithCanvasManager(position.x, position.y);\n    let count = 3;\n    countdownElement.textContent = count;\n    onStatusUpdate?.({\n        processStatus: \"Countdown\",\n        countdownValue: count,\n        isCapturing: true\n    });\n    // Create redrawInterval for keeping dot visible during countdown\n    let redrawInterval = setInterval(()=>{\n        drawDotWithCanvasManager(position.x, position.y);\n    }, 200);\n    return new Promise((resolve)=>{\n        const countdownInterval = setInterval(()=>{\n            count--;\n            if (count <= 0) {\n                clearInterval(countdownInterval);\n                countdownElement.textContent = \"✓\";\n                onStatusUpdate?.({\n                    countdownValue: \"Capturing...\",\n                    processStatus: \"Capturing image...\",\n                    isCapturing: true\n                });\n                setTimeout(()=>{\n                    if (countdownElement.parentNode) {\n                        countdownElement.parentNode.removeChild(countdownElement);\n                    }\n                    drawDotWithCanvasManager(position.x, position.y);\n                    // Clear the redrawInterval we defined above\n                    if (redrawInterval) {\n                        clearInterval(redrawInterval);\n                    }\n                    if (onComplete) {\n                        drawDotWithCanvasManager(position.x, position.y);\n                        onComplete();\n                    }\n                    resolve();\n                }, 300);\n            } else {\n                countdownElement.textContent = count;\n                onStatusUpdate?.({\n                    processStatus: \"Countdown\",\n                    countdownValue: count,\n                    isCapturing: true\n                });\n            }\n        }, 800);\n    });\n};\n/**\n * Draw a red dot on the canvas (legacy function for backward compatibility)\n * @param {CanvasRenderingContext2D} ctx - Canvas 2D context\n * @param {number} x - X coordinate\n * @param {number} y - Y coordinate\n * @param {number} radius - Dot radius\n * @param {boolean} clearCanvas - Whether to clear the canvas before drawing (default: true)\n * @returns {Object} - {x, y} position\n */ const drawRedDot = (ctx, x, y, radius = 12, clearCanvas = true)=>{\n    const canvas = ctx.canvas;\n    // Clear the canvas if requested (default behavior)\n    if (clearCanvas) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    // Draw the dot with a bright red color\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = 'red';\n    ctx.fill();\n    // Add glow effect for better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 3, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    // Add a second larger glow for even better visibility\n    ctx.beginPath();\n    ctx.arc(x, y, radius + 6, 0, Math.PI * 2);\n    ctx.strokeStyle = 'rgba(255, 0, 0, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    return {\n        x,\n        y\n    };\n};\n/**\n * Get highest resolution camera constraints\n * @returns {Promise<Object>} - Camera constraints\n */ const getHighestResolutionConstraints = async ()=>{\n    try {\n        // Get all video input devices\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter((device)=>device.kind === 'videoinput');\n        if (videoDevices.length === 0) {\n            console.warn('No video devices found, using default constraints');\n            return {\n                video: true\n            };\n        }\n        // Try to get capabilities for the first video device\n        const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        const videoTrack = stream.getVideoTracks()[0];\n        if (!videoTrack.getCapabilities) {\n            console.warn('getCapabilities not supported, using default constraints');\n            stream.getTracks().forEach((track)=>track.stop());\n            return {\n                video: true\n            };\n        }\n        const capabilities = videoTrack.getCapabilities();\n        stream.getTracks().forEach((track)=>track.stop());\n        if (!capabilities.width || !capabilities.height) {\n            console.warn('No width/height capabilities, using default constraints');\n            return {\n                video: true\n            };\n        }\n        // Get the highest resolution available\n        const maxWidth = Math.max(...capabilities.width.values);\n        const maxHeight = Math.max(...capabilities.height.values);\n        console.log(`Using highest resolution: ${maxWidth}x${maxHeight}`);\n        return {\n            video: {\n                width: {\n                    ideal: maxWidth\n                },\n                height: {\n                    ideal: maxHeight\n                },\n                frameRate: {\n                    ideal: 30\n                }\n            }\n        };\n    } catch (error) {\n        console.warn('Error getting camera constraints, using default:', error);\n        return {\n            video: true\n        };\n    }\n};\n/**\n * Capture images at a specific point\n * @param {Object} options - Capture options\n * @returns {Promise} - Promise that resolves with the capture result\n */ const captureImages = async (options)=>{\n    const { canvasRef, position, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, captureFolder = 'eye_tracking_captures' } = options;\n    if (!position || typeof position.x !== 'number' || typeof position.y !== 'number') {\n        console.warn('[captureImages] Invalid position object:', position);\n        setProcessStatus?.('Error: Invalid capture position');\n        return null;\n    }\n    try {\n        // Get highest resolution constraints\n        const constraints = await getHighestResolutionConstraints();\n        console.log('Using camera constraints:', constraints);\n        // Get a new stream with the highest resolution\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        const videoTrack = stream.getVideoTracks()[0];\n        const settings = videoTrack.getSettings();\n        console.log('Actual camera settings:', settings);\n        // Update video element with new stream\n        const videoElement = window.videoElement || document.querySelector('video');\n        if (videoElement) {\n            videoElement.srcObject = stream;\n            await videoElement.play();\n        }\n        // Call the captureImagesAtPoint with all necessary parameters\n        const result = await (0,_Helper_savefile__WEBPACK_IMPORTED_MODULE_1__.captureImagesAtPoint)({\n            point: position,\n            captureCount: captureCounter,\n            canvasRef,\n            setCaptureCount: setCaptureCounter,\n            showCapturePreview\n        });\n        console.log('Capture successful with ID:', result.captureId);\n        // Clean up the stream\n        stream.getTracks().forEach((track)=>track.stop());\n        return {\n            screenImage: result?.screenImage || '',\n            webcamImage: result?.webcamImage || '',\n            success: true,\n            captureId: result?.captureId,\n            resolution: {\n                width: settings.width,\n                height: settings.height\n            }\n        };\n    } catch (err) {\n        console.error('[captureImages] Unexpected error:', err);\n        setProcessStatus?.(`Error: ${err.message}`);\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: err.message\n        };\n    }\n};\n/**\n * Generate a random dot position within the canvas\n * @param {HTMLCanvasElement} canvas - Canvas element\n * @param {number} padding - Padding from the edges\n * @returns {Object} - {x, y} position\n */ const getRandomPosition = (canvas, padding = 40)=>{\n    if (!canvas) return {\n        x: 100,\n        y: 100\n    }; // Fallback position\n    const width = canvas.width || 400; // Fallback if width is 0\n    const height = canvas.height || 300; // Fallback if height is 0\n    return {\n        x: Math.floor(Math.random() * (width - 2 * padding)) + padding,\n        y: Math.floor(Math.random() * (height - 2 * padding)) + padding\n    };\n};\n/**\n * Special calibration capture function that behaves like random dot capture\n * @param {Object} options - All the calibration options\n * @returns {Promise<Object>} Result object with captured data\n */ const calibrationCapture = async (options)=>{\n    const { canvasRef, point, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, captureFolder = 'eye_tracking_captures', pointIndex, totalPoints } = options;\n    try {\n        console.log(`Starting calibration capture for point ${pointIndex + 1}/${totalPoints}`);\n        // Get canvas using canvas management system\n        const canvas = getCanvas();\n        if (!canvas) {\n            console.error(\"Canvas reference is null in calibrationCapture\");\n            setProcessStatus?.(`Error: Canvas not available`);\n            return {\n                success: false\n            };\n        }\n        // Use canvas management system to draw dot\n        drawDotWithCanvasManager(point.x, point.y);\n        setProcessStatus?.(`Calibration point ${pointIndex + 1}/${totalPoints}`);\n        // Use the same countdown element creation method\n        const canvasRect = canvas.getBoundingClientRect();\n        const countdownElement = createCountdownElement(point, canvasRect);\n        if (!countdownElement) {\n            console.error(\"Failed to create countdown element\");\n            return {\n                success: false\n            };\n        }\n        // Create a redrawInterval for keeping the dot visible\n        let redrawInterval = setInterval(()=>{\n            drawDotWithCanvasManager(point.x, point.y);\n        }, 200);\n        // Run the same countdown as random dot\n        for(let count = 3; count > 0; count--){\n            countdownElement.textContent = count;\n            setProcessStatus?.(`Point ${pointIndex + 1}/${totalPoints} - countdown ${count}`);\n            // Redraw the dot at each step to ensure it remains visible\n            drawDotWithCanvasManager(point.x, point.y);\n            await new Promise((resolve)=>setTimeout(resolve, 800));\n        }\n        // Show checkmark\n        countdownElement.textContent = \"✓\";\n        // Remove countdown element\n        setTimeout(()=>{\n            if (countdownElement.parentNode) {\n                countdownElement.parentNode.removeChild(countdownElement);\n            }\n            // Clear redrawInterval\n            if (redrawInterval) {\n                clearInterval(redrawInterval);\n            }\n        }, 300);\n        // Use captureAndPreviewProcess instead of directly calling captureImagesAtPoint\n        const captureResult = await captureAndPreviewProcess({\n            canvasRef,\n            position: point,\n            captureCounter,\n            setCaptureCounter,\n            setProcessStatus: (status)=>{\n                if (typeof status === 'string') {\n                    setProcessStatus?.(status);\n                } else if (status && typeof status === 'object') {\n                    setProcessStatus?.(status.processStatus || '');\n                }\n            },\n            toggleTopBar,\n            onStatusUpdate: (status)=>{\n                if (typeof status === 'string') {\n                    setProcessStatus?.(status);\n                } else if (status && typeof status === 'object') {\n                    setProcessStatus?.(status.processStatus || '');\n                }\n            },\n            captureFolder\n        });\n        // Ensure proper return even if captureResult is null\n        const safeResult = captureResult && typeof captureResult === 'object' ? captureResult : {\n            screenImage: '',\n            webcamImage: '',\n            success: false\n        };\n        return {\n            screenImage: safeResult.screenImage || '',\n            webcamImage: safeResult.webcamImage || '',\n            success: true,\n            point\n        };\n    } catch (error) {\n        console.error(\"Error in calibrationCapture:\", error);\n        setProcessStatus?.(`Error: ${error.message}`);\n        // Always return a valid object with default values\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\n * Complete capture and preview process\n * @param {Object} options - Process options\n */ const captureAndPreviewProcess = async (options)=>{\n    const { canvasRef, position, captureCounter, setCaptureCounter, setProcessStatus, toggleTopBar, onStatusUpdate, captureFolder } = options;\n    try {\n        // Get canvas using canvas management system\n        const canvas = getCanvas();\n        if (!canvas) {\n            console.error(\"[captureAndPreviewProcess] Canvas reference is null\");\n            if (setProcessStatus) setProcessStatus('Error: Canvas is not available');\n            return null;\n        }\n        // Draw the dot using canvas management system\n        drawDotWithCanvasManager(position.x, position.y);\n        // Countdown before capture\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Starting countdown...',\n                isCapturing: true\n            });\n        }\n        // Create a custom countdown element\n        const canvasRect = canvas.getBoundingClientRect();\n        const countdownElement = document.createElement('div');\n        countdownElement.className = 'calibrate-countdown';\n        countdownElement.style.cssText = `\n      position: fixed;\n      left: ${canvasRect.left + position.x}px;\n      top: ${canvasRect.top + position.y - 60}px;\n      transform: translateX(-50%);\n      color: red;\n      font-size: 36px;\n      font-weight: bold;\n      text-shadow: 0 0 10px white, 0 0 20px white;\n      z-index: 9999;\n      background-color: rgba(255, 255, 255, 0.8);\n      border: 2px solid red;\n      border-radius: 50%;\n      width: 50px;\n      height: 50px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n    `;\n        document.body.appendChild(countdownElement);\n        // Create a redrawInterval for keeping the dot visible\n        let redrawInterval = setInterval(()=>{\n            drawDotWithCanvasManager(position.x, position.y);\n        }, 200);\n        // Manual countdown\n        for(let count = 3; count > 0; count--){\n            countdownElement.textContent = count;\n            if (onStatusUpdate) {\n                onStatusUpdate({\n                    processStatus: `Countdown: ${count}`,\n                    countdownValue: count,\n                    isCapturing: true\n                });\n            }\n            // Redraw dot to ensure it's visible\n            drawDotWithCanvasManager(position.x, position.y);\n            await new Promise((resolve)=>setTimeout(resolve, 800));\n        }\n        // Change to checkmark\n        countdownElement.textContent = \"✓\";\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Capturing images...',\n                countdownValue: \"Capturing...\",\n                isCapturing: true\n            });\n        }\n        // Remove countdown element and clear redrawInterval\n        setTimeout(()=>{\n            if (countdownElement.parentNode) {\n                countdownElement.parentNode.removeChild(countdownElement);\n            }\n            if (redrawInterval) {\n                clearInterval(redrawInterval);\n            }\n        }, 300);\n        // Use captureImagesAtPoint from savefile.js\n        const captureResult = await (0,_Helper_savefile__WEBPACK_IMPORTED_MODULE_1__.captureImagesAtPoint)({\n            point: position,\n            captureCount: captureCounter,\n            canvasRef,\n            setCaptureCount: setCaptureCounter,\n            showCapturePreview\n        });\n        if (setProcessStatus) {\n            setProcessStatus(`Captured dot at x=${Math.round(position.x)}, y=${Math.round(position.y)}`);\n        }\n        if (onStatusUpdate) {\n            onStatusUpdate({\n                processStatus: 'Capture complete',\n                isCapturing: false\n            });\n        }\n        // Show TopBar again with delay\n        setTimeout(()=>{\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(true);\n            } else if (false) {}\n        }, 2500);\n        return captureResult;\n    } catch (error) {\n        console.error(\"[captureAndPreviewProcess] Fatal error:\", error);\n        if (setProcessStatus) {\n            setProcessStatus(`Fatal error: ${error.message}`);\n        }\n        // Ensure TopBar is shown even on error\n        setTimeout(()=>{\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(true);\n            } else if (false) {}\n        }, 1500);\n        // Return a minimal valid object to prevent null reference errors\n        return {\n            screenImage: '',\n            webcamImage: '',\n            success: false,\n            error: error.message\n        };\n    }\n};\n// Default export for React compatibility\nconst CountSave = ()=>null; // This is a utility file, so we don't need to render anything\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CountSave);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/collected-dataset-customized/Action/countSave.jsx\n");

/***/ }),

/***/ "(pages-dir-node)/./components/collected-dataset-customized/Helper/savefile.js":
/*!********************************************************************!*\
  !*** ./components/collected-dataset-customized/Helper/savefile.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   captureImagesAtPoint: () => (/* binding */ captureImagesAtPoint),\n/* harmony export */   getHighestResolutionConstraints: () => (/* binding */ getHighestResolutionConstraints),\n/* harmony export */   saveCSVToServer: () => (/* binding */ saveCSVToServer),\n/* harmony export */   saveImageToServer: () => (/* binding */ saveImageToServer)\n/* harmony export */ });\n// Helper/savefile.js - Added highest resolution webcam capture\n/**\n * Resize an image to fit within a certain size limit\n * @param {string} imageDataUrl - Base64 encoded image data\n * @param {number} maxWidth - Maximum width of the resized image\n * @param {number} maxHeight - Maximum height of the resized image\n * @param {number} quality - JPEG quality (0-1)\n * @returns {Promise<string>} - Resized image data URL\n */ const resizeImage = async (imageDataUrl, maxWidth = 800, maxHeight = 600, quality = 0.85)=>{\n    return new Promise((resolve, reject)=>{\n        try {\n            const img = new Image();\n            img.onload = ()=>{\n                // Calculate new dimensions while maintaining aspect ratio\n                let width = img.width;\n                let height = img.height;\n                if (width > maxWidth) {\n                    height = Math.round(height * (maxWidth / width));\n                    width = maxWidth;\n                }\n                if (height > maxHeight) {\n                    width = Math.round(width * (maxHeight / height));\n                    height = maxHeight;\n                }\n                // Create canvas for resizing\n                const canvas = document.createElement('canvas');\n                canvas.width = width;\n                canvas.height = height;\n                // Draw and resize image on canvas\n                const ctx = canvas.getContext('2d');\n                ctx.drawImage(img, 0, 0, width, height);\n                // Convert to JPEG with specified quality\n                const resizedDataUrl = canvas.toDataURL('image/jpeg', quality);\n                resolve(resizedDataUrl);\n            };\n            img.onerror = (err)=>reject(err);\n            img.src = imageDataUrl;\n        } catch (err) {\n            reject(err);\n        }\n    });\n};\n/**\n * Save an image or data to the server with group ID to ensure consistent numbering\n * @param {string} imageData - Base64 encoded image data\n * @param {string} filename - Filename pattern to save as\n * @param {string} type - Type of file (screen, webcam, parameters)\n * @param {string} folder - Folder to save in\n * @param {string} captureGroup - Unique ID for grouping files from the same capture\n * @returns {Promise<Object>} - Server response\n */ const saveImageToServer = async (imageData, filename, type, folder = 'eye_tracking_captures', captureGroup = null)=>{\n    try {\n        const response = await fetch('/api/save-capture', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                imageData,\n                filename,\n                type,\n                folder,\n                captureGroup\n            })\n        });\n        if (!response.ok) {\n            console.error(`Server returned ${response.status} for ${type}`);\n            // If the error is 413 (payload too large) and it's an image, try resizing\n            if (response.status === 413 && type !== 'parameters') {\n                console.warn(`Image too large for server (413 error), will resize and retry`);\n                // Start with higher quality and progressively reduce quality/size until it fits\n                const sizes = [\n                    {\n                        width: 1920,\n                        height: 1080,\n                        quality: 0.9\n                    },\n                    {\n                        width: 1280,\n                        height: 720,\n                        quality: 0.85\n                    },\n                    {\n                        width: 800,\n                        height: 600,\n                        quality: 0.8\n                    },\n                    {\n                        width: 640,\n                        height: 480,\n                        quality: 0.75\n                    }\n                ];\n                for (const { width, height, quality } of sizes){\n                    const resizedImage = await resizeImage(imageData, width, height, quality);\n                    try {\n                        const retryResponse = await fetch('/api/save-capture', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                imageData: resizedImage,\n                                filename,\n                                type,\n                                folder,\n                                captureGroup\n                            })\n                        });\n                        if (retryResponse.ok) {\n                            console.log(`Successfully saved resized ${type} at ${width}x${height}, quality ${quality}`);\n                            return await retryResponse.json();\n                        }\n                    } catch (retryError) {\n                        console.error(`Error during retry for ${type}:`, retryError);\n                    }\n                }\n                return {\n                    success: false,\n                    error: \"Failed to save image even after resizing\"\n                };\n            }\n            return {\n                success: false,\n                error: `Server returned ${response.status}`\n            };\n        }\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        console.error(`Error saving ${type}:`, error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\n * Save CSV data to the server\n * @param {string} csvData - CSV data\n * @param {string} filename - Filename pattern to save as\n * @param {string} folder - Folder to save in\n * @param {string} captureGroup - Unique ID for grouping files from the same capture\n * @returns {Promise<Object>} - Server response\n */ const saveCSVToServer = async (csvData, filename, folder = 'eye_tracking_captures', captureGroup = null)=>{\n    try {\n        const csvBlob = new Blob([\n            csvData\n        ], {\n            type: 'text/csv'\n        });\n        const reader = new FileReader();\n        const csvDataUrl = await new Promise((resolve)=>{\n            reader.onloadend = ()=>resolve(reader.result);\n            reader.readAsDataURL(csvBlob);\n        });\n        const result = await saveImageToServer(csvDataUrl, filename, 'parameters', folder, captureGroup);\n        return result;\n    } catch (error) {\n        console.error('Error saving CSV:', error);\n        return null;\n    }\n};\n/**\n * Get the highest resolution camera constraints supported by the device\n * @returns {Promise<MediaStreamConstraints>} - Camera constraints with highest resolution\n */ const getHighestResolutionConstraints = async ()=>{\n    // Try to get all available camera capabilities first\n    try {\n        // Get a temporary access to the camera\n        const tempStream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        const videoTrack = tempStream.getVideoTracks()[0];\n        // Get capabilities\n        const capabilities = videoTrack.getCapabilities?.();\n        console.log(\"Camera capabilities:\", capabilities);\n        // Get current settings to check aspect ratio\n        const settings = videoTrack.getSettings();\n        console.log(\"Current camera settings:\", settings);\n        // Stop the temporary stream\n        videoTrack.stop();\n        if (capabilities && capabilities.width && capabilities.height) {\n            // Use the maximum width and height from device capabilities\n            const maxWidth = capabilities.width.max;\n            const maxHeight = capabilities.height.max;\n            // Force exact resolution instead of ideal\n            return {\n                video: {\n                    width: {\n                        exact: maxWidth\n                    },\n                    height: {\n                        exact: maxHeight\n                    },\n                    frameRate: {\n                        ideal: 30\n                    } // Try to maintain good frame rate\n                }\n            };\n        }\n    } catch (err) {\n        console.log(\"Could not get camera capabilities:\", err);\n    }\n    // Fallback: try standard resolutions in order\n    const resolutions = [\n        {\n            width: {\n                exact: 4096\n            },\n            height: {\n                exact: 2160\n            }\n        },\n        {\n            width: {\n                exact: 3840\n            },\n            height: {\n                exact: 2160\n            }\n        },\n        {\n            width: {\n                exact: 2560\n            },\n            height: {\n                exact: 1440\n            }\n        },\n        {\n            width: {\n                exact: 1920\n            },\n            height: {\n                exact: 1080\n            }\n        },\n        {\n            width: {\n                exact: 1280\n            },\n            height: {\n                exact: 720\n            }\n        },\n        {\n            width: {\n                exact: 640\n            },\n            height: {\n                exact: 480\n            }\n        },\n        {} // Default - let browser decide\n    ];\n    // Try the resolutions in order until one works\n    for (const resolution of resolutions){\n        try {\n            const constraints = {\n                video: {\n                    ...resolution,\n                    facingMode: \"user\",\n                    frameRate: {\n                        ideal: 30\n                    }\n                }\n            };\n            // Test if this resolution is supported\n            const stream = await navigator.mediaDevices.getUserMedia(constraints);\n            // Get the actual dimensions\n            const videoTrack = stream.getVideoTracks()[0];\n            const settings = videoTrack.getSettings();\n            console.log(\"Supported resolution:\", settings.width, \"x\", settings.height);\n            // Stop the test stream immediately\n            stream.getTracks().forEach((track)=>track.stop());\n            return constraints;\n        } catch (err) {\n            console.log(`Resolution not supported: ${JSON.stringify(resolution)}`);\n        // Continue to next resolution\n        }\n    }\n    // If nothing worked, return basic constraints\n    return {\n        video: {\n            width: {\n                exact: 1280\n            },\n            height: {\n                exact: 720\n            },\n            frameRate: {\n                ideal: 30\n            }\n        }\n    };\n};\n/**\n * Capture and save images at a specific point with consistent numbering\n * @param {Object} options - Capture options\n * @returns {Promise<Object>} - Capture results\n */ const captureImagesAtPoint = async ({ point, captureCount = 1, canvasRef, setCaptureCount, showCapturePreview })=>{\n    try {\n        const folder = 'eye_tracking_captures';\n        // Create a unique ID for this capture group\n        const captureGroupId = `capture-${Date.now()}`;\n        console.log(`Generated capture group ID: ${captureGroupId}`);\n        // File patterns for saving\n        const screenFilename = 'screen_001.jpg'; // Pattern only - server will assign number\n        const webcamFilename = 'webcam_001.jpg'; // Pattern only - server will assign number\n        const parameterFilename = 'parameter_001.csv'; // Pattern only - server will assign number\n        // For logging\n        console.log(\"Starting capture with group ID:\", captureGroupId);\n        const canvas = canvasRef.current;\n        let screenImage = null;\n        let webcamImage = null;\n        let captureNumber = null;\n        // Variables to store webcam resolution\n        let webcamWidth = 0;\n        let webcamHeight = 0;\n        // 1. Prepare all data first\n        // 1.1 Canvas/screen image\n        if (canvas) {\n            screenImage = canvas.toDataURL('image/png');\n        }\n        // 1.2 Webcam image - Try to get the highest resolution available \n        // with device's native capabilities instead of fixed values\n        let webcamImagePreview = null; // Separate lower-resolution version for preview\n        const videoElement = window.videoElement || document.querySelector('video');\n        if (videoElement) {\n            try {\n                // Use existing video element if available\n                // First check if videoTrack has settings info\n                let trackSettings = null;\n                if (videoElement.srcObject) {\n                    const videoTrack = videoElement.srcObject.getVideoTracks()[0];\n                    if (videoTrack) {\n                        trackSettings = videoTrack.getSettings();\n                        console.log(\"Video track settings:\", trackSettings);\n                    }\n                }\n                // Get dimensions from track if available, otherwise from element\n                if (trackSettings && trackSettings.width && trackSettings.height) {\n                    webcamWidth = trackSettings.width;\n                    webcamHeight = trackSettings.height;\n                    console.log(`Using track settings dimensions: ${webcamWidth}x${webcamHeight}`);\n                } else {\n                    webcamWidth = videoElement.videoWidth || 0;\n                    webcamHeight = videoElement.videoHeight || 0;\n                    console.log(`Using video element dimensions: ${webcamWidth}x${webcamHeight}`);\n                }\n                // Sanity check - if both dimensions are the same, double-check\n                if (webcamWidth === webcamHeight && webcamWidth > 100) {\n                    console.warn(\"Suspicious square aspect ratio detected, double-checking dimensions\");\n                    // Try to get more reliable info\n                    if (videoElement.srcObject) {\n                        const videoTrack = videoElement.srcObject.getVideoTracks()[0];\n                        if (videoTrack) {\n                            const constraints = videoTrack.getConstraints();\n                            console.log(\"Video constraints:\", constraints);\n                            // If constraints have width/height, use those\n                            if (constraints.width && constraints.height) {\n                                if (typeof constraints.width.exact === 'number') {\n                                    webcamWidth = constraints.width.exact;\n                                } else if (typeof constraints.width.ideal === 'number') {\n                                    webcamWidth = constraints.width.ideal;\n                                }\n                                if (typeof constraints.height.exact === 'number') {\n                                    webcamHeight = constraints.height.exact;\n                                } else if (typeof constraints.height.ideal === 'number') {\n                                    webcamHeight = constraints.height.ideal;\n                                }\n                                console.log(`Updated dimensions from constraints: ${webcamWidth}x${webcamHeight}`);\n                            }\n                        }\n                    }\n                }\n                // Final reality check - make sure dimensions are reasonable\n                if (webcamWidth <= 0 || webcamHeight <= 0) {\n                    console.warn(\"Invalid webcam dimensions, using defaults\");\n                    webcamWidth = 640;\n                    webcamHeight = 480;\n                }\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = webcamWidth;\n                tempCanvas.height = webcamHeight;\n                tempCanvas.getContext('2d').drawImage(videoElement, 0, 0, webcamWidth, webcamHeight);\n                // Create high-resolution version for saving\n                webcamImage = tempCanvas.toDataURL('image/jpeg', 0.95);\n                // Create lower-resolution version for preview\n                webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.85);\n                console.log(`Webcam capture complete at resolution: ${webcamWidth}x${webcamHeight}`);\n            } catch (err) {\n                console.error(\"Error capturing from existing video element:\", err);\n                webcamWidth = videoElement.videoWidth || 640;\n                webcamHeight = videoElement.videoHeight || 480;\n            }\n        } else {\n            try {\n                // Get highest resolution constraints for this device\n                const constraints = await getHighestResolutionConstraints();\n                console.log(\"Using camera constraints:\", constraints);\n                // Try to get stream with highest resolution\n                const stream = await navigator.mediaDevices.getUserMedia(constraints);\n                // Get the actual dimensions from the track first\n                const videoTrack = stream.getVideoTracks()[0];\n                const trackSettings = videoTrack.getSettings();\n                console.log(\"Actual camera settings:\", trackSettings);\n                // Create temporary video element to get the stream\n                const tempVideo = document.createElement('video');\n                tempVideo.srcObject = stream;\n                tempVideo.muted = true;\n                tempVideo.playsInline = true;\n                tempVideo.autoplay = true;\n                document.body.appendChild(tempVideo);\n                // Need to wait for video to be initialized\n                await new Promise((resolve)=>{\n                    tempVideo.onloadedmetadata = ()=>{\n                        tempVideo.play();\n                        resolve();\n                    };\n                    // Fallback if onloadedmetadata doesn't fire\n                    setTimeout(resolve, 1000);\n                });\n                // Wait a bit longer for the video to actually start playing\n                await new Promise((res)=>setTimeout(res, 500));\n                // Store webcam resolution - prioritize track settings over video element\n                if (trackSettings && trackSettings.width && trackSettings.height) {\n                    webcamWidth = trackSettings.width;\n                    webcamHeight = trackSettings.height;\n                    console.log(`Using track settings for resolution: ${webcamWidth}x${webcamHeight}`);\n                } else {\n                    webcamWidth = tempVideo.videoWidth || 0;\n                    webcamHeight = tempVideo.videoHeight || 0;\n                    console.log(`Using video element for resolution: ${webcamWidth}x${webcamHeight}`);\n                }\n                // Reality check on dimensions\n                if (webcamWidth <= 0 || webcamHeight <= 0) {\n                    console.warn(\"Invalid webcam dimensions, trying to get from constraints\");\n                    if (constraints.video && typeof constraints.video === 'object') {\n                        if (constraints.video.width && constraints.video.width.exact) {\n                            webcamWidth = constraints.video.width.exact;\n                        }\n                        if (constraints.video.height && constraints.video.height.exact) {\n                            webcamHeight = constraints.video.height.exact;\n                        }\n                    }\n                    if (webcamWidth <= 0 || webcamHeight <= 0) {\n                        console.warn(\"Still invalid dimensions, using defaults\");\n                        webcamWidth = 640;\n                        webcamHeight = 480;\n                    }\n                }\n                // Final check for square aspect ratio which is usually incorrect\n                if (webcamWidth === webcamHeight && webcamWidth > 100) {\n                    console.warn(\"Square aspect ratio detected, may be incorrect\");\n                    // Try to get more reliable dimensions\n                    const capabilities = videoTrack.getCapabilities?.();\n                    if (capabilities && capabilities.width && capabilities.height) {\n                        if (capabilities.width.max && capabilities.height.max) {\n                            // Assume the maximum capabilities have the correct aspect ratio\n                            const aspectRatio = capabilities.width.max / capabilities.height.max;\n                            if (Math.abs(aspectRatio - 1.33) < 0.1) {\n                                webcamHeight = Math.round(webcamWidth / 1.33);\n                                console.log(`Corrected to 4:3 aspect ratio: ${webcamWidth}x${webcamHeight}`);\n                            } else if (Math.abs(aspectRatio - 1.78) < 0.1) {\n                                webcamHeight = Math.round(webcamWidth / 1.78);\n                                console.log(`Corrected to 16:9 aspect ratio: ${webcamWidth}x${webcamHeight}`);\n                            }\n                        }\n                    }\n                }\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = webcamWidth;\n                tempCanvas.height = webcamHeight;\n                tempCanvas.getContext('2d').drawImage(tempVideo, 0, 0, webcamWidth, webcamHeight);\n                // Create high-resolution version for saving\n                webcamImage = tempCanvas.toDataURL('image/jpeg', 0.95);\n                // Create lower-resolution version for preview\n                webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.85);\n                console.log(`High-resolution webcam capture complete: ${webcamWidth}x${webcamHeight}`);\n                // Clean up\n                stream.getTracks().forEach((t)=>t.stop());\n                tempVideo.remove();\n            } catch (err) {\n                console.warn(\"High-resolution webcam capture failed:\", err);\n                // Try one more time with basic constraints\n                try {\n                    const stream = await navigator.mediaDevices.getUserMedia({\n                        video: true\n                    });\n                    const videoTrack = stream.getVideoTracks()[0];\n                    const trackSettings = videoTrack.getSettings();\n                    const tempVideo = document.createElement('video');\n                    tempVideo.srcObject = stream;\n                    tempVideo.muted = true;\n                    tempVideo.playsInline = true;\n                    document.body.appendChild(tempVideo);\n                    await tempVideo.play();\n                    await new Promise((res)=>setTimeout(res, 300));\n                    // Get dimensions from track settings if available\n                    if (trackSettings && trackSettings.width && trackSettings.height) {\n                        webcamWidth = trackSettings.width;\n                        webcamHeight = trackSettings.height;\n                    } else {\n                        webcamWidth = tempVideo.videoWidth || 0;\n                        webcamHeight = tempVideo.videoHeight || 0;\n                    }\n                    // Final check for invalid dimensions\n                    if (webcamWidth <= 0 || webcamHeight <= 0) {\n                        webcamWidth = 640;\n                        webcamHeight = 480;\n                    }\n                    const tempCanvas = document.createElement('canvas');\n                    tempCanvas.width = webcamWidth;\n                    tempCanvas.height = webcamHeight;\n                    tempCanvas.getContext('2d').drawImage(tempVideo, 0, 0, webcamWidth, webcamHeight);\n                    // Create high-resolution version for saving\n                    webcamImage = tempCanvas.toDataURL('image/jpeg', 0.9);\n                    // Create lower-resolution version for preview\n                    webcamImagePreview = await resizeImage(webcamImage, 640, 480, 0.8);\n                    console.log(`Basic webcam resolution captured: ${webcamWidth}x${webcamHeight}`);\n                    stream.getTracks().forEach((t)=>t.stop());\n                    tempVideo.remove();\n                } catch (fallbackErr) {\n                    console.error(\"All webcam capture methods failed:\", fallbackErr);\n                    webcamWidth = 640;\n                    webcamHeight = 480;\n                }\n            }\n        }\n        // 1.3 Parameter data - Now including webcam resolution\n        const csvData = [\n            \"name,value\",\n            `dot_x,${point.x}`,\n            `dot_y,${point.y}`,\n            `canvas_width,${canvas?.width || 0}`,\n            `canvas_height,${canvas?.height || 0}`,\n            `window_width,${window.innerWidth}`,\n            `window_height,${window.innerHeight}`,\n            `webcam_resolution_width,${webcamWidth}`,\n            `webcam_resolution_height,${webcamHeight}`,\n            `timestamp,${new Date().toISOString()}`,\n            `group_id,${captureGroupId}`\n        ].join('\\n');\n        // 2. Save all files with the same group ID so they get the same number\n        // 2.1 Save parameter file\n        const paramResult = await saveCSVToServer(csvData, parameterFilename, folder, captureGroupId);\n        if (paramResult && paramResult.success) {\n            captureNumber = paramResult.number;\n            console.log(`Server assigned capture number: ${captureNumber} for group: ${captureGroupId}`);\n        }\n        // 2.2 Save screen image if available\n        let screenResult = null;\n        if (screenImage) {\n            screenResult = await saveImageToServer(screenImage, screenFilename, 'screen', folder, captureGroupId);\n        }\n        // 2.3 Save webcam image if available\n        let webcamResult = null;\n        if (webcamImage) {\n            webcamResult = await saveImageToServer(webcamImage, webcamFilename, 'webcam', folder, captureGroupId);\n        }\n        // 3. Show preview if needed - use the lower resolution version for preview\n        if (showCapturePreview && typeof showCapturePreview === 'function') {\n            showCapturePreview(screenImage, webcamImagePreview || webcamImage, point);\n        }\n        // 4. Increment counter for next capture\n        if (setCaptureCount && typeof setCaptureCount === 'function') {\n            setCaptureCount((prevCount)=>prevCount + 1);\n        }\n        // 5. Return results - now including webcam resolution\n        return {\n            screenImage,\n            webcamImage,\n            success: true,\n            point,\n            captureNumber,\n            groupId: captureGroupId,\n            webcamWidth,\n            webcamHeight\n        };\n    } catch (err) {\n        console.error(\"captureImagesAtPoint failed:\", err);\n        return {\n            success: false,\n            error: err.message,\n            screenImage: null,\n            webcamImage: null,\n            webcamWidth: 0,\n            webcamHeight: 0\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/collected-dataset-customized/Helper/savefile.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/consent/ConsentBanner.js":
/*!*********************************************!*\
  !*** ./components/consent/ConsentBanner.js ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ConsentBanner)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../styles/Consent.module.css */ \"(pages-dir-node)/./styles/Consent.module.css\");\n/* harmony import */ var _styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _ConsentContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ConsentContext */ \"(pages-dir-node)/./components/consent/ConsentContext.js\");\n/* harmony import */ var _utils_consentManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/consentManager */ \"(pages-dir-node)/./utils/consentManager.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_ConsentContext__WEBPACK_IMPORTED_MODULE_4__, _utils_consentManager__WEBPACK_IMPORTED_MODULE_5__]);\n([_ConsentContext__WEBPACK_IMPORTED_MODULE_4__, _utils_consentManager__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// frontend/components/consent/ConsentBanner.js\n\n\n\n\n\n\nfunction ConsentBanner() {\n    const { showBanner, updateConsent } = (0,_ConsentContext__WEBPACK_IMPORTED_MODULE_4__.useConsent)();\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const [cookieStatus, setCookieStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ConsentBanner.useEffect\": ()=>{\n            const checkCookieStatus = {\n                \"ConsentBanner.useEffect.checkCookieStatus\": async ()=>{\n                    try {\n                        const userId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_5__.getOrCreateUserId)();\n                        const response = await fetch(`/api/user-preferences/${userId}`, {\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json',\n                                // 'X-API-Key': process.env.NEXT_PUBLIC_API_KEY || 'A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV',\n                                'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                            }\n                        });\n                        if (response.ok) {\n                            const data = await response.json();\n                            setCookieStatus(data.data?.cookie ?? false);\n                        } else {\n                            setCookieStatus(false);\n                        }\n                    } catch (error) {\n                        console.error('Error checking cookie status:', error);\n                        setCookieStatus(false);\n                    }\n                }\n            }[\"ConsentBanner.useEffect.checkCookieStatus\"];\n            checkCookieStatus();\n        }\n    }[\"ConsentBanner.useEffect\"], []);\n    // If banner shouldn't be shown or cookie is already accepted, return null\n    if (!showBanner || cookieStatus === true) return null;\n    const handleAccept = async ()=>{\n        setLoading(true);\n        try {\n            // Update consent status\n            await updateConsent(true);\n            // Get user ID\n            const userId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_5__.getOrCreateUserId)();\n            // Update user preferences with cookie acceptance\n            const response = await fetch(`/api/user-preferences/${userId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                },\n                body: JSON.stringify({\n                    cookie: true\n                })\n            });\n            if (!response.ok) {\n                throw new Error('Failed to save cookie preferences');\n            }\n            setCookieStatus(true);\n            // Redirect to consent setup page\n            router.push('/preferences/consent-setup');\n        } catch (error) {\n            console.error('Error handling cookie acceptance:', error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const handleDecline = async ()=>{\n        setLoading(true);\n        try {\n            await updateConsent(false);\n            setCookieStatus(false);\n        } catch (error) {\n            console.error('Error handling cookie decline:', error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const handleLearnMore = ()=>{\n        router.push('/privacy-policy');\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().bannerContainer),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: (_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().bannerContent),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: (_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().bannerText),\n                    children: '\\uD83C\\uDF6A We use cookies to collect information about how you interact with our site—like your preferences and usage data—to improve your experience. By clicking \"Accept\", you agree to our use of cookies.'\n                }, void 0, false, {\n                    fileName: \"/app/components/consent/ConsentBanner.js\",\n                    lineNumber: 99,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().bannerButtons),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: `${(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().bannerButton)} ${(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().acceptButton)}`,\n                            onClick: handleAccept,\n                            disabled: loading,\n                            children: loading ? 'Processing...' : 'Accept'\n                        }, void 0, false, {\n                            fileName: \"/app/components/consent/ConsentBanner.js\",\n                            lineNumber: 103,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: `${(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().bannerButton)} ${(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().declineButton)}`,\n                            onClick: handleDecline,\n                            disabled: loading,\n                            children: \"Decline\"\n                        }, void 0, false, {\n                            fileName: \"/app/components/consent/ConsentBanner.js\",\n                            lineNumber: 110,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: `${(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().bannerButton)} ${(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_3___default().learnMoreButton)}`,\n                            onClick: handleLearnMore,\n                            children: \"Learn more\"\n                        }, void 0, false, {\n                            fileName: \"/app/components/consent/ConsentBanner.js\",\n                            lineNumber: 117,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/components/consent/ConsentBanner.js\",\n                    lineNumber: 102,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/app/components/consent/ConsentBanner.js\",\n            lineNumber: 98,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/app/components/consent/ConsentBanner.js\",\n        lineNumber: 97,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/consent/ConsentBanner.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/consent/ConsentContext.js":
/*!**********************************************!*\
  !*** ./components/consent/ConsentContext.js ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConsentProvider: () => (/* binding */ ConsentProvider),\n/* harmony export */   useConsent: () => (/* binding */ useConsent)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_consentManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/consentManager */ \"(pages-dir-node)/./utils/consentManager.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__]);\n_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// frontend/components/consent/ConsentContext.js\n\n\n\nconst ConsentContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n// Check if running on localhost\nconst isLocalhost = ()=>{\n    if (true) return false;\n    return window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n};\nfunction ConsentProvider({ children }) {\n    const [consentState, setConsentState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        loading: true,\n        userId: null,\n        consentStatus: null,\n        consentUpdatedAt: null,\n        consentDetails: null,\n        showBanner: true\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ConsentProvider.useEffect\": ()=>{\n            // Get consent data from cookies\n            const initializeConsent = {\n                \"ConsentProvider.useEffect.initializeConsent\": async ()=>{\n                    try {\n                        // If running on localhost, automatically set consent\n                        if (isLocalhost()) {\n                            const userId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.getOrCreateUserId)();\n                            const autoConsentData = {\n                                userId,\n                                consentStatus: true,\n                                consentUpdatedAt: new Date().toISOString(),\n                                consentDetails: {\n                                    userId,\n                                    status: true,\n                                    timestamp: new Date().toISOString(),\n                                    autoEnabled: true\n                                }\n                            };\n                            // Update cookies with auto-consent\n                            await (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.updateUserConsent)(true, {\n                                userId\n                            });\n                            setConsentState({\n                                loading: false,\n                                userId: autoConsentData.userId,\n                                consentStatus: true,\n                                consentUpdatedAt: autoConsentData.consentUpdatedAt,\n                                consentDetails: autoConsentData.consentDetails,\n                                showBanner: false\n                            });\n                            console.log('Auto-enabled consent for localhost:', autoConsentData);\n                            return;\n                        }\n                        // Normal flow for non-localhost\n                        const consentData = await (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.getUserConsent)();\n                        console.log('Initial consent data:', consentData);\n                        if (!consentData || consentData.consentStatus === null) {\n                            setConsentState({\n                                loading: false,\n                                userId: null,\n                                consentStatus: null,\n                                consentUpdatedAt: null,\n                                consentDetails: null,\n                                showBanner: true\n                            });\n                            return;\n                        }\n                        setConsentState({\n                            loading: false,\n                            userId: consentData.userId,\n                            consentStatus: consentData.consentStatus,\n                            consentUpdatedAt: consentData.consentUpdatedAt,\n                            consentDetails: consentData.consentDetails,\n                            showBanner: false\n                        });\n                    } catch (error) {\n                        console.error('Error initializing consent:', error);\n                        setConsentState({\n                            loading: false,\n                            userId: null,\n                            consentStatus: null,\n                            consentUpdatedAt: null,\n                            consentDetails: null,\n                            showBanner: true\n                        });\n                    }\n                }\n            }[\"ConsentProvider.useEffect.initializeConsent\"];\n            initializeConsent();\n        }\n    }[\"ConsentProvider.useEffect\"], []);\n    const updateConsent = async (status)=>{\n        try {\n            const userId = consentState.userId || (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.getOrCreateUserId)();\n            console.log('Updating consent with userId:', userId);\n            const updatedConsent = await (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_2__.updateUserConsent)(status, {\n                userId\n            });\n            console.log('Updated consent data:', updatedConsent);\n            setConsentState((prev)=>({\n                    ...prev,\n                    userId: updatedConsent.userId,\n                    consentStatus: updatedConsent.consentStatus,\n                    consentUpdatedAt: updatedConsent.consentUpdatedAt,\n                    consentDetails: updatedConsent.consentDetails,\n                    showBanner: false\n                }));\n            return true;\n        } catch (error) {\n            console.error('Error updating consent:', error);\n            return false;\n        }\n    };\n    const toggleBanner = (show)=>{\n        setConsentState((prev)=>({\n                ...prev,\n                showBanner: show\n            }));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ConsentContext.Provider, {\n        value: {\n            ...consentState,\n            updateConsent,\n            toggleBanner\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/app/components/consent/ConsentContext.js\",\n        lineNumber: 130,\n        columnNumber: 5\n    }, this);\n}\nfunction useConsent() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConsentContext);\n    if (context === undefined) {\n        throw new Error('useConsent must be used within a ConsentProvider');\n    }\n    return context;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/consent/ConsentContext.js\n");

/***/ }),

/***/ "(pages-dir-node)/./components/layout/Layout.js":
/*!*************************************!*\
  !*** ./components/layout/Layout.js ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Layout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"(pages-dir-node)/./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _consent_ConsentBanner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../consent/ConsentBanner */ \"(pages-dir-node)/./components/consent/ConsentBanner.js\");\n/* harmony import */ var _UserProfileSidebar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../UserProfileSidebar */ \"(pages-dir-node)/./components/UserProfileSidebar.js\");\n/* harmony import */ var _styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../styles/Consent.module.css */ \"(pages-dir-node)/./styles/Consent.module.css\");\n/* harmony import */ var _styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _consent_ConsentContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../consent/ConsentContext */ \"(pages-dir-node)/./components/consent/ConsentContext.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_consent_ConsentBanner__WEBPACK_IMPORTED_MODULE_2__, _UserProfileSidebar__WEBPACK_IMPORTED_MODULE_3__, _consent_ConsentContext__WEBPACK_IMPORTED_MODULE_5__]);\n([_consent_ConsentBanner__WEBPACK_IMPORTED_MODULE_2__, _UserProfileSidebar__WEBPACK_IMPORTED_MODULE_3__, _consent_ConsentContext__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// frontend/components/layout/Layout.js\n\n\n\n\n\n\nfunction Layout({ children, title = 'Eye Tracking App' }) {\n    const { showBanner } = (0,_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_5__.useConsent)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: title\n                    }, void 0, false, {\n                        fileName: \"/app/components/layout/Layout.js\",\n                        lineNumber: 14,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"Eye tracking application with multiple models\"\n                    }, void 0, false, {\n                        fileName: \"/app/components/layout/Layout.js\",\n                        lineNumber: 15,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\"\n                    }, void 0, false, {\n                        fileName: \"/app/components/layout/Layout.js\",\n                        lineNumber: 16,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/components/layout/Layout.js\",\n                lineNumber: 13,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_consent_ConsentBanner__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                fileName: \"/app/components/layout/Layout.js\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: `${(_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_4___default().mainContent)} ${showBanner ? (_styles_Consent_module_css__WEBPACK_IMPORTED_MODULE_4___default().withBanner) : ''}`,\n                children: children\n            }, void 0, false, {\n                fileName: \"/app/components/layout/Layout.js\",\n                lineNumber: 22,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UserProfileSidebar__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"/app/components/layout/Layout.js\",\n                lineNumber: 27,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL2NvbXBvbmVudHMvbGF5b3V0L0xheW91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsdUNBQXVDOztBQUNWO0FBQ3dCO0FBQ0U7QUFDRjtBQUNFO0FBRXhDLFNBQVNLLE9BQU8sRUFBRUMsUUFBUSxFQUFFQyxRQUFRLGtCQUFrQixFQUFFO0lBQ3JFLE1BQU0sRUFBRUMsVUFBVSxFQUFFLEdBQUdKLG1FQUFVQTtJQUVqQyxxQkFDRTs7MEJBQ0UsOERBQUNKLGtEQUFJQTs7a0NBQ0gsOERBQUNPO2tDQUFPQTs7Ozs7O2tDQUNSLDhEQUFDRTt3QkFBS0MsTUFBSzt3QkFBY0MsU0FBUTs7Ozs7O2tDQUNqQyw4REFBQ0M7d0JBQUtDLEtBQUk7d0JBQU9DLE1BQUs7Ozs7Ozs7Ozs7OzswQkFJeEIsOERBQUNiLDhEQUFhQTs7Ozs7MEJBRWQsOERBQUNjO2dCQUFLQyxXQUFXLEdBQUdiLCtFQUFrQixDQUFDLENBQUMsRUFBRUssYUFBYUwsOEVBQWlCLEdBQUcsSUFBSTswQkFDNUVHOzs7Ozs7MEJBSUgsOERBQUNKLDJEQUFrQkE7Ozs7Ozs7QUFHekIiLCJzb3VyY2VzIjpbIi9hcHAvY29tcG9uZW50cy9sYXlvdXQvTGF5b3V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZyb250ZW5kL2NvbXBvbmVudHMvbGF5b3V0L0xheW91dC5qc1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcbmltcG9ydCBDb25zZW50QmFubmVyIGZyb20gJy4uL2NvbnNlbnQvQ29uc2VudEJhbm5lcic7XG5pbXBvcnQgVXNlclByb2ZpbGVTaWRlYmFyIGZyb20gJy4uL1VzZXJQcm9maWxlU2lkZWJhcic7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4uLy4uL3N0eWxlcy9Db25zZW50Lm1vZHVsZS5jc3MnO1xuaW1wb3J0IHsgdXNlQ29uc2VudCB9IGZyb20gJy4uL2NvbnNlbnQvQ29uc2VudENvbnRleHQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMYXlvdXQoeyBjaGlsZHJlbiwgdGl0bGUgPSAnRXllIFRyYWNraW5nIEFwcCcgfSkge1xuICBjb25zdCB7IHNob3dCYW5uZXIgfSA9IHVzZUNvbnNlbnQoKTtcbiAgXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+e3RpdGxlfTwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJFeWUgdHJhY2tpbmcgYXBwbGljYXRpb24gd2l0aCBtdWx0aXBsZSBtb2RlbHNcIiAvPlxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cIi9mYXZpY29uLmljb1wiIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICBcbiAgICAgIHsvKiBDb29raWUgY29uc2VudCBiYW5uZXIgYXQgdGhlIHRvcCAqL31cbiAgICAgIDxDb25zZW50QmFubmVyIC8+XG4gICAgICBcbiAgICAgIDxtYWluIGNsYXNzTmFtZT17YCR7c3R5bGVzLm1haW5Db250ZW50fSAke3Nob3dCYW5uZXIgPyBzdHlsZXMud2l0aEJhbm5lciA6ICcnfWB9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L21haW4+XG5cbiAgICAgIHsvKiBVc2VyIFByb2ZpbGUgU2lkZWJhciAqL31cbiAgICAgIDxVc2VyUHJvZmlsZVNpZGViYXIgLz5cbiAgICA8Lz5cbiAgKTtcbn0iXSwibmFtZXMiOlsiSGVhZCIsIkNvbnNlbnRCYW5uZXIiLCJVc2VyUHJvZmlsZVNpZGViYXIiLCJzdHlsZXMiLCJ1c2VDb25zZW50IiwiTGF5b3V0IiwiY2hpbGRyZW4iLCJ0aXRsZSIsInNob3dCYW5uZXIiLCJtZXRhIiwibmFtZSIsImNvbnRlbnQiLCJsaW5rIiwicmVsIiwiaHJlZiIsIm1haW4iLCJjbGFzc05hbWUiLCJtYWluQ29udGVudCIsIndpdGhCYW5uZXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-node)/./components/layout/Layout.js\n");

/***/ }),

/***/ "(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Fcollected-dataset-customized&preferredRegion=&absolutePagePath=.%2Fpages%2Fcollected-dataset-customized%2Findex.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Fcollected-dataset-customized&preferredRegion=&absolutePagePath=.%2Fpages%2Fcollected-dataset-customized%2Findex.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getServerSideProps: () => (/* binding */ getServerSideProps),\n/* harmony export */   getStaticPaths: () => (/* binding */ getStaticPaths),\n/* harmony export */   getStaticProps: () => (/* binding */ getStaticProps),\n/* harmony export */   reportWebVitals: () => (/* binding */ reportWebVitals),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   unstable_getServerProps: () => (/* binding */ unstable_getServerProps),\n/* harmony export */   unstable_getServerSideProps: () => (/* binding */ unstable_getServerSideProps),\n/* harmony export */   unstable_getStaticParams: () => (/* binding */ unstable_getStaticParams),\n/* harmony export */   unstable_getStaticPaths: () => (/* binding */ unstable_getStaticPaths),\n/* harmony export */   unstable_getStaticProps: () => (/* binding */ unstable_getStaticProps)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages/module.compiled */ \"(pages-dir-node)/./node_modules/next/dist/server/route-modules/pages/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(pages-dir-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(pages-dir-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! private-next-pages/_document */ \"(pages-dir-node)/./node_modules/next/dist/pages/_document.js\");\n/* harmony import */ var private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(private_next_pages_document__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! private-next-pages/_app */ \"(pages-dir-node)/./pages/_app.js\");\n/* harmony import */ var _pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/collected-dataset-customized/index.js */ \"(pages-dir-node)/./pages/collected-dataset-customized/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__, _pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__]);\n([private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__, _pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n// Import the app and document modules.\n\n\n// Import the userland code.\n\n// Re-export the component (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'default'));\n// Re-export methods.\nconst getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'getStaticProps');\nconst getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'getStaticPaths');\nconst getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'getServerSideProps');\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'config');\nconst reportWebVitals = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'reportWebVitals');\n// Re-export legacy methods.\nconst unstable_getStaticProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticProps');\nconst unstable_getStaticPaths = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticPaths');\nconst unstable_getStaticParams = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getStaticParams');\nconst unstable_getServerProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getServerProps');\nconst unstable_getServerSideProps = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__, 'unstable_getServerSideProps');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES,\n        page: \"/collected-dataset-customized\",\n        pathname: \"/collected-dataset-customized\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    components: {\n        // default export might not exist when optimized for data only\n        App: private_next_pages_app__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n        Document: (private_next_pages_document__WEBPACK_IMPORTED_MODULE_3___default())\n    },\n    userland: _pages_collected_dataset_customized_index_js__WEBPACK_IMPORTED_MODULE_5__\n});\n\n//# sourceMappingURL=pages.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVMmcGFnZT0lMkZjb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZjb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkJTJGaW5kZXguanMmYWJzb2x1dGVBcHBQYXRoPXByaXZhdGUtbmV4dC1wYWdlcyUyRl9hcHAmYWJzb2x1dGVEb2N1bWVudFBhdGg9cHJpdmF0ZS1uZXh0LXBhZ2VzJTJGX2RvY3VtZW50Jm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3RjtBQUNoQztBQUNFO0FBQzFEO0FBQ3lEO0FBQ1Y7QUFDL0M7QUFDMEU7QUFDMUU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHlFQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLHVCQUF1Qix3RUFBSyxDQUFDLHlFQUFRO0FBQ3JDLHVCQUF1Qix3RUFBSyxDQUFDLHlFQUFRO0FBQ3JDLDJCQUEyQix3RUFBSyxDQUFDLHlFQUFRO0FBQ3pDLGVBQWUsd0VBQUssQ0FBQyx5RUFBUTtBQUM3Qix3QkFBd0Isd0VBQUssQ0FBQyx5RUFBUTtBQUM3QztBQUNPLGdDQUFnQyx3RUFBSyxDQUFDLHlFQUFRO0FBQzlDLGdDQUFnQyx3RUFBSyxDQUFDLHlFQUFRO0FBQzlDLGlDQUFpQyx3RUFBSyxDQUFDLHlFQUFRO0FBQy9DLGdDQUFnQyx3RUFBSyxDQUFDLHlFQUFRO0FBQzlDLG9DQUFvQyx3RUFBSyxDQUFDLHlFQUFRO0FBQ3pEO0FBQ08sd0JBQXdCLGtHQUFnQjtBQUMvQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsYUFBYSw4REFBVztBQUN4QixrQkFBa0Isb0VBQWdCO0FBQ2xDLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxpQyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIGFwcCBhbmQgZG9jdW1lbnQgbW9kdWxlcy5cbmltcG9ydCAqIGFzIGRvY3VtZW50IGZyb20gXCJwcml2YXRlLW5leHQtcGFnZXMvX2RvY3VtZW50XCI7XG5pbXBvcnQgKiBhcyBhcHAgZnJvbSBcInByaXZhdGUtbmV4dC1wYWdlcy9fYXBwXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9jb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkL2luZGV4LmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGNvbXBvbmVudCAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBtZXRob2RzLlxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gaG9pc3QodXNlcmxhbmQsICdnZXRTdGF0aWNQcm9wcycpO1xuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsICdnZXRTdGF0aWNQYXRocycpO1xuZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wcyA9IGhvaXN0KHVzZXJsYW5kLCAnZ2V0U2VydmVyU2lkZVByb3BzJyk7XG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbmV4cG9ydCBjb25zdCByZXBvcnRXZWJWaXRhbHMgPSBob2lzdCh1c2VybGFuZCwgJ3JlcG9ydFdlYlZpdGFscycpO1xuLy8gUmUtZXhwb3J0IGxlZ2FjeSBtZXRob2RzLlxuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1Byb3BzID0gaG9pc3QodXNlcmxhbmQsICd1bnN0YWJsZV9nZXRTdGF0aWNQcm9wcycpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhdGhzID0gaG9pc3QodXNlcmxhbmQsICd1bnN0YWJsZV9nZXRTdGF0aWNQYXRocycpO1xuZXhwb3J0IGNvbnN0IHVuc3RhYmxlX2dldFN0YXRpY1BhcmFtcyA9IGhvaXN0KHVzZXJsYW5kLCAndW5zdGFibGVfZ2V0U3RhdGljUGFyYW1zJyk7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U2VydmVyUHJvcHMgPSBob2lzdCh1c2VybGFuZCwgJ3Vuc3RhYmxlX2dldFNlcnZlclByb3BzJyk7XG5leHBvcnQgY29uc3QgdW5zdGFibGVfZ2V0U2VydmVyU2lkZVByb3BzID0gaG9pc3QodXNlcmxhbmQsICd1bnN0YWJsZV9nZXRTZXJ2ZXJTaWRlUHJvcHMnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTLFxuICAgICAgICBwYWdlOiBcIi9jb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9jb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgY29tcG9uZW50czoge1xuICAgICAgICAvLyBkZWZhdWx0IGV4cG9ydCBtaWdodCBub3QgZXhpc3Qgd2hlbiBvcHRpbWl6ZWQgZm9yIGRhdGEgb25seVxuICAgICAgICBBcHA6IGFwcC5kZWZhdWx0LFxuICAgICAgICBEb2N1bWVudDogZG9jdW1lbnQuZGVmYXVsdFxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Fcollected-dataset-customized&preferredRegion=&absolutePagePath=.%2Fpages%2Fcollected-dataset-customized%2Findex.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _collected_dataset_styles_main_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collected-dataset/styles/main.css */ \"(pages-dir-node)/./pages/collected-dataset/styles/main.css\");\n/* harmony import */ var _collected_dataset_styles_main_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_collected_dataset_styles_main_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _collected_dataset_styles_camera_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collected-dataset/styles/camera.css */ \"(pages-dir-node)/./pages/collected-dataset/styles/camera.css\");\n/* harmony import */ var _collected_dataset_styles_camera_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_collected_dataset_styles_camera_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _collected_dataset_styles_topbar_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collected-dataset/styles/topbar.css */ \"(pages-dir-node)/./pages/collected-dataset/styles/topbar.css\");\n/* harmony import */ var _collected_dataset_styles_topbar_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_collected_dataset_styles_topbar_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../styles/Home.module.css */ \"(pages-dir-node)/./styles/Home.module.css\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _collected_dataset_styles_control_buttons_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./collected-dataset/styles/control-buttons.css */ \"(pages-dir-node)/./pages/collected-dataset/styles/control-buttons.css\");\n/* harmony import */ var _collected_dataset_styles_control_buttons_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_collected_dataset_styles_control_buttons_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _utils_stateManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/stateManager */ \"(pages-dir-node)/./utils/stateManager.js\");\n/* harmony import */ var _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/consent/ConsentContext */ \"(pages-dir-node)/./components/consent/ConsentContext.js\");\n/* harmony import */ var _components_layout_Layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/layout/Layout */ \"(pages-dir-node)/./components/layout/Layout.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_7__, _components_layout_Layout__WEBPACK_IMPORTED_MODULE_8__]);\n([_components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_7__, _components_layout_Layout__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// pages/_app.js\n\n\n\n\n\n\n\n\n// import ConnectionStatusIndicator from '../components/ConnectionStatusIndicator';\n\n// import { generateCalibrationPoints } from '../components/collected-dataset-customized/Action/CalibratePoints';\nfunction MyApp({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_utils_stateManager__WEBPACK_IMPORTED_MODULE_6__.ProcessStatusProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_utils_stateManager__WEBPACK_IMPORTED_MODULE_6__.BackendConnectionProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_7__.ConsentProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_layout_Layout__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"/app/pages/_app.js\",\n                        lineNumber: 20,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/app/pages/_app.js\",\n                    lineNumber: 18,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/app/pages/_app.js\",\n                lineNumber: 17,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/app/pages/_app.js\",\n            lineNumber: 16,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/app/pages/_app.js\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3BhZ2VzL19hcHAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGdCQUFnQjs7QUFDNkI7QUFDRTtBQUNBO0FBQ1o7QUFDcUI7QUFDaUM7QUFDbEI7QUFDdkUsbUZBQW1GO0FBQ2xDO0FBQ2pELGlIQUFpSDtBQUVqSCxTQUFTSSxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFO0lBQ3JDLHFCQUNFLDhEQUFDTixzRUFBcUJBO2tCQUNwQiw0RUFBQ0MsMEVBQXlCQTtzQkFDeEIsNEVBQUNDLCtFQUFlQTswQkFDZCw0RUFBQ0MsaUVBQU1BOzhCQUVMLDRFQUFDRTt3QkFBVyxHQUFHQyxTQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1wQztBQUVBLGlFQUFlRixLQUFLQSxFQUFDIiwic291cmNlcyI6WyIvYXBwL3BhZ2VzL19hcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcGFnZXMvX2FwcC5qc1xuaW1wb3J0ICcuL2NvbGxlY3RlZC1kYXRhc2V0L3N0eWxlcy9tYWluLmNzcyc7XG5pbXBvcnQgJy4vY29sbGVjdGVkLWRhdGFzZXQvc3R5bGVzL2NhbWVyYS5jc3MnO1xuaW1wb3J0ICcuL2NvbGxlY3RlZC1kYXRhc2V0L3N0eWxlcy90b3BiYXIuY3NzJztcbmltcG9ydCAnLi4vc3R5bGVzL0hvbWUubW9kdWxlLmNzcyc7XG5pbXBvcnQgJy4vY29sbGVjdGVkLWRhdGFzZXQvc3R5bGVzL2NvbnRyb2wtYnV0dG9ucy5jc3MnO1xuaW1wb3J0IHsgUHJvY2Vzc1N0YXR1c1Byb3ZpZGVyLCBCYWNrZW5kQ29ubmVjdGlvblByb3ZpZGVyIH0gZnJvbSAnLi4vdXRpbHMvc3RhdGVNYW5hZ2VyJztcbmltcG9ydCB7IENvbnNlbnRQcm92aWRlciB9IGZyb20gJy4uL2NvbXBvbmVudHMvY29uc2VudC9Db25zZW50Q29udGV4dCc7XG4vLyBpbXBvcnQgQ29ubmVjdGlvblN0YXR1c0luZGljYXRvciBmcm9tICcuLi9jb21wb25lbnRzL0Nvbm5lY3Rpb25TdGF0dXNJbmRpY2F0b3InO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL2xheW91dC9MYXlvdXQnO1xuLy8gaW1wb3J0IHsgZ2VuZXJhdGVDYWxpYnJhdGlvblBvaW50cyB9IGZyb20gJy4uL2NvbXBvbmVudHMvY29sbGVjdGVkLWRhdGFzZXQtY3VzdG9taXplZC9BY3Rpb24vQ2FsaWJyYXRlUG9pbnRzJztcblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiAoXG4gICAgPFByb2Nlc3NTdGF0dXNQcm92aWRlcj5cbiAgICAgIDxCYWNrZW5kQ29ubmVjdGlvblByb3ZpZGVyPlxuICAgICAgICA8Q29uc2VudFByb3ZpZGVyPlxuICAgICAgICAgIDxMYXlvdXQ+XG4gICAgICAgICAgICB7LyogPENvbm5lY3Rpb25TdGF0dXNJbmRpY2F0b3IgLz4gKi99XG4gICAgICAgICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgICAgICAgPC9MYXlvdXQ+XG4gICAgICAgIDwvQ29uc2VudFByb3ZpZGVyPlxuICAgICAgPC9CYWNrZW5kQ29ubmVjdGlvblByb3ZpZGVyPlxuICAgIDwvUHJvY2Vzc1N0YXR1c1Byb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBNeUFwcDsiXSwibmFtZXMiOlsiUHJvY2Vzc1N0YXR1c1Byb3ZpZGVyIiwiQmFja2VuZENvbm5lY3Rpb25Qcm92aWRlciIsIkNvbnNlbnRQcm92aWRlciIsIkxheW91dCIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/_app.js\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset-customized/components-gui/actionButton.js":
/*!***************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/actionButton.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActionButton: () => (/* binding */ ActionButton),\n/* harmony export */   ActionButtonGroup: () => (/* binding */ ActionButtonGroup),\n/* harmony export */   \"default\": () => (/* binding */ ActionButtonPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-node)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_collected_dataset_customized_Action_CalibratePoints_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../components/collected-dataset-customized/Action/CalibratePoints.jsx */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\");\n/* harmony import */ var _components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../components/collected-dataset-customized/Action/countSave.jsx */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/countSave.jsx\");\n/* harmony import */ var _components_collected_dataset_customized_Helper_savefile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-node)/./components/collected-dataset-customized/Helper/savefile.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _adminSettings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./adminSettings */ \"(pages-dir-node)/./pages/collected-dataset-customized/components-gui/adminSettings.js\");\n\n\n\n\n\n\n\n\n// Add deep comparison utility\nconst isEqual = (obj1, obj2)=>{\n    if (obj1 === obj2) return true;\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n    if (obj1 === null || obj2 === null) return false;\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) return false;\n    return keys1.every((key)=>keys2.includes(key) && isEqual(obj1[key], obj2[key]));\n};\n// Create a basic ActionButton component with optimization\nconst ActionButton = ({ text, abbreviatedText, onClick, customClass = '', disabled = false, active = false })=>{\n    const [isAbbreviated, setIsAbbreviated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { settings } = (0,_adminSettings__WEBPACK_IMPORTED_MODULE_7__.useAdminSettings)();\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('default');\n    const [isCapturing, setIsCapturing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [captureCounter, setCaptureCounter1] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [processStatus, setProcessStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    // Memoize button props to prevent unnecessary re-renders\n    const buttonProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ActionButton.useMemo[buttonProps]\": ()=>({\n                className: `action-button ${customClass} ${isAbbreviated ? 'abbreviated' : ''} ${active ? 'active' : ''}`,\n                onClick,\n                disabled,\n                title: text\n            })\n    }[\"ActionButton.useMemo[buttonProps]\"], [\n        customClass,\n        isAbbreviated,\n        active,\n        onClick,\n        disabled,\n        text\n    ]);\n    // Check window size and set abbreviated mode with debounce\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButton.useEffect\": ()=>{\n            if (true) return;\n            let timeoutId;\n            const handleResize = {\n                \"ActionButton.useEffect.handleResize\": ()=>{\n                    clearTimeout(timeoutId);\n                    timeoutId = setTimeout({\n                        \"ActionButton.useEffect.handleResize\": ()=>{\n                            const width = window.innerWidth;\n                            setIsAbbreviated(width < 768);\n                        }\n                    }[\"ActionButton.useEffect.handleResize\"], 100);\n                }\n            }[\"ActionButton.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            handleResize(); // Initial call\n            return ({\n                \"ActionButton.useEffect\": ()=>{\n                    window.removeEventListener('resize', handleResize);\n                    clearTimeout(timeoutId);\n                }\n            })[\"ActionButton.useEffect\"];\n        }\n    }[\"ActionButton.useEffect\"], []);\n    // Add effect to listen for user ID changes with optimization\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButton.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"ActionButton.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        const newUserId = event.detail.userId;\n                        if (newUserId !== currentUserId) {\n                            setCurrentUserId(newUserId);\n                        }\n                    }\n                }\n            }[\"ActionButton.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"ActionButton.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"ActionButton.useEffect\"];\n        }\n    }[\"ActionButton.useEffect\"], [\n        currentUserId\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        ...buttonProps,\n        children: [\n            isAbbreviated ? abbreviatedText : text,\n            processStatus && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"process-status\",\n                children: processStatus\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                lineNumber: 91,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n        lineNumber: 88,\n        columnNumber: 5\n    }, undefined);\n};\n// Create the ActionButtonGroup component with client-side only rendering and optimization\nconst ActionButtonGroupInner = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(({ triggerCameraAccess, isCompactMode, onActionClick }, ref)=>{\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    const { settings, updateSettings } = (0,_adminSettings__WEBPACK_IMPORTED_MODULE_7__.useAdminSettings)(ref);\n    // State for button actions\n    const [randomTimes, setRandomTimes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [delaySeconds, setDelaySeconds] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(3);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [processStatus, setProcessStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [countdownValue, setCountdownValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [currentDot, setCurrentDot] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [calibrationPoints, setCalibrationPoints] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [remainingCaptures, setRemainingCaptures] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [showCanvas, setShowCanvas] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Track the capture count\n    const [calibrationHandler, setCalibrationHandler] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [captureCount, setCaptureCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [isCapturing, setIsCapturing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Toggle states\n    const [showHeadPose, setShowHeadPose] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBoundingBox, setShowBoundingBox] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showMask, setShowMask] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showParameters, setShowParameters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isCameraActive, setIsCameraActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showPermissionPopup, setShowPermissionPopup] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('default');\n    // Add cache for settings\n    const settingsCache = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map());\n    const lastSettingsUpdate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map());\n    // Global canvas manager instance - initialize only once\n    const canvasManager = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ActionButtonGroupInner.useMemo[canvasManager]\": ()=>new CanvasManager()\n    }[\"ActionButtonGroupInner.useMemo[canvasManager]\"], []);\n    // Replace the complex canvas functions with simplified versions\n    const getMainCanvas = ()=>{\n        return canvasManager.getCanvas() || canvasManager.createCanvas();\n    };\n    const ensureCanvasExists = ()=>{\n        return canvasManager.createCanvas();\n    };\n    const restoreCanvasToContainer = (canvas)=>{\n        canvasManager.exitFullscreen();\n    };\n    const cleanupCanvas = ()=>{\n        canvasManager.destroy();\n    };\n    const clearCanvas = ()=>{\n        canvasManager.clear();\n    };\n    // Utility function to easily manage canvas operations\n    const canvasUtils = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>({\n                // Get or create canvas\n                getCanvas: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>canvasManager.getCanvas() || canvasManager.createCanvas()\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Enter fullscreen mode\n                enterFullscreen: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>{\n                        canvasManager.enterFullscreen();\n                        return canvasManager.getCanvas();\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Exit fullscreen mode\n                exitFullscreen: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>{\n                        canvasManager.exitFullscreen();\n                        return canvasManager.getCanvas();\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Clear canvas\n                clear: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>{\n                        canvasManager.clear();\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Draw dot at position\n                drawDot: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": (x, y, radius = 12)=>{\n                        const canvas = canvasManager.getCanvas();\n                        if (!canvas) return false;\n                        const ctx = canvas.getContext('2d');\n                        (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, x, y, radius, false);\n                        return true;\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Get canvas dimensions\n                getDimensions: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>{\n                        const canvas = canvasManager.getCanvas();\n                        if (!canvas) return {\n                            width: 0,\n                            height: 0\n                        };\n                        return {\n                            width: canvas.width,\n                            height: canvas.height\n                        };\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Check if canvas is in fullscreen\n                isFullscreen: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": ()=>canvasManager.isInFullscreen()\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"],\n                // Update canvas size to match container\n                resizeToContainer: ({\n                    \"ActionButtonGroupInner.useMemo[canvasUtils]\": (container)=>{\n                        const canvas = canvasManager.getCanvas();\n                        if (!canvas || !container) return false;\n                        const rect = container.getBoundingClientRect();\n                        canvas.width = rect.width || container.clientWidth || 800;\n                        canvas.height = rect.height || container.clientHeight || 600;\n                        // Clear and redraw white background\n                        const ctx = canvas.getContext('2d');\n                        ctx.fillStyle = 'white';\n                        ctx.fillRect(0, 0, canvas.width, canvas.height);\n                        return true;\n                    }\n                })[\"ActionButtonGroupInner.useMemo[canvasUtils]\"]\n            })\n    }[\"ActionButtonGroupInner.useMemo[canvasUtils]\"], []);\n    // Make canvas utilities globally available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (false) {}\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    if (false) {}\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        canvasUtils,\n        canvasManager\n    ]);\n    // Optimize settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (settings && currentUserId && settings[currentUserId]) {\n                const userSettings = settings[currentUserId];\n                const cachedSettings = settingsCache.current.get(currentUserId);\n                if (!isEqual(cachedSettings, userSettings)) {\n                    setRandomTimes(Number(userSettings.times_set_random) || 1);\n                    setDelaySeconds(Number(userSettings.delay_set_random) || 3);\n                    settingsCache.current.set(currentUserId, userSettings);\n                    lastSettingsUpdate.current.set(currentUserId, Date.now());\n                }\n            }\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        settings,\n        currentUserId\n    ]);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"ActionButtonGroupInner.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        // Update settings for new user\n                        if (settings && settings[newUserId]) {\n                            const userSettings = settings[newUserId];\n                            setRandomTimes(Number(userSettings.times_set_random) || 1);\n                            setDelaySeconds(Number(userSettings.delay_set_random) || 3);\n                        }\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        settings\n    ]);\n    // Listen for settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"ActionButtonGroupInner.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail && event.detail.type === 'captureSettings') {\n                        const { userId, times_set_random, delay_set_random } = event.detail;\n                        if (userId === currentUserId) {\n                            if (times_set_random !== undefined) {\n                                const newTimes = Number(times_set_random) || 1;\n                                setRandomTimes(newTimes);\n                            }\n                            if (delay_set_random !== undefined) {\n                                const newDelay = Number(delay_set_random) || 3;\n                                setDelaySeconds(newDelay);\n                            }\n                        }\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate);\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        currentUserId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            // Make functions globally accessible as a fallback\n            if (false) {}\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    if (false) {}\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            // Only initialize if canvas doesn't exist\n            if (!document.querySelector('#tracking-canvas')) {\n                const canvas = getMainCanvas();\n                console.log('Canvas initialized:', canvas ? 'success' : 'failed');\n            }\n            // Cleanup function\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    // Don't remove canvas on cleanup to prevent recreation issues\n                    console.log('ActionButton cleanup - canvas preserved');\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (true) return;\n            // Function to get control values from TopBar\n            const updateControlValues = {\n                \"ActionButtonGroupInner.useEffect.updateControlValues\": ()=>{\n                    // Get the time input element\n                    const timeInput = document.querySelector('.control-input-field[data-control=\"time\"]');\n                    if (timeInput) {\n                        const timeValue = parseInt(timeInput.value, 10);\n                        if (!isNaN(timeValue) && timeValue > 0) {\n                            console.log('Updating randomTimes to:', timeValue);\n                            setRandomTimes(timeValue);\n                        }\n                    }\n                    // Get the delay input element\n                    const delayInput = document.querySelector('.control-input-field[data-control=\"delay\"]');\n                    if (delayInput) {\n                        const delayValue = parseInt(delayInput.value, 10);\n                        if (!isNaN(delayValue) && delayValue > 0) {\n                            console.log('Updating delaySeconds to:', delayValue);\n                            setDelaySeconds(delayValue);\n                        }\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.updateControlValues\"];\n            // Add event listeners to the control inputs\n            const timeInput = document.querySelector('.control-input-field[data-control=\"time\"]');\n            const delayInput = document.querySelector('.control-input-field[data-control=\"delay\"]');\n            if (timeInput) {\n                timeInput.addEventListener('change', updateControlValues);\n                timeInput.addEventListener('input', updateControlValues); // Also listen for input events\n            }\n            if (delayInput) {\n                delayInput.addEventListener('change', updateControlValues);\n                delayInput.addEventListener('input', updateControlValues); // Also listen for input events\n            }\n            // Initial update\n            updateControlValues();\n            // Cleanup event listeners\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    if (timeInput) {\n                        timeInput.removeEventListener('change', updateControlValues);\n                        timeInput.removeEventListener('input', updateControlValues);\n                    }\n                    if (delayInput) {\n                        delayInput.removeEventListener('change', updateControlValues);\n                        delayInput.removeEventListener('input', updateControlValues);\n                    }\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    // Initialize canvas on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            // Canvas is now managed by CanvasManager\n            const canvas = getMainCanvas();\n            console.log('Canvas initialized:', canvas ? 'success' : 'failed');\n            return ({\n                \"ActionButtonGroupInner.useEffect\": ()=>{\n                    // Cleanup is handled by CanvasManager\n                    console.log('ActionButton cleanup - canvas preserved');\n                }\n            })[\"ActionButtonGroupInner.useEffect\"];\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], []);\n    // Canvas Manager - Simplified and centralized\n    class CanvasManager {\n        constructor(){\n            this.canvas = null;\n            this.originalState = null;\n            this.resizeObserver = null;\n            this.isFullscreen = false;\n        }\n        // Create or get canvas with automatic sizing\n        createCanvas(container = null) {\n            // Try to find existing canvas first\n            let canvas = document.querySelector('#tracking-canvas');\n            if (!canvas) {\n                canvas = document.createElement('canvas');\n                canvas.className = 'tracking-canvas';\n                canvas.id = 'tracking-canvas';\n            }\n            // Determine container\n            const targetContainer = container || document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n            // Set initial dimensions based on container\n            this.updateCanvasSize(canvas, targetContainer);\n            // Initialize with white background\n            const ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Add to container if not already there\n            if (!canvas.parentNode) {\n                targetContainer.appendChild(canvas);\n            }\n            // Store reference\n            this.canvas = canvas;\n            window.whiteScreenCanvas = canvas;\n            // Set up responsive behavior\n            this.setupResponsiveCanvas(canvas, targetContainer);\n            console.log(`Canvas created/updated: ${canvas.width}x${canvas.height}`);\n            return canvas;\n        }\n        // Update canvas size to match container\n        updateCanvasSize(canvas, container) {\n            if (!canvas || !container) return;\n            const rect = container.getBoundingClientRect();\n            const width = rect.width || container.clientWidth || 800;\n            const height = rect.height || container.clientHeight || 600;\n            canvas.width = width;\n            canvas.height = height;\n            // Update CSS to match\n            canvas.style.width = '100%';\n            canvas.style.height = '100%';\n            canvas.style.display = 'block';\n            canvas.style.backgroundColor = 'white';\n        }\n        // Set up responsive canvas that adapts to container size\n        setupResponsiveCanvas(canvas, container) {\n            if (!canvas || !container) return;\n            // Remove existing resize observer\n            if (this.resizeObserver) {\n                this.resizeObserver.disconnect();\n            }\n            // Create new resize observer\n            this.resizeObserver = new ResizeObserver((entries)=>{\n                for (const entry of entries){\n                    if (entry.target === container) {\n                        this.updateCanvasSize(canvas, container);\n                        // Redraw white background after resize\n                        const ctx = canvas.getContext('2d');\n                        ctx.fillStyle = 'white';\n                        ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    }\n                }\n            });\n            // Observe container for size changes\n            this.resizeObserver.observe(container);\n            // Also listen for window resize as fallback\n            const handleWindowResize = ()=>{\n                this.updateCanvasSize(canvas, container);\n                const ctx = canvas.getContext('2d');\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            };\n            window.addEventListener('resize', handleWindowResize);\n            canvas._windowResizeHandler = handleWindowResize;\n        }\n        // Switch to fullscreen mode\n        enterFullscreen() {\n            if (!this.canvas) {\n                this.canvas = this.createCanvas();\n            }\n            // Save original state\n            this.originalState = {\n                parent: this.canvas.parentElement,\n                position: this.canvas.style.position,\n                top: this.canvas.style.top,\n                left: this.canvas.style.left,\n                width: this.canvas.style.width,\n                height: this.canvas.style.height,\n                zIndex: this.canvas.style.zIndex\n            };\n            // Move to body and make fullscreen\n            document.body.appendChild(this.canvas);\n            // Set fullscreen styles\n            this.canvas.style.cssText = `\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        z-index: 99999;\n        background-color: white;\n        border: none;\n        display: block;\n        opacity: 1;\n        pointer-events: auto;\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n      `;\n            // Set canvas dimensions to window size\n            this.canvas.width = window.innerWidth;\n            this.canvas.height = window.innerHeight;\n            // Clear with white background\n            const ctx = this.canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            // Hide UI elements\n            this.hideUIElements();\n            this.isFullscreen = true;\n            console.log('Canvas entered fullscreen mode');\n        }\n        // Exit fullscreen mode\n        exitFullscreen() {\n            if (!this.canvas || !this.originalState) return;\n            // Show UI elements\n            this.showUIElements();\n            // Find appropriate container\n            const container = document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n            // Move canvas back to container\n            container.appendChild(this.canvas);\n            // Restore original styles\n            this.canvas.style.position = 'relative';\n            this.canvas.style.top = '';\n            this.canvas.style.left = '';\n            this.canvas.style.width = '100%';\n            this.canvas.style.height = '100%';\n            this.canvas.style.zIndex = '';\n            this.canvas.style.backgroundColor = 'white';\n            // Update size to match container\n            this.updateCanvasSize(this.canvas, container);\n            // Clear with white background\n            const ctx = this.canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            // Clear original state\n            this.originalState = null;\n            this.isFullscreen = false;\n            console.log('Canvas exited fullscreen mode');\n        }\n        // Hide UI elements during fullscreen\n        hideUIElements() {\n            const elementsToHide = [\n                '.topbar',\n                '.canvas-container',\n                '.main-content',\n                '.metrics-panel',\n                '.display-metrics',\n                'nav',\n                'header',\n                '.button-groups',\n                '.control-buttons'\n            ];\n            elementsToHide.forEach((selector)=>{\n                const elements = document.querySelectorAll(selector);\n                elements.forEach((el)=>{\n                    el.style.display = 'none';\n                    el.setAttribute('data-hidden-by-canvas', 'true');\n                });\n            });\n        }\n        // Show UI elements after fullscreen\n        showUIElements() {\n            const hiddenElements = document.querySelectorAll('[data-hidden-by-canvas=\"true\"]');\n            hiddenElements.forEach((el)=>{\n                el.style.display = '';\n                el.removeAttribute('data-hidden-by-canvas');\n            });\n        }\n        // Clear canvas content\n        clear() {\n            if (!this.canvas) return;\n            const ctx = this.canvas.getContext('2d');\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        // Cleanup\n        destroy() {\n            if (this.resizeObserver) {\n                this.resizeObserver.disconnect();\n            }\n            if (this.canvas && this.canvas._windowResizeHandler) {\n                window.removeEventListener('resize', this.canvas._windowResizeHandler);\n            }\n            if (this.canvas && this.canvas.parentNode) {\n                this.canvas.parentNode.removeChild(this.canvas);\n            }\n            if (window.whiteScreenCanvas === this.canvas) {\n                delete window.whiteScreenCanvas;\n            }\n            this.canvas = null;\n            this.originalState = null;\n            this.isFullscreen = false;\n        }\n        // Get current canvas\n        getCanvas() {\n            return this.canvas;\n        }\n        // Check if canvas is in fullscreen mode\n        isInFullscreen() {\n            return this.isFullscreen;\n        }\n    }\n    // Modified handleDotProcess function with improved dot and countdown alignment\n    // Complete handleDotProcess function with proper canvas management\n    const handleDotProcess = async (options)=>{\n        const { position, onStatusUpdate, toggleTopBar, triggerCameraAccess, setIsCapturing, captureCount, setCaptureCount, useRandomPosition = false, postCountdownDelay = 500 } = options;\n        let canvas = null;\n        let keepDotVisibleInterval = null;\n        let countdownElement = null;\n        try {\n            // Hide the TopBar before showing the dot\n            if (typeof toggleTopBar === 'function') {\n                toggleTopBar(false);\n            } else if (false) {}\n            // Set capturing state\n            setIsCapturing(true);\n            // Update status\n            onStatusUpdate?.({\n                processStatus: useRandomPosition ? 'Generating random dot...' : 'Starting dot process...',\n                isCapturing: true\n            });\n            // Wait for UI updates to take effect\n            await new Promise((resolve)=>setTimeout(resolve, 200));\n            // Use ensureCanvasExists to get or create canvas\n            canvas = ensureCanvasExists();\n            if (!canvas) {\n                throw new Error(\"Failed to create or find canvas\");\n            }\n            // Canvas is already set to fullscreen by ensureCanvasExists\n            const canvasWidth = canvas.width;\n            const canvasHeight = canvas.height;\n            // Get context and clear canvas with white background\n            const ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n            // Get position for the dot - either use provided position or generate random one\n            const dotPosition = useRandomPosition ? (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.getRandomPosition)(canvas, 20) : position;\n            if (!dotPosition || typeof dotPosition.x !== 'number' || typeof dotPosition.y !== 'number') {\n                throw new Error(\"Invalid dot position\");\n            }\n            // Draw the dot\n            const dotRadius = 12;\n            (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            // Create a redraw interval to ensure dot stays visible\n            keepDotVisibleInterval = setInterval(()=>{\n                (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            }, 50); // More frequent updates for reliability\n            // Remove any existing countdown elements\n            const existingCountdowns = document.querySelectorAll('.dot-countdown, .calibrate-countdown');\n            existingCountdowns.forEach((el)=>{\n                if (el.parentNode) el.parentNode.removeChild(el);\n            });\n            // Create a countdown element directly on top of the dot\n            countdownElement = document.createElement('div');\n            countdownElement.className = 'dot-countdown';\n            countdownElement.style.cssText = `\n        position: fixed;\n        left: ${dotPosition.x}px;\n        top: ${dotPosition.y}px;\n        transform: translate(-50%, -50%);\n        color: red;\n        font-size: 36px;\n        font-weight: bold;\n        text-shadow: 0 0 10px white, 0 0 20px white;\n        z-index: 10000;\n        background-color: rgba(255, 255, 255, 0.8);\n        border: 2px solid red;\n        border-radius: 50%;\n        width: 50px;\n        height: 50px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n      `;\n            document.body.appendChild(countdownElement);\n            // Manual countdown\n            for(let count = 3; count > 0; count--){\n                countdownElement.textContent = count;\n                onStatusUpdate?.({\n                    processStatus: `Countdown: ${count}`,\n                    countdownValue: count,\n                    isCapturing: true\n                });\n                // Redraw the dot for reliability\n                (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n                await new Promise((resolve)=>setTimeout(resolve, 800));\n                // Additional redraw during countdown to ensure visibility\n                (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            }\n            // Show checkmark\n            countdownElement.textContent = \"✓\";\n            // Make sure dot is still visible\n            (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            // Remove countdown element after delay\n            setTimeout(()=>{\n                if (countdownElement && countdownElement.parentNode) {\n                    countdownElement.parentNode.removeChild(countdownElement);\n                }\n            }, 300);\n            // Wait after countdown completes\n            await new Promise((resolve)=>setTimeout(resolve, postCountdownDelay));\n            // Ensure the dot is still visible\n            (0,_components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.drawRedDot)(ctx, dotPosition.x, dotPosition.y, dotRadius, false);\n            // Capture images at this point\n            const captureResult = await (0,_components_collected_dataset_customized_Helper_savefile__WEBPACK_IMPORTED_MODULE_5__.captureImagesAtPoint)({\n                point: dotPosition,\n                captureCount: captureCount,\n                canvasRef: {\n                    current: canvas\n                },\n                setCaptureCount: setCaptureCount,\n                showCapturePreview: _components_collected_dataset_customized_Action_countSave_jsx__WEBPACK_IMPORTED_MODULE_4__.showCapturePreview\n            });\n            // Update status\n            onStatusUpdate?.({\n                processStatus: 'Capture completed',\n                isCapturing: false\n            });\n            return {\n                success: true,\n                position: dotPosition,\n                captureResult\n            };\n        } catch (error) {\n            console.error(\"Error in handleDotProcess:\", error);\n            onStatusUpdate?.({\n                processStatus: `Error: ${error.message}`,\n                isCapturing: false\n            });\n            return {\n                success: false,\n                error: error.message\n            };\n        } finally{\n            // Clear redraw interval first\n            if (keepDotVisibleInterval) {\n                clearInterval(keepDotVisibleInterval);\n                keepDotVisibleInterval = null;\n            }\n            // Remove countdown element if it still exists\n            if (countdownElement && countdownElement.parentNode) {\n                countdownElement.parentNode.removeChild(countdownElement);\n            }\n            // Remove any remaining countdown elements\n            const remainingCountdowns = document.querySelectorAll('.dot-countdown, .calibrate-countdown');\n            remainingCountdowns.forEach((el)=>{\n                if (el.parentNode) el.parentNode.removeChild(el);\n            });\n            // Use restoreCanvasToContainer to properly restore canvas\n            if (canvas) {\n                restoreCanvasToContainer(canvas);\n            }\n            // Show TopBar again after a delay\n            setTimeout(()=>{\n                if (typeof toggleTopBar === 'function') {\n                    toggleTopBar(true);\n                } else if (false) {}\n            }, 1000);\n        }\n    };\n    const handleSetCalibrate = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Ensure canvas is initialized first\n            const canvas = getMainCanvas();\n            if (!canvas) {\n                throw new Error(\"Canvas not available\");\n            }\n            // Import and use SetCalibrateAction\n            const { default: SetCalibrateAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-node_components_collected-dataset-customized_Action_SetCalibrateAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/collected-dataset-customized/Action/SetCalibrateAction.jsx */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/SetCalibrateAction.jsx\"));\n            const setCalibrateAction = new SetCalibrateAction({\n                canvasRef: {\n                    current: canvas\n                },\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                setIsCapturing,\n                setProcessStatus,\n                setCurrentDot,\n                triggerCameraAccess,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                },\n                saveImageToServer: true,\n                setCaptureCounter,\n                captureCounter: captureCount\n            });\n            await setCalibrateAction.handleSetCalibrate();\n        } catch (error) {\n            console.error(\"Calibration error:\", error);\n            setProcessStatus(`Calibration error: ${error.message}`);\n            setIsCapturing(false);\n        }\n    };\n    const handleSetRandom = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Import and use SetRandomAction\n            const { default: SetRandomAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-node_components_collected-dataset-customized_Action_SetRandomAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/collected-dataset-customized/Action/SetRandomAction.jsx */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/SetRandomAction.jsx\"));\n            const setRandomAction = new SetRandomAction({\n                canvasRef,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                    if (status.remainingCaptures !== undefined) setRemainingCaptures(status.remainingCaptures);\n                },\n                setCaptureCounter,\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                captureCounter: captureCount,\n                triggerCameraAccess\n            });\n            await setRandomAction.handleAction();\n        } catch (error) {\n            console.error(\"Random sequence error:\", error);\n            setProcessStatus(`Random sequence failed: ${error.message}`);\n            setIsCapturing(false);\n        }\n    };\n    const handleRandomDot = async ()=>{\n        if (isCapturing) return;\n        try {\n            // Import and use RandomDotAction\n            const { default: RandomDotAction } = await __webpack_require__.e(/*! import() */ \"_pages-dir-node_components_collected-dataset-customized_Action_RandomDotAction_jsx\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/collected-dataset-customized/Action/RandomDotAction.jsx */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/RandomDotAction.jsx\"));\n            const randomDotAction = new RandomDotAction({\n                canvasRef,\n                toggleTopBar: (show)=>{\n                    if (typeof onActionClick === 'function') {\n                        onActionClick('toggleTopBar', show);\n                    }\n                },\n                setIsCapturing,\n                setProcessStatus,\n                setCurrentDot,\n                triggerCameraAccess,\n                onStatusUpdate: (status)=>{\n                    if (status.processStatus) setProcessStatus(status.processStatus);\n                    if (status.isCapturing !== undefined) setIsCapturing(status.isCapturing);\n                },\n                saveImageToServer: true,\n                setCaptureCounter,\n                captureCounter: captureCount\n            });\n            await randomDotAction.handleRandomDot();\n        } catch (error) {\n            console.error('Random dot error:', error);\n            setProcessStatus(`Error: ${error.message}`);\n            setIsCapturing(false);\n        }\n    };\n    // Load calibration setup\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ActionButtonGroupInner.useEffect\": ()=>{\n            if (true) return;\n            const setupCalibration = {\n                \"ActionButtonGroupInner.useEffect.setupCalibration\": async ()=>{\n                    try {\n                        const { default: CalibrateHandler } = await __webpack_require__.e(/*! import() */ \"_pages-dir-node_components_collected-dataset-customized_Action_CalibrateHandler_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../components/collected-dataset-customized/Action/CalibrateHandler */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/CalibrateHandler.js\"));\n                        const canvas = getMainCanvas();\n                        if (!canvas) {\n                            console.warn(\"Canvas not available during setupCalibration\");\n                            return;\n                        }\n                        if (canvas) {\n                            makeCanvasFullscreen(canvas);\n                        }\n                        // console.log('Canvas size:', canvas.width, canvas.height);\n                        const points = (0,_components_collected_dataset_customized_Action_CalibratePoints_jsx__WEBPACK_IMPORTED_MODULE_3__.generateCalibrationPoints)(canvas.width, canvas.height);\n                        // console.log('Generated calibration points:', points);\n                        setCalibrationPoints(points);\n                        const calibrateHandler = new CalibrateHandler({\n                            canvasRef: {\n                                current: canvas\n                            },\n                            calibrationPoints: points,\n                            toggleTopBar: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (show)=>onActionClick?.('toggleTopBar', show)\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            setOutputText: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (status)=>{\n                                    setProcessStatus(status);\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            captureCounter: captureCount,\n                            setCaptureCounter: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": (newCounter)=>{\n                                    if (typeof newCounter === 'function') {\n                                        setCaptureCount({\n                                            \"ActionButtonGroupInner.useEffect.setupCalibration\": (prev)=>newCounter(prev)\n                                        }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]);\n                                    } else {\n                                        setCaptureCount(newCounter);\n                                    }\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"],\n                            captureFolder: 'eye_tracking_captures',\n                            onComplete: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": ()=>{\n                                    setIsCapturing(false);\n                                    setProcessStatus('Calibration completed');\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]\n                        });\n                        setCalibrationHandler({\n                            handleAction: {\n                                \"ActionButtonGroupInner.useEffect.setupCalibration\": async ()=>{\n                                    setIsCapturing(true);\n                                    setProcessStatus('Starting calibration...');\n                                    await calibrateHandler.startCalibration();\n                                    setIsCapturing(false);\n                                }\n                            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"]\n                        });\n                        if (canvas) {\n                            restoreCanvasSize(canvas);\n                        }\n                    } catch (err) {\n                        console.error('Error initializing calibration:', err);\n                    }\n                }\n            }[\"ActionButtonGroupInner.useEffect.setupCalibration\"];\n            setupCalibration();\n        }\n    }[\"ActionButtonGroupInner.useEffect\"], [\n        captureCount,\n        onActionClick\n    ]);\n    // Clear All Button - Reset everything\n    const handleClearAll = ()=>{\n        // Clear canvas content\n        const canvas = document.querySelector('#tracking-canvas');\n        if (canvas) {\n            const ctx = canvas.getContext('2d');\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Restore canvas to container mode\n            restoreCanvasToContainer(canvas);\n        }\n        // Reset states\n        setProcessStatus('');\n        setRemainingCaptures(0);\n        setIsCapturing(false);\n        setCountdownValue(null);\n        setShowCanvas(true);\n        setCurrentDot(null);\n    };\n    // Toggle Head Pose visualization\n    const handleToggleHeadPose = ()=>{\n        const newHeadPoseState = !showHeadPose;\n        setShowHeadPose(newHeadPoseState);\n        setProcessStatus(`Head pose visualization ${newHeadPoseState ? 'enabled' : 'disabled'}`);\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('headPose');\n        }\n        // Update videoProcessor options directly if available\n        if (false) {}\n    };\n    // Toggle Bounding Box visualization\n    const handleToggleBoundingBox = ()=>{\n        const newBoundingBoxState = !showBoundingBox;\n        setShowBoundingBox(newBoundingBoxState);\n        setProcessStatus(`Bounding box ${newBoundingBoxState ? 'shown' : 'hidden'}`);\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('boundingBox');\n        }\n        // Update videoProcessor options directly if available\n        if (false) {}\n    };\n    // Toggle Mask visualization\n    const handleToggleMask = ()=>{\n        const newMaskState = !showMask;\n        setShowMask(newMaskState);\n        setProcessStatus(`Mask ${newMaskState ? 'shown' : 'hidden'}`);\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('mask');\n        }\n        // Update videoProcessor options directly if available\n        if (false) {}\n    };\n    // Toggle Parameters display\n    const handleToggleParameters = ()=>{\n        const newParametersState = !showParameters;\n        setShowParameters(newParametersState);\n        setProcessStatus(`Parameters ${newParametersState ? 'shown' : 'hidden'}`);\n        // Call the parent handler to update processor options\n        if (onActionClick) {\n            onActionClick('parameters');\n        }\n        // Update videoProcessor options directly if available\n        if (false) {}\n    };\n    // Toggle camera preview\n    const handleToggleCamera = ()=>{\n        const newCameraState = !isCameraActive;\n        setIsCameraActive(newCameraState);\n        // Call the parent handler with 'preview' action\n        if (onActionClick) {\n            onActionClick('preview', newCameraState); // Pass the new state\n        } else {\n            // Fallback to direct trigger if no action handler\n            setShowPermissionPopup(true);\n        }\n        // If turning on camera, ensure we apply current visualization settings\n        if (newCameraState && \"undefined\" !== 'undefined' && 0) {}\n    };\n    // Camera permission handlers\n    const handlePermissionAccepted = ()=>{\n        setShowPermissionPopup(false);\n        if (triggerCameraAccess) {\n            triggerCameraAccess(true);\n        }\n    };\n    const handlePermissionDenied = ()=>{\n        setShowPermissionPopup(false);\n        setProcessStatus('Camera access denied');\n    };\n    // Add back button handler\n    const handleGoBack = ()=>{\n        router.push('/');\n    };\n    // Mobile layout - 2x5 grid\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            isCompactMode ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 gap-2 mb-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {}, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                    lineNumber: 1210,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                lineNumber: 1209,\n                columnNumber: 9\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-2 gap-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {}, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                    lineNumber: 1214,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                lineNumber: 1213,\n                columnNumber: 9\n            }, undefined),\n            showPermissionPopup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"camera-permission-popup\",\n                style: {\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    zIndex: 15\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"camera-permission-dialog\",\n                    style: {\n                        width: '400px',\n                        backgroundColor: 'white',\n                        borderRadius: '8px',\n                        padding: '20px',\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"camera-permission-title\",\n                            style: {\n                                margin: '0 0 15px',\n                                fontSize: '18px',\n                                fontWeight: 'bold'\n                            },\n                            children: \"Camera Access Required\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                            lineNumber: 1245,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"camera-permission-message\",\n                            style: {\n                                margin: '0 0 20px',\n                                fontSize: '14px',\n                                lineHeight: '1.4'\n                            },\n                            children: 'This application needs access to your camera to function properly. When prompted by your browser, please click \"Allow\" to grant camera access.'\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                            lineNumber: 1255,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"camera-permission-buttons\",\n                            style: {\n                                display: 'flex',\n                                justifyContent: 'flex-end',\n                                gap: '10px'\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handlePermissionDenied,\n                                    className: \"camera-btn\",\n                                    style: {\n                                        padding: '8px 16px',\n                                        backgroundColor: '#f0f0f0',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        cursor: 'pointer'\n                                    },\n                                    children: \"Cancel\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                                    lineNumber: 1273,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handlePermissionAccepted,\n                                    className: \"camera-btn\",\n                                    style: {\n                                        padding: '8px 16px',\n                                        backgroundColor: '#0066cc',\n                                        color: 'white',\n                                        border: 'none',\n                                        borderRadius: '4px',\n                                        cursor: 'pointer'\n                                    },\n                                    children: \"Continue\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                                    lineNumber: 1286,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                            lineNumber: 1265,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                    lineNumber: 1235,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n                lineNumber: 1220,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n        lineNumber: 1207,\n        columnNumber: 5\n    }, undefined);\n});\nconst ActionButtonGroup = next_dynamic__WEBPACK_IMPORTED_MODULE_2___default()(()=>Promise.resolve(/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ActionButtonGroupInner, {\n            ...props,\n            ref: ref\n        }, void 0, false, {\n            fileName: \"/app/pages/collected-dataset-customized/components-gui/actionButton.js\",\n            lineNumber: 1308,\n            columnNumber: 30\n        }, undefined))), {\n    ssr: false\n});\n// Create a client-only version of ActionButtonGroup\n// const ActionButtonGroup = dynamic(() => Promise.resolve(ActionButtonGroupInner), { ssr: false });\n// Add default export component\nfunction ActionButtonPage() {\n    return null; // This is a utility file, so we don't need to render anything\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/collected-dataset-customized/components-gui/actionButton.js\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset-customized/components-gui/adminSettings.js":
/*!****************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/adminSettings.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AdminSettings),\n/* harmony export */   useAdminSettings: () => (/* binding */ useAdminSettings)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n// Add deep comparison utility\nconst isEqual = (obj1, obj2)=>{\n    if (obj1 === obj2) return true;\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n    if (obj1 === null || obj2 === null) return false;\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) return false;\n    return keys1.every((key)=>keys2.includes(key) && isEqual(obj1[key], obj2[key]));\n};\n// Add debounce utility\nconst debounce = (func, wait)=>{\n    let timeout;\n    return function executedFunction(...args) {\n        const later = ()=>{\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n// Helper function to safely access localStorage\nconst getLocalStorage = (key)=>{\n    if (true) return null;\n    try {\n        return localStorage.getItem(key);\n    } catch (error) {\n        console.warn('Error accessing localStorage:', error);\n        return null;\n    }\n};\n// Helper function to safely set localStorage\nconst setLocalStorage = (key, value)=>{\n    if (true) return;\n    try {\n        localStorage.setItem(key, value);\n    } catch (error) {\n        console.warn('Error setting localStorage:', error);\n    }\n};\nconst useAdminSettings = (ref)=>{\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        \"useAdminSettings.useState\": ()=>{\n            // Initialize from localStorage on mount, safely\n            return getLocalStorage('currentUserId');\n        }\n    }[\"useAdminSettings.useState\"]);\n    const [isTopBarUpdated, setIsTopBarUpdated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const initialized = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const pollingInterval = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [currentSettings, setCurrentSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const [lastUpdateTime, setLastUpdateTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    // Constants for timing\n    const MIN_UPDATE_INTERVAL = 2000; // 2 seconds minimum between updates\n    const CACHE_DURATION = 30000; // 30 seconds cache duration\n    const POLLING_INTERVAL = 5000; // 5 seconds polling interval\n    // Cache and state tracking\n    const settingsCache = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const lastSettingsUpdate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const pendingUpdates = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    const isUpdating = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const lastKnownSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    // Debug logging for settings changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            console.log('AdminSettings - Current Settings:', settings);\n            console.log('AdminSettings - Current User ID:', currentUserId);\n            console.log('AdminSettings - Is TopBar Updated:', isTopBarUpdated);\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings,\n        currentUserId,\n        isTopBarUpdated\n    ]);\n    // Helper: Fetch settings for a user from backend with enhanced caching\n    const fetchSettingsForUser = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAdminSettings.useCallback[fetchSettingsForUser]\": async (userId)=>{\n            if (!userId) return;\n            // Check cache first\n            const cachedSettings = settingsCache.current.get(userId);\n            const lastUpdate = lastSettingsUpdate.current.get(userId);\n            const now = Date.now();\n            // If we have cached settings and they're recent enough, use them\n            if (cachedSettings && lastUpdate && now - lastUpdate < CACHE_DURATION) {\n                console.log('[AdminSettings] Using cached settings for user:', userId);\n                return cachedSettings;\n            }\n            // If there's already a pending update, return the cached value\n            if (pendingUpdates.current.has(userId)) {\n                console.log('[AdminSettings] Pending update exists, using cached value');\n                return cachedSettings;\n            }\n            // If an update is in progress, return the cached value\n            if (isUpdating.current) {\n                console.log('[AdminSettings] Update in progress, using cached value');\n                return cachedSettings;\n            }\n            try {\n                isUpdating.current = true;\n                pendingUpdates.current.set(userId, true);\n                const response = await fetch(`/api/data-center/settings/${userId}`, {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                    }\n                });\n                if (!response.ok) {\n                    const errorData = await response.json().catch({\n                        \"useAdminSettings.useCallback[fetchSettingsForUser]\": ()=>({})\n                    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"]);\n                    throw new Error(errorData.detail || 'Failed to fetch settings');\n                }\n                const result = await response.json();\n                const newSettings = result.data || {};\n                // Compare with last known settings\n                const lastKnown = lastKnownSettings.current.get(userId);\n                const hasChanged = !isEqual(lastKnown, newSettings);\n                if (hasChanged) {\n                    console.log('[AdminSettings] Settings changed, updating...');\n                    setSettings({\n                        \"useAdminSettings.useCallback[fetchSettingsForUser]\": (prev)=>({\n                                ...prev,\n                                [userId]: newSettings\n                            })\n                    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"]);\n                    setCurrentSettings(newSettings);\n                    // Update caches\n                    settingsCache.current.set(userId, newSettings);\n                    lastSettingsUpdate.current.set(userId, now);\n                    lastKnownSettings.current.set(userId, newSettings);\n                    // Update TopBar if ref provided\n                    if (ref && ref.current && ref.current.setCaptureSettings) {\n                        ref.current.setCaptureSettings(newSettings);\n                        setIsTopBarUpdated(true);\n                    }\n                } else {\n                    console.log('[AdminSettings] Settings unchanged, skipping update');\n                }\n                setError(null);\n                return newSettings;\n            } catch (error) {\n                console.error('[AdminSettings] Error fetching settings:', error);\n                setError(error.message);\n                return cachedSettings; // Return cached settings on error\n            } finally{\n                isUpdating.current = false;\n                pendingUpdates.current.delete(userId);\n            }\n        }\n    }[\"useAdminSettings.useCallback[fetchSettingsForUser]\"], [\n        ref\n    ]);\n    // Debounced version of fetchSettingsForUser\n    const debouncedFetchSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(debounce({\n        \"useAdminSettings.useCallback[debouncedFetchSettings]\": (userId)=>{\n            fetchSettingsForUser(userId);\n        }\n    }[\"useAdminSettings.useCallback[debouncedFetchSettings]\"], 1000), [\n        fetchSettingsForUser\n    ]);\n    // Polling for settings updates with value-based optimization\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (!currentUserId) return;\n            const fetchSettings = {\n                \"useAdminSettings.useEffect.fetchSettings\": async ()=>{\n                    const now = Date.now();\n                    if (now - lastUpdateTime < MIN_UPDATE_INTERVAL) {\n                        return;\n                    }\n                    try {\n                        await debouncedFetchSettings(currentUserId);\n                        setLastUpdateTime(now);\n                    } catch (error) {\n                        console.error('[AdminSettings] Polling error:', error);\n                    }\n                }\n            }[\"useAdminSettings.useEffect.fetchSettings\"];\n            // Initial fetch\n            fetchSettings();\n            // Set up polling with value-based interval\n            pollingInterval.current = setInterval(fetchSettings, POLLING_INTERVAL);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>{\n                    if (pollingInterval.current) {\n                        clearInterval(pollingInterval.current);\n                    }\n                }\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId,\n        lastUpdateTime,\n        debouncedFetchSettings\n    ]);\n    // Listen for userId changes (from index.js navigation)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"useAdminSettings.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.userId) {\n                        console.log('[handleUserIdChange] userId:', event.detail.userId);\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        setLocalStorage('currentUserId', newUserId);\n                        fetchSettingsForUser(newUserId);\n                    }\n                }\n            }[\"useAdminSettings.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>window.removeEventListener('userIdChange', handleUserIdChange)\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        ref\n    ]);\n    // Initial settings fetch on mount if we have a user ID\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (currentUserId && !initialized.current) {\n                fetchSettingsForUser(currentUserId);\n                initialized.current = true;\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId\n    ]);\n    // Effect to handle index.js update after TopBar is updated\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (isTopBarUpdated) {\n                const event = new CustomEvent('settingsUpdated', {\n                    detail: {\n                        type: 'settings',\n                        userId: currentUserId,\n                        settings: settings[currentUserId]\n                    }\n                });\n                window.dispatchEvent(event);\n                setIsTopBarUpdated(false);\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        isTopBarUpdated,\n        currentUserId,\n        settings\n    ]);\n    // Load settings from localStorage on mount (optional, fallback)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            try {\n                const savedSettings = getLocalStorage('adminSettings');\n                if (savedSettings) {\n                    const parsedSettings = JSON.parse(savedSettings);\n                    setSettings(parsedSettings);\n                }\n            } catch (error) {\n                console.warn('Error loading settings from localStorage:', error);\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], []);\n    // Save settings to localStorage when they change (optional)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (initialized.current) {\n                try {\n                    setLocalStorage('adminSettings', JSON.stringify(settings));\n                } catch (error) {\n                    console.warn('Error saving settings to localStorage:', error);\n                }\n            } else {\n                initialized.current = true;\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings\n    ]);\n    // Update settings when they change in the context\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            if (settings && currentUserId) {\n                console.log('[settings useEffect] currentUserId:', currentUserId); // Debug log\n                const userSettings = settings[currentUserId];\n                if (userSettings) {\n                    setCurrentSettings(userSettings);\n                // Optionally update UI elements if needed\n                }\n            }\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        settings,\n        currentUserId\n    ]);\n    // Listen for settings updates from admin page (captureSettingsUpdate event)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useAdminSettings.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"useAdminSettings.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail && event.detail.type === 'captureSettings') {\n                        const { userId, times, delay } = event.detail;\n                        console.log('[handleSettingsUpdate] userId:', userId, 'currentUserId:', currentUserId); // Debug log\n                        if (userId === currentUserId) {\n                            const newSettings = {\n                                ...currentSettings,\n                                times: times !== undefined ? Number(times) : currentSettings.times,\n                                delay: delay !== undefined ? Number(delay) : currentSettings.delay\n                            };\n                            setCurrentSettings(newSettings);\n                            setSettings({\n                                \"useAdminSettings.useEffect.handleSettingsUpdate\": (prev)=>({\n                                        ...prev,\n                                        [userId]: newSettings\n                                    })\n                            }[\"useAdminSettings.useEffect.handleSettingsUpdate\"]);\n                            updateSettings(newSettings, userId);\n                        }\n                    }\n                }\n            }[\"useAdminSettings.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"useAdminSettings.useEffect\": ()=>window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate)\n            })[\"useAdminSettings.useEffect\"];\n        }\n    }[\"useAdminSettings.useEffect\"], [\n        currentUserId,\n        currentSettings\n    ]);\n    // Update settings for a user with value-based optimization\n    const updateSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAdminSettings.useCallback[updateSettings]\": async (newSettings, userId)=>{\n            if (!userId) return;\n            const now = Date.now();\n            if (now - lastUpdateTime < MIN_UPDATE_INTERVAL) {\n                console.log('[updateSettings] Skipping update - too soon after last update');\n                return;\n            }\n            const updatedSettings = {\n                ...settings[userId],\n                ...newSettings\n            };\n            // Compare with last known settings\n            const lastKnown = lastKnownSettings.current.get(userId);\n            const hasChanged = !isEqual(lastKnown, updatedSettings);\n            if (!hasChanged) {\n                console.log('[updateSettings] Settings unchanged, skipping update');\n                return;\n            }\n            try {\n                isUpdating.current = true;\n                pendingUpdates.current.set(userId, true);\n                const response = await fetch(`/api/data-center/settings/${userId}`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                    },\n                    body: JSON.stringify(updatedSettings)\n                });\n                if (!response.ok) {\n                    const errorData = await response.json().catch({\n                        \"useAdminSettings.useCallback[updateSettings]\": ()=>({})\n                    }[\"useAdminSettings.useCallback[updateSettings]\"]);\n                    throw new Error(errorData.detail || 'Failed to save settings');\n                }\n                const result = await response.json();\n                const finalSettings = result.data || updatedSettings;\n                // Update state and caches\n                setSettings({\n                    \"useAdminSettings.useCallback[updateSettings]\": (prev)=>({\n                            ...prev,\n                            [userId]: finalSettings\n                        })\n                }[\"useAdminSettings.useCallback[updateSettings]\"]);\n                setCurrentSettings(finalSettings);\n                settingsCache.current.set(userId, finalSettings);\n                lastSettingsUpdate.current.set(userId, now);\n                lastKnownSettings.current.set(userId, finalSettings);\n                setLastUpdateTime(now);\n                setError(null);\n            } catch (error) {\n                setError(error.message);\n            } finally{\n                isUpdating.current = false;\n                pendingUpdates.current.delete(userId);\n            }\n        }\n    }[\"useAdminSettings.useCallback[updateSettings]\"], [\n        settings,\n        lastUpdateTime\n    ]);\n    // Upload and update image for a user\n    const updateImage = async (userId, base64Image)=>{\n        console.log('[updateImage] userId:', userId); // Debug log\n        if (!userId || !base64Image) return;\n        try {\n            const response = await fetch(`/api/data-center/image?user_id=${userId}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                },\n                body: JSON.stringify({\n                    image: base64Image\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json().catch(()=>({}));\n                throw new Error(errorData.detail || 'Failed to upload image');\n            }\n            // Optionally, fetch settings again to get updated image info\n            await fetchSettingsForUser(userId);\n            setError(null);\n            return true;\n        } catch (error) {\n            setError(error.message);\n            return false;\n        }\n    };\n    return {\n        settings,\n        currentSettings,\n        currentUserId,\n        error,\n        updateSettings: fetchSettingsForUser\n    };\n};\n// Add default export component\nfunction AdminSettings() {\n    return null; // This is a utility file, so we don't need to render anything\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/collected-dataset-customized/components-gui/adminSettings.js\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset-customized/components-gui/displayResponse.js":
/*!******************************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/displayResponse.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst DisplayResponse = ({ width, height, distance, isVisible = true })=>{\n    // Animation state for visibility transitions\n    const [animationState, setAnimationState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(isVisible ? 'visible' : 'hidden');\n    // Update animation state when visibility changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DisplayResponse.useEffect\": ()=>{\n            setAnimationState(isVisible ? 'visible' : 'hidden');\n        }\n    }[\"DisplayResponse.useEffect\"], [\n        isVisible\n    ]);\n    // Format values with units and handle missing values\n    const formattedWidth = width || '---';\n    const formattedHeight = height || '---';\n    const formattedDistance = distance || '---';\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `metrics-display ${animationState}`,\n        style: {\n            position: 'absolute',\n            right: '20px',\n            top: '80px',\n            backgroundColor: 'rgba(0, 102, 204, 0.8)',\n            color: 'white',\n            padding: '10px 15px',\n            borderRadius: '8px',\n            fontSize: '14px',\n            fontFamily: 'monospace',\n            boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\n            transition: 'all 0.3s ease',\n            opacity: animationState === 'visible' ? 1 : 0,\n            transform: animationState === 'visible' ? 'translateX(0)' : 'translateX(50px)',\n            pointerEvents: animationState === 'visible' ? 'auto' : 'none',\n            zIndex: 100\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"metrics-header\",\n                style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: '8px',\n                    borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\n                    paddingBottom: '5px'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        style: {\n                            fontWeight: 'bold'\n                        },\n                        children: \"Display Metrics\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 51,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"metrics-indicator\",\n                        style: {\n                            width: '10px',\n                            height: '10px',\n                            borderRadius: '50%',\n                            backgroundColor: '#00ff00',\n                            boxShadow: '0 0 5px rgba(0, 255, 0, 0.8)'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 52,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                lineNumber: 40,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"metrics-content\",\n                style: {\n                    lineHeight: '1.5'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Width:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 69,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedWidth\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 70,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" pixels\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 71,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 68,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Height:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 74,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedHeight\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 75,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" pixels\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 76,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 73,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '80px'\n                                },\n                                children: \"Distance:\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 79,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    fontWeight: 'bold'\n                                },\n                                children: formattedDistance\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 80,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    opacity: 0.8,\n                                    fontSize: '12px'\n                                },\n                                children: \" cm\"\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                                lineNumber: 81,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                        lineNumber: 78,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/displayResponse.js\",\n        lineNumber: 18,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DisplayResponse);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3BhZ2VzL2NvbGxlY3RlZC1kYXRhc2V0LWN1c3RvbWl6ZWQvY29tcG9uZW50cy1ndWkvZGlzcGxheVJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFtRDtBQUVuRCxNQUFNRyxrQkFBa0IsQ0FBQyxFQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxZQUFZLElBQUksRUFBRTtJQUNwRSw2Q0FBNkM7SUFDN0MsTUFBTSxDQUFDQyxnQkFBZ0JDLGtCQUFrQixHQUFHUiwrQ0FBUUEsQ0FBQ00sWUFBWSxZQUFZO0lBRTdFLGlEQUFpRDtJQUNqREwsZ0RBQVNBO3FDQUFDO1lBQ1JPLGtCQUFrQkYsWUFBWSxZQUFZO1FBQzVDO29DQUFHO1FBQUNBO0tBQVU7SUFFZCxxREFBcUQ7SUFDckQsTUFBTUcsaUJBQWlCTixTQUFTO0lBQ2hDLE1BQU1PLGtCQUFrQk4sVUFBVTtJQUNsQyxNQUFNTyxvQkFBb0JOLFlBQVk7SUFFdEMscUJBQ0UsOERBQUNPO1FBQ0NDLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRU4sZ0JBQWdCO1FBQzlDTyxPQUFPO1lBQ0xDLFVBQVU7WUFDVkMsT0FBTztZQUNQQyxLQUFLO1lBQ0xDLGlCQUFpQjtZQUNqQkMsT0FBTztZQUNQQyxTQUFTO1lBQ1RDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxZQUFZO1lBQ1pDLFdBQVc7WUFDWEMsWUFBWTtZQUNaQyxTQUFTbkIsbUJBQW1CLFlBQVksSUFBSTtZQUM1Q29CLFdBQVdwQixtQkFBbUIsWUFDMUIsa0JBQ0E7WUFDSnFCLGVBQWVyQixtQkFBbUIsWUFBWSxTQUFTO1lBQ3ZEc0IsUUFBUTtRQUNWOzswQkFFQSw4REFBQ2pCO2dCQUNDQyxXQUFVO2dCQUNWQyxPQUFPO29CQUNMZ0IsU0FBUztvQkFDVEMsZ0JBQWdCO29CQUNoQkMsWUFBWTtvQkFDWkMsY0FBYztvQkFDZEMsY0FBYztvQkFDZEMsZUFBZTtnQkFDakI7O2tDQUVBLDhEQUFDQzt3QkFBS3RCLE9BQU87NEJBQUV1QixZQUFZO3dCQUFPO2tDQUFHOzs7Ozs7a0NBQ3JDLDhEQUFDekI7d0JBQ0NDLFdBQVU7d0JBQ1ZDLE9BQU87NEJBQ0xYLE9BQU87NEJBQ1BDLFFBQVE7NEJBQ1JpQixjQUFjOzRCQUNkSCxpQkFBaUI7NEJBQ2pCTSxXQUFXO3dCQUNiOzs7Ozs7Ozs7Ozs7MEJBSUosOERBQUNaO2dCQUNDQyxXQUFVO2dCQUNWQyxPQUFPO29CQUFFd0IsWUFBWTtnQkFBTTs7a0NBRTNCLDhEQUFDQzs7MENBQ0MsOERBQUNIO2dDQUFLdEIsT0FBTztvQ0FBRWdCLFNBQVM7b0NBQWdCM0IsT0FBTztnQ0FBTzswQ0FBRzs7Ozs7OzBDQUN6RCw4REFBQ2lDO2dDQUFLdEIsT0FBTztvQ0FBRXVCLFlBQVk7Z0NBQU87MENBQUk1Qjs7Ozs7OzBDQUN0Qyw4REFBQzJCO2dDQUFLdEIsT0FBTztvQ0FBRVksU0FBUztvQ0FBS0osVUFBVTtnQ0FBTzswQ0FBRzs7Ozs7Ozs7Ozs7O2tDQUVuRCw4REFBQ2lCOzswQ0FDQyw4REFBQ0g7Z0NBQUt0QixPQUFPO29DQUFFZ0IsU0FBUztvQ0FBZ0IzQixPQUFPO2dDQUFPOzBDQUFHOzs7Ozs7MENBQ3pELDhEQUFDaUM7Z0NBQUt0QixPQUFPO29DQUFFdUIsWUFBWTtnQ0FBTzswQ0FBSTNCOzs7Ozs7MENBQ3RDLDhEQUFDMEI7Z0NBQUt0QixPQUFPO29DQUFFWSxTQUFTO29DQUFLSixVQUFVO2dDQUFPOzBDQUFHOzs7Ozs7Ozs7Ozs7a0NBRW5ELDhEQUFDaUI7OzBDQUNDLDhEQUFDSDtnQ0FBS3RCLE9BQU87b0NBQUVnQixTQUFTO29DQUFnQjNCLE9BQU87Z0NBQU87MENBQUc7Ozs7OzswQ0FDekQsOERBQUNpQztnQ0FBS3RCLE9BQU87b0NBQUV1QixZQUFZO2dDQUFPOzBDQUFJMUI7Ozs7OzswQ0FDdEMsOERBQUN5QjtnQ0FBS3RCLE9BQU87b0NBQUVZLFNBQVM7b0NBQUtKLFVBQVU7Z0NBQU87MENBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUszRDtBQUVBLGlFQUFlcEIsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsiL2FwcC9wYWdlcy9jb2xsZWN0ZWQtZGF0YXNldC1jdXN0b21pemVkL2NvbXBvbmVudHMtZ3VpL2Rpc3BsYXlSZXNwb25zZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuY29uc3QgRGlzcGxheVJlc3BvbnNlID0gKHsgd2lkdGgsIGhlaWdodCwgZGlzdGFuY2UsIGlzVmlzaWJsZSA9IHRydWUgfSkgPT4ge1xuICAvLyBBbmltYXRpb24gc3RhdGUgZm9yIHZpc2liaWxpdHkgdHJhbnNpdGlvbnNcbiAgY29uc3QgW2FuaW1hdGlvblN0YXRlLCBzZXRBbmltYXRpb25TdGF0ZV0gPSB1c2VTdGF0ZShpc1Zpc2libGUgPyAndmlzaWJsZScgOiAnaGlkZGVuJyk7XG4gIFxuICAvLyBVcGRhdGUgYW5pbWF0aW9uIHN0YXRlIHdoZW4gdmlzaWJpbGl0eSBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0QW5pbWF0aW9uU3RhdGUoaXNWaXNpYmxlID8gJ3Zpc2libGUnIDogJ2hpZGRlbicpO1xuICB9LCBbaXNWaXNpYmxlXSk7XG4gIFxuICAvLyBGb3JtYXQgdmFsdWVzIHdpdGggdW5pdHMgYW5kIGhhbmRsZSBtaXNzaW5nIHZhbHVlc1xuICBjb25zdCBmb3JtYXR0ZWRXaWR0aCA9IHdpZHRoIHx8ICctLS0nO1xuICBjb25zdCBmb3JtYXR0ZWRIZWlnaHQgPSBoZWlnaHQgfHwgJy0tLSc7XG4gIGNvbnN0IGZvcm1hdHRlZERpc3RhbmNlID0gZGlzdGFuY2UgfHwgJy0tLSc7XG4gIFxuICByZXR1cm4gKFxuICAgIDxkaXYgXG4gICAgICBjbGFzc05hbWU9e2BtZXRyaWNzLWRpc3BsYXkgJHthbmltYXRpb25TdGF0ZX1gfVxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIHJpZ2h0OiAnMjBweCcsXG4gICAgICAgIHRvcDogJzgwcHgnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsIDEwMiwgMjA0LCAwLjgpJyxcbiAgICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICAgIHBhZGRpbmc6ICcxMHB4IDE1cHgnLFxuICAgICAgICBib3JkZXJSYWRpdXM6ICc4cHgnLFxuICAgICAgICBmb250U2l6ZTogJzE0cHgnLFxuICAgICAgICBmb250RmFtaWx5OiAnbW9ub3NwYWNlJyxcbiAgICAgICAgYm94U2hhZG93OiAnMCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMyknLFxuICAgICAgICB0cmFuc2l0aW9uOiAnYWxsIDAuM3MgZWFzZScsXG4gICAgICAgIG9wYWNpdHk6IGFuaW1hdGlvblN0YXRlID09PSAndmlzaWJsZScgPyAxIDogMCxcbiAgICAgICAgdHJhbnNmb3JtOiBhbmltYXRpb25TdGF0ZSA9PT0gJ3Zpc2libGUnIFxuICAgICAgICAgID8gJ3RyYW5zbGF0ZVgoMCknIFxuICAgICAgICAgIDogJ3RyYW5zbGF0ZVgoNTBweCknLFxuICAgICAgICBwb2ludGVyRXZlbnRzOiBhbmltYXRpb25TdGF0ZSA9PT0gJ3Zpc2libGUnID8gJ2F1dG8nIDogJ25vbmUnLFxuICAgICAgICB6SW5kZXg6IDEwMFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8ZGl2IFxuICAgICAgICBjbGFzc05hbWU9XCJtZXRyaWNzLWhlYWRlclwiXG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgbWFyZ2luQm90dG9tOiAnOHB4JyxcbiAgICAgICAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpJyxcbiAgICAgICAgICBwYWRkaW5nQm90dG9tOiAnNXB4J1xuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8c3BhbiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcgfX0+RGlzcGxheSBNZXRyaWNzPC9zcGFuPlxuICAgICAgICA8ZGl2IFxuICAgICAgICAgIGNsYXNzTmFtZT1cIm1ldHJpY3MtaW5kaWNhdG9yXCJcbiAgICAgICAgICBzdHlsZT17eyBcbiAgICAgICAgICAgIHdpZHRoOiAnMTBweCcsIFxuICAgICAgICAgICAgaGVpZ2h0OiAnMTBweCcsIFxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNTAlJywgXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMDBmZjAwJyxcbiAgICAgICAgICAgIGJveFNoYWRvdzogJzAgMCA1cHggcmdiYSgwLCAyNTUsIDAsIDAuOCknXG4gICAgICAgICAgfX0gXG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIFxuICAgICAgPGRpdiBcbiAgICAgICAgY2xhc3NOYW1lPVwibWV0cmljcy1jb250ZW50XCJcbiAgICAgICAgc3R5bGU9e3sgbGluZUhlaWdodDogJzEuNScgfX1cbiAgICAgID5cbiAgICAgICAgPHA+XG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycsIHdpZHRoOiAnODBweCcgfX0+V2lkdGg6PC9zcGFuPiBcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcgfX0+e2Zvcm1hdHRlZFdpZHRofTwvc3Bhbj4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgb3BhY2l0eTogMC44LCBmb250U2l6ZTogJzEycHgnIH19PiBwaXhlbHM8L3NwYW4+XG4gICAgICAgIDwvcD5cbiAgICAgICAgPHA+XG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycsIHdpZHRoOiAnODBweCcgfX0+SGVpZ2h0Ojwvc3Bhbj4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgZm9udFdlaWdodDogJ2JvbGQnIH19Pntmb3JtYXR0ZWRIZWlnaHR9PC9zcGFuPiBcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBvcGFjaXR5OiAwLjgsIGZvbnRTaXplOiAnMTJweCcgfX0+IHBpeGVsczwvc3Bhbj5cbiAgICAgICAgPC9wPlxuICAgICAgICA8cD5cbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywgd2lkdGg6ICc4MHB4JyB9fT5EaXN0YW5jZTo8L3NwYW4+IFxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGZvbnRXZWlnaHQ6ICdib2xkJyB9fT57Zm9ybWF0dGVkRGlzdGFuY2V9PC9zcGFuPiBcbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBvcGFjaXR5OiAwLjgsIGZvbnRTaXplOiAnMTJweCcgfX0+IGNtPC9zcGFuPlxuICAgICAgICA8L3A+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERpc3BsYXlSZXNwb25zZTsiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkRpc3BsYXlSZXNwb25zZSIsIndpZHRoIiwiaGVpZ2h0IiwiZGlzdGFuY2UiLCJpc1Zpc2libGUiLCJhbmltYXRpb25TdGF0ZSIsInNldEFuaW1hdGlvblN0YXRlIiwiZm9ybWF0dGVkV2lkdGgiLCJmb3JtYXR0ZWRIZWlnaHQiLCJmb3JtYXR0ZWREaXN0YW5jZSIsImRpdiIsImNsYXNzTmFtZSIsInN0eWxlIiwicG9zaXRpb24iLCJyaWdodCIsInRvcCIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwicGFkZGluZyIsImJvcmRlclJhZGl1cyIsImZvbnRTaXplIiwiZm9udEZhbWlseSIsImJveFNoYWRvdyIsInRyYW5zaXRpb24iLCJvcGFjaXR5IiwidHJhbnNmb3JtIiwicG9pbnRlckV2ZW50cyIsInpJbmRleCIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJtYXJnaW5Cb3R0b20iLCJib3JkZXJCb3R0b20iLCJwYWRkaW5nQm90dG9tIiwic3BhbiIsImZvbnRXZWlnaHQiLCJsaW5lSGVpZ2h0IiwicCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/collected-dataset-customized/components-gui/displayResponse.js\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset-customized/components-gui/topBar.js":
/*!*********************************************************************!*\
  !*** ./pages/collected-dataset-customized/components-gui/topBar.js ***!
  \*********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"styled-jsx/style\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _adminSettings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./adminSettings */ \"(pages-dir-node)/./pages/collected-dataset-customized/components-gui/adminSettings.js\");\n/* harmony import */ var _utils_consentManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utils/consentManager */ \"(pages-dir-node)/./utils/consentManager.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_consentManager__WEBPACK_IMPORTED_MODULE_5__]);\n_utils_consentManager__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n// Improved debounce function\nconst debounce = (func, wait)=>{\n    let timeout;\n    let lastArgs;\n    let lastThis;\n    return function executedFunction(...args) {\n        lastArgs = args;\n        lastThis = this;\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n        timeout = setTimeout(()=>{\n            timeout = null;\n            func.apply(lastThis, lastArgs);\n        }, wait);\n    };\n};\nconst TopBar = ({ onButtonClick, onCameraAccess, outputText, onOutputChange, onToggleTopBar, onToggleMetrics, canvasRef, isTopBarShown = true, isCanvasVisible = true })=>{\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_3__.useRouter)();\n    const [canvasStatus, setCanvasStatus] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(isCanvasVisible);\n    const { settings, updateSettings } = (0,_adminSettings__WEBPACK_IMPORTED_MODULE_4__.useAdminSettings)();\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [currentSettings, setCurrentSettings] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        times_set_random: 1,\n        delay_set_random: 3\n    });\n    const isUpdatingRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);\n    // Memoized function to fetch settings\n    const fetchSettings = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)({\n        \"TopBar.useCallback[fetchSettings]\": async (userId)=>{\n            if (!userId || isUpdatingRef.current) return;\n            try {\n                isUpdatingRef.current = true;\n                const response = await fetch(`/api/data-center/settings/${userId}`, {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                    }\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch settings');\n                }\n                const userSettings = await response.json();\n                if (userSettings && (userSettings.times_set_random || userSettings.delay_set_random)) {\n                    setCurrentSettings(userSettings);\n                    if (updateSettings) {\n                        await updateSettings(userSettings, userId);\n                    }\n                }\n            } catch (error) {\n                console.error('TopBar - Error fetching settings:', error);\n            } finally{\n                isUpdatingRef.current = false;\n            }\n        }\n    }[\"TopBar.useCallback[fetchSettings]\"], [\n        updateSettings\n    ]);\n    const ensureCanvasAvailable = ()=>{\n        if (true) return null;\n        // Check for existing canvas\n        let canvas = document.querySelector('#tracking-canvas');\n        if (!canvas) {\n            // Create canvas if it doesn't exist\n            canvas = document.createElement('canvas');\n            canvas.className = 'tracking-canvas';\n            canvas.id = 'tracking-canvas';\n            canvas.width = 800;\n            canvas.height = 400;\n            canvas.style.cssText = `\n        position: relative;\n        width: 100%;\n        height: 400px;\n        background-color: white;\n        border: 1px solid #ccc;\n        display: block;\n      `;\n            // Initialize with white background\n            const ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            // Append to appropriate container\n            const container = document.querySelector('.canvas-container') || document.querySelector('.main-content') || document.body;\n            container.appendChild(canvas);\n        }\n        // Store global reference\n        window.whiteScreenCanvas = canvas;\n        return canvas;\n    };\n    // Debounced save settings function\n    const debouncedSaveSettings = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(debounce({\n        \"TopBar.useCallback[debouncedSaveSettings]\": async (userId, newSettings)=>{\n            if (!userId || isUpdatingRef.current) return;\n            try {\n                isUpdatingRef.current = true;\n                const response = await fetch(`/api/data-center/settings/${userId}`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\"\n                    },\n                    body: JSON.stringify(newSettings)\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to save settings to backend');\n                }\n                const latestSettings = await response.json();\n                setCurrentSettings(latestSettings);\n                if (updateSettings) {\n                    await updateSettings(latestSettings, userId);\n                }\n            } catch (error) {\n                console.error('TopBar - Error saving settings:', error);\n            } finally{\n                isUpdatingRef.current = false;\n            }\n        }\n    }[\"TopBar.useCallback[debouncedSaveSettings]\"], 500), [\n        updateSettings\n    ]);\n    // Initialize user ID and fetch initial settings\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const initializeUserId = {\n                \"TopBar.useEffect.initializeUserId\": async ()=>{\n                    const userId = (0,_utils_consentManager__WEBPACK_IMPORTED_MODULE_5__.getOrCreateUserId)();\n                    if (userId) {\n                        setCurrentUserId(userId);\n                        await fetchSettings(userId);\n                        setIsLoading(false);\n                    }\n                }\n            }[\"TopBar.useEffect.initializeUserId\"];\n            initializeUserId();\n        }\n    }[\"TopBar.useEffect\"], [\n        fetchSettings\n    ]);\n    // Update canvas status when prop changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            setCanvasStatus(isCanvasVisible);\n        }\n    }[\"TopBar.useEffect\"], [\n        isCanvasVisible\n    ]);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"TopBar.useEffect.handleUserIdChange\": async (event)=>{\n                    if (event.detail?.userId) {\n                        const newUserId = event.detail.userId;\n                        setCurrentUserId(newUserId);\n                        await fetchSettings(newUserId);\n                    }\n                }\n            }[\"TopBar.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"TopBar.useEffect\": ()=>window.removeEventListener('userIdChange', handleUserIdChange)\n            })[\"TopBar.useEffect\"];\n        }\n    }[\"TopBar.useEffect\"], [\n        fetchSettings\n    ]);\n    // Listen for settings updates from admin page\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"TopBar.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"TopBar.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail?.type === 'captureSettings') {\n                        const { userId, times_set_random, delay_set_random } = event.detail;\n                        // Only update if values have actually changed\n                        if (times_set_random !== currentSettings.times_set_random || delay_set_random !== currentSettings.delay_set_random) {\n                            const newSettings = {\n                                times_set_random: Number(times_set_random) || currentSettings.times_set_random,\n                                delay_set_random: Number(delay_set_random) || currentSettings.delay_set_random\n                            };\n                            debouncedSaveSettings(userId, newSettings);\n                        }\n                    }\n                }\n            }[\"TopBar.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"TopBar.useEffect\": ()=>window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate)\n            })[\"TopBar.useEffect\"];\n        }\n    }[\"TopBar.useEffect\"], [\n        currentSettings,\n        debouncedSaveSettings\n    ]);\n    const handleButtonClick = (actionType)=>{\n        // Ensure canvas is available before triggering actions that need it\n        if ([\n            'setRandom',\n            'calibrate',\n            'randomDot',\n            'clearAll'\n        ].includes(actionType)) {\n            const canvas = ensureCanvasAvailable();\n            if (!canvas) {\n                console.warn(`Canvas not available for action: ${actionType}`);\n            }\n        }\n        if (onButtonClick) {\n            onButtonClick(actionType);\n        }\n    };\n    const handleToggleTopBar = ()=>{\n        onToggleTopBar(!isTopBarShown);\n    };\n    const handleToggleMetrics = ()=>{\n        onToggleMetrics();\n    };\n    const handleGoBack = ()=>{\n        router.push('/');\n    };\n    const statusMessage = `TopBar ${isTopBarShown ? 'shown' : 'hidden'}, Canvas: ${canvasStatus ? 'Visible' : 'Hidden'}`;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-8fd840df60237147\" + \" \" + \"topbar\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-left\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"logo\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"logo-text\",\n                            children: \"Logo\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 236,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 235,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"controls-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"control-group\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-label\",\n                                        children: \"Time(s):\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 241,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-input\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"control-input-field\",\n                                            children: currentSettings.times_set_random\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 243,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 242,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, `times-${currentSettings.times_set_random}-${Date.now()}`, true, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 240,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"control-group\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-label\",\n                                        children: \"Delay(s):\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 248,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-input\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"control-input-field\",\n                                            children: currentSettings.delay_set_random\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 250,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                        lineNumber: 249,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, `delay-${currentSettings.delay_set_random}-${Date.now()}`, true, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 247,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 239,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 234,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-middle\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-groups\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"button-group\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: handleGoBack,\n                                            title: \"Go back to home page\",\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn back-button\",\n                                            children: \"← Back\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 260,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('setRandom'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Set Random\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 268,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('calibrate'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Set Calibrate\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 274,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 259,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        marginRight: '80px'\n                                    },\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('randomDot'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Random Dot\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 283,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('clearAll'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Clear All\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 289,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 282,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 258,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-divider\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 298,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"button-group\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('headPose'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Draw Head pose\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 302,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('boundingBox'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Show Bounding Box\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 308,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 301,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"button-row\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('preview'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Show Preview\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 317,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('mask'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"\\uD83D\\uDE0A Show Mask\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 323,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>handleButtonClick('parameters'),\n                                            className: \"jsx-8fd840df60237147\" + \" \" + \"btn\",\n                                            children: \"Parameters\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                            lineNumber: 329,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 316,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 300,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                    lineNumber: 257,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 256,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8fd840df60237147\" + \" \" + \"topbar-right\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"notes-container\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            title: \"Processing Output\",\n                            className: \"jsx-8fd840df60237147\" + \" \" + \"output-display\",\n                            children: [\n                                statusMessage,\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {\n                                    className: \"jsx-8fd840df60237147\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 347,\n                                    columnNumber: 13\n                                }, undefined),\n                                outputText || \"Processing output will appear here...\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                            lineNumber: 342,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 341,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-8fd840df60237147\" + \" \" + \"control-buttons\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleToggleTopBar,\n                                title: \"Toggle TopBar\",\n                                style: {\n                                    padding: '5px 10px',\n                                    backgroundColor: '#0066cc',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    fontSize: '16px',\n                                    cursor: 'pointer',\n                                    marginRight: '5px'\n                                },\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"icon-btn menu-btn\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"icon-text\",\n                                    children: \"≡\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 368,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 353,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleToggleMetrics,\n                                title: \"Toggle Metrics\",\n                                style: {\n                                    padding: '5px 10px',\n                                    backgroundColor: '#ff9900',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    fontSize: '16px',\n                                    cursor: 'pointer'\n                                },\n                                className: \"jsx-8fd840df60237147\" + \" \" + \"icon-btn alert-btn\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"jsx-8fd840df60237147\" + \" \" + \"icon-text\",\n                                    children: \"!\"\n                                }, void 0, false, {\n                                    fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                    lineNumber: 385,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                                lineNumber: 371,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                        lineNumber: 352,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n                lineNumber: 340,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"8fd840df60237147\",\n                children: \".active-toggle.jsx-8fd840df60237147{-webkit-transform:scale(1.2);-moz-transform:scale(1.2);-ms-transform:scale(1.2);-o-transform:scale(1.2);transform:scale(1.2);-webkit-transition:all.3s ease;-moz-transition:all.3s ease;-o-transition:all.3s ease;transition:all.3s ease}.icon-btn.jsx-8fd840df60237147{-webkit-transition:all.2s ease;-moz-transition:all.2s ease;-o-transition:all.2s ease;transition:all.2s ease}.icon-btn.jsx-8fd840df60237147:hover{opacity:.8}\"\n            }, void 0, false, void 0, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/components-gui/topBar.js\",\n        lineNumber: 233,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TopBar);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/collected-dataset-customized/components-gui/topBar.js\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset-customized/index.js":
/*!*****************************************************!*\
  !*** ./pages/collected-dataset-customized/index.js ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CollectedDatasetPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"(pages-dir-node)/./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dynamic */ \"(pages-dir-node)/./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_gui_topBar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components-gui/topBar */ \"(pages-dir-node)/./pages/collected-dataset-customized/components-gui/topBar.js\");\n/* harmony import */ var _components_gui_displayResponse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components-gui/displayResponse */ \"(pages-dir-node)/./pages/collected-dataset-customized/components-gui/displayResponse.js\");\n/* harmony import */ var _components_gui_actionButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components-gui/actionButton */ \"(pages-dir-node)/./pages/collected-dataset-customized/components-gui/actionButton.js\");\n/* harmony import */ var _components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/collected-dataset-customized/Action/countSave */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/countSave.jsx\");\n/* harmony import */ var _components_collected_dataset_customized_Action_CalibratePoints_jsx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/collected-dataset-customized/Action/CalibratePoints.jsx */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\");\n/* harmony import */ var _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/consent/ConsentContext */ \"(pages-dir-node)/./components/consent/ConsentContext.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/router */ \"(pages-dir-node)/./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_10__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_gui_topBar__WEBPACK_IMPORTED_MODULE_4__, _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_9__]);\n([_components_gui_topBar__WEBPACK_IMPORTED_MODULE_4__, _components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// Modified index.js - Fixing canvas reference issues\n\n\n\n\n\n\n\n\n\n\n\n// Dynamically load the video processor component (not the hook directly)\nconst VideoProcessorComponent = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-node_pages_collected-dataset-customized_components-gui_VideoProcessorComponent_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components-gui/VideoProcessorComponent */ \"(pages-dir-node)/./pages/collected-dataset-customized/components-gui/VideoProcessorComponent.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"pages/collected-dataset-customized/index.js -> \" + \"./components-gui/VideoProcessorComponent\"\n        ]\n    },\n    ssr: false\n});\n// Dynamically import the camera component with SSR disabled\nconst DynamicCameraAccess = next_dynamic__WEBPACK_IMPORTED_MODULE_3___default()(()=>__webpack_require__.e(/*! import() */ \"_pages-dir-node_pages_collected-dataset-customized_components-gui_cameraAccess_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./components-gui/cameraAccess */ \"(pages-dir-node)/./pages/collected-dataset-customized/components-gui/cameraAccess.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"pages/collected-dataset-customized/index.js -> \" + \"./components-gui/cameraAccess\"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                width: '480px',\n                height: '360px',\n                backgroundColor: '#f0f8ff',\n                border: '2px solid #0066cc',\n                borderRadius: '8px',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                textAlign: 'center',\n                zIndex: 999\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        fontSize: '48px',\n                        marginBottom: '15px'\n                    },\n                    children: \"\\uD83D\\uDCF7\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 42,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    style: {\n                        fontSize: '16px',\n                        fontWeight: 'bold',\n                        color: '#0066cc'\n                    },\n                    children: \"Loading camera...\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 43,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n            lineNumber: 25,\n            columnNumber: 7\n        }, undefined)\n});\nfunction CollectedDatasetPage() {\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_10__.useRouter)();\n    const { userId: consentUserId } = (0,_components_consent_ConsentContext__WEBPACK_IMPORTED_MODULE_9__.useConsent)();\n    const [userData, setUserData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isHydrated, setIsHydrated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [backendStatus, setBackendStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('checking');\n    const [showTopBar, setShowTopBar] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [showWarning, setShowWarning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [warningMessage, setWarningMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [statusMessage, setStatusMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [outputText, setOutputText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [showMetrics, setShowMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [showPermissionPopup, setShowPermissionPopup] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [cameraPermissionGranted, setCameraPermissionGranted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showCamera, setShowCamera] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showCameraPlaceholder, setShowCameraPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showHeadPose, setShowHeadPose] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showBoundingBox, setShowBoundingBox] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showMask, setShowMask] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showParameters, setShowParameters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [windowSize, setWindowSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 0,\n        height: 0,\n        percentage: 100\n    });\n    const [metrics, setMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: '---',\n        height: '---',\n        distance: '---'\n    });\n    const [captureCounter, setCaptureCounter] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [captureFolder, setCaptureFolder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [currentUserId, setCurrentUserId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('default');\n    const [showSettings, setShowSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Refs\n    const previewAreaRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const actionButtonGroupRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Set hydrated state after mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            setIsHydrated(true);\n        }\n    }[\"CollectedDatasetPage.useEffect\"], []);\n    // Load user data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const loadUserData = {\n                \"CollectedDatasetPage.useEffect.loadUserData\": async ()=>{\n                    if (!router.isReady) return;\n                    try {\n                        if (router.query.userData) {\n                            const parsedData = JSON.parse(router.query.userData);\n                            setUserData(parsedData);\n                            return;\n                        }\n                        if (router.query.userId) {\n                            const response = await fetch(`/api/user-preferences/${router.query.userId}`, {\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json',\n                                    'X-API-Key': \"A1B2C3D4-E5F6-7890-GHIJ-KLMNOPQRSTUV\" || 0\n                                }\n                            });\n                            if (!response.ok) {\n                                throw new Error('Failed to fetch user data');\n                            }\n                            const data = await response.json();\n                            setUserData(data);\n                        }\n                    } catch (err) {\n                        console.error('Error loading user data:', err);\n                        setError(err.message);\n                    } finally{\n                        setIsLoading(false);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.loadUserData\"];\n            loadUserData();\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        router.isReady,\n        router.query\n    ]);\n    // Check backend connection\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const checkBackendConnection = {\n                \"CollectedDatasetPage.useEffect.checkBackendConnection\": async ()=>{\n                    try {\n                        const response = await fetch('/api/check-backend-connection');\n                        const data = await response.json();\n                        setBackendStatus(data.connected ? 'connected' : 'disconnected');\n                    } catch (error) {\n                        console.error('Error checking backend connection:', error);\n                        setBackendStatus('disconnected');\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.checkBackendConnection\"];\n            if (isHydrated) {\n                checkBackendConnection();\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Update window size\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const updateDimensions = {\n                \"CollectedDatasetPage.useEffect.updateDimensions\": ()=>{\n                    if (previewAreaRef.current) {\n                        const width = previewAreaRef.current.offsetWidth;\n                        const height = previewAreaRef.current.offsetHeight;\n                        const screenPercentage = window.innerWidth / window.screen.width * 100;\n                        setMetrics({\n                            \"CollectedDatasetPage.useEffect.updateDimensions\": (prev)=>({\n                                    ...prev,\n                                    width,\n                                    height\n                                })\n                        }[\"CollectedDatasetPage.useEffect.updateDimensions\"]);\n                        setWindowSize({\n                            width: window.innerWidth,\n                            height: window.innerHeight,\n                            percentage: Math.round(screenPercentage)\n                        });\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.updateDimensions\"];\n            if (isHydrated) {\n                updateDimensions();\n                window.addEventListener('resize', updateDimensions);\n                return ({\n                    \"CollectedDatasetPage.useEffect\": ()=>window.removeEventListener('resize', updateDimensions)\n                })[\"CollectedDatasetPage.useEffect\"];\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Initialize settings based on user data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (userData && consentUserId) {\n                console.log('Initializing settings for user:', consentUserId, userData);\n                // Initialize user-specific settings\n                if (userData.preferences) {\n                    const { preferences } = userData;\n                    // Update camera settings if available\n                    if (preferences.cameraSettings) {\n                        const { showHeadPose, showBoundingBox, showMask, showParameters } = preferences.cameraSettings;\n                        setShowHeadPose(showHeadPose || false);\n                        setShowBoundingBox(showBoundingBox || false);\n                        setShowMask(showMask || false);\n                        setShowParameters(showParameters || false);\n                    }\n                    // Update other settings as needed\n                    if (preferences.metrics) {\n                        setShowMetrics(preferences.metrics.show || true);\n                    }\n                    if (preferences.topBar) {\n                        setShowTopBar(preferences.topBar.show || true);\n                    }\n                }\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        userData,\n        consentUserId\n    ]);\n    // Improved get canvas function that tries multiple methods\n    const getMainCanvas = ()=>{\n        // Use the new canvas manager if available\n        if (false) {}\n        // Method 1: Check if we have a direct reference\n        if (canvasRef.current) {\n            console.log(\"Using direct canvasRef.current reference\");\n            return canvasRef.current;\n        }\n        // Method 2: Try to get global reference\n        if (false) {}\n        // Method 3: Try to find via DOM\n        if (typeof document !== 'undefined') {\n            const canvasElement = document.querySelector('.tracking-canvas');\n            if (canvasElement) {\n                console.log(\"Found canvas via DOM selector\");\n                canvasRef.current = canvasElement; // Update our ref\n                if (false) {}\n                return canvasElement;\n            }\n        }\n        console.warn(\"No canvas found via any method\");\n        return null;\n    };\n    // Check if we're on the client or server\n    const isClient = \"undefined\" !== 'undefined';\n    // Add effect to initialize canvas and make it globally available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return;\n            // Initialize canvas manager globally\n            if (false) {}\n            // Debug info to verify canvas size and availability\n            const canvas = canvasRef.current;\n            if (canvas) {\n                console.log(\"Index.js: Canvas initialized\", {\n                    width: canvas.width,\n                    height: canvas.height\n                });\n                // Make canvas EXPLICITLY available globally\n                window.whiteScreenCanvas = canvas;\n                // Also store canvas dimensions\n                window.canvasDimensions = {\n                    width: canvas.width,\n                    height: canvas.height\n                };\n            } else {\n                console.warn(\"Canvas reference is not available during initialization\");\n            }\n            // Expose canvas initialization function globally\n            window.initializeCanvas = ({\n                \"CollectedDatasetPage.useEffect\": (canvas, parent)=>{\n                    if (!canvas || !parent) {\n                        console.warn('[initializeCanvas] Canvas or parent is null', {\n                            canvas,\n                            parent\n                        });\n                        return false;\n                    }\n                    try {\n                        // Set canvas dimensions to match parent\n                        canvas.width = parent.clientWidth || 800;\n                        canvas.height = parent.clientHeight || 600;\n                        // Clear canvas and set white background\n                        const ctx = canvas.getContext('2d');\n                        ctx.clearRect(0, 0, canvas.width, canvas.height);\n                        ctx.fillStyle = 'white';\n                        ctx.fillRect(0, 0, canvas.width, canvas.height);\n                        console.log(`Canvas initialized with dimensions: ${canvas.width}x${canvas.height}`);\n                        // Update global reference\n                        window.whiteScreenCanvas = canvas;\n                        window.canvasDimensions = {\n                            width: canvas.width,\n                            height: canvas.height\n                        };\n                        return true;\n                    } catch (error) {\n                        console.error('[initializeCanvas] Error initializing canvas:', error);\n                        return false;\n                    }\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n            // Check canvas visibility and force initialization after a brief delay\n            setTimeout({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    const canvas = getMainCanvas();\n                    if (canvas) {\n                        const rect = canvas.getBoundingClientRect();\n                        console.log(\"Canvas initial visibility check:\", {\n                            dimensions: `${canvas.width}x${canvas.height}`,\n                            rectSize: `${rect.width}x${rect.height}`,\n                            isVisible: rect.width > 0 && rect.height > 0\n                        });\n                        // Force initialization if needed\n                        adjustCanvasDimensions();\n                    } else {\n                        console.warn(\"Canvas not found during visibility check\");\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect\"], 500);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    delete window.whiteScreenCanvas;\n                    delete window.canvasDimensions;\n                    delete window.initializeCanvas;\n                    delete window.canvasManager;\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Improved canvas dimensions adjustment\n    const adjustCanvasDimensions = ()=>{\n        if (!isClient || !isHydrated || !previewAreaRef.current) return;\n        const canvas = getMainCanvas();\n        if (!canvas) {\n            console.warn(\"No canvas found to adjust dimensions\");\n            return;\n        }\n        const container = previewAreaRef.current;\n        // Get the size of the preview area\n        const rect = container.getBoundingClientRect();\n        // Calculate proper height based on top bar visibility\n        const topBarHeight = showTopBar ? 120 : 0; // Adjust this value based on your top bar's actual height\n        console.log(\"Adjusting canvas dimensions\", {\n            containerWidth: rect.width,\n            containerHeight: rect.height,\n            topBarVisible: showTopBar,\n            calculatedHeight: rect.height\n        });\n        // Set canvas dimensions to match container size with top bar adjustment\n        canvas.width = rect.width;\n        canvas.height = rect.height;\n        // Clear the canvas\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // Fill with white background\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        console.log(`Canvas dimensions adjusted: ${canvas.width}x${canvas.height}`);\n        // Update global reference with current dimensions\n        window.whiteScreenCanvas = canvas;\n        window.canvasDimensions = {\n            width: canvas.width,\n            height: canvas.height\n        };\n    };\n    // Create a capture folder on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!captureFolder && isClient && isHydrated) {\n                const timestamp = new Date().toISOString().replace(/[:\\.]/g, '-');\n                setCaptureFolder(`session_${timestamp}`);\n                console.log(`Created capture folder: session_${timestamp}`);\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        captureFolder,\n        isClient,\n        isHydrated\n    ]);\n    // Check backend connection on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return; // Skip on server or before hydration\n            const checkBackendConnection = {\n                \"CollectedDatasetPage.useEffect.checkBackendConnection\": async ()=>{\n                    try {\n                        const response = await fetch('/api/check-backend-connection');\n                        const data = await response.json();\n                        setBackendStatus(data.connected ? 'connected' : 'disconnected');\n                        console.log(`Backend connection: ${data.connected ? 'OK' : 'Failed'}`);\n                        // Show status in output text\n                        setOutputText(`Backend ${data.connected ? 'connected' : 'disconnected - using mock mode'}`);\n                    } catch (error) {\n                        console.error('Error checking backend connection:', error);\n                        setBackendStatus('disconnected');\n                        setOutputText('Backend disconnected - using mock mode');\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.checkBackendConnection\"];\n            checkBackendConnection();\n            // Welcome message after backend check\n            setTimeout({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    setOutputText('Camera system ready. Click \"Show Preview\" to start camera.');\n                }\n            }[\"CollectedDatasetPage.useEffect\"], 2000);\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Add styles to document head for button highlighting\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return;\n            // Create a style element\n            const style = document.createElement('style');\n            style.textContent = `\n      @keyframes pulse {\n        0% { box-shadow: 0 0 0 0 rgba(0, 102, 204, 0.7); }\n        70% { box-shadow: 0 0 0 10px rgba(0, 102, 204, 0); }\n        100% { box-shadow: 0 0 0 0 rgba(0, 102, 204, 0); }\n      }\n      \n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(-10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      \n      .btn-highlight {\n        animation: pulse 1.5s infinite;\n        background-color: #0099ff !important;\n        color: white !important;\n        transform: scale(1.05);\n        transition: all 0.3s ease;\n      }\n      \n      .warning-banner {\n        animation: fadeIn 0.3s ease-in-out;\n      }\n    `;\n            document.head.appendChild(style);\n            // Clean up\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    document.head.removeChild(style);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Make toggleTopBar function available globally\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (!isClient || !isHydrated) return;\n            // Make toggleTopBar available to other components\n            window.toggleTopBar = ({\n                \"CollectedDatasetPage.useEffect\": (show)=>{\n                    setShowTopBar(show);\n                    // Also hide metrics when hiding the top bar\n                    if (!show) {\n                        setShowMetrics(false);\n                    }\n                    // Adjust canvas dimensions after toggling\n                    setTimeout(adjustCanvasDimensions, 100);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    // Clean up\n                    delete window.toggleTopBar;\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        isHydrated\n    ]);\n    // Toggle camera function\n    const toggleCamera = (shouldEnable)=>{\n        if (!isClient || !isHydrated) return;\n        if (shouldEnable) {\n            setShowCamera(true);\n            setShowCameraPlaceholder(false);\n            setOutputText('Camera preview started');\n        } else {\n            setShowCamera(false);\n            setShowCameraPlaceholder(false);\n            setOutputText('Camera preview stopped');\n        }\n    };\n    // Handler for action button clicks\n    const handleActionButtonClick = (actionType, params)=>{\n        if (!isClient || !isHydrated) return;\n        // Special case for toggling the top bar\n        if (actionType === 'toggleTopBar') {\n            // const newTopBarState = value !== undefined ? !!value : !showTopBar;\n            let newTopBarState;\n            if (typeof params === 'boolean') {\n                newTopBarState = params;\n            } else if (params && typeof params.value !== 'undefined') {\n                newTopBarState = !!params.value;\n            } else {\n                newTopBarState = !showTopBar;\n            }\n            setShowTopBar(newTopBarState);\n            // Also hide metrics when hiding the top bar\n            if (!newTopBarState) {\n                setShowMetrics(false);\n            }\n            setOutputText(`TopBar ${newTopBarState ? 'shown' : 'hidden'}${!newTopBarState ? ', Metrics hidden' : ''}`);\n            // Adjust canvas dimensions after toggling\n            setTimeout(adjustCanvasDimensions, 100);\n            return;\n        }\n        const canvas = getMainCanvas();\n        setShowWarning(false);\n        // Clear any existing warnings\n        const safeParams = params || {};\n        // Use safeParams instead of controlValues\n        const randomTimes = safeParams.randomTimes || 1;\n        const delaySeconds = safeParams.delaySeconds || 3;\n        switch(actionType){\n            case 'preview':\n                // Toggle camera state\n                if (showCamera) {\n                    toggleCamera(false);\n                } else if (cameraPermissionGranted) {\n                    toggleCamera(true);\n                } else {\n                    // Otherwise show permission popup\n                    setShowPermissionPopup(true);\n                    setOutputText('Opening camera preview');\n                    setShowCameraPlaceholder(true);\n                }\n                break;\n            case 'setRandom':\n                setOutputText('Starting random sequence...');\n                setShowTopBar(false);\n                if (showCamera) {\n                    toggleCamera(false);\n                }\n                // Use the imported module approach - similar to calibrate\n                if (actionButtonGroupRef.current && actionButtonGroupRef.current.handleSetRandom) {\n                    // Use the reference method if available\n                    console.log('Using ActionButtonGroup ref method for Set Random');\n                    actionButtonGroupRef.current.handleSetRandom();\n                } else if (false) {} else {\n                    // Make sure we have a canvas to work with\n                    const canvas = getMainCanvas();\n                    if (!canvas) {\n                        console.error(\"Canvas not found for random sequence\");\n                        setOutputText(\"Error: Canvas not available for random sequence\");\n                        setShowTopBar(true);\n                        return;\n                    }\n                    // Get control values from the TopBar\n                    const timeInput = document.querySelector('.control-input-field');\n                    const delayInput = document.querySelectorAll('.control-input-field')[1];\n                    // Default values if inputs can't be found\n                    let times = 1;\n                    let delay = 3;\n                    // Parse input values if available\n                    if (timeInput) {\n                        const parsedTime = parseInt(timeInput.value, 10);\n                        if (!isNaN(parsedTime) && parsedTime > 0) {\n                            times = parsedTime;\n                        }\n                    }\n                    if (delayInput) {\n                        const parsedDelay = parseInt(delayInput.value, 10);\n                        if (!isNaN(parsedDelay) && parsedDelay > 0) {\n                            delay = parsedDelay;\n                        }\n                    }\n                    // Load all required modules first, then proceed with execution\n                    Promise.all([\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/countSave */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/countSave.jsx\")),\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-node)/./components/collected-dataset-customized/Helper/savefile.js\"))\n                    ]).then(async ([countSaveModule, savefileModule])=>{\n                        // Destructure the imported modules\n                        const { getRandomPosition, drawRedDot, runCountdown, showCapturePreview } = countSaveModule;\n                        const { captureImagesAtPoint } = savefileModule;\n                        try {\n                            // Process all captures sequentially\n                            let successCount = 0;\n                            let currentCapture = 1;\n                            while(currentCapture <= times){\n                                // Update status for current capture\n                                setOutputText(`Capture ${currentCapture} of ${times}`);\n                                // Clear canvas before each capture\n                                const ctx = canvas.getContext('2d');\n                                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                                ctx.fillStyle = 'white';\n                                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                                // Generate random position for this capture\n                                const position = getRandomPosition(canvas, 20);\n                                // Draw the dot\n                                drawRedDot(ctx, position.x, position.y);\n                                // Create a redrawInterval to ensure dot stays visible\n                                let redrawInterval = setInterval(()=>{\n                                    drawRedDot(ctx, position.x, position.y, 12, false);\n                                }, 200);\n                                // Run countdown and wait for it to complete\n                                await new Promise((resolve)=>{\n                                    runCountdown(position, canvas, (status)=>{\n                                        // Update UI based on status\n                                        if (status.processStatus) {\n                                            setOutputText(`Capture ${currentCapture}/${times}: ${status.processStatus}`);\n                                        }\n                                    }, resolve // This will be called when countdown completes\n                                    );\n                                });\n                                // Clear redrawInterval after countdown\n                                clearInterval(redrawInterval);\n                                // Wait briefly after countdown\n                                await new Promise((resolve)=>setTimeout(resolve, 500));\n                                // Capture images at this point\n                                try {\n                                    const captureResult = await captureImagesAtPoint({\n                                        point: position,\n                                        captureCount: captureCounter,\n                                        canvasRef: {\n                                            current: canvas\n                                        },\n                                        setCaptureCount: setCaptureCounter,\n                                        showCapturePreview\n                                    });\n                                    if (captureResult && (captureResult.screenImage || captureResult.success)) {\n                                        successCount++;\n                                    }\n                                    // Increment counter\n                                    setCaptureCounter((prev)=>prev + 1);\n                                } catch (error) {\n                                    console.error(`Error capturing point ${currentCapture}:`, error);\n                                }\n                                // Wait between captures for the specified delay time\n                                if (currentCapture < times) {\n                                    setOutputText(`Waiting ${delay}s before next capture...`);\n                                    await new Promise((resolve)=>setTimeout(resolve, delay * 1000));\n                                }\n                                // Move to next capture\n                                currentCapture++;\n                            }\n                            // Sequence complete\n                            setOutputText(`Random capture sequence completed: ${successCount}/${times} captures successful`);\n                        } catch (error) {\n                            console.error(\"Random sequence error:\", error);\n                            setOutputText(`Random sequence error: ${error.message}`);\n                        } finally{\n                            // Show TopBar again\n                            setTimeout(()=>setShowTopBar(true), 2000);\n                        }\n                    }).catch((error)=>{\n                        console.error(\"Failed to import required modules:\", error);\n                        setOutputText(`Error: ${error.message}`);\n                        setShowTopBar(true);\n                    });\n                }\n                break;\n            case 'randomDot':\n                setOutputText('Random dot action triggered');\n                setShowTopBar(false);\n                if (showCamera) {\n                    toggleCamera(false);\n                }\n                console.log('Attempting to access Random Dot functionality');\n                // Use the random dot functionality from actionButton.js by delegating to ActionButtonGroup\n                // This assumes you have a ref to the ActionButtonGroup component\n                if (actionButtonGroupRef.current && actionButtonGroupRef.current.handleRandomDot) {\n                    console.log('Using ref method');\n                    actionButtonGroupRef.current.handleRandomDot();\n                } else if (false) {} else {\n                    // Fallback implementation\n                    const canvas = getMainCanvas();\n                    if (!canvas) {\n                        console.error(\"Canvas not found for random dot action\");\n                        setOutputText(\"Error: Canvas not available for random dot\");\n                        setShowTopBar(true); // Show TopBar again if there's an error\n                        break;\n                    }\n                    const parent = previewAreaRef.current;\n                    if (!parent) {\n                        console.error(\"Parent not found for canvas\");\n                        setOutputText(\"Error: Canvas parent not available\");\n                        setShowTopBar(true);\n                        break;\n                    }\n                    // Initialize canvas explicitly\n                    canvas.width = parent.clientWidth || 800;\n                    canvas.height = parent.clientHeight || 600;\n                    const ctx = canvas.getContext('2d');\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.fillStyle = 'white';\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    console.log(`Canvas ready for random dot: ${canvas.width}x${canvas.height}`);\n                    // Update global reference\n                    window.whiteScreenCanvas = canvas;\n                    // Generate random position\n                    const position = (0,_components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__.getRandomPosition)(canvas, 20);\n                    // Draw the dot using the imported function\n                    const dot = (0,_components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__.drawRedDot)(ctx, position.x, position.y, 8, false);\n                    console.log(`Random dot drawn at: ${position.x}, ${position.y}`);\n                    // Start a countdown for capture\n                    (0,_components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__.runCountdown)(position, canvas, (status)=>{\n                        // Update UI based on status\n                        if (status.processStatus) {\n                            setOutputText(status.processStatus);\n                        }\n                    }, ()=>{\n                        // Enable camera before capture\n                        // triggerCameraAccess(true);\n                        // Wait briefly for camera to initialize\n                        setTimeout(()=>{\n                            // Use the directly imported captureImagesAtPoint from the Helper/savefile.js\n                            Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-node)/./components/collected-dataset-customized/Helper/savefile.js\")).then(({ captureImagesAtPoint })=>{\n                                captureImagesAtPoint({\n                                    point: position,\n                                    captureCount: captureCounter,\n                                    canvasRef: {\n                                        current: canvas\n                                    },\n                                    setCaptureCount: setCaptureCounter,\n                                    showCapturePreview: _components_collected_dataset_customized_Action_countSave__WEBPACK_IMPORTED_MODULE_7__.showCapturePreview\n                                }).then(()=>{\n                                    setCaptureCounter((prev)=>prev + 1);\n                                    // Show TopBar again after capture\n                                    setTimeout(()=>{\n                                        setShowTopBar(true);\n                                    }, 2200);\n                                }).catch((err)=>{\n                                    console.error(\"Error capturing images:\", err);\n                                    setOutputText(`Error: ${err.message}`);\n                                    setShowTopBar(true);\n                                });\n                            }).catch((err)=>{\n                                console.error(\"Error importing savefile module:\", err);\n                                setOutputText(`Error: ${err.message}`);\n                                setShowTopBar(true);\n                            });\n                        }, 500);\n                    });\n                }\n                break;\n            case 'headPose':\n                const newHeadPoseState = !showHeadPose;\n                setShowHeadPose(newHeadPoseState);\n                setOutputText(`Head pose visualization ${newHeadPoseState ? 'enabled' : 'disabled'}`);\n                if (newHeadPoseState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newHeadPoseState && !showBoundingBox && !showMask && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showHeadPose: newHeadPoseState\n                    });\n                }\n                break;\n            case 'boundingBox':\n                const newBoundingBoxState = !showBoundingBox;\n                setShowBoundingBox(newBoundingBoxState);\n                setOutputText(`Bounding box ${newBoundingBoxState ? 'shown' : 'hidden'}`);\n                if (newBoundingBoxState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newBoundingBoxState && !showHeadPose && !showMask && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showBoundingBox: newBoundingBoxState\n                    });\n                }\n                break;\n            case 'mask':\n                const newMaskState = !showMask;\n                setShowMask(newMaskState);\n                setOutputText(`Mask ${newMaskState ? 'shown' : 'hidden'}`);\n                if (newMaskState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newMaskState && !showHeadPose && !showBoundingBox && !showParameters) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showMask: newMaskState\n                    });\n                }\n                break;\n            case 'parameters':\n                const newParametersState = !showParameters;\n                setShowParameters(newParametersState);\n                setOutputText(`Parameters ${newParametersState ? 'shown' : 'hidden'}`);\n                if (newParametersState && !showCamera) {\n                    setShowCameraPlaceholder(true);\n                } else if (!newParametersState && !showHeadPose && !showBoundingBox && !showMask) {\n                    setShowCameraPlaceholder(false);\n                }\n                // Update processor options if camera is active\n                if (showCamera && window.videoProcessor) {\n                    window.videoProcessor.updateOptions({\n                        ...window.videoProcessor.options,\n                        showParameters: newParametersState\n                    });\n                }\n                break;\n            // Fixed calibrate case handler in index.js\n            case 'calibrate':\n                setOutputText('Starting calibration sequence...');\n                setShowTopBar(false);\n                if (showCamera) {\n                    toggleCamera(false);\n                }\n                if (actionButtonGroupRef.current && actionButtonGroupRef.current.handleSetCalibrate) {\n                    // Use the reference method if available\n                    console.log('Using ActionButtonGroup ref method for calibration');\n                    actionButtonGroupRef.current.handleSetCalibrate();\n                } else if (false) {} else {\n                    // Make sure we have a canvas to work with\n                    const canvas = getMainCanvas();\n                    if (!canvas) {\n                        console.error(\"Canvas not found for calibration\");\n                        setOutputText(\"Error: Canvas not available for calibration\");\n                        setShowTopBar(true);\n                        return;\n                    }\n                    // Load all required modules first, then proceed with execution\n                    Promise.all([\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/CalibratePoints.jsx */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/CalibratePoints.jsx\")),\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Action/countSave.jsx */ \"(pages-dir-node)/./components/collected-dataset-customized/Action/countSave.jsx\")),\n                        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../components/collected-dataset-customized/Helper/savefile */ \"(pages-dir-node)/./components/collected-dataset-customized/Helper/savefile.js\"))\n                    ]).then(async ([calibratePointsModule, countSaveModule, savefileModule])=>{\n                        // Destructure the imported modules\n                        const { generateCalibrationPoints } = calibratePointsModule;\n                        const { drawRedDot, runCountdown, showCapturePreview } = countSaveModule;\n                        const { captureImagesAtPoint } = savefileModule;\n                        try {\n                            // Generate calibration points\n                            const points = generateCalibrationPoints(canvas.width, canvas.height);\n                            if (!points || points.length === 0) {\n                                throw new Error(\"Failed to generate calibration points\");\n                            }\n                            // Create status indicator\n                            const statusIndicator = document.createElement('div');\n                            statusIndicator.className = 'calibrate-status-indicator';\n                            statusIndicator.style.cssText = `\n                position: fixed;\n                top: 10px;\n                right: 10px;\n                background-color: rgba(0, 102, 204, 0.9);\n                color: white;\n                font-size: 14px;\n                font-weight: bold;\n                padding: '8px 12px';\n                border-radius: 6px;\n                z-index: 9999;\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n              `;\n                            statusIndicator.textContent = 'Calibration: Initializing...';\n                            document.body.appendChild(statusIndicator);\n                            // Access webcam before starting calibration if available\n                            if (typeof triggerCameraAccess === 'function') {\n                                triggerCameraAccess(true);\n                                await new Promise((resolve)=>setTimeout(resolve, 500));\n                            }\n                            // Process points sequentially\n                            let successCount = 0;\n                            for(let i = 0; i < points.length; i++){\n                                const point = points[i];\n                                statusIndicator.textContent = `Calibration: Point ${i + 1}/${points.length}`;\n                                setOutputText(`Processing calibration point ${i + 1}/${points.length}`);\n                                // Clear the canvas before drawing new point\n                                const ctx = canvas.getContext('2d');\n                                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                                ctx.fillStyle = 'white';\n                                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                                // Draw the dot\n                                drawRedDot(ctx, point.x, point.y);\n                                // Run countdown\n                                await new Promise((resolve)=>{\n                                    runCountdown(point, canvas, (status)=>{\n                                        if (status.processStatus) {\n                                            setOutputText(status.processStatus);\n                                        }\n                                    }, resolve // This will be called when countdown completes\n                                    );\n                                });\n                                // Capture images at this point\n                                try {\n                                    const captureResult = await captureImagesAtPoint({\n                                        point: point,\n                                        captureCount: captureCounter,\n                                        canvasRef: {\n                                            current: canvas\n                                        },\n                                        setCaptureCount: setCaptureCounter,\n                                        showCapturePreview: showCapturePreview\n                                    });\n                                    if (captureResult && (captureResult.screenImage || captureResult.success)) {\n                                        successCount++;\n                                    }\n                                    // Increment counter\n                                    setCaptureCounter((prev)=>prev + 1);\n                                } catch (error) {\n                                    console.error(`Error capturing point ${i + 1}:`, error);\n                                }\n                                // Wait between points\n                                await new Promise((resolve)=>setTimeout(resolve, 1200));\n                            }\n                            // Calibration complete\n                            statusIndicator.textContent = `Calibration complete: ${successCount}/${points.length} points`;\n                            setOutputText(`Calibration completed: ${successCount}/${points.length} points captured`);\n                            // Remove the status indicator after a delay\n                            setTimeout(()=>{\n                                if (statusIndicator.parentNode) {\n                                    statusIndicator.parentNode.removeChild(statusIndicator);\n                                }\n                            }, 3000);\n                        } catch (error) {\n                            console.error(\"Calibration error:\", error);\n                            setOutputText(`Calibration error: ${error.message}`);\n                        } finally{\n                            // Show TopBar again\n                            setTimeout(()=>setShowTopBar(true), 2000);\n                        }\n                    }).catch((error)=>{\n                        console.error(\"Failed to import required modules:\", error);\n                        setOutputText(`Calibration error: ${error.message}`);\n                        setShowTopBar(true);\n                    });\n                }\n                break;\n            case 'clearAll':\n                // Clear canvas\n                // const canvas = getMainCanvas();\n                if (canvas) {\n                    const ctx = canvas.getContext('2d');\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.fillStyle = 'white';\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    setOutputText('Canvas cleared');\n                }\n                break;\n            default:\n                setOutputText(`Action triggered: ${actionType}`);\n        }\n    };\n    const handlePermissionAccepted = ()=>{\n        if (!isClient || !isHydrated) return;\n        setShowPermissionPopup(false);\n        setCameraPermissionGranted(true);\n        toggleCamera(true);\n    };\n    const handlePermissionDenied = ()=>{\n        if (!isClient || !isHydrated) return;\n        setShowPermissionPopup(false);\n        setShowCameraPlaceholder(false);\n        setOutputText('Camera permission denied');\n    };\n    const handleCameraClose = ()=>{\n        if (!isClient || !isHydrated) return;\n        toggleCamera(false);\n    };\n    const handleCameraReady = (dimensions)=>{\n        if (!isClient || !isHydrated) return;\n        setMetrics({\n            width: dimensions.width,\n            height: dimensions.height,\n            distance: dimensions.distance || '---'\n        });\n        setOutputText(`Camera ready: ${dimensions.width}x${dimensions.height}`);\n    };\n    // Toggle top bar function\n    const toggleTopBar = (show)=>{\n        const newTopBarState = show !== undefined ? show : !showTopBar;\n        setShowTopBar(newTopBarState);\n        // Also hide metrics when hiding the top bar\n        if (!newTopBarState) {\n            setShowMetrics(false);\n        }\n        setOutputText(`TopBar ${newTopBarState ? 'shown' : 'hidden'}${!newTopBarState ? ', Metrics hidden' : ''}`);\n        // Wait for state update and DOM changes, then adjust canvas\n        setTimeout(adjustCanvasDimensions, 100);\n    };\n    // Toggle metrics function\n    const toggleMetrics = ()=>{\n        if (showTopBar) {\n            setShowMetrics((prev)=>!prev);\n            setOutputText(`Metrics ${!showMetrics ? 'shown' : 'hidden'}`);\n        } else {\n            // If topBar is hidden, we can't show metrics\n            setOutputText('Cannot show metrics when TopBar is hidden');\n        }\n    };\n    // Function to trigger camera access\n    const triggerCameraAccess = (forceEnable)=>{\n        if (forceEnable) {\n            // Wait a bit for VideoProcessor to be available\n            const waitForVideoProcessor = ()=>{\n                return new Promise((resolve)=>{\n                    const checkProcessor = ()=>{\n                        if (window.videoProcessor && typeof window.videoProcessor.startVideoProcessing === 'function') {\n                            resolve(true);\n                        } else {\n                            setTimeout(checkProcessor, 100);\n                        }\n                    };\n                    checkProcessor();\n                });\n            };\n            // Try to enable camera directly\n            waitForVideoProcessor().then((processorAvailable)=>{\n                if (processorAvailable) {\n                    setShowCamera(true);\n                    setShowCameraPlaceholder(false);\n                    setCameraPermissionGranted(true);\n                    // Start video processing with current options\n                    try {\n                        window.videoProcessor.startVideoProcessing({\n                            showHeadPose,\n                            showBoundingBox,\n                            showMask,\n                            showParameters,\n                            showProcessedImage: true\n                        });\n                        console.log('Video processing started successfully');\n                        return true;\n                    } catch (error) {\n                        console.error('Error starting video processing:', error);\n                        setShowCamera(false);\n                        setShowCameraPlaceholder(false);\n                        setCameraPermissionGranted(false);\n                        return false;\n                    }\n                } else {\n                    console.warn('VideoProcessor not available after waiting');\n                    // Fallback to showing camera permission popup\n                    setShowPermissionPopup(true);\n                    return false;\n                }\n            }).catch((error)=>{\n                console.error('Error waiting for VideoProcessor:', error);\n                setShowPermissionPopup(true);\n                return false;\n            });\n            // Return true immediately to indicate we're trying\n            return true;\n        }\n        // Just toggle current state if not forcing\n        if (cameraPermissionGranted) {\n            toggleCamera(!showCamera);\n            return true;\n        } else {\n            setShowPermissionPopup(true);\n            return false;\n        }\n    };\n    // Dynamic class to reflect current window size\n    const getSizeClass = ()=>{\n        const { percentage } = windowSize;\n        if (percentage < 35) return 'window-size-tiny';\n        if (percentage < 50) return 'window-size-small';\n        if (percentage < 70) return 'window-size-medium';\n        return 'window-size-large';\n    };\n    // Add this function to handle settings visibility\n    const handleSettingsVisibility = (isVisible)=>{\n        setShowSettings(isVisible);\n    };\n    // Add this effect to listen for settings visibility changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const handleSettingsMessage = {\n                \"CollectedDatasetPage.useEffect.handleSettingsMessage\": (event)=>{\n                    if (event.data.type === 'SHOW_SETTINGS') {\n                        setShowSettings(event.data.show);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleSettingsMessage\"];\n            window.addEventListener('message', handleSettingsMessage);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('message', handleSettingsMessage);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], []);\n    // Listen for user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const handleUserIdChange = {\n                \"CollectedDatasetPage.useEffect.handleUserIdChange\": (event)=>{\n                    if (event.detail && event.detail.type === 'userIdChange') {\n                        setCurrentUserId(event.detail.userId);\n                        // Dispatch event to update settings for the new user\n                        const event = new CustomEvent('captureSettingsUpdate', {\n                            detail: {\n                                type: 'captureSettings',\n                                userId: event.detail.userId\n                            }\n                        });\n                        window.dispatchEvent(event);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleUserIdChange\"];\n            window.addEventListener('userIdChange', handleUserIdChange);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('userIdChange', handleUserIdChange);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], []);\n    // Initialize settings when component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (consentUserId) {\n                // Set the current user ID\n                setCurrentUserId(consentUserId);\n                // Dispatch event to update settings for this user\n                const event = new CustomEvent('captureSettingsUpdate', {\n                    detail: {\n                        type: 'captureSettings',\n                        userId: consentUserId\n                    }\n                });\n                window.dispatchEvent(event);\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId\n    ]);\n    // Load settings from backend when component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const loadSettings = {\n                \"CollectedDatasetPage.useEffect.loadSettings\": async ()=>{\n                    if (!consentUserId) return;\n                    try {\n                        const response = await fetch(`/api/data-center/settings/${consentUserId}`);\n                        if (!response.ok) {\n                            throw new Error('Failed to load settings');\n                        }\n                        const loadedSettings = await response.json();\n                        // Wait for the component to be mounted and ref to be initialized\n                        const waitForRef = {\n                            \"CollectedDatasetPage.useEffect.loadSettings.waitForRef\": (retries = 5)=>{\n                                if (actionButtonGroupRef.current && typeof actionButtonGroupRef.current.updateSettings === 'function') {\n                                    // Update the settings for this user\n                                    actionButtonGroupRef.current.updateSettings(loadedSettings);\n                                    // Dispatch event to update UI\n                                    const event = new CustomEvent('captureSettingsUpdate', {\n                                        detail: {\n                                            type: 'captureSettings',\n                                            userId: consentUserId,\n                                            times: loadedSettings.times,\n                                            delay: loadedSettings.delay\n                                        }\n                                    });\n                                    window.dispatchEvent(event);\n                                } else if (retries > 0) {\n                                    setTimeout({\n                                        \"CollectedDatasetPage.useEffect.loadSettings.waitForRef\": ()=>waitForRef(retries - 1)\n                                    }[\"CollectedDatasetPage.useEffect.loadSettings.waitForRef\"], 500);\n                                } else {\n                                    console.warn('ActionButtonGroup ref not initialized after retries');\n                                }\n                            }\n                        }[\"CollectedDatasetPage.useEffect.loadSettings.waitForRef\"];\n                        waitForRef();\n                    } catch (error) {\n                        console.error('Error loading settings:', error);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.loadSettings\"];\n            // Add a small delay to ensure components are mounted\n            setTimeout(loadSettings, 1000);\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId\n    ]);\n    // Add polling for real-time updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const fetchUpdates = {\n                \"CollectedDatasetPage.useEffect.fetchUpdates\": async ()=>{\n                    if (!consentUserId) return;\n                    try {\n                        const response = await fetch(`/api/data-center/settings/${consentUserId}`);\n                        if (!response.ok) throw new Error('Failed to fetch settings');\n                        const settings = await response.json();\n                        if (actionButtonGroupRef.current && actionButtonGroupRef.current.updateSettings) {\n                            actionButtonGroupRef.current.updateSettings(settings);\n                        }\n                    // You can add image fetching logic here if needed\n                    } catch (error) {\n                        console.error('Error fetching updates:', error);\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.fetchUpdates\"];\n            // Initial fetch\n            fetchUpdates();\n            // Set up polling interval\n            const interval = setInterval(fetchUpdates, 3000);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    clearInterval(interval);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId\n    ]);\n    // Add event listeners for settings and image updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"CollectedDatasetPage.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail?.type === 'captureSettings' && event.detail?.userId === consentUserId) {\n                        const { times, delay } = event.detail;\n                        if (actionButtonGroupRef.current && actionButtonGroupRef.current.updateSettings) {\n                            actionButtonGroupRef.current.updateSettings({\n                                times,\n                                delay\n                            });\n                        }\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleSettingsUpdate\"];\n            const handleImageUpdate = {\n                \"CollectedDatasetPage.useEffect.handleImageUpdate\": (event)=>{\n                    if (event.detail?.type === 'image' && event.detail?.userId === consentUserId) {\n                        const { image } = event.detail;\n                    // Update image in the UI if needed\n                    // You can add your image update logic here\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleImageUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            window.addEventListener('imageUpdate', handleImageUpdate);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate);\n                    window.removeEventListener('imageUpdate', handleImageUpdate);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId\n    ]);\n    // Load settings for a specific user\n    const loadSettings = async (userId)=>{\n        try {\n            console.log('Loading settings for user:', userId);\n            const response = await fetch(`/api/data-center/settings/${userId}`);\n            if (!response.ok) throw new Error('Failed to fetch settings');\n            const userSettings = await response.json();\n            console.log('Fetched settings:', userSettings);\n            // Dispatch settings update event\n            const event = new CustomEvent('captureSettingsUpdate', {\n                detail: {\n                    type: 'captureSettings',\n                    userId,\n                    ...userSettings\n                }\n            });\n            window.dispatchEvent(event);\n        } catch (error) {\n            console.error('Error loading settings:', error);\n        }\n    };\n    // Handle user ID changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            if (consentUserId && consentUserId !== currentUserId) {\n                console.log('User ID changed in index.js:', consentUserId);\n                setCurrentUserId(consentUserId);\n                // Dispatch event to notify other components\n                const event = new CustomEvent('userIdChange', {\n                    detail: {\n                        userId: consentUserId\n                    }\n                });\n                window.dispatchEvent(event);\n                // Load settings for the new user\n                loadSettings(consentUserId);\n            }\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        consentUserId,\n        currentUserId\n    ]);\n    // Listen for settings updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CollectedDatasetPage.useEffect\": ()=>{\n            const handleSettingsUpdate = {\n                \"CollectedDatasetPage.useEffect.handleSettingsUpdate\": (event)=>{\n                    if (event.detail && event.detail.type === 'captureSettings') {\n                        const { userId, times, delay } = event.detail;\n                        if (userId === currentUserId) {\n                            // Update the settings for this user\n                            if (actionButtonGroupRef.current && actionButtonGroupRef.current.updateSettings) {\n                                actionButtonGroupRef.current.updateSettings({\n                                    times: times || 1,\n                                    delay: delay || 3\n                                });\n                            }\n                        }\n                    }\n                }\n            }[\"CollectedDatasetPage.useEffect.handleSettingsUpdate\"];\n            window.addEventListener('captureSettingsUpdate', handleSettingsUpdate);\n            return ({\n                \"CollectedDatasetPage.useEffect\": ()=>{\n                    window.removeEventListener('captureSettingsUpdate', handleSettingsUpdate);\n                }\n            })[\"CollectedDatasetPage.useEffect\"];\n        }\n    }[\"CollectedDatasetPage.useEffect\"], [\n        currentUserId\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `main-container ${getSizeClass()}`,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Camera Dataset Collection\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1553,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1554,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1552,\n                columnNumber: 7\n            }, this),\n            isHydrated && backendStatus === 'disconnected' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: 'fixed',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    padding: '6px 0',\n                    backgroundColor: '#ffe0b2',\n                    color: '#e65100',\n                    textAlign: 'center',\n                    fontSize: '14px',\n                    fontWeight: 'bold',\n                    zIndex: 1100\n                },\n                children: \"⚠️ Backend disconnected. Hurry up, Make ONLINE please and Using mock mode\"\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1559,\n                columnNumber: 9\n            }, this),\n            isHydrated && showWarning && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"warning-banner\",\n                style: {\n                    position: 'fixed',\n                    top: showTopBar ? backendStatus === 'disconnected' ? '32px' : '60px' : '0',\n                    left: '0',\n                    width: '100%',\n                    backgroundColor: '#ffeb3b',\n                    color: '#333',\n                    padding: '10px',\n                    textAlign: 'center',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n                    zIndex: 1010,\n                    animation: 'fadeIn 0.3s ease-in-out'\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                    children: [\n                        \"⚠️ \",\n                        warningMessage\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 1591,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1578,\n                columnNumber: 9\n            }, this),\n            isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"loading-container\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Loading user settings...\"\n                }, void 0, false, {\n                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                    lineNumber: 1597,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                lineNumber: 1596,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    isHydrated && isClient && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VideoProcessorComponent, {}, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1603,\n                        columnNumber: 9\n                    }, this),\n                    showTopBar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_topBar__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        onButtonClick: handleActionButtonClick,\n                        onCameraAccess: ()=>setShowPermissionPopup(true),\n                        outputText: statusMessage || outputText,\n                        onOutputChange: (text)=>setOutputText(text),\n                        onToggleTopBar: toggleTopBar,\n                        onToggleMetrics: toggleMetrics,\n                        canvasRef: canvasRef\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1608,\n                        columnNumber: 13\n                    }, this),\n                    !showTopBar && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"restore-button-container\",\n                        style: {\n                            position: 'fixed',\n                            top: '10px',\n                            right: '10px',\n                            zIndex: 1000\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"restore-btn\",\n                            onClick: ()=>toggleTopBar(true),\n                            title: \"Show TopBar and Metrics\",\n                            style: {\n                                padding: '5px 10px',\n                                background: '#0066cc',\n                                color: 'white',\n                                border: 'none',\n                                borderRadius: '4px',\n                                fontSize: '16px',\n                                cursor: 'pointer'\n                            },\n                            children: \"≡\"\n                        }, void 0, false, {\n                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                            lineNumber: 1627,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1621,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: previewAreaRef,\n                        className: \"camera-preview-area\",\n                        style: {\n                            height: showTopBar ? 'calc(100vh - 120px)' : '100vh',\n                            marginTop: backendStatus === 'disconnected' ? '32px' : '0',\n                            position: 'relative',\n                            backgroundColor: '#f5f5f5',\n                            overflow: 'hidden'\n                        },\n                        children: [\n                            !showCamera ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"camera-preview-message\",\n                                        style: {\n                                            padding: '20px',\n                                            textAlign: 'center',\n                                            position: showTopBar ? 'relative' : 'absolute',\n                                            width: '100%',\n                                            zIndex: 5\n                                        },\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                children: \"Camera preview will appear here\"\n                                            }, void 0, false, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1686,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"camera-size-indicator\",\n                                                children: [\n                                                    \"Current window: \",\n                                                    windowSize.percentage,\n                                                    \"% of screen width\"\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1687,\n                                                columnNumber: 19\n                                            }, this),\n                                            isHydrated && showCameraPlaceholder && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"camera-placeholder-square\",\n                                                style: {\n                                                    width: '180px',\n                                                    height: '135px',\n                                                    margin: '20px auto',\n                                                    border: '2px dashed #666',\n                                                    borderRadius: '4px',\n                                                    backgroundColor: '#f5f5f5',\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent: 'center'\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    style: {\n                                                        fontSize: '1.5rem'\n                                                    },\n                                                    children: \"\\uD83D\\uDCF7\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1705,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                lineNumber: 1691,\n                                                columnNumber: 21\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                        lineNumber: 1679,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"canvas-container\",\n                                        style: {\n                                            position: 'absolute',\n                                            top: 0,\n                                            left: 0,\n                                            width: '100%',\n                                            height: '100%',\n                                            backgroundColor: 'white',\n                                            overflow: 'hidden',\n                                            border: 'none',\n                                            zIndex: 10,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center'\n                                        },\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                                            ref: canvasRef,\n                                            className: \"tracking-canvas\",\n                                            style: {\n                                                width: '100%',\n                                                height: '100%',\n                                                display: 'block',\n                                                maxWidth: '100%',\n                                                maxHeight: '100%',\n                                                objectFit: 'contain'\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1728,\n                                            columnNumber: 19\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                        lineNumber: 1711,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, void 0, true) : null,\n                            isHydrated && showMetrics && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_gui_displayResponse__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                width: metrics.width,\n                                height: metrics.height,\n                                distance: metrics.distance,\n                                isVisible: showMetrics\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1746,\n                                columnNumber: 15\n                            }, this),\n                            isHydrated && isClient && showCamera && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicCameraAccess, {\n                                isShowing: showCamera,\n                                onClose: handleCameraClose,\n                                onCameraReady: handleCameraReady,\n                                showHeadPose: showHeadPose,\n                                showBoundingBox: showBoundingBox,\n                                showMask: showMask,\n                                showParameters: showParameters,\n                                videoRef: videoRef\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1756,\n                                columnNumber: 15\n                            }, this),\n                            isHydrated && isClient && showPermissionPopup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"camera-permission-popup\",\n                                style: {\n                                    position: 'fixed',\n                                    top: 0,\n                                    left: 0,\n                                    width: '100%',\n                                    height: '100%',\n                                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    zIndex: 2000\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"camera-permission-dialog\",\n                                    style: {\n                                        width: '400px',\n                                        backgroundColor: 'white',\n                                        borderRadius: '8px',\n                                        padding: '20px',\n                                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                            className: \"camera-permission-title\",\n                                            style: {\n                                                margin: '0 0 15px',\n                                                fontSize: '18px',\n                                                fontWeight: 'bold'\n                                            },\n                                            children: \"Camera Access Required\"\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1789,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"camera-permission-message\",\n                                            style: {\n                                                margin: '0 0 20px',\n                                                fontSize: '14px',\n                                                lineHeight: '1.4'\n                                            },\n                                            children: 'This application needs access to your camera to function properly. When prompted by your browser, please click \"Allow\" to grant camera access.'\n                                        }, void 0, false, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1794,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"camera-permission-buttons\",\n                                            style: {\n                                                display: 'flex',\n                                                justifyContent: 'flex-end',\n                                                gap: '10px'\n                                            },\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: handlePermissionDenied,\n                                                    className: \"camera-btn\",\n                                                    style: {\n                                                        padding: '8px 16px',\n                                                        backgroundColor: '#f0f0f0',\n                                                        border: 'none',\n                                                        borderRadius: '4px',\n                                                        cursor: 'pointer'\n                                                    },\n                                                    children: \"Cancel\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1807,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    onClick: handlePermissionAccepted,\n                                                    className: \"camera-btn\",\n                                                    style: {\n                                                        padding: '8px 16px',\n                                                        backgroundColor: '#0066cc',\n                                                        color: 'white',\n                                                        border: 'none',\n                                                        borderRadius: '4px',\n                                                        cursor: 'pointer'\n                                                    },\n                                                    children: \"Continue\"\n                                                }, void 0, false, {\n                                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                                    lineNumber: 1820,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                            lineNumber: 1802,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                    lineNumber: 1782,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                                lineNumber: 1770,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n                        lineNumber: 1647,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/pages/collected-dataset-customized/index.js\",\n        lineNumber: 1551,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./pages/collected-dataset-customized/index.js\n");

/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset/styles/camera.css":
/*!***************************************************!*\
  !*** ./pages/collected-dataset/styles/camera.css ***!
  \***************************************************/
/***/ (() => {



/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset/styles/control-buttons.css":
/*!************************************************************!*\
  !*** ./pages/collected-dataset/styles/control-buttons.css ***!
  \************************************************************/
/***/ (() => {



/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset/styles/main.css":
/*!*************************************************!*\
  !*** ./pages/collected-dataset/styles/main.css ***!
  \*************************************************/
/***/ (() => {



/***/ }),

/***/ "(pages-dir-node)/./pages/collected-dataset/styles/topbar.css":
/*!***************************************************!*\
  !*** ./pages/collected-dataset/styles/topbar.css ***!
  \***************************************************/
/***/ (() => {



/***/ }),

/***/ "(pages-dir-node)/./styles/Consent.module.css":
/*!***********************************!*\
  !*** ./styles/Consent.module.css ***!
  \***********************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"bannerContainer\": \"Consent_bannerContainer__ANUBL\",\n\t\"bannerContent\": \"Consent_bannerContent__ZkmhZ\",\n\t\"bannerText\": \"Consent_bannerText___ChrP\",\n\t\"bannerButtons\": \"Consent_bannerButtons___mgz1\",\n\t\"bannerButton\": \"Consent_bannerButton__4Fv1L\",\n\t\"acceptButton\": \"Consent_acceptButton__gRsOZ\",\n\t\"declineButton\": \"Consent_declineButton__hqZeL\",\n\t\"learnMoreButton\": \"Consent_learnMoreButton__67pMk\",\n\t\"preferencesContainer\": \"Consent_preferencesContainer__9BVAk\",\n\t\"preferencesTitle\": \"Consent_preferencesTitle__ooxt_\",\n\t\"formGroup\": \"Consent_formGroup__KFE4i\",\n\t\"formLabel\": \"Consent_formLabel__tTg3F\",\n\t\"formControl\": \"Consent_formControl__pNM3l\",\n\t\"formSwitch\": \"Consent_formSwitch__kVrWI\",\n\t\"formCheckbox\": \"Consent_formCheckbox__3369o\",\n\t\"submitButton\": \"Consent_submitButton__CZklY\",\n\t\"backButton\": \"Consent_backButton__eebzl\",\n\t\"mainContent\": \"Consent_mainContent__hwFgD\",\n\t\"withBanner\": \"Consent_withBanner__lotH_\",\n\t\"consentTable\": \"Consent_consentTable__a_fCs\",\n\t\"saveButton\": \"Consent_saveButton__p_FJM\",\n\t\"notification\": \"Consent_notification__4PYiV\",\n\t\"slideIn\": \"Consent_slideIn__i_R9J\",\n\t\"notificationContent\": \"Consent_notificationContent__nd7TN\",\n\t\"notificationIcon\": \"Consent_notificationIcon__RV_7Y\",\n\t\"notificationMessage\": \"Consent_notificationMessage__wKP1B\",\n\t\"notificationSuccess\": \"Consent_notificationSuccess__Mrtv4\",\n\t\"notificationError\": \"Consent_notificationError__xskoy\",\n\t\"successMessage\": \"Consent_successMessage___PN6n\",\n\t\"errorMessage\": \"Consent_errorMessage__v6E0n\",\n\t\"section\": \"Consent_section__CJzTz\",\n\t\"actionButtons\": \"Consent_actionButtons__3N_zh\",\n\t\"deleteButton\": \"Consent_deleteButton__nrDLO\",\n\t\"confirmationDialog\": \"Consent_confirmationDialog__NtLa4\",\n\t\"confirmationContent\": \"Consent_confirmationContent__JG4X6\",\n\t\"confirmationButtons\": \"Consent_confirmationButtons__ixtJQ\",\n\t\"confirmButton\": \"Consent_confirmButton__vx9pM\",\n\t\"cancelButton\": \"Consent_cancelButton__dhe9_\",\n\t\"numberInputContainer\": \"Consent_numberInputContainer__Irnir\",\n\t\"numberInput\": \"Consent_numberInput__RQMNt\",\n\t\"numberControls\": \"Consent_numberControls__MzUXF\",\n\t\"numberControl\": \"Consent_numberControl__4A3iz\",\n\t\"settingsGrid\": \"Consent_settingsGrid__tMbz9\",\n\t\"div1\": \"Consent_div1__GjgNg\",\n\t\"div2\": \"Consent_div2__V_ZL6\",\n\t\"div3\": \"Consent_div3__ZmsKb\",\n\t\"div4\": \"Consent_div4__kNMOY\",\n\t\"div5\": \"Consent_div5__MKfVe\",\n\t\"settingsSection\": \"Consent_settingsSection__C4mJf\",\n\t\"buttonOrderSection\": \"Consent_buttonOrderSection__qi7D_\",\n\t\"infoBox\": \"Consent_infoBox__fUhjF\",\n\t\"taskList\": \"Consent_taskList__bQHD0\",\n\t\"taskCard\": \"Consent_taskCard__3pbX8\",\n\t\"taskCheckbox\": \"Consent_taskCheckbox__yqJXX\",\n\t\"dragHandle\": \"Consent_dragHandle__yB4kg\",\n\t\"priorityBadge\": \"Consent_priorityBadge__WJwkO\",\n\t\"priorityBadgeRed\": \"Consent_priorityBadgeRed__907Ee\",\n\t\"priorityBadgeYellow\": \"Consent_priorityBadgeYellow__Q19Ly\",\n\t\"priorityBadgeGreen\": \"Consent_priorityBadgeGreen__CGdzr\",\n\t\"priorityBadgeGray\": \"Consent_priorityBadgeGray__8uyCJ\",\n\t\"priorityInputContainer\": \"Consent_priorityInputContainer__GDg86\",\n\t\"priorityInput\": \"Consent_priorityInput__IRp9M\",\n\t\"taskContent\": \"Consent_taskContent__99KbY\",\n\t\"editRow\": \"Consent_editRow__N3isw\",\n\t\"editInput\": \"Consent_editInput__eCURl\",\n\t\"saveEditBtn\": \"Consent_saveEditBtn__TsTCy\",\n\t\"cancelEditBtn\": \"Consent_cancelEditBtn__KdJzz\",\n\t\"taskInfoRow\": \"Consent_taskInfoRow__6VFBN\",\n\t\"taskName\": \"Consent_taskName__B6ETh\",\n\t\"taskDesc\": \"Consent_taskDesc__h3jWW\",\n\t\"editBtn\": \"Consent_editBtn__Tco6k\",\n\t\"orderSummaryBox\": \"Consent_orderSummaryBox__Qo_e4\",\n\t\"orderSummaryTitle\": \"Consent_orderSummaryTitle__X7TZF\",\n\t\"orderSummaryRow\": \"Consent_orderSummaryRow__ldIzm\",\n\t\"orderSummaryNone\": \"Consent_orderSummaryNone__3P_FN\",\n\t\"fadeInOut\": \"Consent_fadeInOut__ZEZGD\",\n\t\"show\": \"Consent_show___O5Gy\",\n\t\"hide\": \"Consent_hide__qEh_j\",\n\t\"saveOrderContainer\": \"Consent_saveOrderContainer__buqkd\",\n\t\"saveOrderButton\": \"Consent_saveOrderButton__kPt5G\",\n\t\"saveStatus\": \"Consent_saveStatus__zbW3C\",\n\t\"success\": \"Consent_success__c8GPO\",\n\t\"error\": \"Consent_error__8tpN5\",\n\t\"userSelectionSection\": \"Consent_userSelectionSection__I_x8m\",\n\t\"userSelectionContainer\": \"Consent_userSelectionContainer__3iqoT\",\n\t\"userSelectionLabel\": \"Consent_userSelectionLabel__kWHAg\",\n\t\"userSelectionInput\": \"Consent_userSelectionInput__4eYqR\",\n\t\"canvaConfigModal\": \"Consent_canvaConfigModal__IQY0K\",\n\t\"canvaConfigContent\": \"Consent_canvaConfigContent__0p9eU\",\n\t\"dropZone\": \"Consent_dropZone__lmDYu\",\n\t\"dragActive\": \"Consent_dragActive__g0ml0\",\n\t\"imagePreview\": \"Consent_imagePreview__LVp_v\",\n\t\"dropZoneText\": \"Consent_dropZoneText__WK76Y\",\n\t\"supportedFormats\": \"Consent_supportedFormats__O330V\",\n\t\"canvaConfigActions\": \"Consent_canvaConfigActions__WfwSF\",\n\t\"clearButton\": \"Consent_clearButton__u7sr2\",\n\t\"uploadButton\": \"Consent_uploadButton__1tNSq\",\n\t\"currentImage\": \"Consent_currentImage__24_2c\",\n\t\"currentImagePreview\": \"Consent_currentImagePreview__dpj_H\",\n\t\"previewGrid\": \"Consent_previewGrid__YgHP_\",\n\t\"previewItem\": \"Consent_previewItem__BqASG\",\n\t\"removeButton\": \"Consent_removeButton___PKzt\",\n\t\"fileName\": \"Consent_fileName__SqLPS\",\n\t\"slideOut\": \"Consent_slideOut__AbNmK\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./styles/Consent.module.css\n");

/***/ }),

/***/ "(pages-dir-node)/./styles/Home.module.css":
/*!********************************!*\
  !*** ./styles/Home.module.css ***!
  \********************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"container\": \"Home_container__d256j\",\n\t\"main\": \"Home_main__VkIEL\",\n\t\"footer\": \"Home_footer__yFiaX\",\n\t\"footerLink\": \"Home_footerLink__201sb\",\n\t\"title\": \"Home_title__hYX6j\",\n\t\"description\": \"Home_description__uXNdx\",\n\t\"uploaderContainer\": \"Home_uploaderContainer__uJ_r1\",\n\t\"buttonGrid\": \"Home_buttonGrid__6YmSF\",\n\t\"menuButton\": \"Home_menuButton__x35GK\",\n\t\"buttonRow\": \"Home_buttonRow__Nrj5f\",\n\t\"backButton\": \"Home_backButton__kEp3f\",\n\t\"centerButtonContainer\": \"Home_centerButtonContainer__0xoFG\",\n\t\"largerButton\": \"Home_largerButton__oA5AX\",\n\t\"readyButton\": \"Home_readyButton__Anf7z\",\n\t\"notReadyButton\": \"Home_notReadyButton___QovH\",\n\t\"statusText\": \"Home_statusText__E0bns\",\n\t\"statusToggleButton\": \"Home_statusToggleButton__uKFNS\",\n\t\"statusDisplay\": \"Home_statusDisplay__3g6BC\",\n\t\"dummyControls\": \"Home_dummyControls__omnHy\",\n\t\"processingButton\": \"Home_processingButton__y_sZA\",\n\t\"buttonContainer\": \"Home_buttonContainer__nOVuY\",\n\t\"button\": \"Home_button__G93Ef\",\n\t\"buttonEnabled\": \"Home_buttonEnabled__9tuN2\",\n\t\"buttonDisabled\": \"Home_buttonDisabled__g7Nm8\",\n\t\"buttonOverlay\": \"Home_buttonOverlay__ZIOY0\",\n\t\"overlayIcon\": \"Home_overlayIcon__Nbtir\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3N0eWxlcy9Ib21lLm1vZHVsZS5jc3MiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2FwcC9zdHlsZXMvSG9tZS5tb2R1bGUuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0ge1xuXHRcImNvbnRhaW5lclwiOiBcIkhvbWVfY29udGFpbmVyX19kMjU2alwiLFxuXHRcIm1haW5cIjogXCJIb21lX21haW5fX1ZrSUVMXCIsXG5cdFwiZm9vdGVyXCI6IFwiSG9tZV9mb290ZXJfX3lGaWFYXCIsXG5cdFwiZm9vdGVyTGlua1wiOiBcIkhvbWVfZm9vdGVyTGlua19fMjAxc2JcIixcblx0XCJ0aXRsZVwiOiBcIkhvbWVfdGl0bGVfX2hZWDZqXCIsXG5cdFwiZGVzY3JpcHRpb25cIjogXCJIb21lX2Rlc2NyaXB0aW9uX191WE5keFwiLFxuXHRcInVwbG9hZGVyQ29udGFpbmVyXCI6IFwiSG9tZV91cGxvYWRlckNvbnRhaW5lcl9fdUpfcjFcIixcblx0XCJidXR0b25HcmlkXCI6IFwiSG9tZV9idXR0b25HcmlkX182WW1TRlwiLFxuXHRcIm1lbnVCdXR0b25cIjogXCJIb21lX21lbnVCdXR0b25fX3gzNUdLXCIsXG5cdFwiYnV0dG9uUm93XCI6IFwiSG9tZV9idXR0b25Sb3dfX05yajVmXCIsXG5cdFwiYmFja0J1dHRvblwiOiBcIkhvbWVfYmFja0J1dHRvbl9fa0VwM2ZcIixcblx0XCJjZW50ZXJCdXR0b25Db250YWluZXJcIjogXCJIb21lX2NlbnRlckJ1dHRvbkNvbnRhaW5lcl9fMHhvRkdcIixcblx0XCJsYXJnZXJCdXR0b25cIjogXCJIb21lX2xhcmdlckJ1dHRvbl9fb0E1QVhcIixcblx0XCJyZWFkeUJ1dHRvblwiOiBcIkhvbWVfcmVhZHlCdXR0b25fX0FuZjd6XCIsXG5cdFwibm90UmVhZHlCdXR0b25cIjogXCJIb21lX25vdFJlYWR5QnV0dG9uX19fUW92SFwiLFxuXHRcInN0YXR1c1RleHRcIjogXCJIb21lX3N0YXR1c1RleHRfX0UwYm5zXCIsXG5cdFwic3RhdHVzVG9nZ2xlQnV0dG9uXCI6IFwiSG9tZV9zdGF0dXNUb2dnbGVCdXR0b25fX3VLRk5TXCIsXG5cdFwic3RhdHVzRGlzcGxheVwiOiBcIkhvbWVfc3RhdHVzRGlzcGxheV9fM2c2QkNcIixcblx0XCJkdW1teUNvbnRyb2xzXCI6IFwiSG9tZV9kdW1teUNvbnRyb2xzX19vbW5IeVwiLFxuXHRcInByb2Nlc3NpbmdCdXR0b25cIjogXCJIb21lX3Byb2Nlc3NpbmdCdXR0b25fX3lfc1pBXCIsXG5cdFwiYnV0dG9uQ29udGFpbmVyXCI6IFwiSG9tZV9idXR0b25Db250YWluZXJfX25PVnVZXCIsXG5cdFwiYnV0dG9uXCI6IFwiSG9tZV9idXR0b25fX0c5M0VmXCIsXG5cdFwiYnV0dG9uRW5hYmxlZFwiOiBcIkhvbWVfYnV0dG9uRW5hYmxlZF9fOXR1TjJcIixcblx0XCJidXR0b25EaXNhYmxlZFwiOiBcIkhvbWVfYnV0dG9uRGlzYWJsZWRfX2c3Tm04XCIsXG5cdFwiYnV0dG9uT3ZlcmxheVwiOiBcIkhvbWVfYnV0dG9uT3ZlcmxheV9fWklPWTBcIixcblx0XCJvdmVybGF5SWNvblwiOiBcIkhvbWVfb3ZlcmxheUljb25fX05idGlyXCJcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./styles/Home.module.css\n");

/***/ }),

/***/ "(pages-dir-node)/./styles/UserProfile.module.css":
/*!***************************************!*\
  !*** ./styles/UserProfile.module.css ***!
  \***************************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"toggleButton\": \"UserProfile_toggleButton__Tnos2\",\n\t\"sidebar\": \"UserProfile_sidebar__a8wTF\",\n\t\"open\": \"UserProfile_open__kVXoU\",\n\t\"profileHeader\": \"UserProfile_profileHeader__zrwIz\",\n\t\"closeButton\": \"UserProfile_closeButton__YCOaY\",\n\t\"statusSection\": \"UserProfile_statusSection__oVQ9C\",\n\t\"statusItem\": \"UserProfile_statusItem__NoI4f\",\n\t\"statusLabel\": \"UserProfile_statusLabel__GuWBi\",\n\t\"statusValue\": \"UserProfile_statusValue__n4plT\",\n\t\"statusActive\": \"UserProfile_statusActive__yLwQj\",\n\t\"statusInactive\": \"UserProfile_statusInactive__XuqTw\",\n\t\"profileForm\": \"UserProfile_profileForm__Px_Sv\",\n\t\"formGroup\": \"UserProfile_formGroup__yLTt1\",\n\t\"saveButton\": \"UserProfile_saveButton__1numi\",\n\t\"settingsPanel\": \"UserProfile_settingsPanel__UElU_\",\n\t\"settingsHeader\": \"UserProfile_settingsHeader__aTjSG\",\n\t\"backButton\": \"UserProfile_backButton__AsyBi\",\n\t\"settingsContent\": \"UserProfile_settingsContent__G9QI8\",\n\t\"settingsSection\": \"UserProfile_settingsSection__PbnVn\",\n\t\"settingItem\": \"UserProfile_settingItem__NOQaH\",\n\t\"numberInput\": \"UserProfile_numberInput__Qaa7n\",\n\t\"fileInput\": \"UserProfile_fileInput__RRPEK\",\n\t\"zoomControls\": \"UserProfile_zoomControls__qr35c\",\n\t\"zoomButton\": \"UserProfile_zoomButton__7NIJV\",\n\t\"zoomInput\": \"UserProfile_zoomInput__W3_rg\",\n\t\"zoomPercent\": \"UserProfile_zoomPercent__rLEYS\",\n\t\"settingsSubScroll\": \"UserProfile_settingsSubScroll__KNAm6\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3N0eWxlcy9Vc2VyUHJvZmlsZS5tb2R1bGUuY3NzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2FwcC9zdHlsZXMvVXNlclByb2ZpbGUubW9kdWxlLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0XCJ0b2dnbGVCdXR0b25cIjogXCJVc2VyUHJvZmlsZV90b2dnbGVCdXR0b25fX1Rub3MyXCIsXG5cdFwic2lkZWJhclwiOiBcIlVzZXJQcm9maWxlX3NpZGViYXJfX2E4d1RGXCIsXG5cdFwib3BlblwiOiBcIlVzZXJQcm9maWxlX29wZW5fX2tWWG9VXCIsXG5cdFwicHJvZmlsZUhlYWRlclwiOiBcIlVzZXJQcm9maWxlX3Byb2ZpbGVIZWFkZXJfX3pyd0l6XCIsXG5cdFwiY2xvc2VCdXR0b25cIjogXCJVc2VyUHJvZmlsZV9jbG9zZUJ1dHRvbl9fWUNPYVlcIixcblx0XCJzdGF0dXNTZWN0aW9uXCI6IFwiVXNlclByb2ZpbGVfc3RhdHVzU2VjdGlvbl9fb1ZROUNcIixcblx0XCJzdGF0dXNJdGVtXCI6IFwiVXNlclByb2ZpbGVfc3RhdHVzSXRlbV9fTm9JNGZcIixcblx0XCJzdGF0dXNMYWJlbFwiOiBcIlVzZXJQcm9maWxlX3N0YXR1c0xhYmVsX19HdVdCaVwiLFxuXHRcInN0YXR1c1ZhbHVlXCI6IFwiVXNlclByb2ZpbGVfc3RhdHVzVmFsdWVfX240cGxUXCIsXG5cdFwic3RhdHVzQWN0aXZlXCI6IFwiVXNlclByb2ZpbGVfc3RhdHVzQWN0aXZlX195THdRalwiLFxuXHRcInN0YXR1c0luYWN0aXZlXCI6IFwiVXNlclByb2ZpbGVfc3RhdHVzSW5hY3RpdmVfX1h1cVR3XCIsXG5cdFwicHJvZmlsZUZvcm1cIjogXCJVc2VyUHJvZmlsZV9wcm9maWxlRm9ybV9fUHhfU3ZcIixcblx0XCJmb3JtR3JvdXBcIjogXCJVc2VyUHJvZmlsZV9mb3JtR3JvdXBfX3lMVHQxXCIsXG5cdFwic2F2ZUJ1dHRvblwiOiBcIlVzZXJQcm9maWxlX3NhdmVCdXR0b25fXzFudW1pXCIsXG5cdFwic2V0dGluZ3NQYW5lbFwiOiBcIlVzZXJQcm9maWxlX3NldHRpbmdzUGFuZWxfX1VFbFVfXCIsXG5cdFwic2V0dGluZ3NIZWFkZXJcIjogXCJVc2VyUHJvZmlsZV9zZXR0aW5nc0hlYWRlcl9fYVRqU0dcIixcblx0XCJiYWNrQnV0dG9uXCI6IFwiVXNlclByb2ZpbGVfYmFja0J1dHRvbl9fQXN5QmlcIixcblx0XCJzZXR0aW5nc0NvbnRlbnRcIjogXCJVc2VyUHJvZmlsZV9zZXR0aW5nc0NvbnRlbnRfX0c5UUk4XCIsXG5cdFwic2V0dGluZ3NTZWN0aW9uXCI6IFwiVXNlclByb2ZpbGVfc2V0dGluZ3NTZWN0aW9uX19QYm5WblwiLFxuXHRcInNldHRpbmdJdGVtXCI6IFwiVXNlclByb2ZpbGVfc2V0dGluZ0l0ZW1fX05PUWFIXCIsXG5cdFwibnVtYmVySW5wdXRcIjogXCJVc2VyUHJvZmlsZV9udW1iZXJJbnB1dF9fUWFhN25cIixcblx0XCJmaWxlSW5wdXRcIjogXCJVc2VyUHJvZmlsZV9maWxlSW5wdXRfX1JSUEVLXCIsXG5cdFwiem9vbUNvbnRyb2xzXCI6IFwiVXNlclByb2ZpbGVfem9vbUNvbnRyb2xzX19xcjM1Y1wiLFxuXHRcInpvb21CdXR0b25cIjogXCJVc2VyUHJvZmlsZV96b29tQnV0dG9uX183TklKVlwiLFxuXHRcInpvb21JbnB1dFwiOiBcIlVzZXJQcm9maWxlX3pvb21JbnB1dF9fVzNfcmdcIixcblx0XCJ6b29tUGVyY2VudFwiOiBcIlVzZXJQcm9maWxlX3pvb21QZXJjZW50X19yTEVZU1wiLFxuXHRcInNldHRpbmdzU3ViU2Nyb2xsXCI6IFwiVXNlclByb2ZpbGVfc2V0dGluZ3NTdWJTY3JvbGxfX0tOQW02XCJcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-node)/./styles/UserProfile.module.css\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/consentManager.js":
/*!*********************************!*\
  !*** ./utils/consentManager.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearUserConsent: () => (/* binding */ clearUserConsent),\n/* harmony export */   getOrCreateUserId: () => (/* binding */ getOrCreateUserId),\n/* harmony export */   getUserConsent: () => (/* binding */ getUserConsent),\n/* harmony export */   getUserPreferences: () => (/* binding */ getUserPreferences),\n/* harmony export */   getUserProfile: () => (/* binding */ getUserProfile),\n/* harmony export */   isProfileComplete: () => (/* binding */ isProfileComplete),\n/* harmony export */   resetConsentBanner: () => (/* binding */ resetConsentBanner),\n/* harmony export */   updateUserConsent: () => (/* binding */ updateUserConsent),\n/* harmony export */   updateUserPreferences: () => (/* binding */ updateUserPreferences),\n/* harmony export */   updateUserProfile: () => (/* binding */ updateUserProfile)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"uuid\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-cookie */ \"js-cookie\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([uuid__WEBPACK_IMPORTED_MODULE_0__, js_cookie__WEBPACK_IMPORTED_MODULE_1__]);\n([uuid__WEBPACK_IMPORTED_MODULE_0__, js_cookie__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// frontend/utils/consentManager.js\n\n\nconst CONSENT_COOKIE = 'eye_tracking_consent';\nconst CONSENT_DETAILS_COOKIE = 'consent_details';\nconst USER_PROFILE_COOKIE = 'user_profile';\nconst USER_PREFERENCES_COOKIE = 'user_preferences';\n// Cookie options that work for both localhost and IP addresses\nconst COOKIE_OPTIONS = {\n    expires: 365,\n    path: '/',\n    sameSite: 'Lax'\n};\n// Get or create a user ID\nconst getOrCreateUserId = ()=>{\n    try {\n        const storedConsent = js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(CONSENT_COOKIE);\n        const storedDetails = js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(CONSENT_DETAILS_COOKIE);\n        if (storedConsent && storedDetails) {\n            const details = JSON.parse(storedDetails);\n            return details.userId;\n        }\n        // Generate new user ID if none exists\n        const newUserId = (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)();\n        return newUserId;\n    } catch (error) {\n        console.error('Error getting/creating user ID:', error);\n        return (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)();\n    }\n};\n// Get user profile\nconst getUserProfile = ()=>{\n    try {\n        const profileStr = js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(USER_PROFILE_COOKIE);\n        if (profileStr) {\n            return JSON.parse(profileStr);\n        }\n        return null;\n    } catch (error) {\n        console.error('Error reading user profile:', error);\n        return null;\n    }\n};\n// Update user profile\nconst updateUserProfile = async (profileData)=>{\n    try {\n        // Save to cookies\n        const currentProfile = getUserProfile() || {};\n        const updatedProfile = {\n            ...currentProfile,\n            ...profileData,\n            updatedAt: new Date().toISOString()\n        };\n        js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set(USER_PROFILE_COOKIE, JSON.stringify(updatedProfile), COOKIE_OPTIONS);\n        // Save to backend (MongoDB)\n        try {\n            const userId = getOrCreateUserId();\n            const response = await fetch('/api/user-preferences', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user_id: userId,\n                    preferences: updatedProfile\n                })\n            });\n            if (!response.ok) {\n                console.warn('Failed to save profile to backend');\n                return null;\n            }\n            // Check if profile is complete (has username and sex)\n            const isComplete = updatedProfile.username && updatedProfile.sex;\n            // Store profile completion status in session storage\n            if (isComplete) {\n                sessionStorage.setItem('profileComplete', 'true');\n                sessionStorage.setItem('userId', userId);\n            }\n            return {\n                ...updatedProfile,\n                isComplete\n            };\n        } catch (saveError) {\n            console.warn('Error saving profile to backend:', saveError);\n            return null;\n        }\n    } catch (error) {\n        console.error('Error updating user profile:', error);\n        throw error;\n    }\n};\n// Check if profile is complete\nconst isProfileComplete = ()=>{\n    try {\n        // First check session storage\n        const sessionComplete = sessionStorage.getItem('profileComplete');\n        if (sessionComplete === 'true') {\n            return true;\n        }\n        // Then check cookies\n        const profile = getUserProfile();\n        return profile && profile.username && profile.sex;\n    } catch (error) {\n        console.error('Error checking profile completion:', error);\n        return false;\n    }\n};\n// Get user preferences\nconst getUserPreferences = ()=>{\n    try {\n        const preferencesStr = js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(USER_PREFERENCES_COOKIE);\n        if (preferencesStr) {\n            return JSON.parse(preferencesStr);\n        }\n        return null;\n    } catch (error) {\n        console.error('Error reading user preferences:', error);\n        return null;\n    }\n};\n// Update user preferences\nconst updateUserPreferences = (preferencesData)=>{\n    try {\n        const currentPreferences = getUserPreferences() || {};\n        const updatedPreferences = {\n            ...currentPreferences,\n            ...preferencesData,\n            updatedAt: new Date().toISOString()\n        };\n        js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set(USER_PREFERENCES_COOKIE, JSON.stringify(updatedPreferences), COOKIE_OPTIONS);\n        return updatedPreferences;\n    } catch (error) {\n        console.error('Error updating user preferences:', error);\n        return null;\n    }\n};\n// Get user consent from cookies\nconst getUserConsent = ()=>{\n    try {\n        const storedConsent = js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(CONSENT_COOKIE);\n        const storedDetails = js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(CONSENT_DETAILS_COOKIE);\n        if (storedConsent && storedDetails) {\n            const details = JSON.parse(storedDetails);\n            return {\n                userId: details.userId,\n                consentStatus: storedConsent === 'true',\n                consentUpdatedAt: details.timestamp,\n                consentDetails: details\n            };\n        }\n        return {\n            userId: null,\n            consentStatus: null,\n            consentUpdatedAt: null,\n            consentDetails: null\n        };\n    } catch (error) {\n        console.error('Error reading consent from cookies:', error);\n        return {\n            userId: null,\n            consentStatus: null,\n            consentUpdatedAt: null,\n            consentDetails: null\n        };\n    }\n};\n// Update user consent in cookies\nconst updateUserConsent = async (status, details = {})=>{\n    try {\n        // Get or create user ID\n        const userId = details.userId || getOrCreateUserId();\n        // Create consent data object\n        const consentData = {\n            userId,\n            status,\n            timestamp: new Date().toISOString(),\n            ...details\n        };\n        // Save to cookies\n        js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set(CONSENT_COOKIE, status.toString(), COOKIE_OPTIONS);\n        js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set(CONSENT_DETAILS_COOKIE, JSON.stringify(consentData), COOKIE_OPTIONS);\n        // Send consent data to admin\n        try {\n            const response = await fetch('/api/admin/consent-data', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(consentData)\n            });\n            if (!response.ok) {\n                console.warn('Failed to send consent data to admin');\n            }\n        } catch (error) {\n            console.warn('Error sending consent data to admin:', error);\n        }\n        return {\n            userId,\n            consentStatus: status,\n            consentUpdatedAt: consentData.timestamp,\n            consentDetails: consentData\n        };\n    } catch (error) {\n        console.error('Error updating user consent:', error);\n        throw error;\n    }\n};\n// Clear user consent\nconst clearUserConsent = ()=>{\n    try {\n        js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remove(CONSENT_COOKIE, COOKIE_OPTIONS);\n        js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remove(CONSENT_DETAILS_COOKIE, COOKIE_OPTIONS);\n        return true;\n    } catch (error) {\n        console.error('Error clearing user consent:', error);\n        return false;\n    }\n};\n// Reset consent banner\nconst resetConsentBanner = ()=>{\n    try {\n        clearUserConsent();\n        return true;\n    } catch (error) {\n        console.error('Error resetting consent banner:', error);\n        return false;\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/consentManager.js\n");

/***/ }),

/***/ "(pages-dir-node)/./utils/stateManager.js":
/*!*******************************!*\
  !*** ./utils/stateManager.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppStateProvider: () => (/* binding */ AppStateProvider),\n/* harmony export */   BackendConnectionProvider: () => (/* binding */ BackendConnectionProvider),\n/* harmony export */   ProcessStatusProvider: () => (/* binding */ ProcessStatusProvider),\n/* harmony export */   useBackendConnection: () => (/* binding */ useBackendConnection),\n/* harmony export */   useProcessStatus: () => (/* binding */ useProcessStatus)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Create a context for the process status\nconst ProcessStatusContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n// Create a context for the backend connection status\nconst BackendConnectionContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\n// Time constants (in milliseconds)\nconst CONNECTION_CHECK_INTERVAL = 30000; // 30 seconds\nconst CONNECTION_CHECK_TIMEOUT = 5000; // 5 seconds\n// Create a provider component for process status\nfunction ProcessStatusProvider({ children }) {\n    // This state will determine if the process is ready (true) or not (false)\n    const [isProcessReady, setIsProcessReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Add a flag to prevent automatic updates\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Function to toggle the state\n    const toggleProcessStatus = ()=>{\n        const newStatus = !isProcessReady;\n        setIsProcessReady(newStatus);\n        // Save to localStorage when explicitly toggled\n        localStorage.setItem('processStatus', String(newStatus));\n    };\n    // Function to set the status directly\n    const setProcessStatus = (status)=>{\n        setIsProcessReady(status);\n        // Save to localStorage when explicitly set\n        localStorage.setItem('processStatus', String(status));\n    };\n    // Only load from localStorage on initial mount, don't auto-save on every render\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ProcessStatusProvider.useEffect\": ()=>{\n            // Only run this once on component mount\n            if (!isInitialized) {\n                const storedValue = localStorage.getItem('processStatus');\n                if (storedValue !== null) {\n                    setIsProcessReady(storedValue === 'true');\n                }\n                setIsInitialized(true);\n            }\n        }\n    }[\"ProcessStatusProvider.useEffect\"], [\n        isInitialized\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ProcessStatusContext.Provider, {\n        value: {\n            isProcessReady,\n            toggleProcessStatus,\n            setProcessStatus\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/app/utils/stateManager.js\",\n        lineNumber: 48,\n        columnNumber: 5\n    }, this);\n}\n// Create a provider component for backend connection\nfunction BackendConnectionProvider({ children }) {\n    const [connectionState, setConnectionState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isConnected: false,\n        authValid: false,\n        isChecking: false,\n        lastChecked: null,\n        serverInfo: {},\n        error: null\n    });\n    const [checkTimer, setCheckTimer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Function to check backend connection\n    const checkConnection = async (force = false)=>{\n        // Prevent frequent checks unless forced\n        if (connectionState.isChecking || !force && connectionState.lastChecked && Date.now() - connectionState.lastChecked < 5000) {\n            return;\n        }\n        // Update checking state\n        setConnectionState((prev)=>({\n                ...prev,\n                isChecking: true,\n                error: null\n            }));\n        try {\n            console.log(\"Checking backend connection...\");\n            const response = await fetch('/api/check-backend-connection');\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const data = await response.json();\n            console.log(\"Backend connection response:\", data);\n            setConnectionState({\n                isConnected: data.connected,\n                authValid: data.authValid || false,\n                isChecking: false,\n                lastChecked: Date.now(),\n                serverInfo: data.serverInfo || {},\n                error: null\n            });\n        } catch (err) {\n            console.error(\"Backend connection check failed:\", err);\n            setConnectionState((prev)=>({\n                    ...prev,\n                    isConnected: false,\n                    authValid: false,\n                    isChecking: false,\n                    lastChecked: Date.now(),\n                    error: err.message || \"Failed to connect to backend\"\n                }));\n        }\n    };\n    // Initial connection check on mount and set up periodic checks\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BackendConnectionProvider.useEffect\": ()=>{\n            // Check immediately on first load\n            checkConnection(true);\n            // Set up periodic checks\n            const intervalId = setInterval({\n                \"BackendConnectionProvider.useEffect.intervalId\": ()=>{\n                    checkConnection();\n                }\n            }[\"BackendConnectionProvider.useEffect.intervalId\"], CONNECTION_CHECK_INTERVAL);\n            // Clean up on unmount\n            return ({\n                \"BackendConnectionProvider.useEffect\": ()=>{\n                    clearInterval(intervalId);\n                    if (checkTimer) clearTimeout(checkTimer);\n                }\n            })[\"BackendConnectionProvider.useEffect\"];\n        }\n    }[\"BackendConnectionProvider.useEffect\"], []);\n    // Auto-reconnect when disconnected\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BackendConnectionProvider.useEffect\": ()=>{\n            if (!connectionState.isConnected && !connectionState.isChecking && !checkTimer) {\n                // Wait 5 seconds before retrying\n                const timer = setTimeout({\n                    \"BackendConnectionProvider.useEffect.timer\": ()=>{\n                        checkConnection(true);\n                        setCheckTimer(null);\n                    }\n                }[\"BackendConnectionProvider.useEffect.timer\"], 5000);\n                setCheckTimer(timer);\n                return ({\n                    \"BackendConnectionProvider.useEffect\": ()=>clearTimeout(timer)\n                })[\"BackendConnectionProvider.useEffect\"];\n            }\n        }\n    }[\"BackendConnectionProvider.useEffect\"], [\n        connectionState.isConnected,\n        connectionState.isChecking\n    ]);\n    // Check connection when tab becomes visible again\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BackendConnectionProvider.useEffect\": ()=>{\n            const handleVisibilityChange = {\n                \"BackendConnectionProvider.useEffect.handleVisibilityChange\": ()=>{\n                    if (document.visibilityState === 'visible' && (!connectionState.lastChecked || Date.now() - connectionState.lastChecked > CONNECTION_CHECK_INTERVAL)) {\n                        checkConnection();\n                    }\n                }\n            }[\"BackendConnectionProvider.useEffect.handleVisibilityChange\"];\n            document.addEventListener('visibilitychange', handleVisibilityChange);\n            return ({\n                \"BackendConnectionProvider.useEffect\": ()=>{\n                    document.removeEventListener('visibilitychange', handleVisibilityChange);\n                }\n            })[\"BackendConnectionProvider.useEffect\"];\n        }\n    }[\"BackendConnectionProvider.useEffect\"], [\n        connectionState.lastChecked\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(BackendConnectionContext.Provider, {\n        value: {\n            ...connectionState,\n            checkConnection\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/app/utils/stateManager.js\",\n        lineNumber: 165,\n        columnNumber: 5\n    }, this);\n}\n// Combined provider for convenience\nfunction AppStateProvider({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ProcessStatusProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(BackendConnectionProvider, {\n            children: children\n        }, void 0, false, {\n            fileName: \"/app/utils/stateManager.js\",\n            lineNumber: 180,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/app/utils/stateManager.js\",\n        lineNumber: 179,\n        columnNumber: 5\n    }, this);\n}\n// Create custom hooks to use the contexts\nfunction useProcessStatus() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ProcessStatusContext);\n    if (context === undefined) {\n        throw new Error('useProcessStatus must be used within a ProcessStatusProvider');\n    }\n    return context;\n}\nfunction useBackendConnection() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(BackendConnectionContext);\n    if (context === undefined) {\n        throw new Error('useBackendConnection must be used within a BackendConnectionProvider');\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uL3V0aWxzL3N0YXRlTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXVFO0FBRXZFLDBDQUEwQztBQUMxQyxNQUFNSSxxQ0FBdUJKLG9EQUFhQTtBQUUxQyxxREFBcUQ7QUFDckQsTUFBTUsseUNBQTJCTCxvREFBYUE7QUFFOUMsbUNBQW1DO0FBQ25DLE1BQU1NLDRCQUE0QixPQUFPLGFBQWE7QUFDdEQsTUFBTUMsMkJBQTJCLE1BQVEsWUFBWTtBQUVyRCxpREFBaUQ7QUFDMUMsU0FBU0Msc0JBQXNCLEVBQUVDLFFBQVEsRUFBRTtJQUNoRCwwRUFBMEU7SUFDMUUsTUFBTSxDQUFDQyxnQkFBZ0JDLGtCQUFrQixHQUFHViwrQ0FBUUEsQ0FBQztJQUNyRCwwQ0FBMEM7SUFDMUMsTUFBTSxDQUFDVyxlQUFlQyxpQkFBaUIsR0FBR1osK0NBQVFBLENBQUM7SUFFbkQsK0JBQStCO0lBQy9CLE1BQU1hLHNCQUFzQjtRQUMxQixNQUFNQyxZQUFZLENBQUNMO1FBQ25CQyxrQkFBa0JJO1FBQ2xCLCtDQUErQztRQUMvQ0MsYUFBYUMsT0FBTyxDQUFDLGlCQUFpQkMsT0FBT0g7SUFDL0M7SUFFQSxzQ0FBc0M7SUFDdEMsTUFBTUksbUJBQW1CLENBQUNDO1FBQ3hCVCxrQkFBa0JTO1FBQ2xCLDJDQUEyQztRQUMzQ0osYUFBYUMsT0FBTyxDQUFDLGlCQUFpQkMsT0FBT0U7SUFDL0M7SUFFQSxnRkFBZ0Y7SUFDaEZqQixnREFBU0E7MkNBQUM7WUFDUix3Q0FBd0M7WUFDeEMsSUFBSSxDQUFDUyxlQUFlO2dCQUNsQixNQUFNUyxjQUFjTCxhQUFhTSxPQUFPLENBQUM7Z0JBQ3pDLElBQUlELGdCQUFnQixNQUFNO29CQUN4QlYsa0JBQWtCVSxnQkFBZ0I7Z0JBQ3BDO2dCQUNBUixpQkFBaUI7WUFDbkI7UUFDRjswQ0FBRztRQUFDRDtLQUFjO0lBRWxCLHFCQUNFLDhEQUFDUixxQkFBcUJtQixRQUFRO1FBQUNDLE9BQU87WUFBRWQ7WUFBZ0JJO1lBQXFCSztRQUFpQjtrQkFDM0ZWOzs7Ozs7QUFHUDtBQUVBLHFEQUFxRDtBQUM5QyxTQUFTZ0IsMEJBQTBCLEVBQUVoQixRQUFRLEVBQUU7SUFDcEQsTUFBTSxDQUFDaUIsaUJBQWlCQyxtQkFBbUIsR0FBRzFCLCtDQUFRQSxDQUFDO1FBQ3JEMkIsYUFBYTtRQUNiQyxXQUFXO1FBQ1hDLFlBQVk7UUFDWkMsYUFBYTtRQUNiQyxZQUFZLENBQUM7UUFDYkMsT0FBTztJQUNUO0lBQ0EsTUFBTSxDQUFDQyxZQUFZQyxjQUFjLEdBQUdsQywrQ0FBUUEsQ0FBQztJQUU3Qyx1Q0FBdUM7SUFDdkMsTUFBTW1DLGtCQUFrQixPQUFPQyxRQUFRLEtBQUs7UUFDMUMsd0NBQXdDO1FBQ3hDLElBQUlYLGdCQUFnQkksVUFBVSxJQUN6QixDQUFDTyxTQUNEWCxnQkFBZ0JLLFdBQVcsSUFDM0JPLEtBQUtDLEdBQUcsS0FBS2IsZ0JBQWdCSyxXQUFXLEdBQUcsTUFBTztZQUNyRDtRQUNGO1FBRUEsd0JBQXdCO1FBQ3hCSixtQkFBbUJhLENBQUFBLE9BQVM7Z0JBQzFCLEdBQUdBLElBQUk7Z0JBQ1BWLFlBQVk7Z0JBQ1pHLE9BQU87WUFDVDtRQUVBLElBQUk7WUFDRlEsUUFBUUMsR0FBRyxDQUFDO1lBQ1osTUFBTUMsV0FBVyxNQUFNQyxNQUFNO1lBRTdCLElBQUksQ0FBQ0QsU0FBU0UsRUFBRSxFQUFFO2dCQUNoQixNQUFNLElBQUlDLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRUgsU0FBU3ZCLE1BQU0sRUFBRTtZQUMxRDtZQUVBLE1BQU0yQixPQUFPLE1BQU1KLFNBQVNLLElBQUk7WUFDaENQLFFBQVFDLEdBQUcsQ0FBQyxnQ0FBZ0NLO1lBRTVDcEIsbUJBQW1CO2dCQUNqQkMsYUFBYW1CLEtBQUtFLFNBQVM7Z0JBQzNCcEIsV0FBV2tCLEtBQUtsQixTQUFTLElBQUk7Z0JBQzdCQyxZQUFZO2dCQUNaQyxhQUFhTyxLQUFLQyxHQUFHO2dCQUNyQlAsWUFBWWUsS0FBS2YsVUFBVSxJQUFJLENBQUM7Z0JBQ2hDQyxPQUFPO1lBQ1Q7UUFDRixFQUFFLE9BQU9pQixLQUFLO1lBQ1pULFFBQVFSLEtBQUssQ0FBQyxvQ0FBb0NpQjtZQUVsRHZCLG1CQUFtQmEsQ0FBQUEsT0FBUztvQkFDMUIsR0FBR0EsSUFBSTtvQkFDUFosYUFBYTtvQkFDYkMsV0FBVztvQkFDWEMsWUFBWTtvQkFDWkMsYUFBYU8sS0FBS0MsR0FBRztvQkFDckJOLE9BQU9pQixJQUFJQyxPQUFPLElBQUk7Z0JBQ3hCO1FBQ0Y7SUFDRjtJQUVBLCtEQUErRDtJQUMvRGhELGdEQUFTQTsrQ0FBQztZQUNSLGtDQUFrQztZQUNsQ2lDLGdCQUFnQjtZQUVoQix5QkFBeUI7WUFDekIsTUFBTWdCLGFBQWFDO2tFQUFZO29CQUM3QmpCO2dCQUNGO2lFQUFHOUI7WUFFSCxzQkFBc0I7WUFDdEI7dURBQU87b0JBQ0xnRCxjQUFjRjtvQkFDZCxJQUFJbEIsWUFBWXFCLGFBQWFyQjtnQkFDL0I7O1FBQ0Y7OENBQUcsRUFBRTtJQUVMLG1DQUFtQztJQUNuQy9CLGdEQUFTQTsrQ0FBQztZQUNSLElBQUksQ0FBQ3VCLGdCQUFnQkUsV0FBVyxJQUFJLENBQUNGLGdCQUFnQkksVUFBVSxJQUFJLENBQUNJLFlBQVk7Z0JBQzlFLGlDQUFpQztnQkFDakMsTUFBTXNCLFFBQVFDO2lFQUFXO3dCQUN2QnJCLGdCQUFnQjt3QkFDaEJELGNBQWM7b0JBQ2hCO2dFQUFHO2dCQUVIQSxjQUFjcUI7Z0JBQ2Q7MkRBQU8sSUFBTUQsYUFBYUM7O1lBQzVCO1FBQ0Y7OENBQUc7UUFBQzlCLGdCQUFnQkUsV0FBVztRQUFFRixnQkFBZ0JJLFVBQVU7S0FBQztJQUU1RCxrREFBa0Q7SUFDbEQzQixnREFBU0E7K0NBQUM7WUFDUixNQUFNdUQ7OEVBQXlCO29CQUM3QixJQUFJQyxTQUFTQyxlQUFlLEtBQUssYUFDNUIsRUFBQ2xDLGdCQUFnQkssV0FBVyxJQUM1Qk8sS0FBS0MsR0FBRyxLQUFLYixnQkFBZ0JLLFdBQVcsR0FBR3pCLHlCQUF3QixHQUFJO3dCQUMxRThCO29CQUNGO2dCQUNGOztZQUVBdUIsU0FBU0UsZ0JBQWdCLENBQUMsb0JBQW9CSDtZQUU5Qzt1REFBTztvQkFDTEMsU0FBU0csbUJBQW1CLENBQUMsb0JBQW9CSjtnQkFDbkQ7O1FBQ0Y7OENBQUc7UUFBQ2hDLGdCQUFnQkssV0FBVztLQUFDO0lBRWhDLHFCQUNFLDhEQUFDMUIseUJBQXlCa0IsUUFBUTtRQUNoQ0MsT0FBTztZQUNMLEdBQUdFLGVBQWU7WUFDbEJVO1FBQ0Y7a0JBRUMzQjs7Ozs7O0FBR1A7QUFFQSxvQ0FBb0M7QUFDN0IsU0FBU3NELGlCQUFpQixFQUFFdEQsUUFBUSxFQUFFO0lBQzNDLHFCQUNFLDhEQUFDRDtrQkFDQyw0RUFBQ2lCO3NCQUNFaEI7Ozs7Ozs7Ozs7O0FBSVQ7QUFFQSwwQ0FBMEM7QUFDbkMsU0FBU3VEO0lBQ2QsTUFBTUMsVUFBVS9ELGlEQUFVQSxDQUFDRTtJQUMzQixJQUFJNkQsWUFBWUMsV0FBVztRQUN6QixNQUFNLElBQUlwQixNQUFNO0lBQ2xCO0lBQ0EsT0FBT21CO0FBQ1Q7QUFFTyxTQUFTRTtJQUNkLE1BQU1GLFVBQVUvRCxpREFBVUEsQ0FBQ0c7SUFDM0IsSUFBSTRELFlBQVlDLFdBQVc7UUFDekIsTUFBTSxJQUFJcEIsTUFBTTtJQUNsQjtJQUNBLE9BQU9tQjtBQUNUIiwic291cmNlcyI6WyIvYXBwL3V0aWxzL3N0YXRlTWFuYWdlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VTdGF0ZSwgdXNlQ29udGV4dCwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG4vLyBDcmVhdGUgYSBjb250ZXh0IGZvciB0aGUgcHJvY2VzcyBzdGF0dXNcbmNvbnN0IFByb2Nlc3NTdGF0dXNDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuXG4vLyBDcmVhdGUgYSBjb250ZXh0IGZvciB0aGUgYmFja2VuZCBjb25uZWN0aW9uIHN0YXR1c1xuY29uc3QgQmFja2VuZENvbm5lY3Rpb25Db250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuXG4vLyBUaW1lIGNvbnN0YW50cyAoaW4gbWlsbGlzZWNvbmRzKVxuY29uc3QgQ09OTkVDVElPTl9DSEVDS19JTlRFUlZBTCA9IDMwMDAwOyAvLyAzMCBzZWNvbmRzXG5jb25zdCBDT05ORUNUSU9OX0NIRUNLX1RJTUVPVVQgPSA1MDAwOyAgIC8vIDUgc2Vjb25kc1xuXG4vLyBDcmVhdGUgYSBwcm92aWRlciBjb21wb25lbnQgZm9yIHByb2Nlc3Mgc3RhdHVzXG5leHBvcnQgZnVuY3Rpb24gUHJvY2Vzc1N0YXR1c1Byb3ZpZGVyKHsgY2hpbGRyZW4gfSkge1xuICAvLyBUaGlzIHN0YXRlIHdpbGwgZGV0ZXJtaW5lIGlmIHRoZSBwcm9jZXNzIGlzIHJlYWR5ICh0cnVlKSBvciBub3QgKGZhbHNlKVxuICBjb25zdCBbaXNQcm9jZXNzUmVhZHksIHNldElzUHJvY2Vzc1JlYWR5XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgLy8gQWRkIGEgZmxhZyB0byBwcmV2ZW50IGF1dG9tYXRpYyB1cGRhdGVzXG4gIGNvbnN0IFtpc0luaXRpYWxpemVkLCBzZXRJc0luaXRpYWxpemVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyBGdW5jdGlvbiB0byB0b2dnbGUgdGhlIHN0YXRlXG4gIGNvbnN0IHRvZ2dsZVByb2Nlc3NTdGF0dXMgPSAoKSA9PiB7XG4gICAgY29uc3QgbmV3U3RhdHVzID0gIWlzUHJvY2Vzc1JlYWR5O1xuICAgIHNldElzUHJvY2Vzc1JlYWR5KG5ld1N0YXR1cyk7XG4gICAgLy8gU2F2ZSB0byBsb2NhbFN0b3JhZ2Ugd2hlbiBleHBsaWNpdGx5IHRvZ2dsZWRcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncHJvY2Vzc1N0YXR1cycsIFN0cmluZyhuZXdTdGF0dXMpKTtcbiAgfTtcbiAgXG4gIC8vIEZ1bmN0aW9uIHRvIHNldCB0aGUgc3RhdHVzIGRpcmVjdGx5XG4gIGNvbnN0IHNldFByb2Nlc3NTdGF0dXMgPSAoc3RhdHVzKSA9PiB7XG4gICAgc2V0SXNQcm9jZXNzUmVhZHkoc3RhdHVzKTtcbiAgICAvLyBTYXZlIHRvIGxvY2FsU3RvcmFnZSB3aGVuIGV4cGxpY2l0bHkgc2V0XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2Nlc3NTdGF0dXMnLCBTdHJpbmcoc3RhdHVzKSk7XG4gIH07XG5cbiAgLy8gT25seSBsb2FkIGZyb20gbG9jYWxTdG9yYWdlIG9uIGluaXRpYWwgbW91bnQsIGRvbid0IGF1dG8tc2F2ZSBvbiBldmVyeSByZW5kZXJcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBPbmx5IHJ1biB0aGlzIG9uY2Ugb24gY29tcG9uZW50IG1vdW50XG4gICAgaWYgKCFpc0luaXRpYWxpemVkKSB7XG4gICAgICBjb25zdCBzdG9yZWRWYWx1ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwcm9jZXNzU3RhdHVzJyk7XG4gICAgICBpZiAoc3RvcmVkVmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgc2V0SXNQcm9jZXNzUmVhZHkoc3RvcmVkVmFsdWUgPT09ICd0cnVlJyk7XG4gICAgICB9XG4gICAgICBzZXRJc0luaXRpYWxpemVkKHRydWUpO1xuICAgIH1cbiAgfSwgW2lzSW5pdGlhbGl6ZWRdKTtcblxuICByZXR1cm4gKFxuICAgIDxQcm9jZXNzU3RhdHVzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBpc1Byb2Nlc3NSZWFkeSwgdG9nZ2xlUHJvY2Vzc1N0YXR1cywgc2V0UHJvY2Vzc1N0YXR1cyB9fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1Byb2Nlc3NTdGF0dXNDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufVxuXG4vLyBDcmVhdGUgYSBwcm92aWRlciBjb21wb25lbnQgZm9yIGJhY2tlbmQgY29ubmVjdGlvblxuZXhwb3J0IGZ1bmN0aW9uIEJhY2tlbmRDb25uZWN0aW9uUHJvdmlkZXIoeyBjaGlsZHJlbiB9KSB7XG4gIGNvbnN0IFtjb25uZWN0aW9uU3RhdGUsIHNldENvbm5lY3Rpb25TdGF0ZV0gPSB1c2VTdGF0ZSh7XG4gICAgaXNDb25uZWN0ZWQ6IGZhbHNlLFxuICAgIGF1dGhWYWxpZDogZmFsc2UsXG4gICAgaXNDaGVja2luZzogZmFsc2UsXG4gICAgbGFzdENoZWNrZWQ6IG51bGwsXG4gICAgc2VydmVySW5mbzoge30sXG4gICAgZXJyb3I6IG51bGxcbiAgfSk7XG4gIGNvbnN0IFtjaGVja1RpbWVyLCBzZXRDaGVja1RpbWVyXSA9IHVzZVN0YXRlKG51bGwpO1xuXG4gIC8vIEZ1bmN0aW9uIHRvIGNoZWNrIGJhY2tlbmQgY29ubmVjdGlvblxuICBjb25zdCBjaGVja0Nvbm5lY3Rpb24gPSBhc3luYyAoZm9yY2UgPSBmYWxzZSkgPT4ge1xuICAgIC8vIFByZXZlbnQgZnJlcXVlbnQgY2hlY2tzIHVubGVzcyBmb3JjZWRcbiAgICBpZiAoY29ubmVjdGlvblN0YXRlLmlzQ2hlY2tpbmcgfHwgXG4gICAgICAgICghZm9yY2UgJiYgXG4gICAgICAgICBjb25uZWN0aW9uU3RhdGUubGFzdENoZWNrZWQgJiYgXG4gICAgICAgICBEYXRlLm5vdygpIC0gY29ubmVjdGlvblN0YXRlLmxhc3RDaGVja2VkIDwgNTAwMCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBVcGRhdGUgY2hlY2tpbmcgc3RhdGVcbiAgICBzZXRDb25uZWN0aW9uU3RhdGUocHJldiA9PiAoe1xuICAgICAgLi4ucHJldixcbiAgICAgIGlzQ2hlY2tpbmc6IHRydWUsXG4gICAgICBlcnJvcjogbnVsbFxuICAgIH0pKTtcblxuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkNoZWNraW5nIGJhY2tlbmQgY29ubmVjdGlvbi4uLlwiKTtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvY2hlY2stYmFja2VuZC1jb25uZWN0aW9uJyk7XG4gICAgICBcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBTdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgY29uc29sZS5sb2coXCJCYWNrZW5kIGNvbm5lY3Rpb24gcmVzcG9uc2U6XCIsIGRhdGEpO1xuICAgICAgXG4gICAgICBzZXRDb25uZWN0aW9uU3RhdGUoe1xuICAgICAgICBpc0Nvbm5lY3RlZDogZGF0YS5jb25uZWN0ZWQsXG4gICAgICAgIGF1dGhWYWxpZDogZGF0YS5hdXRoVmFsaWQgfHwgZmFsc2UsXG4gICAgICAgIGlzQ2hlY2tpbmc6IGZhbHNlLFxuICAgICAgICBsYXN0Q2hlY2tlZDogRGF0ZS5ub3coKSxcbiAgICAgICAgc2VydmVySW5mbzogZGF0YS5zZXJ2ZXJJbmZvIHx8IHt9LFxuICAgICAgICBlcnJvcjogbnVsbFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiQmFja2VuZCBjb25uZWN0aW9uIGNoZWNrIGZhaWxlZDpcIiwgZXJyKTtcbiAgICAgIFxuICAgICAgc2V0Q29ubmVjdGlvblN0YXRlKHByZXYgPT4gKHtcbiAgICAgICAgLi4ucHJldixcbiAgICAgICAgaXNDb25uZWN0ZWQ6IGZhbHNlLFxuICAgICAgICBhdXRoVmFsaWQ6IGZhbHNlLFxuICAgICAgICBpc0NoZWNraW5nOiBmYWxzZSxcbiAgICAgICAgbGFzdENoZWNrZWQ6IERhdGUubm93KCksXG4gICAgICAgIGVycm9yOiBlcnIubWVzc2FnZSB8fCBcIkZhaWxlZCB0byBjb25uZWN0IHRvIGJhY2tlbmRcIlxuICAgICAgfSkpO1xuICAgIH1cbiAgfTtcblxuICAvLyBJbml0aWFsIGNvbm5lY3Rpb24gY2hlY2sgb24gbW91bnQgYW5kIHNldCB1cCBwZXJpb2RpYyBjaGVja3NcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBDaGVjayBpbW1lZGlhdGVseSBvbiBmaXJzdCBsb2FkXG4gICAgY2hlY2tDb25uZWN0aW9uKHRydWUpO1xuICAgIFxuICAgIC8vIFNldCB1cCBwZXJpb2RpYyBjaGVja3NcbiAgICBjb25zdCBpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgY2hlY2tDb25uZWN0aW9uKCk7XG4gICAgfSwgQ09OTkVDVElPTl9DSEVDS19JTlRFUlZBTCk7XG4gICAgXG4gICAgLy8gQ2xlYW4gdXAgb24gdW5tb3VudFxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xuICAgICAgaWYgKGNoZWNrVGltZXIpIGNsZWFyVGltZW91dChjaGVja1RpbWVyKTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgLy8gQXV0by1yZWNvbm5lY3Qgd2hlbiBkaXNjb25uZWN0ZWRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWNvbm5lY3Rpb25TdGF0ZS5pc0Nvbm5lY3RlZCAmJiAhY29ubmVjdGlvblN0YXRlLmlzQ2hlY2tpbmcgJiYgIWNoZWNrVGltZXIpIHtcbiAgICAgIC8vIFdhaXQgNSBzZWNvbmRzIGJlZm9yZSByZXRyeWluZ1xuICAgICAgY29uc3QgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY2hlY2tDb25uZWN0aW9uKHRydWUpO1xuICAgICAgICBzZXRDaGVja1RpbWVyKG51bGwpO1xuICAgICAgfSwgNTAwMCk7XG4gICAgICBcbiAgICAgIHNldENoZWNrVGltZXIodGltZXIpO1xuICAgICAgcmV0dXJuICgpID0+IGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgfVxuICB9LCBbY29ubmVjdGlvblN0YXRlLmlzQ29ubmVjdGVkLCBjb25uZWN0aW9uU3RhdGUuaXNDaGVja2luZ10pO1xuXG4gIC8vIENoZWNrIGNvbm5lY3Rpb24gd2hlbiB0YWIgYmVjb21lcyB2aXNpYmxlIGFnYWluXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSA9ICgpID0+IHtcbiAgICAgIGlmIChkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICd2aXNpYmxlJyAmJiBcbiAgICAgICAgICAoIWNvbm5lY3Rpb25TdGF0ZS5sYXN0Q2hlY2tlZCB8fCBcbiAgICAgICAgICAgRGF0ZS5ub3coKSAtIGNvbm5lY3Rpb25TdGF0ZS5sYXN0Q2hlY2tlZCA+IENPTk5FQ1RJT05fQ0hFQ0tfSU5URVJWQUwpKSB7XG4gICAgICAgIGNoZWNrQ29ubmVjdGlvbigpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSk7XG4gICAgXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBoYW5kbGVWaXNpYmlsaXR5Q2hhbmdlKTtcbiAgICB9O1xuICB9LCBbY29ubmVjdGlvblN0YXRlLmxhc3RDaGVja2VkXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8QmFja2VuZENvbm5lY3Rpb25Db250ZXh0LlByb3ZpZGVyXG4gICAgICB2YWx1ZT17e1xuICAgICAgICAuLi5jb25uZWN0aW9uU3RhdGUsXG4gICAgICAgIGNoZWNrQ29ubmVjdGlvblxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9CYWNrZW5kQ29ubmVjdGlvbkNvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG5cbi8vIENvbWJpbmVkIHByb3ZpZGVyIGZvciBjb252ZW5pZW5jZVxuZXhwb3J0IGZ1bmN0aW9uIEFwcFN0YXRlUHJvdmlkZXIoeyBjaGlsZHJlbiB9KSB7XG4gIHJldHVybiAoXG4gICAgPFByb2Nlc3NTdGF0dXNQcm92aWRlcj5cbiAgICAgIDxCYWNrZW5kQ29ubmVjdGlvblByb3ZpZGVyPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L0JhY2tlbmRDb25uZWN0aW9uUHJvdmlkZXI+XG4gICAgPC9Qcm9jZXNzU3RhdHVzUHJvdmlkZXI+XG4gICk7XG59XG5cbi8vIENyZWF0ZSBjdXN0b20gaG9va3MgdG8gdXNlIHRoZSBjb250ZXh0c1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVByb2Nlc3NTdGF0dXMoKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KFByb2Nlc3NTdGF0dXNDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlUHJvY2Vzc1N0YXR1cyBtdXN0IGJlIHVzZWQgd2l0aGluIGEgUHJvY2Vzc1N0YXR1c1Byb3ZpZGVyJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnRleHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VCYWNrZW5kQ29ubmVjdGlvbigpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQmFja2VuZENvbm5lY3Rpb25Db250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlQmFja2VuZENvbm5lY3Rpb24gbXVzdCBiZSB1c2VkIHdpdGhpbiBhIEJhY2tlbmRDb25uZWN0aW9uUHJvdmlkZXInKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn0iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZVN0YXRlIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsIlByb2Nlc3NTdGF0dXNDb250ZXh0IiwiQmFja2VuZENvbm5lY3Rpb25Db250ZXh0IiwiQ09OTkVDVElPTl9DSEVDS19JTlRFUlZBTCIsIkNPTk5FQ1RJT05fQ0hFQ0tfVElNRU9VVCIsIlByb2Nlc3NTdGF0dXNQcm92aWRlciIsImNoaWxkcmVuIiwiaXNQcm9jZXNzUmVhZHkiLCJzZXRJc1Byb2Nlc3NSZWFkeSIsImlzSW5pdGlhbGl6ZWQiLCJzZXRJc0luaXRpYWxpemVkIiwidG9nZ2xlUHJvY2Vzc1N0YXR1cyIsIm5ld1N0YXR1cyIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJTdHJpbmciLCJzZXRQcm9jZXNzU3RhdHVzIiwic3RhdHVzIiwic3RvcmVkVmFsdWUiLCJnZXRJdGVtIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIkJhY2tlbmRDb25uZWN0aW9uUHJvdmlkZXIiLCJjb25uZWN0aW9uU3RhdGUiLCJzZXRDb25uZWN0aW9uU3RhdGUiLCJpc0Nvbm5lY3RlZCIsImF1dGhWYWxpZCIsImlzQ2hlY2tpbmciLCJsYXN0Q2hlY2tlZCIsInNlcnZlckluZm8iLCJlcnJvciIsImNoZWNrVGltZXIiLCJzZXRDaGVja1RpbWVyIiwiY2hlY2tDb25uZWN0aW9uIiwiZm9yY2UiLCJEYXRlIiwibm93IiwicHJldiIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsImRhdGEiLCJqc29uIiwiY29ubmVjdGVkIiwiZXJyIiwibWVzc2FnZSIsImludGVydmFsSWQiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJ0aW1lciIsInNldFRpbWVvdXQiLCJoYW5kbGVWaXNpYmlsaXR5Q2hhbmdlIiwiZG9jdW1lbnQiLCJ2aXNpYmlsaXR5U3RhdGUiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIkFwcFN0YXRlUHJvdmlkZXIiLCJ1c2VQcm9jZXNzU3RhdHVzIiwiY29udGV4dCIsInVuZGVmaW5lZCIsInVzZUJhY2tlbmRDb25uZWN0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/./utils/stateManager.js\n");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "js-cookie":
/*!****************************!*\
  !*** external "js-cookie" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = import("js-cookie");;

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "styled-jsx/style":
/*!***********************************!*\
  !*** external "styled-jsx/style" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("styled-jsx/style");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = import("uuid");;

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("(pages-dir-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES&page=%2Fcollected-dataset-customized&preferredRegion=&absolutePagePath=.%2Fpages%2Fcollected-dataset-customized%2Findex.js&absoluteAppPath=private-next-pages%2F_app&absoluteDocumentPath=private-next-pages%2F_document&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();