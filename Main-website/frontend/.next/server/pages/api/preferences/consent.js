"use strict";(()=>{var a={};a.id=5696,a.ids=[5696],a.modules={4229:a=>{a.exports=require("node-fetch")},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9947:(a,b,c)=>{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>q});var d={};c.r(d),c.d(d,{default:()=>k});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(4229),j=c.n(i);async function k(a,b){let c=process.env.BACKEND_URL||"http://localhost:8010",d=process.env.API_KEY;try{if("GET"===a.method){let e=a.query.userId;if(!e)return b.status(400).json({success:!1,message:"User ID is required"});let f=await j()(`${c}/consent/${e}`,{method:"GET",headers:{"Content-Type":"application/json","X-API-Key":d}}),g=await f.json();return b.status(f.ok?200:400).json(g)}if("POST"!==a.method)return b.status(405).json({success:!1,message:"Method not allowed"});{let{userId:e,consentStatus:f}=a.body;if(!e||void 0===f)return b.status(400).json({success:!1,message:"User ID and consent status are required"});let g=new Date().toISOString(),h=await j()(`${c}/consent/${e}`,{method:"PUT",headers:{"Content-Type":"application/json","X-API-Key":d},body:JSON.stringify({consent_status:f,timestamp:g})}),i=await h.json();return b.status(h.ok?200:400).json(i)}}catch(a){return console.error("Error communicating with backend:",a),b.status(500).json({success:!1,message:"Failed to communicate with backend",error:a.message})}}var l=c(8112),m=c(8766);let n=(0,h.M)(d,"default"),o=(0,h.M)(d,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/preferences/consent",pathname:"/api/preferences/consent",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function q(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/preferences/consent"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,l.getTracer)(),e=d.getActiveScopeSpan(),i=p.instrumentationOnRequestError.bind(p),j=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/preferences/consent",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await j(e):await d.withPropagatedContext(a.headers,()=>d.trace(m.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:l.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},j))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[7169],()=>b(b.s=9947));module.exports=c})();