"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/for-process-folder/file-api";
exports.ids = ["pages/api/for-process-folder/file-api"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ffor-process-folder%2Ffile-api&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ffor-process-folder%2Ffile-api.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ffor-process-folder%2Ffile-api&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ffor-process-folder%2Ffile-api.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_for_process_folder_file_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/for-process-folder/file-api.js */ \"(api-node)/./pages/api/for-process-folder/file-api.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_for_process_folder_file_api_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_for_process_folder_file_api_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/for-process-folder/file-api\",\n        pathname: \"/api/for-process-folder/file-api\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_for_process_folder_file_api_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/for-process-folder/file-api\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/for-process-folder/file-api\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ffor-process-folder%2Ffile-api&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ffor-process-folder%2Ffile-api.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/for-process-folder/file-api.js":
/*!**************************************************!*\
  !*** ./pages/api/for-process-folder/file-api.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n// pages/api/file-api.js - Consolidated file operations API\n\n\nasync function handler(req, res) {\n    // Get file lists (GET)\n    if (req.method === 'GET') {\n        try {\n            const { operation } = req.query;\n            // Define paths to the capture and enhance folders\n            const capturePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'public', 'captures', 'eye_tracking_captures');\n            const enhancePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'public', 'captures', 'enhance');\n            // Create folders if they don't exist\n            if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'public', 'captures'))) {\n                fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'public', 'captures'), {\n                    recursive: true\n                });\n            }\n            if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(capturePath)) {\n                fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(capturePath, {\n                    recursive: true\n                });\n            }\n            if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(enhancePath)) {\n                fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(enhancePath, {\n                    recursive: true\n                });\n            }\n            // Different operations based on the query parameter\n            if (operation === 'list') {\n                // Get list of files from both folders\n                const captureFiles = fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(capturePath) ? fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(capturePath).filter((file)=>file.endsWith('.jpg') || file.endsWith('.csv')).sort((a, b)=>{\n                    const numA = parseInt(a.match(/_(\\d+)\\./)?.[1] || '0');\n                    const numB = parseInt(b.match(/_(\\d+)\\./)?.[1] || '0');\n                    return numA - numB;\n                }) : [];\n                const enhanceFiles = fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(enhancePath) ? fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(enhancePath).filter((file)=>file.endsWith('.jpg') || file.endsWith('.csv')).sort((a, b)=>{\n                    const numA = parseInt(a.match(/_(\\d+)\\./)?.[1] || '0');\n                    const numB = parseInt(b.match(/_(\\d+)\\./)?.[1] || '0');\n                    return numA - numB;\n                }) : [];\n                return res.status(200).json({\n                    success: true,\n                    files: {\n                        capture: captureFiles,\n                        enhance: enhanceFiles\n                    },\n                    message: `Found ${captureFiles.length} capture files and ${enhanceFiles.length} enhance files`\n                });\n            } else if (operation === 'compare') {\n                // Get all capture file sets (webcam files only to avoid duplicates)\n                const captureFiles = fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(capturePath) ? fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(capturePath).filter((file)=>file.startsWith('webcam_') && file.endsWith('.jpg')) : [];\n                // Get all enhance file sets\n                const enhanceFiles = fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(enhancePath) ? fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(enhancePath).filter((file)=>file.startsWith('webcam_enhance_') && file.endsWith('.jpg')) : [];\n                // Count unique sets by extracting numbers from filenames\n                const captureSetNumbers = new Set(captureFiles.map((file)=>{\n                    const match = file.match(/webcam_(\\d+)\\.jpg/);\n                    return match ? match[1] : null;\n                }).filter(Boolean));\n                const enhanceSetNumbers = new Set(enhanceFiles.map((file)=>{\n                    const match = file.match(/webcam_enhance_(\\d+)\\.jpg/);\n                    return match ? match[1] : null;\n                }).filter(Boolean));\n                const captureCount = captureSetNumbers.size;\n                const enhanceCount = enhanceSetNumbers.size;\n                // Find sets that need processing (in capture but not in enhance)\n                const setsNeedingProcessing = [\n                    ...captureSetNumbers\n                ].filter((setNum)=>!enhanceSetNumbers.has(setNum));\n                return res.status(200).json({\n                    success: true,\n                    captureCount,\n                    enhanceCount,\n                    needsProcessing: captureCount > enhanceCount,\n                    setsNeedingProcessing,\n                    setsNeedingProcessingCount: setsNeedingProcessing.length\n                });\n            } else if (operation === 'check-completeness') {\n                // Check if each set has all required files\n                if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(capturePath)) {\n                    return res.status(200).json({\n                        success: false,\n                        error: 'Capture folder does not exist'\n                    });\n                }\n                // Read all files in the directory\n                const allFiles = fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(capturePath);\n                // Group files by their set number (e.g., 001, 002)\n                const fileSets = {};\n                const filePattern = /^(webcam|screen|parameters?)_(\\d+)\\.(jpg|csv)$/i;\n                allFiles.forEach((file)=>{\n                    const match = file.match(filePattern);\n                    if (match) {\n                        const fileType = match[1].toLowerCase(); // webcam, screen, or parameters\n                        const setNumber = match[2]; // 001, 002, etc.\n                        if (!fileSets[setNumber]) {\n                            fileSets[setNumber] = new Set();\n                        }\n                        fileSets[setNumber].add(fileType);\n                    }\n                });\n                // Check if each set has all required files (webcam, screen, parameters)\n                const incompleteSets = [];\n                const requiredTypes = [\n                    'webcam',\n                    'screen'\n                ];\n                const parameterTypes = [\n                    'parameter',\n                    'parameters'\n                ]; // Accept both parameter and parameters\n                Object.entries(fileSets).forEach(([setNumber, fileTypes])=>{\n                    const hasAllRequired = requiredTypes.every((type)=>fileTypes.has(type));\n                    const hasParameters = parameterTypes.some((type)=>fileTypes.has(type));\n                    if (!hasAllRequired || !hasParameters) {\n                        incompleteSets.push(setNumber);\n                    }\n                });\n                return res.status(200).json({\n                    success: true,\n                    isComplete: incompleteSets.length === 0,\n                    incompleteSets,\n                    missingFiles: incompleteSets.length,\n                    totalSets: Object.keys(fileSets).length\n                });\n            } else {\n                return res.status(400).json({\n                    success: false,\n                    error: 'Invalid operation specified'\n                });\n            }\n        } catch (error) {\n            console.error('Error in file-api:', error);\n            return res.status(500).json({\n                success: false,\n                error: error.message\n            });\n        }\n    } else {\n        return res.status(405).json({\n            success: false,\n            error: 'Method not allowed'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9mb3ItcHJvY2Vzcy1mb2xkZXIvZmlsZS1hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSwyREFBMkQ7QUFDdkM7QUFDSTtBQUVULGVBQWVFLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM1Qyx1QkFBdUI7SUFDdkIsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLE9BQU87UUFDeEIsSUFBSTtZQUNGLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdILElBQUlJLEtBQUs7WUFFL0Isa0RBQWtEO1lBQ2xELE1BQU1DLGNBQWNQLGdEQUFTLENBQUNTLFFBQVFDLEdBQUcsSUFBSSxVQUFVLFlBQVk7WUFDbkUsTUFBTUMsY0FBY1gsZ0RBQVMsQ0FBQ1MsUUFBUUMsR0FBRyxJQUFJLFVBQVUsWUFBWTtZQUVuRSxxQ0FBcUM7WUFDckMsSUFBSSxDQUFDWCxvREFBYSxDQUFDQyxnREFBUyxDQUFDUyxRQUFRQyxHQUFHLElBQUksVUFBVSxjQUFjO2dCQUNsRVgsbURBQVksQ0FBQ0MsZ0RBQVMsQ0FBQ1MsUUFBUUMsR0FBRyxJQUFJLFVBQVUsYUFBYTtvQkFBRUksV0FBVztnQkFBSztZQUNqRjtZQUVBLElBQUksQ0FBQ2Ysb0RBQWEsQ0FBQ1EsY0FBYztnQkFDL0JSLG1EQUFZLENBQUNRLGFBQWE7b0JBQUVPLFdBQVc7Z0JBQUs7WUFDOUM7WUFFQSxJQUFJLENBQUNmLG9EQUFhLENBQUNZLGNBQWM7Z0JBQy9CWixtREFBWSxDQUFDWSxhQUFhO29CQUFFRyxXQUFXO2dCQUFLO1lBQzlDO1lBRUEsb0RBQW9EO1lBQ3BELElBQUlULGNBQWMsUUFBUTtnQkFDeEIsc0NBQXNDO2dCQUN0QyxNQUFNVSxlQUFlaEIsb0RBQWEsQ0FBQ1EsZUFDL0JSLHFEQUFjLENBQUNRLGFBQ1pVLE1BQU0sQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS0MsUUFBUSxDQUFDLFdBQVdELEtBQUtDLFFBQVEsQ0FBQyxTQUN0REMsSUFBSSxDQUFDLENBQUNDLEdBQUdDO29C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Q0FhLGNBQWNiLGVBQWV4QixNQUFNO29CQUNuQ3NDLFdBQVdYLE9BQU9ZLElBQUksQ0FBQ3RCLFVBQVVqQixNQUFNO2dCQUN6QztZQUNGLE9BQ0s7Z0JBQ0gsT0FBT2hDLElBQUl5QixNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO29CQUMxQkMsU0FBUztvQkFDVG9CLE9BQU87Z0JBQ1Q7WUFDRjtRQUNGLEVBQUUsT0FBT0EsT0FBTztZQUNkeUIsUUFBUXpCLEtBQUssQ0FBQyxzQkFBc0JBO1lBQ3BDLE9BQU8vQyxJQUFJeUIsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDMUJDLFNBQVM7Z0JBQ1RvQixPQUFPQSxNQUFNaEIsT0FBTztZQUN0QjtRQUNGO0lBQ0YsT0FDSztRQUNILE9BQU8vQixJQUFJeUIsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxTQUFTO1lBQU9vQixPQUFPO1FBQXFCO0lBQzVFO0FBQ0YiLCJzb3VyY2VzIjpbIi9hcHAvcGFnZXMvYXBpL2Zvci1wcm9jZXNzLWZvbGRlci9maWxlLWFwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWdlcy9hcGkvZmlsZS1hcGkuanMgLSBDb25zb2xpZGF0ZWQgZmlsZSBvcGVyYXRpb25zIEFQSVxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XG4gIC8vIEdldCBmaWxlIGxpc3RzIChHRVQpXG4gIGlmIChyZXEubWV0aG9kID09PSAnR0VUJykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IG9wZXJhdGlvbiB9ID0gcmVxLnF1ZXJ5O1xuICAgICAgXG4gICAgICAvLyBEZWZpbmUgcGF0aHMgdG8gdGhlIGNhcHR1cmUgYW5kIGVuaGFuY2UgZm9sZGVyc1xuICAgICAgY29uc3QgY2FwdHVyZVBhdGggPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3B1YmxpYycsICdjYXB0dXJlcycsICdleWVfdHJhY2tpbmdfY2FwdHVyZXMnKTtcbiAgICAgIGNvbnN0IGVuaGFuY2VQYXRoID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdwdWJsaWMnLCAnY2FwdHVyZXMnLCAnZW5oYW5jZScpO1xuICAgICAgXG4gICAgICAvLyBDcmVhdGUgZm9sZGVycyBpZiB0aGV5IGRvbid0IGV4aXN0XG4gICAgICBpZiAoIWZzLmV4aXN0c1N5bmMocGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICdwdWJsaWMnLCAnY2FwdHVyZXMnKSkpIHtcbiAgICAgICAgZnMubWtkaXJTeW5jKHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAncHVibGljJywgJ2NhcHR1cmVzJyksIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoY2FwdHVyZVBhdGgpKSB7XG4gICAgICAgIGZzLm1rZGlyU3luYyhjYXB0dXJlUGF0aCwgeyByZWN1cnNpdmU6IHRydWUgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmICghZnMuZXhpc3RzU3luYyhlbmhhbmNlUGF0aCkpIHtcbiAgICAgICAgZnMubWtkaXJTeW5jKGVuaGFuY2VQYXRoLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gRGlmZmVyZW50IG9wZXJhdGlvbnMgYmFzZWQgb24gdGhlIHF1ZXJ5IHBhcmFtZXRlclxuICAgICAgaWYgKG9wZXJhdGlvbiA9PT0gJ2xpc3QnKSB7XG4gICAgICAgIC8vIEdldCBsaXN0IG9mIGZpbGVzIGZyb20gYm90aCBmb2xkZXJzXG4gICAgICAgIGNvbnN0IGNhcHR1cmVGaWxlcyA9IGZzLmV4aXN0c1N5bmMoY2FwdHVyZVBhdGgpIFxuICAgICAgICAgID8gZnMucmVhZGRpclN5bmMoY2FwdHVyZVBhdGgpXG4gICAgICAgICAgICAgIC5maWx0ZXIoZmlsZSA9PiBmaWxlLmVuZHNXaXRoKCcuanBnJykgfHwgZmlsZS5lbmRzV2l0aCgnLmNzdicpKVxuICAgICAgICAgICAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG51bUEgPSBwYXJzZUludChhLm1hdGNoKC9fKFxcZCspXFwuLyk/LlsxXSB8fCAnMCcpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG51bUIgPSBwYXJzZUludChiLm1hdGNoKC9fKFxcZCspXFwuLyk/LlsxXSB8fCAnMCcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBudW1BIC0gbnVtQjtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICA6IFtdO1xuICAgICAgICAgIFxuICAgICAgICBjb25zdCBlbmhhbmNlRmlsZXMgPSBmcy5leGlzdHNTeW5jKGVuaGFuY2VQYXRoKVxuICAgICAgICAgID8gZnMucmVhZGRpclN5bmMoZW5oYW5jZVBhdGgpXG4gICAgICAgICAgICAgIC5maWx0ZXIoZmlsZSA9PiAoZmlsZS5lbmRzV2l0aCgnLmpwZycpIHx8IGZpbGUuZW5kc1dpdGgoJy5jc3YnKSkpXG4gICAgICAgICAgICAgIC5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbnVtQSA9IHBhcnNlSW50KGEubWF0Y2goL18oXFxkKylcXC4vKT8uWzFdIHx8ICcwJyk7XG4gICAgICAgICAgICAgICAgY29uc3QgbnVtQiA9IHBhcnNlSW50KGIubWF0Y2goL18oXFxkKylcXC4vKT8uWzFdIHx8ICcwJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bUEgLSBudW1CO1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgIDogW107XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgZmlsZXM6IHtcbiAgICAgICAgICAgIGNhcHR1cmU6IGNhcHR1cmVGaWxlcyxcbiAgICAgICAgICAgIGVuaGFuY2U6IGVuaGFuY2VGaWxlc1xuICAgICAgICAgIH0sXG4gICAgICAgICAgbWVzc2FnZTogYEZvdW5kICR7Y2FwdHVyZUZpbGVzLmxlbmd0aH0gY2FwdHVyZSBmaWxlcyBhbmQgJHtlbmhhbmNlRmlsZXMubGVuZ3RofSBlbmhhbmNlIGZpbGVzYFxuICAgICAgICB9KTtcbiAgICAgIH0gXG4gICAgICBlbHNlIGlmIChvcGVyYXRpb24gPT09ICdjb21wYXJlJykge1xuICAgICAgICAvLyBHZXQgYWxsIGNhcHR1cmUgZmlsZSBzZXRzICh3ZWJjYW0gZmlsZXMgb25seSB0byBhdm9pZCBkdXBsaWNhdGVzKVxuICAgICAgICBjb25zdCBjYXB0dXJlRmlsZXMgPSBmcy5leGlzdHNTeW5jKGNhcHR1cmVQYXRoKSBcbiAgICAgICAgICA/IGZzLnJlYWRkaXJTeW5jKGNhcHR1cmVQYXRoKS5maWx0ZXIoZmlsZSA9PiBcbiAgICAgICAgICAgICAgZmlsZS5zdGFydHNXaXRoKCd3ZWJjYW1fJykgJiYgZmlsZS5lbmRzV2l0aCgnLmpwZycpKVxuICAgICAgICAgIDogW107XG4gICAgICAgIFxuICAgICAgICAvLyBHZXQgYWxsIGVuaGFuY2UgZmlsZSBzZXRzXG4gICAgICAgIGNvbnN0IGVuaGFuY2VGaWxlcyA9IGZzLmV4aXN0c1N5bmMoZW5oYW5jZVBhdGgpXG4gICAgICAgICAgPyBmcy5yZWFkZGlyU3luYyhlbmhhbmNlUGF0aCkuZmlsdGVyKGZpbGUgPT4gXG4gICAgICAgICAgICAgIGZpbGUuc3RhcnRzV2l0aCgnd2ViY2FtX2VuaGFuY2VfJykgJiYgZmlsZS5lbmRzV2l0aCgnLmpwZycpKVxuICAgICAgICAgIDogW107XG4gICAgICAgIFxuICAgICAgICAvLyBDb3VudCB1bmlxdWUgc2V0cyBieSBleHRyYWN0aW5nIG51bWJlcnMgZnJvbSBmaWxlbmFtZXNcbiAgICAgICAgY29uc3QgY2FwdHVyZVNldE51bWJlcnMgPSBuZXcgU2V0KFxuICAgICAgICAgIGNhcHR1cmVGaWxlcy5tYXAoZmlsZSA9PiB7XG4gICAgICAgICAgICBjb25zdCBtYXRjaCA9IGZpbGUubWF0Y2goL3dlYmNhbV8oXFxkKylcXC5qcGcvKTtcbiAgICAgICAgICAgIHJldHVybiBtYXRjaCA/IG1hdGNoWzFdIDogbnVsbDtcbiAgICAgICAgICB9KS5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGVuaGFuY2VTZXROdW1iZXJzID0gbmV3IFNldChcbiAgICAgICAgICBlbmhhbmNlRmlsZXMubWFwKGZpbGUgPT4ge1xuICAgICAgICAgICAgY29uc3QgbWF0Y2ggPSBmaWxlLm1hdGNoKC93ZWJjYW1fZW5oYW5jZV8oXFxkKylcXC5qcGcvKTtcbiAgICAgICAgICAgIHJldHVybiBtYXRjaCA/IG1hdGNoWzFdIDogbnVsbDtcbiAgICAgICAgICB9KS5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGNhcHR1cmVDb3VudCA9IGNhcHR1cmVTZXROdW1iZXJzLnNpemU7XG4gICAgICAgIGNvbnN0IGVuaGFuY2VDb3VudCA9IGVuaGFuY2VTZXROdW1iZXJzLnNpemU7XG4gICAgICAgIFxuICAgICAgICAvLyBGaW5kIHNldHMgdGhhdCBuZWVkIHByb2Nlc3NpbmcgKGluIGNhcHR1cmUgYnV0IG5vdCBpbiBlbmhhbmNlKVxuICAgICAgICBjb25zdCBzZXRzTmVlZGluZ1Byb2Nlc3NpbmcgPSBbLi4uY2FwdHVyZVNldE51bWJlcnNdLmZpbHRlcihcbiAgICAgICAgICBzZXROdW0gPT4gIWVuaGFuY2VTZXROdW1iZXJzLmhhcyhzZXROdW0pXG4gICAgICAgICk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgY2FwdHVyZUNvdW50LFxuICAgICAgICAgIGVuaGFuY2VDb3VudCxcbiAgICAgICAgICBuZWVkc1Byb2Nlc3Npbmc6IGNhcHR1cmVDb3VudCA+IGVuaGFuY2VDb3VudCxcbiAgICAgICAgICBzZXRzTmVlZGluZ1Byb2Nlc3NpbmcsXG4gICAgICAgICAgc2V0c05lZWRpbmdQcm9jZXNzaW5nQ291bnQ6IHNldHNOZWVkaW5nUHJvY2Vzc2luZy5sZW5ndGhcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChvcGVyYXRpb24gPT09ICdjaGVjay1jb21wbGV0ZW5lc3MnKSB7XG4gICAgICAgIC8vIENoZWNrIGlmIGVhY2ggc2V0IGhhcyBhbGwgcmVxdWlyZWQgZmlsZXNcbiAgICAgICAgaWYgKCFmcy5leGlzdHNTeW5jKGNhcHR1cmVQYXRoKSkge1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiAnQ2FwdHVyZSBmb2xkZXIgZG9lcyBub3QgZXhpc3QnXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIFJlYWQgYWxsIGZpbGVzIGluIHRoZSBkaXJlY3RvcnlcbiAgICAgICAgY29uc3QgYWxsRmlsZXMgPSBmcy5yZWFkZGlyU3luYyhjYXB0dXJlUGF0aCk7XG4gICAgICAgIFxuICAgICAgICAvLyBHcm91cCBmaWxlcyBieSB0aGVpciBzZXQgbnVtYmVyIChlLmcuLCAwMDEsIDAwMilcbiAgICAgICAgY29uc3QgZmlsZVNldHMgPSB7fTtcbiAgICAgICAgY29uc3QgZmlsZVBhdHRlcm4gPSAvXih3ZWJjYW18c2NyZWVufHBhcmFtZXRlcnM/KV8oXFxkKylcXC4oanBnfGNzdikkL2k7XG4gICAgICAgIFxuICAgICAgICBhbGxGaWxlcy5mb3JFYWNoKGZpbGUgPT4ge1xuICAgICAgICAgIGNvbnN0IG1hdGNoID0gZmlsZS5tYXRjaChmaWxlUGF0dGVybik7XG4gICAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICBjb25zdCBmaWxlVHlwZSA9IG1hdGNoWzFdLnRvTG93ZXJDYXNlKCk7IC8vIHdlYmNhbSwgc2NyZWVuLCBvciBwYXJhbWV0ZXJzXG4gICAgICAgICAgICBjb25zdCBzZXROdW1iZXIgPSBtYXRjaFsyXTsgLy8gMDAxLCAwMDIsIGV0Yy5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKCFmaWxlU2V0c1tzZXROdW1iZXJdKSB7XG4gICAgICAgICAgICAgIGZpbGVTZXRzW3NldE51bWJlcl0gPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaWxlU2V0c1tzZXROdW1iZXJdLmFkZChmaWxlVHlwZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIENoZWNrIGlmIGVhY2ggc2V0IGhhcyBhbGwgcmVxdWlyZWQgZmlsZXMgKHdlYmNhbSwgc2NyZWVuLCBwYXJhbWV0ZXJzKVxuICAgICAgICBjb25zdCBpbmNvbXBsZXRlU2V0cyA9IFtdO1xuICAgICAgICBjb25zdCByZXF1aXJlZFR5cGVzID0gWyd3ZWJjYW0nLCAnc2NyZWVuJ107XG4gICAgICAgIGNvbnN0IHBhcmFtZXRlclR5cGVzID0gWydwYXJhbWV0ZXInLCAncGFyYW1ldGVycyddOyAvLyBBY2NlcHQgYm90aCBwYXJhbWV0ZXIgYW5kIHBhcmFtZXRlcnNcbiAgICAgICAgXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGZpbGVTZXRzKS5mb3JFYWNoKChbc2V0TnVtYmVyLCBmaWxlVHlwZXNdKSA9PiB7XG4gICAgICAgICAgY29uc3QgaGFzQWxsUmVxdWlyZWQgPSByZXF1aXJlZFR5cGVzLmV2ZXJ5KHR5cGUgPT4gZmlsZVR5cGVzLmhhcyh0eXBlKSk7XG4gICAgICAgICAgY29uc3QgaGFzUGFyYW1ldGVycyA9IHBhcmFtZXRlclR5cGVzLnNvbWUodHlwZSA9PiBmaWxlVHlwZXMuaGFzKHR5cGUpKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoIWhhc0FsbFJlcXVpcmVkIHx8ICFoYXNQYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICBpbmNvbXBsZXRlU2V0cy5wdXNoKHNldE51bWJlcik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICBpc0NvbXBsZXRlOiBpbmNvbXBsZXRlU2V0cy5sZW5ndGggPT09IDAsXG4gICAgICAgICAgaW5jb21wbGV0ZVNldHMsXG4gICAgICAgICAgbWlzc2luZ0ZpbGVzOiBpbmNvbXBsZXRlU2V0cy5sZW5ndGgsXG4gICAgICAgICAgdG90YWxTZXRzOiBPYmplY3Qua2V5cyhmaWxlU2V0cykubGVuZ3RoXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgZXJyb3I6ICdJbnZhbGlkIG9wZXJhdGlvbiBzcGVjaWZpZWQnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBmaWxlLWFwaTonLCBlcnJvcik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBlbHNlIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xuICB9XG59Il0sIm5hbWVzIjpbImZzIiwicGF0aCIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJvcGVyYXRpb24iLCJxdWVyeSIsImNhcHR1cmVQYXRoIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJlbmhhbmNlUGF0aCIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJyZWN1cnNpdmUiLCJjYXB0dXJlRmlsZXMiLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJlbmRzV2l0aCIsInNvcnQiLCJhIiwiYiIsIm51bUEiLCJwYXJzZUludCIsIm1hdGNoIiwibnVtQiIsImVuaGFuY2VGaWxlcyIsInN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwiZmlsZXMiLCJjYXB0dXJlIiwiZW5oYW5jZSIsIm1lc3NhZ2UiLCJsZW5ndGgiLCJzdGFydHNXaXRoIiwiY2FwdHVyZVNldE51bWJlcnMiLCJTZXQiLCJtYXAiLCJCb29sZWFuIiwiZW5oYW5jZVNldE51bWJlcnMiLCJjYXB0dXJlQ291bnQiLCJzaXplIiwiZW5oYW5jZUNvdW50Iiwic2V0c05lZWRpbmdQcm9jZXNzaW5nIiwic2V0TnVtIiwiaGFzIiwibmVlZHNQcm9jZXNzaW5nIiwic2V0c05lZWRpbmdQcm9jZXNzaW5nQ291bnQiLCJlcnJvciIsImFsbEZpbGVzIiwiZmlsZVNldHMiLCJmaWxlUGF0dGVybiIsImZvckVhY2giLCJmaWxlVHlwZSIsInRvTG93ZXJDYXNlIiwic2V0TnVtYmVyIiwiYWRkIiwiaW5jb21wbGV0ZVNldHMiLCJyZXF1aXJlZFR5cGVzIiwicGFyYW1ldGVyVHlwZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwiZmlsZVR5cGVzIiwiaGFzQWxsUmVxdWlyZWQiLCJldmVyeSIsInR5cGUiLCJoYXNQYXJhbWV0ZXJzIiwic29tZSIsInB1c2giLCJpc0NvbXBsZXRlIiwibWlzc2luZ0ZpbGVzIiwidG90YWxTZXRzIiwia2V5cyIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/for-process-folder/file-api.js\n");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ffor-process-folder%2Ffile-api&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ffor-process-folder%2Ffile-api.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();