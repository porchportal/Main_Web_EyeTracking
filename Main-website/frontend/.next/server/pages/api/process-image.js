"use strict";(()=>{var a={};a.id=4070,a.ids=[4070],a.modules={2104:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(9046),f=c(8667),g=c(3480),h=c(6435),i=c(5918),j=c(8112),k=c(8766),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/process-image",pathname:"/api/process-image",bundlePath:"",filename:""},userland:i,distDir:".next",projectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/process-image"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),i=p.instrumentationOnRequestError.bind(p),l=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/process-image",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await l(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},l))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})},3873:a=>{a.exports=require("path")},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5918:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>k});var e=c(7313),f=c(9021),g=c.n(f),h=c(3873),i=c.n(h),j=a([e]);e=(j.then?(await j)():j)[0];let o={api:{bodyParser:!1}};async function k(a,b){if("POST"!==a.method)return b.status(405).json({error:"Method not allowed"});try{if(console.log("Processing request..."),(a.headers["content-type"]||"").includes("application/json"))return await l(a,b);return await m(a,b)}catch(a){return console.error("Unhandled error in API route:",a),b.status(500).json({error:"Internal server error",message:a.message})}}async function l(a,b){try{let c=[];for await(let b of a)c.push(b);let d=Buffer.concat(c).toString(),{set_numbers:e}=JSON.parse(d);if(!e||!Array.isArray(e))return b.status(400).json({error:"Invalid set numbers"});let f=i().join(process.cwd(),"public","captures","eye_tracking_captures"),h=i().join(process.cwd(),"public","captures","enhance");g().existsSync(h)||g().mkdirSync(h,{recursive:!0});let j=[],k=0;for(let a of e)try{await n(a,f,h),k++,j.push({status:"success",setNumber:a,message:`Processed set ${a}`})}catch(b){console.error(`Error processing set ${a}:`,b),j.push({status:"error",setNumber:a,message:`Error processing set ${a}: ${b.message}`})}return b.status(200).json({success:!0,processedCount:k,totalSets:e.length,results:j})}catch(a){return console.error("Error in batch processing:",a),b.status(500).json({success:!1,error:a.message})}}async function m(a,b){try{console.log("Processing image upload request...");let c=(0,e.formidable)({keepExtensions:!0}),[d,f]=await new Promise((b,d)=>{c.parse(a,(a,c,e)=>{if(a)return d(a);b([c,e])})});console.log("Form parsed successfully");let h=f.file;if(!h||0===h.length)return b.status(400).json({error:"No file uploaded"});let i=h[0];console.log("File received:",i.originalFilename);try{let a=i.filepath;if(console.log("File path:",a),!g().existsSync(a))return b.status(400).json({error:"File path does not exist"});let c=g().readFileSync(a),d=new FormData,e=new Blob([c],{type:i.mimetype||"application/octet-stream"});d.append("file",e,i.originalFilename||"image.jpg");let f=process.env.BACKEND_URL||"http://localhost:8010",h=process.env.API_KEY||"",j=await fetch(`${f}/process-image`,{method:"POST",headers:{"X-API-Key":h},body:d});if(console.log("Backend response status:",j.status),!j.ok){let a=await j.text();return console.error("Backend error response:",a),b.status(j.status).json({error:`Backend returned error: ${j.status}`,details:a})}let k=await j.json();return b.status(200).json(k)}catch(a){return console.error("Backend request error:",a),b.status(500).json({error:"Error communicating with backend service",message:a.message})}}catch(a){return console.error("Error in single image upload:",a),b.status(500).json({error:"Error processing image upload",message:a.message})}}async function n(a,b,c){for(let d of["webcam","screen","parameter"]){let e=i().join(b,`${d}_${a}.${"parameter"===d?"csv":"jpg"}`),f=i().join(c,`${d}_enhance_${a}.${"parameter"===d?"csv":"jpg"}`);g().existsSync(e)&&g().copyFileSync(e,f)}}d()}catch(a){d(a)}})},7313:a=>{a.exports=import("formidable")},9021:a=>{a.exports=require("fs")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[7169],()=>b(b.s=2104));module.exports=c})();